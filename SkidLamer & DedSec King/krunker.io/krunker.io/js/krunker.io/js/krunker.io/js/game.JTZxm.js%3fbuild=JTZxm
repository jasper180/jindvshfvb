
const cStruct = (...keys) => ((...a) => keys.reduce((x, y, z) => {
    x[y] = a[z];
    return x
}, {}))
class KrunkModule {
    constructor() {
        this.allStates = this.allStates();
        this.index = this.allStates.indexOf(this.initState());
    }
    updated() {
        window.saveVal("utilities_"+this.getName(), this.index);
    }
    onTick() {
        //override
    }
    initState() {
        var value = parseInt(window.getSavedVal("utilities_"+this.getName()) || 0);
        return this.allStates[value]
    }
    onKeyPressed() {
        this.index++;
        if (this.index >= this.allStates.length) {
            this.index = 0;
        }
        this.updated();
    }
    getState() {
        return this.allStates[this.index];
    }
}
class AutoAim extends KrunkModule {
    constructor() {
        super(...arguments);
        this.scopingOut = false;
        this.canShoot = true;
    }
    getName() {
        return 'Auto Aim';
    }
    getKey() {
        return 'I';
    }
    allStates() {
        return ['Off', 'TriggerBot', 'AimAssist'];
    }
    onTick() {
        if (!this.players) {
            return;
        }
        const possibleTargets = this.players
            .filter(player => {
                return player.active && (player.inView || this.me.dmgReceived[player.id]) && !player.isYou && (!player.team || player.team !== this.me.team);
            })
            .sort((p1, p2) => window.utilities.getDistance(this.me, p1) - window.utilities.getDistance(this.me, p2));
        let isLockedOn = false;
        if (possibleTargets.length > 0) {
            const target = possibleTargets[0];
            switch (this.getState()) {
                case 'TriggerBot':
                    isLockedOn = this.runTriggerBot(target);
                    break;
                case 'AsusWalls':
                    var patchASUSWalls = function(script) {
                    script = script.replace(/this\['opacity'\]\=0x1/, "this['opacity']=0.75");
                    script = script.replace(script.match(/\|\|0x0\,'opacity'\:(.+?(?=,))/)[1], "0.75");
                    console.log('[+] added ASUS walls');
                    return script;
}
            }
        }
        if (!isLockedOn) {
            this.control.target = null;
            if (this.getState() === 'TriggerBot') {
                this.control.mouseDownL = 0;
                this.control.mouseDownR = 0;
            }
        }
    }
    runTriggerBot(target) {
        if (this.me.didShoot) {
            this.canShoot = false;
            setTimeout(() => {
                this.canShoot = true;
            }, this.me.weapon.rate);
        }
        if (this.control.mouseDownL === 1) {
            this.control.mouseDownL = 0;
            this.control.mouseDownR = 0;
            this.scopingOut = true;
        }
        if (this.me.aimVal === 1) {
            this.scopingOut = false;
        }
        if (this.scopingOut || !this.canShoot || this.me.recoilForce > 0.01) {
            return false;
        }
        window.utilities.lookAt(target);
        if (this.control.mouseDownR === 0) {
            this.control.mouseDownR = 1;
        } else if (this.me.aimVal < 0.2) {
            this.control.mouseDownL = 1 - this.control.mouseDownL;
        }
        return true;
    }
    runAimAssist(target) {
        if (this.control.mouseDownR === 1) {
            window.utilities.lookAt(target);
            return true;
        }
        return false;
    }
}

class AsusWalls extends KrunkModule {
    var patchASUSWalls = function(script),
    script = script.replace(/this\['opacity'\]\=0x1/, "this['opacity']=0.75");
    script = script.replace(script.match(/\|\|0x0\,'opacity'\:(.+?(?=,))/)[1], "0.75");
    console.log('[+] added ASUS walls');
    return script;
}
    }
    getName() {
        return 'Auto BHop';
    }
    getKey() {
        return 'B';
    }
    allStates() {
        return ['Off', 'Jump', 'SlideJump'];
    }
    onTick() {
        if (!this.me.xVel) return;
        this.control.keys[32] = !this.control.keys[32];
        if (this.getState() === 'SlideJump') {
            if (this.isSliding) {
                this.inputs[8] = 1;
                return;
            }
            if (this.me.yVel < -0.04 && this.me.canSlide) {
                this.isSliding = true;
                setTimeout(() => {
                    this.isSliding = false;
                }, 350);
                this.inputs[8] = 1;
            }
        }
    }
}

class KrunkVillian {
    constructor() {
        this.self;
        this.inputs;
        this.world;
        this.weapons;
        this.exports;
        this.control;
        this.server;
        this.modules = [];
        this.toggles = [];
        this.init();
    }
    init() {
        this.newToggle('AutoReload', 'J');
        this.modules.push(new AutoAim());
        this.modules.push(new AutoBHop());
        const initInfoBoxInterval = setInterval(() => {
            if (this.canInjectInfoBox()) {
                clearInterval(initInfoBoxInterval);
                this.injectInfoBox();
                this.updateInfoBox();
                window.addEventListener("keydown", event => this.onKeyDown(event));
            }
        }, 100);
    }

    inputsTick(self, inputs, world) {
        //Hooked
        if (this.control && this.exports && self && inputs && world) {
            this.self = self;
            this.inputs = inputs;
            this.world = world;
            this.weapons = this.exports.c[22].exports;
            this.server = this.exports.c[7].exports;
            for (var i = 0, len = this.modules.length; i < len; i++) {
                if (this.modules[i].index == 0) continue;
                this.modules[i].me = this.self;
                this.modules[i].inputs = this.inputs;
                this.modules[i].control = this.control;
                this.modules[i].players = this.world.players.list;
                this.modules[i].onTick();
            }
            for (i = 0, len = this.toggles.length; i < len; i++) {
                if (this.toggles[i].state == 0) continue;
                switch (this.toggles[i].name) {
                    case 'AutoReload':
                        (inputs[9] = self.ammos[self.weaponIndex] === 0);
                        break;
                }
            }
        }
    }

    controlTick(control) {
        //Hooked
        if (control) {
            this.control = control;
            const half = Math.PI / 2;
            if (control.target) {
                control.object.rotation.y = control.target.yD;
                control.pitchObject.rotation.x = control.target.xD;
                control.pitchObject.rotation.x = Math.max(-half, Math.min(half, control.pitchObject.rotation.x));
                control.yDr = control.pitchObject.rotation.x % Math.PI;
                control.xDr = control.object.rotation.y % Math.PI;
            }
        }
    }

    newToggle(name, key) {
        const toggle_t = cStruct('name', 'key', 'state', 'updated')
        this.toggles.push(toggle_t(name, key, parseInt(window.getSavedVal("utilities_"+name) || 0), true));
    }

    onKeyDown(event) {
        const key = event.key.toUpperCase();
        const menu = document.getElementById("InfoBox");
        if (document.activeElement.tagName === "INPUT") return;
        switch (key) {
            case '0':
                if (menu) menu.style.display = !menu.style.display || menu.style.display === "inline-block" ? "none" : "inline-block";
                break;
            case 'DELETE':
                this.resetSettings();
                break;
        default:
            for (const module of this.modules) {
                if (this.upperCase(module.getKey()) === key) {
                    module.onKeyPressed();
                    this.updateInfoBox();
                }
            }
            for (const toggle of this.toggles) {
                if (this.upperCase(toggle.key) === key) {
                    toggle.state ^= 1;
                    this.updateInfoBox();
                    window.saveVal("utilities_"+toggle.name, toggle.state);
                }
            }
                break;
        }
    }
    upperCase(str) {
        return str.toUpperCase();
    }
    toProperCase(str) {
        str = str.replace(/([a-zà-ÿ])([A-ZÀß])/g, '$1 $2');
        str = str.replace(/s[a-z]/g, this.upperCase)
        return str;
    }
    updateInfoBox() {
        const infoBox = window.document.querySelector('#InfoBox');
        if (infoBox === null) {
            return;
        }
        const moduleLines = this.modules.map(module => {
            return '<div class="leaderItem"> <div class="leaderNameF">['+ module.getKey().toUpperCase()+']' + module.getName() + '</div> <div class="leaderScore">'+module.getState()+'</div> </div>';
        });
        const togglelines = this.toggles.map(toggle => {
            return '<div class="leaderItem"> <div class="leaderNameF">[' + toggle.key.toUpperCase() + '] ' + this.toProperCase(toggle.name) + '</div> <div class="leaderScore">' + (toggle.state ? 'On' : 'Off') + '</div> </div>';
        });
        infoBox.innerHTML = '<div class="Title">TacoZVzzzz</div>' + moduleLines.join('').trim() + togglelines.join('').trim();
    }
    injectInfoBox() {
        const infoBox = window.document.createElement('div');
        const leaderDisplay = window.document.querySelector('#leaderDisplay');
        leaderDisplay.parentNode.insertBefore(infoBox.firstChild, leaderDisplay.nextSibling);
    }
    canInjectInfoBox() {
        return window.document.querySelector('#leaderDisplay') !== null;
    }
    lookAt(target) {
        this.camLookAt(target.x2, target.y2 + target.height - 1.5 - 2.5 * target.crouchVal - this.self.recoilAnimY * 0.3 * this.getDistance(this.self, target) / 10, target.z2);
    }
    getDistance3D(fromX, fromY, fromZ, toX, toY, toZ) {
        var distX = fromX - toX,
            distY = fromY - toY,
            distZ = fromZ - toZ;
        return Math.sqrt(distX * distX + distY * distY + distZ * distZ)
    }
    getDistance(player1, player2) {
        return this.getDistance3D(player1.x, player1.y, player1.z, player2.x, player2.y, player2.z);
    }
    getDirection(fromZ, fromX, toZ, toX) {
        return Math.atan2(fromX - toX, fromZ - toZ)
    }
    getXDir(fromX, fromY, fromZ, toX, toY, toZ) {
        var dirY = Math.abs(fromY - toY),
            dist = this.getDistance3D(fromX, fromY, fromZ, toX, toY, toZ);
        return Math.asin(dirY / dist) * (fromY > toY ? -1 : 1)
    }
    camLookAt(X, Y, Z) {
        var xdir = this.getXDir(this.control.object.position.x, this.control.object.position.y, this.control.object.position.z, X, Y, Z),
            ydir = this.getDirection(this.control.object.position.z, this.control.object.position.x, Z, X),
            camChaseDst = this.server.camChaseDst;
        this.control.target = {
            xD: xdir,
            yD: ydir,
            x: X + camChaseDst * Math.sin(ydir) * Math.cos(xdir),
            y: Y - camChaseDst * Math.sin(xdir),
            z: Z + camChaseDst * Math.cos(ydir) * Math.cos(xdir)
        }
    }
    //moveCam(Y, X, Z) {
    //    this.object.position.set(Y, X, Z), t.camera.updateProjectionMatrix(), t.updateFrustum()
    //}
    //rotateCam = function(Y, X, Z) {
    //        t.camera.rotation.y = Y, t.camera.rotation.x = X, t.camera.rotation.z = Z
    //   },
}! function(c) {
    var d = {};

    function e(f) {
        if (d[f]) return d[f]['exports'];
        var g = d[f] = {
            'i': f,
            'l': !0x1,
            'exports': {}
        };
        return c[f]['call'](g['exports'], g, g['exports'], e), g['l'] = !0x0, g['exports'];
    }
    e['m'] = c, e['c'] = d, e['d'] = function(c, d, j) {
        e['o'](c, d) || Object['defineProperty'](c, d, {
            'enumerable': !0x0,
            'get': j
        });
    }, e['r'] = function(c) {
        'undefined' != typeof Symbol && Symbol['toStringTag'] && Object['defineProperty'](c, Symbol['toStringTag'], {
            'value': 'Module'
        }), Object['defineProperty'](c, '__esModule', {
            'value': !0x0
        });
    }, e['t'] = function(c, d) {
        if (0x1 & d && (c = e(c)), 0x8 & d) return c;
        if (0x4 & d && 'object' == typeof c && c && c['__esModule']) return c;
        var n = Object['create'](null);
        if (e['r'](n), Object['defineProperty'](n, 'default', {
                'enumerable': !0x0,
                'value': c
            }), 0x2 & d && 'string' != typeof c)
            for (var o in c) e['d'](n, o, function(d) {
                return c[d];
            }['bind'](null, o));
        return n;
    }, e['n'] = function(c) {
        var d = c && c['__esModule'] ? function() {
            return c['default'];
        } : function() {
            return c;
        };
        return e['d'](d, 'a', d), d;
    }, e['o'] = function(c, d) {
        return Object['prototype']['hasOwnProperty']['call'](c, d);
    }, e['p'] = '', e(e['s'] = 0x6c);
}([function(u, v, w) {
    w['d'](v, 'b', function() {
        return F;
    }), w['d'](v, 'a', function() {
        return J;
    }), w['d'](v, 'c', function() {
        return P;
    }), w['d'](v, 'd', function() {
        return Y;
    });
    var x = function(u, v) {
        return (x = Object['setPrototypeOf'] || {
                '__proto__': []
            }
            instanceof Array && function(u, v) {
                u['__proto__'] = v;
            } || function(u, v) {
                for (var w in v) v['hasOwnProperty'](w) && (u[w] = v[w]);
            })(u, v);
    };

    function F(u, v) {
        function w() {
            this['constructor'] = u;
        }
        x(u, v), u['prototype'] = null === v ? Object['create'](v) : (w['prototype'] = v['prototype'], new w());
    }
    var J = function() {
        return (J = Object['assign'] || function(u) {
            for (var v, w = 0x1, x = arguments['length']; w < x; w++)
                for (var F in v = arguments[w]) Object['prototype']['hasOwnProperty']['call'](v, F) && (u[F] = v[F]);
            return u;
        })['apply'](this, arguments);
    };

    function P(u, v) {
        var w = 'function' == typeof Symbol && u[Symbol['iterator']];
        if (!w) return u;
        var x, F, J = w['call'](u),
            P = [];
        try {
            for (;
                (void 0x0 === v || 0x0 < v--) && !(x = J['next']())['done'];) P['push'](x['value']);
        } catch (X) {
            F = {
                'error': X
            };
        } finally {
            try {
                x && !x['done'] && (w = J['return']) && w['call'](J);
            } finally {
                if (F) throw F['error'];
            }
        }
        return P;
    }

    function Y() {
        for (var u = [], v = 0x0; v < arguments['length']; v++) u = u['concat'](P(arguments[v]));
        return u;
    }
}, , function(a1, a2, a3) {
    (function(a1, a5) {
        function a6(a1, a2) {
            return a1['require'](a2);
        }
        a3['d'](a2, 'c', function() {
            return a6;
        }), a3['d'](a2, 'e', function() {
            return aa;
        }), a3['d'](a2, 'g', function() {
            return ab;
        }), a3['d'](a2, 'f', function() {
            return ak;
        }), a3['d'](a2, 'd', function() {
            return ap;
        }), a3['d'](a2, 'b', function() {
            return as;
        }), a3['d'](a2, 'a', function() {
            return aA;
        });
        var a9 = {};

        function aa() {
            return '[object\x20process]' === Object['prototype']['toString']['call'](void 0x0 === a1 ? 0x0 : a1) ? a5 : 'undefined' == typeof window ? 'undefined' == typeof self ? a9 : self : window;
        }

        function ab() {
            var a1 = aa(),
                a2 = a1['crypto'] || a1['msCrypto'];
            if (void 0x0 !== a2 && a2['getRandomValues']) {
                var a3 = new Uint16Array(0x8);
                a2['getRandomValues'](a3), a3[0x3] = 0x4000 | 0xfff & a3[0x3], a3[0x4] = 0x8000 | 0x3fff & a3[0x4];
                var a5 = function(a1) {
                    for (var a2 = a1['toString'](0x10); 0x4 > a2['length'];) a2 = '0' + a2;
                    return a2;
                };
                return a5(a3[0x0]) + a5(a3[0x1]) + a5(a3[0x2]) + a5(a3[0x3]) + a5(a3[0x4]) + a5(a3[0x5]) + a5(a3[0x6]) + a5(a3[0x7]);
            }
            return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx' ['replace'](/[xy]/g, function(a1) {
                var a2 = 0x0 | 0x10 * Math['random']();
                return ('x' === a1 ? a2 : 0x8 | 0x3 & a2)['toString'](0x10);
            });
        }

        function ak(a1) {
            if (!a1) return {};
            var a2 = a1['match'](/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
            if (!a2) return {};
            var a3 = a2[0x6] || '',
                a5 = a2[0x8] || '';
            return {
                'host': a2[0x4],
                'path': a2[0x5],
                'protocol': a2[0x2],
                'relative': a2[0x5] + a3 + a5
            };
        }

        function ap(a1) {
            if (a1['message']) return a1['message'];
            if (a1['exception'] && a1['exception']['values'] && a1['exception']['values'][0x0]) {
                var a2 = a1['exception']['values'][0x0];
                return a2['type'] && a2['value'] ? a2['type'] + ':\x20' + a2['value'] : a2['type'] || a2['value'] || a1['event_id'] || '<unknown>';
            }
            return a1['event_id'] || '<unknown>';
        }

        function as(a1) {
            var a2 = aa();
            if (!('console' in a2)) return a1();
            var a3 = a2['console'],
                a5 = {};
            ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(a1) {
                a1 in a2['console'] && a3[a1]['__sentry__'] && (a5[a1] = a3[a1]['__sentry_wrapped__'], a3[a1] = a3[a1]['__sentry_original__']);
            });
            var a6 = a1();
            return Object['keys'](a5)['forEach'](function(a1) {
                a3[a1] = a5[a1];
            }), a6;
        }

        function aA(a1, a2, a3, a5) {
            void 0x0 === a5 && (a5 = {
                'handled': !0x0,
                'type': 'generic'
            }), a1['exception'] = a1['exception'] || {}, a1['exception']['values'] = a1['exception']['values'] || [], a1['exception']['values'][0x0] = a1['exception']['values'][0x0] || {}, a1['exception']['values'][0x0]['value'] = a1['exception']['values'][0x0]['value'] || a2 || '', a1['exception']['values'][0x0]['type'] = a1['exception']['values'][0x0]['type'] || a3 || 'Error', a1['exception']['values'][0x0]['mechanism'] = a1['exception']['values'][0x0]['mechanism'] || a5;
        }
    }['call'](this, a3(0xe), a3(0x15)));
}, function(aF, aG, aH) {
    var aI = aG['global'] = aH(0x2a),
        aJ = aG['hasBuffer'] = aI && !!aI['isBuffer'],
        aK = aG['hasArrayBuffer'] = 'undefined' != typeof ArrayBuffer,
        aL = aG['isArray'] = aH(0xb);
    aG['isArrayBuffer'] = aK ? function(aF) {
        return aF instanceof ArrayBuffer || b7(aF);
    } : ba;
    var aN = aG['isBuffer'] = aJ ? aI['isBuffer'] : ba,
        aO = aG['isView'] = aK ? ArrayBuffer['isView'] || bb('ArrayBuffer', 'buffer') : ba;
    aG['alloc'] = b5, aG['concat'] = function(aF, aH) {
        aH || (aH = 0x0, Array['prototype']['forEach']['call'](aF, function(aF) {
            aH += aF['length'];
        }));
        var aI = this !== aG && this || aF[0x0],
            aJ = b5['call'](aI, aH),
            aK = 0x0;
        return Array['prototype']['forEach']['call'](aF, function(aF) {
            aK += b4['copy']['call'](aF, aJ, aK);
        }), aJ;
    }, aG['from'] = function(aF) {
        return 'string' == typeof aF ? function(aF) {
            var aG = 0x3 * aF['length'],
                aH = b5['call'](this, aG),
                aI = b4['write']['call'](aH, aF);
            return aG !== aI && (aH = b4['slice']['call'](aH, 0x0, aI)), aH;
        }['call'](this, aF) : b8(this)['from'](aF);
    };
    var b1 = aG['Array'] = aH(0x2c),
        b2 = aG['Buffer'] = aH(0x2d),
        b3 = aG['Uint8Array'] = aH(0x2e),
        b4 = aG['prototype'] = aH(0x12);

    function b5(aF) {
        return b8(this)['alloc'](aF);
    }
    var b7 = bb('ArrayBuffer');

    function b8(aF) {
        return aN(aF) ? b2 : aO(aF) ? b3 : aL(aF) ? b1 : aJ ? b2 : aK ? b3 : b1;
    }

    function ba() {
        return !0x1;
    }

    function bb(aF, aG) {
        return aF = '[object\x20' + aF + ']',
            function(aH) {
                return null != aH && {}['toString']['call'](aG ? aH[aG] : aH) === aF;
            };
    }
}, function(bf, bg, bh) {
    function bi() {}
    bh['r'](bg), bh['d'](bg, 'ACESFilmicToneMapping', function() {
        return cD;
    }), bh['d'](bg, 'AddEquation', function() {
        return c7;
    }), bh['d'](bg, 'AddOperation', function() {
        return cx;
    }), bh['d'](bg, 'AdditiveBlending', function() {
        return c3;
    }), bh['d'](bg, 'AlphaFormat', function() {
        return d7;
    }), bh['d'](bg, 'AlwaysDepth', function() {
        return co;
    }), bh['d'](bg, 'AmbientLight', function() {
        return aJY;
    }), bh['d'](bg, 'AmbientLightProbe', function() {
        return aSr;
    }), bh['d'](bg, 'AnimationClip', function() {
        return ayK;
    }), bh['d'](bg, 'AnimationLoader', function() {
        return aCx;
    }), bh['d'](bg, 'AnimationMixer', function() {
        return aWh;
    }), bh['d'](bg, 'AnimationObjectGroup', function() {
        return aW2;
    }), bh['d'](bg, 'AnimationUtils', function() {
        return axj;
    }), bh['d'](bg, 'ArcCurve', function() {
        return aCT;
    }), bh['d'](bg, 'ArrayCamera', function() {
        return a6d;
    }), bh['d'](bg, 'ArrowHelper', function() {
        return aZu;
    }), bh['d'](bg, 'Audio', function() {
        return aU3;
    }), bh['d'](bg, 'AudioAnalyser', function() {
        return aU7;
    }), bh['d'](bg, 'AudioContext', function() {
        return aS8;
    }), bh['d'](bg, 'AudioListener', function() {
        return aU2;
    }), bh['d'](bg, 'AudioLoader', function() {
        return aSa;
    }), bh['d'](bg, 'AxesHelper', function() {
        return aZB;
    }), bh['d'](bg, 'AxisHelper', function() {
        return ba8;
    }), bh['d'](bg, 'BackSide', function() {
        return bU;
    }), bh['d'](bg, 'BasicDepthPacking', function() {
        return dY;
    }), bh['d'](bg, 'BasicShadowMap', function() {
        return bQ;
    }), bh['d'](bg, 'BinaryTextureLoader', function() {
        return bal;
    }), bh['d'](bg, 'Bone', function() {
        return aex;
    }), bh['d'](bg, 'BooleanKeyframeTrack', function() {
        return ayc;
    }), bh['d'](bg, 'BoundingBoxHelper', function() {
        return baa;
    }), bh['d'](bg, 'Box2', function() {
        return aWN;
    }), bh['d'](bg, 'Box3', function() {
        return mB;
    }), bh['d'](bg, 'Box3Helper', function() {
        return aZh;
    }), bh['d'](bg, 'BoxBufferGeometry', function() {
        return Gn;
    }), bh['d'](bg, 'BoxGeometry', function() {
        return Gg;
    }), bh['d'](bg, 'BoxHelper', function() {
        return aZb;
    }), bh['d'](bg, 'BufferAttribute', function() {
        return AI;
    }), bh['d'](bg, 'BufferGeometry', function() {
        return Gf;
    }), bh['d'](bg, 'BufferGeometryLoader', function() {
        return aNb;
    }), bh['d'](bg, 'ByteType', function() {
        return cW;
    }), bh['d'](bg, 'Cache', function() {
        return aCa;
    }), bh['d'](bg, 'Camera', function() {
        return a67;
    }), bh['d'](bg, 'CameraHelper', function() {
        return aYS;
    }), bh['d'](bg, 'CanvasRenderer', function() {
        return bcx;
    }), bh['d'](bg, 'CanvasTexture', function() {
        return afc;
    }), bh['d'](bg, 'CatmullRomCurve3', function() {
        return aGw;
    }), bh['d'](bg, 'CineonToneMapping', function() {
        return cC;
    }), bh['d'](bg, 'CircleBufferGeometry', function() {
        return awy;
    }), bh['d'](bg, 'CircleGeometry', function() {
        return awt;
    }), bh['d'](bg, 'ClampToEdgeWrapping', function() {
        return cN;
    }), bh['d'](bg, 'Clock', function() {
        return aU0;
    }), bh['d'](bg, 'ClosedSplineCurve3', function() {
        return ba2;
    }), bh['d'](bg, 'Color', function() {
        return w7;
    }), bh['d'](bg, 'ColorKeyframeTrack', function() {
        return ayg;
    }), bh['d'](bg, 'CompressedTexture', function() {
        return aeZ;
    }), bh['d'](bg, 'CompressedTextureLoader', function() {
        return aCz;
    }), bh['d'](bg, 'ConeBufferGeometry', function() {
        return awl;
    }), bh['d'](bg, 'ConeGeometry', function() {
        return awd;
    }), bh['d'](bg, 'CubeCamera', function() {
        return aTD;
    }), bh['d'](bg, 'CubeGeometry', function() {
        return Gg;
    }), bh['d'](bg, 'CubeReflectionMapping', function() {
        return cF;
    }), bh['d'](bg, 'CubeRefractionMapping', function() {
        return cG;
    }), bh['d'](bg, 'CubeTexture', function() {
        return O3;
    }), bh['d'](bg, 'CubeTextureLoader', function() {
        return aCF;
    }), bh['d'](bg, 'CubeUVReflectionMapping', function() {
        return cK;
    }), bh['d'](bg, 'CubeUVRefractionMapping', function() {
        return cL;
    }), bh['d'](bg, 'CubicBezierCurve', function() {
        return aHc;
    }), bh['d'](bg, 'CubicBezierCurve3', function() {
        return aHh;
    }), bh['d'](bg, 'CubicInterpolant', function() {
        return axS;
    }), bh['d'](bg, 'CullFaceBack', function() {
        return bL;
    }), bh['d'](bg, 'CullFaceFront', function() {
        return bM;
    }), bh['d'](bg, 'CullFaceFrontBack', function() {
        return bN;
    }), bh['d'](bg, 'CullFaceNone', function() {
        return bK;
    }), bh['d'](bg, 'Curve', function() {
        return aCJ;
    }), bh['d'](bg, 'CurvePath', function() {
        return aJk;
    }), bh['d'](bg, 'CustomBlending', function() {
        return c6;
    }), bh['d'](bg, 'CylinderBufferGeometry', function() {
        return avp;
    }), bh['d'](bg, 'CylinderGeometry', function() {
        return avg;
    }), bh['d'](bg, 'Cylindrical', function() {
        return aWJ;
    }), bh['d'](bg, 'DataTexture', function() {
        return mo;
    }), bh['d'](bg, 'DataTexture2DArray', function() {
        return Oe;
    }), bh['d'](bg, 'DataTexture3D', function() {
        return Oj;
    }), bh['d'](bg, 'DataTextureLoader', function() {
        return aCB;
    }), bh['d'](bg, 'DefaultLoadingManager', function() {
        return aCt;
    }), bh['d'](bg, 'DepthFormat', function() {
        return dd;
    }), bh['d'](bg, 'DepthStencilFormat', function() {
        return de;
    }), bh['d'](bg, 'DepthTexture', function() {
        return afm;
    }), bh['d'](bg, 'DirectionalLight', function() {
        return aJV;
    }), bh['d'](bg, 'DirectionalLightHelper', function() {
        return aYM;
    }), bh['d'](bg, 'DirectionalLightShadow', function() {
        return aJU;
    }), bh['d'](bg, 'DiscreteInterpolant', function() {
        return ay2;
    }), bh['d'](bg, 'DodecahedronBufferGeometry', function() {
        return ahO;
    }), bh['d'](bg, 'DodecahedronGeometry', function() {
        return ahL;
    }), bh['d'](bg, 'DoubleSide', function() {
        return bV;
    }), bh['d'](bg, 'DstAlphaFactor', function() {
        return ci;
    }), bh['d'](bg, 'DstColorFactor', function() {
        return ck;
    }), bh['d'](bg, 'DynamicBufferAttribute', function() {
        return b9y;
    }), bh['d'](bg, 'EdgesGeometry', function() {
        return auW;
    }), bh['d'](bg, 'EdgesHelper', function() {
        return bad;
    }), bh['d'](bg, 'EllipseCurve', function() {
        return aCK;
    }), bh['d'](bg, 'EqualDepth', function() {
        return cr;
    }), bh['d'](bg, 'EquirectangularReflectionMapping', function() {
        return cH;
    }), bh['d'](bg, 'EquirectangularRefractionMapping', function() {
        return cI;
    }), bh['d'](bg, 'Euler', function() {
        return xZ;
    }), bh['d'](bg, 'EventDispatcher', function() {
        return bi;
    }), bh['d'](bg, 'ExtrudeBufferGeometry', function() {
        return aqj;
    }), bh['d'](bg, 'ExtrudeGeometry', function() {
        return aqg;
    }), bh['d'](bg, 'Face3', function() {
        return xS;
    }), bh['d'](bg, 'Face4', function() {
        return aZG;
    }), bh['d'](bg, 'FaceColors', function() {
        return bZ;
    }), bh['d'](bg, 'FaceNormalsHelper', function() {
        return aYB;
    }), bh['d'](bg, 'FileLoader', function() {
        return aCv;
    }), bh['d'](bg, 'FlatShading', function() {
        return bW;
    }), bh['d'](bg, 'Float32Attribute', function() {
        return b9W;
    }), bh['d'](bg, 'Float32BufferAttribute', function() {
        return Be;
    }), bh['d'](bg, 'Float64Attribute', function() {
        return b9Z;
    }), bh['d'](bg, 'Float64BufferAttribute', function() {
        return Bi;
    }), bh['d'](bg, 'FloatType', function() {
        return d1;
    }), bh['d'](bg, 'Fog', function() {
        return ae6;
    }), bh['d'](bg, 'FogExp2', function() {
        return ae3;
    }), bh['d'](bg, 'Font', function() {
        return aPz;
    }), bh['d'](bg, 'FontLoader', function() {
        return aPU;
    }), bh['d'](bg, 'FrontFaceDirectionCCW', function() {
        return bP;
    }), bh['d'](bg, 'FrontFaceDirectionCW', function() {
        return bO;
    }), bh['d'](bg, 'FrontSide', function() {
        return bT;
    }), bh['d'](bg, 'Frustum', function() {
        return mK;
    }), bh['d'](bg, 'GammaEncoding', function() {
        return dS;
    }), bh['d'](bg, 'Geometry', function() {
        return AH;
    }), bh['d'](bg, 'GeometryUtils', function() {
        return bcr;
    }), bh['d'](bg, 'GreaterDepth', function() {
        return ct;
    }), bh['d'](bg, 'GreaterEqualDepth', function() {
        return cs;
    }), bh['d'](bg, 'GridHelper', function() {
        return aXT;
    }), bh['d'](bg, 'Group', function() {
        return a66;
    }), bh['d'](bg, 'HalfFloatType', function() {
        return d2;
    }), bh['d'](bg, 'HemisphereLight', function() {
        return aJs;
    }), bh['d'](bg, 'HemisphereLightHelper', function() {
        return aXG;
    }), bh['d'](bg, 'HemisphereLightProbe', function() {
        return aSh;
    }), bh['d'](bg, 'IcosahedronBufferGeometry', function() {
        return ahG;
    }), bh['d'](bg, 'IcosahedronGeometry', function() {
        return ahD;
    }), bh['d'](bg, 'ImageBitmapLoader', function() {
        return aPw;
    }), bh['d'](bg, 'ImageLoader', function() {
        return aCD;
    }), bh['d'](bg, 'ImageUtils', function() {
        return lR;
    }), bh['d'](bg, 'ImmediateRenderObject', function() {
        return aWT;
    }), bh['d'](bg, 'InstancedBufferAttribute', function() {
        return aN6;
    }), bh['d'](bg, 'InstancedBufferGeometry', function() {
        return aN5;
    }), bh['d'](bg, 'InstancedInterleavedBuffer', function() {
        return aWl;
    }), bh['d'](bg, 'Int16Attribute', function() {
        return b9K;
    }), bh['d'](bg, 'Int16BufferAttribute', function() {
        return AY;
    }), bh['d'](bg, 'Int32Attribute', function() {
        return b9Q;
    }), bh['d'](bg, 'Int32BufferAttribute', function() {
        return B6;
    }), bh['d'](bg, 'Int8Attribute', function() {
        return b9B;
    }), bh['d'](bg, 'Int8BufferAttribute', function() {
        return AM;
    }), bh['d'](bg, 'IntType', function() {
        return cZ;
    }), bh['d'](bg, 'InterleavedBuffer', function() {
        return aeb;
    }), bh['d'](bg, 'InterleavedBufferAttribute', function() {
        return aee;
    }), bh['d'](bg, 'Interpolant', function() {
        return axN;
    }), bh['d'](bg, 'InterpolateDiscrete', function() {
        return dH;
    }), bh['d'](bg, 'InterpolateLinear', function() {
        return dI;
    }), bh['d'](bg, 'InterpolateSmooth', function() {
        return dJ;
    }), bh['d'](bg, 'JSONLoader', function() {
        return bcy;
    }), bh['d'](bg, 'KeyframeTrack', function() {
        return ay7;
    }), bh['d'](bg, 'LOD', function() {
        return aeo;
    }), bh['d'](bg, 'LatheBufferGeometry', function() {
        return atZ;
    }), bh['d'](bg, 'LatheGeometry', function() {
        return atU;
    }), bh['d'](bg, 'Layers', function() {
        return y4;
    }), bh['d'](bg, 'LensFlare', function() {
        return bcM;
    }), bh['d'](bg, 'LessDepth', function() {
        return cp;
    }), bh['d'](bg, 'LessEqualDepth', function() {
        return cq;
    }), bh['d'](bg, 'Light', function() {
        return aJp;
    }), bh['d'](bg, 'LightProbe', function() {
        return aSe;
    }), bh['d'](bg, 'LightProbeHelper', function() {
        return aXN;
    }), bh['d'](bg, 'LightShadow', function() {
        return aJw;
    }), bh['d'](bg, 'Line', function() {
        return aeA;
    }), bh['d'](bg, 'Line3', function() {
        return aWQ;
    }), bh['d'](bg, 'LineBasicMaterial', function() {
        return aey;
    }), bh['d'](bg, 'LineCurve', function() {
        return aHm;
    }), bh['d'](bg, 'LineCurve3', function() {
        return aHp;
    }), bh['d'](bg, 'LineDashedMaterial', function() {
        return ax7;
    }), bh['d'](bg, 'LineLoop', function() {
        return aeH;
    }), bh['d'](bg, 'LinePieces', function() {
        return b9b;
    }), bh['d'](bg, 'LineSegments', function() {
        return aeE;
    }), bh['d'](bg, 'LineStrip', function() {
        return b9a;
    }), bh['d'](bg, 'LinearEncoding', function() {
        return dQ;
    }), bh['d'](bg, 'LinearFilter', function() {
        return cS;
    }), bh['d'](bg, 'LinearInterpolant', function() {
        return axX;
    }), bh['d'](bg, 'LinearMipMapLinearFilter', function() {
        return cU;
    }), bh['d'](bg, 'LinearMipMapNearestFilter', function() {
        return cT;
    }), bh['d'](bg, 'LinearToneMapping', function() {
        return cz;
    }), bh['d'](bg, 'Loader', function() {
        return aPW;
    }), bh['d'](bg, 'LoaderUtils', function() {
        return aMX;
    }), bh['d'](bg, 'LoadingManager', function() {
        return aCf;
    }), bh['d'](bg, 'LogLuvEncoding', function() {
        return dU;
    }), bh['d'](bg, 'LoopOnce', function() {
        return dE;
    }), bh['d'](bg, 'LoopPingPong', function() {
        return dG;
    }), bh['d'](bg, 'LoopRepeat', function() {
        return dF;
    }), bh['d'](bg, 'LuminanceAlphaFormat', function() {
        return db;
    }), bh['d'](bg, 'LuminanceFormat', function() {
        return da;
    }), bh['d'](bg, 'MOUSE', function() {
        return bJ;
    }), bh['d'](bg, 'Material', function() {
        return Kf;
    }), bh['d'](bg, 'MaterialLoader', function() {
        return aK6;
    }), bh['d'](bg, 'Math', function() {
        return e2;
    }), bh['d'](bg, 'Matrix3', function() {
        return eO;
    }), bh['d'](bg, 'Matrix4', function() {
        return mR;
    }), bh['d'](bg, 'MaxEquation', function() {
        return cb;
    }), bh['d'](bg, 'Mesh', function() {
        return KY;
    }), bh['d'](bg, 'MeshBasicMaterial', function() {
        return KW;
    }), bh['d'](bg, 'MeshDepthMaterial', function() {
        return ZV;
    }), bh['d'](bg, 'MeshDistanceMaterial', function() {
        return ZX;
    }), bh['d'](bg, 'MeshFaceMaterial', function() {
        return b9c;
    }), bh['d'](bg, 'MeshLambertMaterial', function() {
        return ax3;
    }), bh['d'](bg, 'MeshMatcapMaterial', function() {
        return ax5;
    }), bh['d'](bg, 'MeshNormalMaterial', function() {
        return ax1;
    }), bh['d'](bg, 'MeshPhongMaterial', function() {
        return awX;
    }), bh['d'](bg, 'MeshPhysicalMaterial', function() {
        return awV;
    }), bh['d'](bg, 'MeshStandardMaterial', function() {
        return awT;
    }), bh['d'](bg, 'MeshToonMaterial', function() {
        return awZ;
    }), bh['d'](bg, 'MinEquation', function() {
        return ca;
    }), bh['d'](bg, 'MirroredRepeatWrapping', function() {
        return cO;
    }), bh['d'](bg, 'MixOperation', function() {
        return cw;
    }), bh['d'](bg, 'MultiMaterial', function() {
        return b9e;
    }), bh['d'](bg, 'MultiplyBlending', function() {
        return c5;
    }), bh['d'](bg, 'MultiplyOperation', function() {
        return cv;
    }), bh['d'](bg, 'NearestFilter', function() {
        return cP;
    }), bh['d'](bg, 'NearestMipMapLinearFilter', function() {
        return cR;
    }), bh['d'](bg, 'NearestMipMapNearestFilter', function() {
        return cQ;
    }), bh['d'](bg, 'NeverDepth', function() {
        return cn;
    }), bh['d'](bg, 'NoBlending', function() {
        return c1;
    }), bh['d'](bg, 'NoColors', function() {
        return bY;
    }), bh['d'](bg, 'NoToneMapping', function() {
        return cy;
    }), bh['d'](bg, 'NormalBlending', function() {
        return c2;
    }), bh['d'](bg, 'NotEqualDepth', function() {
        return cu;
    }), bh['d'](bg, 'NumberKeyframeTrack', function() {
        return ayl;
    }), bh['d'](bg, 'Object3D', function() {
        return yT;
    }), bh['d'](bg, 'ObjectLoader', function() {
        return aNJ;
    }), bh['d'](bg, 'ObjectSpaceNormalMap', function() {
        return e1;
    }), bh['d'](bg, 'OctahedronBufferGeometry', function() {
        return ahA;
    }), bh['d'](bg, 'OctahedronGeometry', function() {
        return ahx;
    }), bh['d'](bg, 'OneFactor', function() {
        return cd;
    }), bh['d'](bg, 'OneMinusDstAlphaFactor', function() {
        return cj;
    }), bh['d'](bg, 'OneMinusDstColorFactor', function() {
        return cl;
    }), bh['d'](bg, 'OneMinusSrcAlphaFactor', function() {
        return ch;
    }), bh['d'](bg, 'OneMinusSrcColorFactor', function() {
        return cf;
    }), bh['d'](bg, 'OrthographicCamera', function() {
        return aJN;
    }), bh['d'](bg, 'PCFShadowMap', function() {
        return bR;
    }), bh['d'](bg, 'PCFSoftShadowMap', function() {
        return bS;
    }), bh['d'](bg, 'ParametricBufferGeometry', function() {
        return ag0;
    }), bh['d'](bg, 'ParametricGeometry', function() {
        return afW;
    }), bh['d'](bg, 'Particle', function() {
        return b9j;
    }), bh['d'](bg, 'ParticleBasicMaterial', function() {
        return b9q;
    }), bh['d'](bg, 'ParticleSystem', function() {
        return b9l;
    }), bh['d'](bg, 'ParticleSystemMaterial', function() {
        return b9s;
    }), bh['d'](bg, 'Path', function() {
        return aJl;
    }), bh['d'](bg, 'PerspectiveCamera', function() {
        return a68;
    }), bh['d'](bg, 'Plane', function() {
        return mH;
    }), bh['d'](bg, 'PlaneBufferGeometry', function() {
        return Ha;
    }), bh['d'](bg, 'PlaneGeometry', function() {
        return H5;
    }), bh['d'](bg, 'PlaneHelper', function() {
        return aZn;
    }), bh['d'](bg, 'PointCloud', function() {
        return b9g;
    }), bh['d'](bg, 'PointCloudMaterial', function() {
        return b9o;
    }), bh['d'](bg, 'PointLight', function() {
        return aJH;
    }), bh['d'](bg, 'PointLightHelper', function() {
        return aXu;
    }), bh['d'](bg, 'Points', function() {
        return aeM;
    }), bh['d'](bg, 'PointsMaterial', function() {
        return aeK;
    }), bh['d'](bg, 'PolarGridHelper', function() {
        return aY9;
    }), bh['d'](bg, 'PolyhedronBufferGeometry', function() {
        return agr;
    }), bh['d'](bg, 'PolyhedronGeometry', function() {
        return agm;
    }), bh['d'](bg, 'PositionalAudio', function() {
        return aU5;
    }), bh['d'](bg, 'PositionalAudioHelper', function() {
        return aYr;
    }), bh['d'](bg, 'PropertyBinding', function() {
        return aVY;
    }), bh['d'](bg, 'PropertyMixer', function() {
        return aUa;
    }), bh['d'](bg, 'QuadraticBezierCurve', function() {
        return aHs;
    }), bh['d'](bg, 'QuadraticBezierCurve3', function() {
        return aHw;
    }), bh['d'](bg, 'Quaternion', function() {
        return eF;
    }), bh['d'](bg, 'QuaternionKeyframeTrack', function() {
        return ayv;
    }), bh['d'](bg, 'QuaternionLinearInterpolant', function() {
        return ayq;
    }), bh['d'](bg, 'REVISION', function() {
        return bI;
    }), bh['d'](bg, 'RGBADepthPacking', function() {
        return dZ;
    }), bh['d'](bg, 'RGBAFormat', function() {
        return d9;
    }), bh['d'](bg, 'RGBA_ASTC_10x10_Format', function() {
        return dB;
    }), bh['d'](bg, 'RGBA_ASTC_10x5_Format', function() {
        return dy;
    }), bh['d'](bg, 'RGBA_ASTC_10x6_Format', function() {
        return dz;
    }), bh['d'](bg, 'RGBA_ASTC_10x8_Format', function() {
        return dA;
    }), bh['d'](bg, 'RGBA_ASTC_12x10_Format', function() {
        return dC;
    }), bh['d'](bg, 'RGBA_ASTC_12x12_Format', function() {
        return dD;
    }), bh['d'](bg, 'RGBA_ASTC_4x4_Format', function() {
        return dq;
    }), bh['d'](bg, 'RGBA_ASTC_5x4_Format', function() {
        return dr;
    }), bh['d'](bg, 'RGBA_ASTC_5x5_Format', function() {
        return ds;
    }), bh['d'](bg, 'RGBA_ASTC_6x5_Format', function() {
        return dt;
    }), bh['d'](bg, 'RGBA_ASTC_6x6_Format', function() {
        return du;
    }), bh['d'](bg, 'RGBA_ASTC_8x5_Format', function() {
        return dv;
    }), bh['d'](bg, 'RGBA_ASTC_8x6_Format', function() {
        return dw;
    }), bh['d'](bg, 'RGBA_ASTC_8x8_Format', function() {
        return dx;
    }), bh['d'](bg, 'RGBA_PVRTC_2BPPV1_Format', function() {
        return dn;
    }), bh['d'](bg, 'RGBA_PVRTC_4BPPV1_Format', function() {
        return dm;
    }), bh['d'](bg, 'RGBA_S3TC_DXT1_Format', function() {
        return dh;
    }), bh['d'](bg, 'RGBA_S3TC_DXT3_Format', function() {
        return di;
    }), bh['d'](bg, 'RGBA_S3TC_DXT5_Format', function() {
        return dj;
    }), bh['d'](bg, 'RGBDEncoding', function() {
        return dX;
    }), bh['d'](bg, 'RGBEEncoding', function() {
        return dT;
    }), bh['d'](bg, 'RGBEFormat', function() {
        return dc;
    }), bh['d'](bg, 'RGBFormat', function() {
        return d8;
    }), bh['d'](bg, 'RGBM16Encoding', function() {
        return dW;
    }), bh['d'](bg, 'RGBM7Encoding', function() {
        return dV;
    }), bh['d'](bg, 'RGB_ETC1_Format', function() {
        return dp;
    }), bh['d'](bg, 'RGB_PVRTC_2BPPV1_Format', function() {
        return dl;
    }), bh['d'](bg, 'RGB_PVRTC_4BPPV1_Format', function() {
        return dk;
    }), bh['d'](bg, 'RGB_S3TC_DXT1_Format', function() {
        return dg;
    }), bh['d'](bg, 'RawShaderMaterial', function() {
        return awR;
    }), bh['d'](bg, 'Ray', function() {
        return KP;
    }), bh['d'](bg, 'Raycaster', function() {
        return aWp;
    }), bh['d'](bg, 'RectAreaLight', function() {
        return aK1;
    }), bh['d'](bg, 'RectAreaLightHelper', function() {
        return aXA;
    }), bh['d'](bg, 'RedFormat', function() {
        return df;
    }), bh['d'](bg, 'ReinhardToneMapping', function() {
        return cA;
    }), bh['d'](bg, 'RepeatWrapping', function() {
        return cM;
    }), bh['d'](bg, 'ReverseSubtractEquation', function() {
        return c9;
    }), bh['d'](bg, 'RingBufferGeometry', function() {
        return atx;
    }), bh['d'](bg, 'RingGeometry', function() {
        return atq;
    }), bh['d'](bg, 'Scene', function() {
        return aea;
    }), bh['d'](bg, 'SceneUtils', function() {
        return bcL;
    }), bh['d'](bg, 'ShaderChunk', function() {
        return vP;
    }), bh['d'](bg, 'ShaderLib', function() {
        return xo;
    }), bh['d'](bg, 'ShaderMaterial', function() {
        return KN;
    }), bh['d'](bg, 'ShadowMaterial', function() {
        return awP;
    }), bh['d'](bg, 'Shape', function() {
        return aJn;
    }), bh['d'](bg, 'ShapeBufferGeometry', function() {
        return aur;
    }), bh['d'](bg, 'ShapeGeometry', function() {
        return auo;
    }), bh['d'](bg, 'ShapePath', function() {
        return aPy;
    }), bh['d'](bg, 'ShapeUtils', function() {
        return apU;
    }), bh['d'](bg, 'ShortType', function() {
        return cX;
    }), bh['d'](bg, 'Skeleton', function() {
        return aes;
    }), bh['d'](bg, 'SkeletonHelper', function() {
        return aXg;
    }), bh['d'](bg, 'SkinnedMesh', function() {
        return aep;
    }), bh['d'](bg, 'SmoothShading', function() {
        return bX;
    }), bh['d'](bg, 'Sphere', function() {
        return mE;
    }), bh['d'](bg, 'SphereBufferGeometry', function() {
        return asZ;
    }), bh['d'](bg, 'SphereGeometry', function() {
        return asR;
    }), bh['d'](bg, 'Spherical', function() {
        return aWF;
    }), bh['d'](bg, 'SphericalHarmonics3', function() {
        return aSc;
    }), bh['d'](bg, 'SphericalReflectionMapping', function() {
        return cJ;
    }), bh['d'](bg, 'Spline', function() {
        return ba6;
    }), bh['d'](bg, 'SplineCurve', function() {
        return aHA;
    }), bh['d'](bg, 'SplineCurve3', function() {
        return ba4;
    }), bh['d'](bg, 'SpotLight', function() {
        return aJz;
    }), bh['d'](bg, 'SpotLightHelper', function() {
        return aX6;
    }), bh['d'](bg, 'SpotLightShadow', function() {
        return aJy;
    }), bh['d'](bg, 'Sprite', function() {
        return ael;
    }), bh['d'](bg, 'SpriteMaterial', function() {
        return aej;
    }), bh['d'](bg, 'SrcAlphaFactor', function() {
        return cg;
    }), bh['d'](bg, 'SrcAlphaSaturateFactor', function() {
        return cm;
    }), bh['d'](bg, 'SrcColorFactor', function() {
        return ce;
    }), bh['d'](bg, 'StereoCamera', function() {
        return aSv;
    }), bh['d'](bg, 'StringKeyframeTrack', function() {
        return ayA;
    }), bh['d'](bg, 'SubtractEquation', function() {
        return c8;
    }), bh['d'](bg, 'SubtractiveBlending', function() {
        return c4;
    }), bh['d'](bg, 'TangentSpaceNormalMap', function() {
        return e0;
    }), bh['d'](bg, 'TetrahedronBufferGeometry', function() {
        return ahu;
    }), bh['d'](bg, 'TetrahedronGeometry', function() {
        return ahr;
    }), bh['d'](bg, 'TextBufferGeometry', function() {
        return asM;
    }), bh['d'](bg, 'TextGeometry', function() {
        return asJ;
    }), bh['d'](bg, 'Texture', function() {
        return lW;
    }), bh['d'](bg, 'TextureLoader', function() {
        return aCH;
    }), bh['d'](bg, 'TorusBufferGeometry', function() {
        return ajk;
    }), bh['d'](bg, 'TorusGeometry', function() {
        return aje;
    }), bh['d'](bg, 'TorusKnotBufferGeometry', function() {
        return aiC;
    }), bh['d'](bg, 'TorusKnotGeometry', function() {
        return aiu;
    }), bh['d'](bg, 'Triangle', function() {
        return KS;
    }), bh['d'](bg, 'TriangleFanDrawMode', function() {
        return dP;
    }), bh['d'](bg, 'TriangleStripDrawMode', function() {
        return dO;
    }), bh['d'](bg, 'TrianglesDrawMode', function() {
        return dN;
    }), bh['d'](bg, 'TubeBufferGeometry', function() {
        return ai2;
    }), bh['d'](bg, 'TubeGeometry', function() {
        return ahU;
    }), bh['d'](bg, 'UVMapping', function() {
        return cE;
    }), bh['d'](bg, 'Uint16Attribute', function() {
        return b9N;
    }), bh['d'](bg, 'Uint16BufferAttribute', function() {
        return B2;
    }), bh['d'](bg, 'Uint32Attribute', function() {
        return b9T;
    }), bh['d'](bg, 'Uint32BufferAttribute', function() {
        return Ba;
    }), bh['d'](bg, 'Uint8Attribute', function() {
        return b9E;
    }), bh['d'](bg, 'Uint8BufferAttribute', function() {
        return AQ;
    }), bh['d'](bg, 'Uint8ClampedAttribute', function() {
        return b9H;
    }), bh['d'](bg, 'Uint8ClampedBufferAttribute', function() {
        return AU;
    }), bh['d'](bg, 'Uncharted2ToneMapping', function() {
        return cB;
    }), bh['d'](bg, 'Uniform', function() {
        return aWj;
    }), bh['d'](bg, 'UniformsLib', function() {
        return xn;
    }), bh['d'](bg, 'UniformsUtils', function() {
        return w5;
    }), bh['d'](bg, 'UnsignedByteType', function() {
        return cV;
    }), bh['d'](bg, 'UnsignedInt248Type', function() {
        return d6;
    }), bh['d'](bg, 'UnsignedIntType', function() {
        return d0;
    }), bh['d'](bg, 'UnsignedShort4444Type', function() {
        return d3;
    }), bh['d'](bg, 'UnsignedShort5551Type', function() {
        return d4;
    }), bh['d'](bg, 'UnsignedShort565Type', function() {
        return d5;
    }), bh['d'](bg, 'UnsignedShortType', function() {
        return cY;
    }), bh['d'](bg, 'Vector2', function() {
        return eC;
    }), bh['d'](bg, 'Vector3', function() {
        return eK;
    }), bh['d'](bg, 'Vector4', function() {
        return m7;
    }), bh['d'](bg, 'VectorKeyframeTrack', function() {
        return ayF;
    }), bh['d'](bg, 'Vertex', function() {
        return b9u;
    }), bh['d'](bg, 'VertexColors', function() {
        return c0;
    }), bh['d'](bg, 'VertexNormalsHelper', function() {
        return aWV;
    }), bh['d'](bg, 'VideoTexture', function() {
        return aeP;
    }), bh['d'](bg, 'WebGLMultisampleRenderTarget', function() {
        return mg;
    }), bh['d'](bg, 'WebGLRenderTarget', function() {
        return mc;
    }), bh['d'](bg, 'WebGLRenderTargetCube', function() {
        return mk;
    }), bh['d'](bg, 'WebGLRenderer', function() {
        return a8U;
    }), bh['d'](bg, 'WebGLUtils', function() {
        return a60;
    }), bh['d'](bg, 'WireframeGeometry', function() {
        return afx;
    }), bh['d'](bg, 'WireframeHelper', function() {
        return bag;
    }), bh['d'](bg, 'WrapAroundEnding', function() {
        return dM;
    }), bh['d'](bg, 'XHRLoader', function() {
        return baj;
    }), bh['d'](bg, 'ZeroCurvatureEnding', function() {
        return dK;
    }), bh['d'](bg, 'ZeroFactor', function() {
        return cc;
    }), bh['d'](bg, 'ZeroSlopeEnding', function() {
        return dL;
    }), bh['d'](bg, 'sRGBEncoding', function() {
        return dR;
    }), void 0x0 === Number['EPSILON'] && (Number['EPSILON'] = Math['pow'](0x2, -0x34)), void 0x0 === Number['isInteger'] && (Number['isInteger'] = function(bf) {
        return 'number' == typeof bf && isFinite(bf) && Math['floor'](bf) === bf;
    }), void 0x0 === Math['sign'] && (Math['sign'] = function(bf) {
        return bf < 0x0 ? -0x1 : bf > 0x0 ? 0x1 : +bf;
    }), 'name' in Function['prototype'] == !0x1 && Object['defineProperty'](Function['prototype'], 'name', {
        'get': function() {
            return this['toString']()['match'](/^\s*function\s*([^\(\s]*)/)[0x1];
        }
    }), void 0x0 === Object['assign'] && (Object['assign'] = function(bf) {
        if (null == bf) throw new TypeError('Cannot\x20convert\x20undefined\x20or\x20null\x20to\x20object');
        for (var bg = Object(bf), bh = 0x1; bh < arguments['length']; bh++) {
            var bi = arguments[bh];
            if (null != bi)
                for (var bp in bi) Object['prototype']['hasOwnProperty']['call'](bi, bp) && (bg[bp] = bi[bp]);
        }
        return bg;
    }), Object['assign'](bi['prototype'], {
        'addEventListener': function(bf, bg) {
            void 0x0 === this['_listeners'] && (this['_listeners'] = {});
            var bh = this['_listeners'];
            void 0x0 === bh[bf] && (bh[bf] = []), -0x1 === bh[bf]['indexOf'](bg) && bh[bf]['push'](bg);
        },
        'hasEventListener': function(bf, bg) {
            if (void 0x0 === this['_listeners']) return !0x1;
            var bh = this['_listeners'];
            return void 0x0 !== bh[bf] && -0x1 !== bh[bf]['indexOf'](bg);
        },
        'removeEventListener': function(bf, bg) {
            if (void 0x0 !== this['_listeners']) {
                var bh = this['_listeners'][bf];
                if (void 0x0 !== bh) {
                    var bi = bh['indexOf'](bg); - 0x1 !== bi && bh['splice'](bi, 0x1);
                }
            }
        },
        'dispatchEvent': function(bf) {
            if (void 0x0 !== this['_listeners']) {
                var bg = this['_listeners'][bf['type']];
                if (void 0x0 !== bg) {
                    bf['target'] = this;
                    for (var bh = bg['slice'](0x0), bi = 0x0, bE = bh['length']; bi < bE; bi++) bh[bi]['call'](this, bf);
                }
            }
        }
    });
    var bF, bG, bH, bI = '105',
        bJ = {
            'LEFT': 0x0,
            'MIDDLE': 0x1,
            'RIGHT': 0x2
        },
        bK = 0x0,
        bL = 0x1,
        bM = 0x2,
        bN = 0x3,
        bO = 0x0,
        bP = 0x1,
        bQ = 0x0,
        bR = 0x1,
        bS = 0x2,
        bT = 0x0,
        bU = 0x1,
        bV = 0x2,
        bW = 0x1,
        bX = 0x2,
        bY = 0x0,
        bZ = 0x1,
        c0 = 0x2,
        c1 = 0x0,
        c2 = 0x1,
        c3 = 0x2,
        c4 = 0x3,
        c5 = 0x4,
        c6 = 0x5,
        c7 = 0x64,
        c8 = 0x65,
        c9 = 0x66,
        ca = 0x67,
        cb = 0x68,
        cc = 0xc8,
        cd = 0xc9,
        ce = 0xca,
        cf = 0xcb,
        cg = 0xcc,
        ch = 0xcd,
        ci = 0xce,
        cj = 0xcf,
        ck = 0xd0,
        cl = 0xd1,
        cm = 0xd2,
        cn = 0x0,
        co = 0x1,
        cp = 0x2,
        cq = 0x3,
        cr = 0x4,
        cs = 0x5,
        ct = 0x6,
        cu = 0x7,
        cv = 0x0,
        cw = 0x1,
        cx = 0x2,
        cy = 0x0,
        cz = 0x1,
        cA = 0x2,
        cB = 0x3,
        cC = 0x4,
        cD = 0x5,
        cE = 0x12c,
        cF = 0x12d,
        cG = 0x12e,
        cH = 0x12f,
        cI = 0x130,
        cJ = 0x131,
        cK = 0x132,
        cL = 0x133,
        cM = 0x3e8,
        cN = 0x3e9,
        cO = 0x3ea,
        cP = 0x3eb,
        cQ = 0x3ec,
        cR = 0x3ed,
        cS = 0x3ee,
        cT = 0x3ef,
        cU = 0x3f0,
        cV = 0x3f1,
        cW = 0x3f2,
        cX = 0x3f3,
        cY = 0x3f4,
        cZ = 0x3f5,
        d0 = 0x3f6,
        d1 = 0x3f7,
        d2 = 0x3f8,
        d3 = 0x3f9,
        d4 = 0x3fa,
        d5 = 0x3fb,
        d6 = 0x3fc,
        d7 = 0x3fd,
        d8 = 0x3fe,
        d9 = 0x3ff,
        da = 0x400,
        db = 0x401,
        dc = d9,
        dd = 0x402,
        de = 0x403,
        df = 0x404,
        dg = 0x83f0,
        dh = 0x83f1,
        di = 0x83f2,
        dj = 0x83f3,
        dk = 0x8c00,
        dl = 0x8c01,
        dm = 0x8c02,
        dn = 0x8c03,
        dp = 0x8d64,
        dq = 0x93b0,
        dr = 0x93b1,
        ds = 0x93b2,
        dt = 0x93b3,
        du = 0x93b4,
        dv = 0x93b5,
        dw = 0x93b6,
        dx = 0x93b7,
        dy = 0x93b8,
        dz = 0x93b9,
        dA = 0x93ba,
        dB = 0x93bb,
        dC = 0x93bc,
        dD = 0x93bd,
        dE = 0x898,
        dF = 0x899,
        dG = 0x89a,
        dH = 0x8fc,
        dI = 0x8fd,
        dJ = 0x8fe,
        dK = 0x960,
        dL = 0x961,
        dM = 0x962,
        dN = 0x0,
        dO = 0x1,
        dP = 0x2,
        dQ = 0xbb8,
        dR = 0xbb9,
        dS = 0xbbf,
        dT = 0xbba,
        dU = 0xbbb,
        dV = 0xbbc,
        dW = 0xbbd,
        dX = 0xbbe,
        dY = 0xc80,
        dZ = 0xc81,
        e0 = 0x0,
        e1 = 0x1,
        e2 = {
            'DEG2RAD': Math['PI'] / 0xb4,
            'RAD2DEG': 0xb4 / Math['PI'],
            'generateUUID': function() {
                for (var bf = [], bg = 0x0; bg < 0x100; bg++) bf[bg] = (bg < 0x10 ? '0' : '') + bg['toString'](0x10);
                return function() {
                    var bg = 0xffffffff * Math['random']() | 0x0,
                        bh = 0xffffffff * Math['random']() | 0x0,
                        bi = 0xffffffff * Math['random']() | 0x0,
                        bF = 0xffffffff * Math['random']() | 0x0;
                    return (bf[0xff & bg] + bf[bg >> 0x8 & 0xff] + bf[bg >> 0x10 & 0xff] + bf[bg >> 0x18 & 0xff] + '-' + bf[0xff & bh] + bf[bh >> 0x8 & 0xff] + '-' + bf[bh >> 0x10 & 0xf | 0x40] + bf[bh >> 0x18 & 0xff] + '-' + bf[0x3f & bi | 0x80] + bf[bi >> 0x8 & 0xff] + '-' + bf[bi >> 0x10 & 0xff] + bf[bi >> 0x18 & 0xff] + bf[0xff & bF] + bf[bF >> 0x8 & 0xff] + bf[bF >> 0x10 & 0xff] + bf[bF >> 0x18 & 0xff])['toUpperCase']();
                };
            }(),
            'clamp': function(bf, bg, bh) {
                return Math['max'](bg, Math['min'](bh, bf));
            },
            'euclideanModulo': function(bf, bg) {
                return (bf % bg + bg) % bg;
            },
            'mapLinear': function(bf, bg, bh, bi, bF) {
                return bi + (bf - bg) * (bF - bi) / (bh - bg);
            },
            'lerp': function(bf, bg, bh) {
                return (0x1 - bh) * bf + bh * bg;
            },
            'smoothstep': function(bf, bg, bh) {
                return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * (0x3 - 0x2 * bf);
            },
            'smootherstep': function(bf, bg, bh) {
                return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * bf * (bf * (0x6 * bf - 0xf) + 0xa);
            },
            'randInt': function(bf, bg) {
                return bf + Math['floor'](Math['random']() * (bg - bf + 0x1));
            },
            'randFloat': function(bf, bg) {
                return bf + Math['random']() * (bg - bf);
            },
            'randFloatSpread': function(bf) {
                return bf * (0.5 - Math['random']());
            },
            'degToRad': function(bf) {
                return bf * e2['DEG2RAD'];
            },
            'radToDeg': function(bf) {
                return bf * e2['RAD2DEG'];
            },
            'isPowerOfTwo': function(bf) {
                return 0x0 == (bf & bf - 0x1) && 0x0 !== bf;
            },
            'ceilPowerOfTwo': function(bf) {
                return Math['pow'](0x2, Math['ceil'](Math['log'](bf) / Math['LN2']));
            },
            'floorPowerOfTwo': function(bf) {
                return Math['pow'](0x2, Math['floor'](Math['log'](bf) / Math['LN2']));
            }
        };

    function eC(bf, bg) {
        this['x'] = bf || 0x0, this['y'] = bg || 0x0;
    }

    function eF(bf, bg, bh, bi) {
        this['_x'] = bf || 0x0, this['_y'] = bg || 0x0, this['_z'] = bh || 0x0, this['_w'] = void 0x0 !== bi ? bi : 0x1;
    }

    function eK(bf, bg, bh) {
        this['x'] = bf || 0x0, this['y'] = bg || 0x0, this['z'] = bh || 0x0;
    }

    function eO() {
        this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1], arguments['length'] > 0x0 && console['error']('THREE.Matrix3:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
    }
    Object['defineProperties'](eC['prototype'], {
        'width': {
            'get': function() {
                return this['x'];
            },
            'set': function(bf) {
                this['x'] = bf;
            }
        },
        'height': {
            'get': function() {
                return this['y'];
            },
            'set': function(bf) {
                this['y'] = bf;
            }
        }
    }), Object['assign'](eC['prototype'], {
        'isVector2': !0x0,
        'set': function(bf, bg) {
            return this['x'] = bf, this['y'] = bg, this;
        },
        'setScalar': function(bf) {
            return this['x'] = bf, this['y'] = bf, this;
        },
        'setX': function(bf) {
            return this['x'] = bf, this;
        },
        'setY': function(bf) {
            return this['y'] = bf, this;
        },
        'setComponent': function(bf, bg) {
            switch (bf) {
                case 0x0:
                    this['x'] = bg;
                    break;
                case 0x1:
                    this['y'] = bg;
                    break;
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
            return this;
        },
        'getComponent': function(bf) {
            switch (bf) {
                case 0x0:
                    return this['x'];
                case 0x1:
                    return this['y'];
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
        },
        'clone': function() {
            return new this['constructor'](this['x'], this['y']);
        },
        'copy': function(bf) {
            return this['x'] = bf['x'], this['y'] = bf['y'], this;
        },
        'add': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'), this['addVectors'](bf, bg)) : (this['x'] += bf['x'], this['y'] += bf['y'], this);
        },
        'addScalar': function(bf) {
            return this['x'] += bf, this['y'] += bf, this;
        },
        'addVectors': function(bf, bg) {
            return this['x'] = bf['x'] + bg['x'], this['y'] = bf['y'] + bg['y'], this;
        },
        'addScaledVector': function(bf, bg) {
            return this['x'] += bf['x'] * bg, this['y'] += bf['y'] * bg, this;
        },
        'sub': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'), this['subVectors'](bf, bg)) : (this['x'] -= bf['x'], this['y'] -= bf['y'], this);
        },
        'subScalar': function(bf) {
            return this['x'] -= bf, this['y'] -= bf, this;
        },
        'subVectors': function(bf, bg) {
            return this['x'] = bf['x'] - bg['x'], this['y'] = bf['y'] - bg['y'], this;
        },
        'multiply': function(bf) {
            return this['x'] *= bf['x'], this['y'] *= bf['y'], this;
        },
        'multiplyScalar': function(bf) {
            return this['x'] *= bf, this['y'] *= bf, this;
        },
        'divide': function(bf) {
            return this['x'] /= bf['x'], this['y'] /= bf['y'], this;
        },
        'divideScalar': function(bf) {
            return this['multiplyScalar'](0x1 / bf);
        },
        'applyMatrix3': function(bf) {
            var bg = this['x'],
                bh = this['y'],
                bi = bf['elements'];
            return this['x'] = bi[0x0] * bg + bi[0x3] * bh + bi[0x6], this['y'] = bi[0x1] * bg + bi[0x4] * bh + bi[0x7], this;
        },
        'min': function(bf) {
            return this['x'] = Math['min'](this['x'], bf['x']), this['y'] = Math['min'](this['y'], bf['y']), this;
        },
        'max': function(bf) {
            return this['x'] = Math['max'](this['x'], bf['x']), this['y'] = Math['max'](this['y'], bf['y']), this;
        },
        'clamp': function(bf, bg) {
            return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])), this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])), this;
        },
        'clampScalar': function(bf, bg) {
            return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])), this['y'] = Math['max'](bf, Math['min'](bg, this['y'])), this;
        },
        'clampLength': function(bf, bg) {
            var bh = this['length']();
            return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
        },
        'floor': function() {
            return this['x'] = Math['floor'](this['x']), this['y'] = Math['floor'](this['y']), this;
        },
        'ceil': function() {
            return this['x'] = Math['ceil'](this['x']), this['y'] = Math['ceil'](this['y']), this;
        },
        'round': function() {
            return this['x'] = Math['round'](this['x']), this['y'] = Math['round'](this['y']), this;
        },
        'roundToZero': function() {
            return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']), this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']), this;
        },
        'negate': function() {
            return this['x'] = -this['x'], this['y'] = -this['y'], this;
        },
        'dot': function(bf) {
            return this['x'] * bf['x'] + this['y'] * bf['y'];
        },
        'cross': function(bf) {
            return this['x'] * bf['y'] - this['y'] * bf['x'];
        },
        'lengthSq': function() {
            return this['x'] * this['x'] + this['y'] * this['y'];
        },
        'length': function() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y']);
        },
        'manhattanLength': function() {
            return Math['abs'](this['x']) + Math['abs'](this['y']);
        },
        'normalize': function() {
            return this['divideScalar'](this['length']() || 0x1);
        },
        'angle': function() {
            var bf = Math['atan2'](this['y'], this['x']);
            return bf < 0x0 && (bf += 0x2 * Math['PI']), bf;
        },
        'distanceTo': function(bf) {
            return Math['sqrt'](this['distanceToSquared'](bf));
        },
        'distanceToSquared': function(bf) {
            var bg = this['x'] - bf['x'],
                bh = this['y'] - bf['y'];
            return bg * bg + bh * bh;
        },
        'manhattanDistanceTo': function(bf) {
            return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']);
        },
        'setLength': function(bf) {
            return this['normalize']()['multiplyScalar'](bf);
        },
        'lerp': function(bf, bg) {
            return this['x'] += (bf['x'] - this['x']) * bg, this['y'] += (bf['y'] - this['y']) * bg, this;
        },
        'lerpVectors': function(bf, bg, bh) {
            return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
        },
        'equals': function(bf) {
            return bf['x'] === this['x'] && bf['y'] === this['y'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0), this['x'] = bf[bg], this['y'] = bf[bg + 0x1], this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['x'], bf[bg + 0x1] = this['y'], bf;
        },
        'fromBufferAttribute': function(bf, bg, bh) {
            return void 0x0 !== bh && console['warn']('THREE.Vector2:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'), this['x'] = bf['getX'](bg), this['y'] = bf['getY'](bg), this;
        },
        'rotateAround': function(bf, bg) {
            var bh = Math['cos'](bg),
                bi = Math['sin'](bg),
                bF = this['x'] - bf['x'],
                bG = this['y'] - bf['y'];
            return this['x'] = bF * bh - bG * bi + bf['x'], this['y'] = bF * bi + bG * bh + bf['y'], this;
        }
    }), Object['assign'](eF, {
        'slerp': function(bf, bg, bh, bi) {
            return bh['copy'](bf)['slerp'](bg, bi);
        },
        'slerpFlat': function(bf, bg, bh, bi, bF, bG, bH) {
            var bI = bh[bi + 0x0],
                bJ = bh[bi + 0x1],
                bK = bh[bi + 0x2],
                bL = bh[bi + 0x3],
                bM = bF[bG + 0x0],
                bN = bF[bG + 0x1],
                bO = bF[bG + 0x2],
                bP = bF[bG + 0x3];
            if (bL !== bP || bI !== bM || bJ !== bN || bK !== bO) {
                var bQ = 0x1 - bH,
                    bR = bI * bM + bJ * bN + bK * bO + bL * bP,
                    bS = bR >= 0x0 ? 0x1 : -0x1,
                    bT = 0x1 - bR * bR;
                if (bT > Number['EPSILON']) {
                    var bU = Math['sqrt'](bT),
                        bV = Math['atan2'](bU, bR * bS);
                    bQ = Math['sin'](bQ * bV) / bU, bH = Math['sin'](bH * bV) / bU;
                }
                var bW = bH * bS;
                if (bI = bI * bQ + bM * bW, bJ = bJ * bQ + bN * bW, bK = bK * bQ + bO * bW, bL = bL * bQ + bP * bW, bQ === 0x1 - bH) {
                    var bX = 0x1 / Math['sqrt'](bI * bI + bJ * bJ + bK * bK + bL * bL);
                    bI *= bX, bJ *= bX, bK *= bX, bL *= bX;
                }
            }
            bf[bg] = bI, bf[bg + 0x1] = bJ, bf[bg + 0x2] = bK, bf[bg + 0x3] = bL;
        }
    }), Object['defineProperties'](eF['prototype'], {
        'x': {
            'get': function() {
                return this['_x'];
            },
            'set': function(bf) {
                this['_x'] = bf, this['onChangeCallback']();
            }
        },
        'y': {
            'get': function() {
                return this['_y'];
            },
            'set': function(bf) {
                this['_y'] = bf, this['onChangeCallback']();
            }
        },
        'z': {
            'get': function() {
                return this['_z'];
            },
            'set': function(bf) {
                this['_z'] = bf, this['onChangeCallback']();
            }
        },
        'w': {
            'get': function() {
                return this['_w'];
            },
            'set': function(bf) {
                this['_w'] = bf, this['onChangeCallback']();
            }
        }
    }), Object['assign'](eF['prototype'], {
        'isQuaternion': !0x0,
        'set': function(bf, bg, bh, bi) {
            return this['_x'] = bf, this['_y'] = bg, this['_z'] = bh, this['_w'] = bi, this['onChangeCallback'](), this;
        },
        'clone': function() {
            return new this['constructor'](this['_x'], this['_y'], this['_z'], this['_w']);
        },
        'copy': function(bf) {
            return this['_x'] = bf['x'], this['_y'] = bf['y'], this['_z'] = bf['z'], this['_w'] = bf['w'], this['onChangeCallback'](), this;
        },
        'setFromEuler': function(bf, bg) {
            if (!bf || !bf['isEuler']) throw new Error('THREE.Quaternion:\x20.setFromEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
            var bh = bf['_x'],
                bi = bf['_y'],
                bF = bf['_z'],
                bG = bf['order'],
                bH = Math['cos'],
                bI = Math['sin'],
                bJ = bH(bh / 0x2),
                bK = bH(bi / 0x2),
                bL = bH(bF / 0x2),
                bM = bI(bh / 0x2),
                bN = bI(bi / 0x2),
                bO = bI(bF / 0x2);
            return 'XYZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO, this['_y'] = bJ * bN * bL - bM * bK * bO, this['_z'] = bJ * bK * bO + bM * bN * bL, this['_w'] = bJ * bK * bL - bM * bN * bO) : 'YXZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO, this['_y'] = bJ * bN * bL - bM * bK * bO, this['_z'] = bJ * bK * bO - bM * bN * bL, this['_w'] = bJ * bK * bL + bM * bN * bO) : 'ZXY' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO, this['_y'] = bJ * bN * bL + bM * bK * bO, this['_z'] = bJ * bK * bO + bM * bN * bL, this['_w'] = bJ * bK * bL - bM * bN * bO) : 'ZYX' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO, this['_y'] = bJ * bN * bL + bM * bK * bO, this['_z'] = bJ * bK * bO - bM * bN * bL, this['_w'] = bJ * bK * bL + bM * bN * bO) : 'YZX' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO, this['_y'] = bJ * bN * bL + bM * bK * bO, this['_z'] = bJ * bK * bO - bM * bN * bL, this['_w'] = bJ * bK * bL - bM * bN * bO) : 'XZY' === bG && (this['_x'] = bM * bK * bL - bJ * bN * bO, this['_y'] = bJ * bN * bL - bM * bK * bO, this['_z'] = bJ * bK * bO + bM * bN * bL, this['_w'] = bJ * bK * bL + bM * bN * bO), !0x1 !== bg && this['onChangeCallback'](), this;
        },
        'setFromAxisAngle': function(bf, bg) {
            var bh = bg / 0x2,
                bi = Math['sin'](bh);
            return this['_x'] = bf['x'] * bi, this['_y'] = bf['y'] * bi, this['_z'] = bf['z'] * bi, this['_w'] = Math['cos'](bh), this['onChangeCallback'](), this;
        },
        'setFromRotationMatrix': function(bf) {
            var bg, bh = bf['elements'],
                bi = bh[0x0],
                bF = bh[0x4],
                bG = bh[0x8],
                bH = bh[0x1],
                bI = bh[0x5],
                bJ = bh[0x9],
                bK = bh[0x2],
                bL = bh[0x6],
                bM = bh[0xa],
                bN = bi + bI + bM;
            return bN > 0x0 ? (bg = 0.5 / Math['sqrt'](bN + 0x1), this['_w'] = 0.25 / bg, this['_x'] = (bL - bJ) * bg, this['_y'] = (bG - bK) * bg, this['_z'] = (bH - bF) * bg) : bi > bI && bi > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bi - bI - bM), this['_w'] = (bL - bJ) / bg, this['_x'] = 0.25 * bg, this['_y'] = (bF + bH) / bg, this['_z'] = (bG + bK) / bg) : bI > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bI - bi - bM), this['_w'] = (bG - bK) / bg, this['_x'] = (bF + bH) / bg, this['_y'] = 0.25 * bg, this['_z'] = (bJ + bL) / bg) : (bg = 0x2 * Math['sqrt'](0x1 + bM - bi - bI), this['_w'] = (bH - bF) / bg, this['_x'] = (bG + bK) / bg, this['_y'] = (bJ + bL) / bg, this['_z'] = 0.25 * bg), this['onChangeCallback'](), this;
        },
        'setFromUnitVectors': function(bf, bg) {
            var bh = bf['dot'](bg) + 0x1;
            return bh < 0.000001 ? (bh = 0x0, Math['abs'](bf['x']) > Math['abs'](bf['z']) ? (this['_x'] = -bf['y'], this['_y'] = bf['x'], this['_z'] = 0x0, this['_w'] = bh) : (this['_x'] = 0x0, this['_y'] = -bf['z'], this['_z'] = bf['y'], this['_w'] = bh)) : (this['_x'] = bf['y'] * bg['z'] - bf['z'] * bg['y'], this['_y'] = bf['z'] * bg['x'] - bf['x'] * bg['z'], this['_z'] = bf['x'] * bg['y'] - bf['y'] * bg['x'], this['_w'] = bh), this['normalize']();
        },
        'angleTo': function(bf) {
            return 0x2 * Math['acos'](Math['abs'](e2['clamp'](this['dot'](bf), -0x1, 0x1)));
        },
        'rotateTowards': function(bf, bg) {
            var bh = this['angleTo'](bf);
            if (0x0 === bh) return this;
            var bi = Math['min'](0x1, bg / bh);
            return this['slerp'](bf, bi), this;
        },
        'inverse': function() {
            return this['conjugate']();
        },
        'conjugate': function() {
            return this['_x'] *= -0x1, this['_y'] *= -0x1, this['_z'] *= -0x1, this['onChangeCallback'](), this;
        },
        'dot': function(bf) {
            return this['_x'] * bf['_x'] + this['_y'] * bf['_y'] + this['_z'] * bf['_z'] + this['_w'] * bf['_w'];
        },
        'lengthSq': function() {
            return this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w'];
        },
        'length': function() {
            return Math['sqrt'](this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w']);
        },
        'normalize': function() {
            var bf = this['length']();
            return 0x0 === bf ? (this['_x'] = 0x0, this['_y'] = 0x0, this['_z'] = 0x0, this['_w'] = 0x1) : (bf = 0x1 / bf, this['_x'] = this['_x'] * bf, this['_y'] = this['_y'] * bf, this['_z'] = this['_z'] * bf, this['_w'] = this['_w'] * bf), this['onChangeCallback'](), this;
        },
        'multiply': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Quaternion:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyQuaternions(\x20a,\x20b\x20)\x20instead.'), this['multiplyQuaternions'](bf, bg)) : this['multiplyQuaternions'](this, bf);
        },
        'premultiply': function(bf) {
            return this['multiplyQuaternions'](bf, this);
        },
        'multiplyQuaternions': function(bf, bg) {
            var bh = bf['_x'],
                bi = bf['_y'],
                bF = bf['_z'],
                bG = bf['_w'],
                bH = bg['_x'],
                bI = bg['_y'],
                bJ = bg['_z'],
                bK = bg['_w'];
            return this['_x'] = bh * bK + bG * bH + bi * bJ - bF * bI, this['_y'] = bi * bK + bG * bI + bF * bH - bh * bJ, this['_z'] = bF * bK + bG * bJ + bh * bI - bi * bH, this['_w'] = bG * bK - bh * bH - bi * bI - bF * bJ, this['onChangeCallback'](), this;
        },
        'slerp': function(bf, bg) {
            if (0x0 === bg) return this;
            if (0x1 === bg) return this['copy'](bf);
            var bh = this['_x'],
                bi = this['_y'],
                bF = this['_z'],
                bG = this['_w'],
                bH = bG * bf['_w'] + bh * bf['_x'] + bi * bf['_y'] + bF * bf['_z'];
            if (bH < 0x0 ? (this['_w'] = -bf['_w'], this['_x'] = -bf['_x'], this['_y'] = -bf['_y'], this['_z'] = -bf['_z'], bH = -bH) : this['copy'](bf), bH >= 0x1) return this['_w'] = bG, this['_x'] = bh, this['_y'] = bi, this['_z'] = bF, this;
            var bI = 0x1 - bH * bH;
            if (bI <= Number['EPSILON']) {
                var bJ = 0x1 - bg;
                return this['_w'] = bJ * bG + bg * this['_w'], this['_x'] = bJ * bh + bg * this['_x'], this['_y'] = bJ * bi + bg * this['_y'], this['_z'] = bJ * bF + bg * this['_z'], this['normalize']();
            }
            var bK = Math['sqrt'](bI),
                bL = Math['atan2'](bK, bH),
                bM = Math['sin']((0x1 - bg) * bL) / bK,
                bN = Math['sin'](bg * bL) / bK;
            return this['_w'] = bG * bM + this['_w'] * bN, this['_x'] = bh * bM + this['_x'] * bN, this['_y'] = bi * bM + this['_y'] * bN, this['_z'] = bF * bM + this['_z'] * bN, this['onChangeCallback'](), this;
        },
        'equals': function(bf) {
            return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_w'] === this['_w'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0), this['_x'] = bf[bg], this['_y'] = bf[bg + 0x1], this['_z'] = bf[bg + 0x2], this['_w'] = bf[bg + 0x3], this['onChangeCallback'](), this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['_x'], bf[bg + 0x1] = this['_y'], bf[bg + 0x2] = this['_z'], bf[bg + 0x3] = this['_w'], bf;
        },
        'onChange': function(bf) {
            return this['onChangeCallback'] = bf, this;
        },
        'onChangeCallback': function() {}
    }), Object['assign'](eK['prototype'], {
        'isVector3': !0x0,
        'set': function(bf, bg, bh) {
            return this['x'] = bf, this['y'] = bg, this['z'] = bh, this;
        },
        'setScalar': function(bf) {
            return this['x'] = bf, this['y'] = bf, this['z'] = bf, this;
        },
        'setX': function(bf) {
            return this['x'] = bf, this;
        },
        'setY': function(bf) {
            return this['y'] = bf, this;
        },
        'setZ': function(bf) {
            return this['z'] = bf, this;
        },
        'setComponent': function(bf, bg) {
            switch (bf) {
                case 0x0:
                    this['x'] = bg;
                    break;
                case 0x1:
                    this['y'] = bg;
                    break;
                case 0x2:
                    this['z'] = bg;
                    break;
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
            return this;
        },
        'getComponent': function(bf) {
            switch (bf) {
                case 0x0:
                    return this['x'];
                case 0x1:
                    return this['y'];
                case 0x2:
                    return this['z'];
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
        },
        'clone': function() {
            return new this['constructor'](this['x'], this['y'], this['z']);
        },
        'copy': function(bf) {
            return this['x'] = bf['x'], this['y'] = bf['y'], this['z'] = bf['z'], this;
        },
        'add': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'), this['addVectors'](bf, bg)) : (this['x'] += bf['x'], this['y'] += bf['y'], this['z'] += bf['z'], this);
        },
        'addScalar': function(bf) {
            return this['x'] += bf, this['y'] += bf, this['z'] += bf, this;
        },
        'addVectors': function(bf, bg) {
            return this['x'] = bf['x'] + bg['x'], this['y'] = bf['y'] + bg['y'], this['z'] = bf['z'] + bg['z'], this;
        },
        'addScaledVector': function(bf, bg) {
            return this['x'] += bf['x'] * bg, this['y'] += bf['y'] * bg, this['z'] += bf['z'] * bg, this;
        },
        'sub': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'), this['subVectors'](bf, bg)) : (this['x'] -= bf['x'], this['y'] -= bf['y'], this['z'] -= bf['z'], this);
        },
        'subScalar': function(bf) {
            return this['x'] -= bf, this['y'] -= bf, this['z'] -= bf, this;
        },
        'subVectors': function(bf, bg) {
            return this['x'] = bf['x'] - bg['x'], this['y'] = bf['y'] - bg['y'], this['z'] = bf['z'] - bg['z'], this;
        },
        'multiply': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyVectors(\x20a,\x20b\x20)\x20instead.'), this['multiplyVectors'](bf, bg)) : (this['x'] *= bf['x'], this['y'] *= bf['y'], this['z'] *= bf['z'], this);
        },
        'multiplyScalar': function(bf) {
            return this['x'] *= bf, this['y'] *= bf, this['z'] *= bf, this;
        },
        'multiplyVectors': function(bf, bg) {
            return this['x'] = bf['x'] * bg['x'], this['y'] = bf['y'] * bg['y'], this['z'] = bf['z'] * bg['z'], this;
        },
        'applyEuler': (bG = new eF(), function(bf) {
            return bf && bf['isEuler'] || console['error']('THREE.Vector3:\x20.applyEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.'), this['applyQuaternion'](bG['setFromEuler'](bf));
        }),
        'applyAxisAngle': function() {
            var bf = new eF();
            return function(bg, bh) {
                return this['applyQuaternion'](bf['setFromAxisAngle'](bg, bh));
            };
        }(),
        'applyMatrix3': function(bf) {
            var bg = this['x'],
                bh = this['y'],
                bi = this['z'],
                bF = bf['elements'];
            return this['x'] = bF[0x0] * bg + bF[0x3] * bh + bF[0x6] * bi, this['y'] = bF[0x1] * bg + bF[0x4] * bh + bF[0x7] * bi, this['z'] = bF[0x2] * bg + bF[0x5] * bh + bF[0x8] * bi, this;
        },
        'applyMatrix4': function(bf) {
            var bg = this['x'],
                bh = this['y'],
                bi = this['z'],
                bF = bf['elements'],
                bG = 0x1 / (bF[0x3] * bg + bF[0x7] * bh + bF[0xb] * bi + bF[0xf]);
            return this['x'] = (bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi + bF[0xc]) * bG, this['y'] = (bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi + bF[0xd]) * bG, this['z'] = (bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi + bF[0xe]) * bG, this;
        },
        'applyQuaternion': function(bf) {
            var bg = this['x'],
                bh = this['y'],
                bi = this['z'],
                bF = bf['x'],
                bG = bf['y'],
                bH = bf['z'],
                bI = bf['w'],
                bJ = bI * bg + bG * bi - bH * bh,
                bK = bI * bh + bH * bg - bF * bi,
                bL = bI * bi + bF * bh - bG * bg,
                bM = -bF * bg - bG * bh - bH * bi;
            return this['x'] = bJ * bI + bM * -bF + bK * -bH - bL * -bG, this['y'] = bK * bI + bM * -bG + bL * -bF - bJ * -bH, this['z'] = bL * bI + bM * -bH + bJ * -bG - bK * -bF, this;
        },
        'project': function(bf) {
            return this['applyMatrix4'](bf['matrixWorldInverse'])['applyMatrix4'](bf['projectionMatrix']);
        },
        'unproject': function(bf) {
            return this['applyMatrix4'](bf['projectionMatrixInverse'])['applyMatrix4'](bf['matrixWorld']);
        },
        'transformDirection': function(bf) {
            var bg = this['x'],
                bh = this['y'],
                bi = this['z'],
                bF = bf['elements'];
            return this['x'] = bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi, this['y'] = bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi, this['z'] = bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi, this['normalize']();
        },
        'divide': function(bf) {
            return this['x'] /= bf['x'], this['y'] /= bf['y'], this['z'] /= bf['z'], this;
        },
        'divideScalar': function(bf) {
            return this['multiplyScalar'](0x1 / bf);
        },
        'min': function(bf) {
            return this['x'] = Math['min'](this['x'], bf['x']), this['y'] = Math['min'](this['y'], bf['y']), this['z'] = Math['min'](this['z'], bf['z']), this;
        },
        'max': function(bf) {
            return this['x'] = Math['max'](this['x'], bf['x']), this['y'] = Math['max'](this['y'], bf['y']), this['z'] = Math['max'](this['z'], bf['z']), this;
        },
        'clamp': function(bf, bg) {
            return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])), this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])), this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])), this;
        },
        'clampScalar': function(bf, bg) {
            return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])), this['y'] = Math['max'](bf, Math['min'](bg, this['y'])), this['z'] = Math['max'](bf, Math['min'](bg, this['z'])), this;
        },
        'clampLength': function(bf, bg) {
            var bh = this['length']();
            return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
        },
        'floor': function() {
            return this['x'] = Math['floor'](this['x']), this['y'] = Math['floor'](this['y']), this['z'] = Math['floor'](this['z']), this;
        },
        'ceil': function() {
            return this['x'] = Math['ceil'](this['x']), this['y'] = Math['ceil'](this['y']), this['z'] = Math['ceil'](this['z']), this;
        },
        'round': function() {
            return this['x'] = Math['round'](this['x']), this['y'] = Math['round'](this['y']), this['z'] = Math['round'](this['z']), this;
        },
        'roundToZero': function() {
            return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']), this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']), this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']), this;
        },
        'negate': function() {
            return this['x'] = -this['x'], this['y'] = -this['y'], this['z'] = -this['z'], this;
        },
        'dot': function(bf) {
            return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'];
        },
        'lengthSq': function() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'];
        },
        'length': function() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z']);
        },
        'manhattanLength': function() {
            return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']);
        },
        'normalize': function() {
            return this['divideScalar'](this['length']() || 0x1);
        },
        'setLength': function(bf) {
            return this['normalize']()['multiplyScalar'](bf);
        },
        'lerp': function(bf, bg) {
            return this['x'] += (bf['x'] - this['x']) * bg, this['y'] += (bf['y'] - this['y']) * bg, this['z'] += (bf['z'] - this['z']) * bg, this;
        },
        'lerpVectors': function(bf, bg, bh) {
            return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
        },
        'cross': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.cross()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.crossVectors(\x20a,\x20b\x20)\x20instead.'), this['crossVectors'](bf, bg)) : this['crossVectors'](this, bf);
        },
        'crossVectors': function(bf, bg) {
            var bh = bf['x'],
                bi = bf['y'],
                bF = bf['z'],
                bG = bg['x'],
                bH = bg['y'],
                bI = bg['z'];
            return this['x'] = bi * bI - bF * bH, this['y'] = bF * bG - bh * bI, this['z'] = bh * bH - bi * bG, this;
        },
        'projectOnVector': function(bf) {
            var bg = bf['dot'](this) / bf['lengthSq']();
            return this['copy'](bf)['multiplyScalar'](bg);
        },
        'projectOnPlane': (bF = new eK(), function(bf) {
            return bF['copy'](this)['projectOnVector'](bf), this['sub'](bF);
        }),
        'reflect': function() {
            var bf = new eK();
            return function(bg) {
                return this['sub'](bf['copy'](bg)['multiplyScalar'](0x2 * this['dot'](bg)));
            };
        }(),
        'angleTo': function(bf) {
            var bg = this['dot'](bf) / Math['sqrt'](this['lengthSq']() * bf['lengthSq']());
            return Math['acos'](e2['clamp'](bg, -0x1, 0x1));
        },
        'distanceTo': function(bf) {
            return Math['sqrt'](this['distanceToSquared'](bf));
        },
        'distanceToSquared': function(bf) {
            var bg = this['x'] - bf['x'],
                bh = this['y'] - bf['y'],
                bi = this['z'] - bf['z'];
            return bg * bg + bh * bh + bi * bi;
        },
        'manhattanDistanceTo': function(bf) {
            return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']) + Math['abs'](this['z'] - bf['z']);
        },
        'setFromSpherical': function(bf) {
            return this['setFromSphericalCoords'](bf['radius'], bf['phi'], bf['theta']);
        },
        'setFromSphericalCoords': function(bf, bg, bh) {
            var bi = Math['sin'](bg) * bf;
            return this['x'] = bi * Math['sin'](bh), this['y'] = Math['cos'](bg) * bf, this['z'] = bi * Math['cos'](bh), this;
        },
        'setFromCylindrical': function(bf) {
            return this['setFromCylindricalCoords'](bf['radius'], bf['theta'], bf['y']);
        },
        'setFromCylindricalCoords': function(bf, bg, bh) {
            return this['x'] = bf * Math['sin'](bg), this['y'] = bh, this['z'] = bf * Math['cos'](bg), this;
        },
        'setFromMatrixPosition': function(bf) {
            var bg = bf['elements'];
            return this['x'] = bg[0xc], this['y'] = bg[0xd], this['z'] = bg[0xe], this;
        },
        'setFromMatrixScale': function(bf) {
            var bg = this['setFromMatrixColumn'](bf, 0x0)['length'](),
                bh = this['setFromMatrixColumn'](bf, 0x1)['length'](),
                bi = this['setFromMatrixColumn'](bf, 0x2)['length']();
            return this['x'] = bg, this['y'] = bh, this['z'] = bi, this;
        },
        'setFromMatrixColumn': function(bf, bg) {
            return this['fromArray'](bf['elements'], 0x4 * bg);
        },
        'equals': function(bf) {
            return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0), this['x'] = bf[bg], this['y'] = bf[bg + 0x1], this['z'] = bf[bg + 0x2], this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['x'], bf[bg + 0x1] = this['y'], bf[bg + 0x2] = this['z'], bf;
        },
        'fromBufferAttribute': function(bf, bg, bh) {
            return void 0x0 !== bh && console['warn']('THREE.Vector3:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'), this['x'] = bf['getX'](bg), this['y'] = bf['getY'](bg), this['z'] = bf['getZ'](bg), this;
        }
    }), Object['assign'](eO['prototype'], {
        'isMatrix3': !0x0,
        'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
            var bK = this['elements'];
            return bK[0x0] = bf, bK[0x1] = bi, bK[0x2] = bH, bK[0x3] = bg, bK[0x4] = bF, bK[0x5] = bI, bK[0x6] = bh, bK[0x7] = bG, bK[0x8] = bJ, this;
        },
        'identity': function() {
            return this['set'](0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1), this;
        },
        'clone': function() {
            return new this['constructor']()['fromArray'](this['elements']);
        },
        'copy': function(bf) {
            var bg = this['elements'],
                bh = bf['elements'];
            return bg[0x0] = bh[0x0], bg[0x1] = bh[0x1], bg[0x2] = bh[0x2], bg[0x3] = bh[0x3], bg[0x4] = bh[0x4], bg[0x5] = bh[0x5], bg[0x6] = bh[0x6], bg[0x7] = bh[0x7], bg[0x8] = bh[0x8], this;
        },
        'setFromMatrix4': function(bf) {
            var bg = bf['elements'];
            return this['set'](bg[0x0], bg[0x4], bg[0x8], bg[0x1], bg[0x5], bg[0x9], bg[0x2], bg[0x6], bg[0xa]), this;
        },
        'applyToBufferAttribute': function() {
            var bf = new eK();
            return function(bg) {
                for (var bh = 0x0, bi = bg['count']; bh < bi; bh++) bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['applyMatrix3'](this), bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
                return bg;
            };
        }(),
        'multiply': function(bf) {
            return this['multiplyMatrices'](this, bf);
        },
        'premultiply': function(bf) {
            return this['multiplyMatrices'](bf, this);
        },
        'multiplyMatrices': function(bf, bg) {
            var bh = bf['elements'],
                bi = bg['elements'],
                bF = this['elements'],
                bG = bh[0x0],
                bH = bh[0x3],
                bI = bh[0x6],
                bJ = bh[0x1],
                bK = bh[0x4],
                bL = bh[0x7],
                bM = bh[0x2],
                bN = bh[0x5],
                bO = bh[0x8],
                bP = bi[0x0],
                bQ = bi[0x3],
                bR = bi[0x6],
                bS = bi[0x1],
                bT = bi[0x4],
                bU = bi[0x7],
                bV = bi[0x2],
                bW = bi[0x5],
                bX = bi[0x8];
            return bF[0x0] = bG * bP + bH * bS + bI * bV, bF[0x3] = bG * bQ + bH * bT + bI * bW, bF[0x6] = bG * bR + bH * bU + bI * bX, bF[0x1] = bJ * bP + bK * bS + bL * bV, bF[0x4] = bJ * bQ + bK * bT + bL * bW, bF[0x7] = bJ * bR + bK * bU + bL * bX, bF[0x2] = bM * bP + bN * bS + bO * bV, bF[0x5] = bM * bQ + bN * bT + bO * bW, bF[0x8] = bM * bR + bN * bU + bO * bX, this;
        },
        'multiplyScalar': function(bf) {
            var bg = this['elements'];
            return bg[0x0] *= bf, bg[0x3] *= bf, bg[0x6] *= bf, bg[0x1] *= bf, bg[0x4] *= bf, bg[0x7] *= bf, bg[0x2] *= bf, bg[0x5] *= bf, bg[0x8] *= bf, this;
        },
        'determinant': function() {
            var bf = this['elements'],
                bg = bf[0x0],
                bh = bf[0x1],
                bi = bf[0x2],
                bF = bf[0x3],
                bG = bf[0x4],
                bH = bf[0x5],
                bI = bf[0x6],
                bJ = bf[0x7],
                bK = bf[0x8];
            return bg * bG * bK - bg * bH * bJ - bh * bF * bK + bh * bH * bI + bi * bF * bJ - bi * bG * bI;
        },
        'getInverse': function(bf, bg) {
            bf && bf['isMatrix4'] && console['error']('THREE.Matrix3:\x20.getInverse()\x20no\x20longer\x20takes\x20a\x20Matrix4\x20argument.');
            var bh = bf['elements'],
                bi = this['elements'],
                bF = bh[0x0],
                bG = bh[0x1],
                bH = bh[0x2],
                bI = bh[0x3],
                bJ = bh[0x4],
                bK = bh[0x5],
                bL = bh[0x6],
                bM = bh[0x7],
                bN = bh[0x8],
                bO = bN * bJ - bK * bM,
                bP = bK * bL - bN * bI,
                bQ = bM * bI - bJ * bL,
                bR = bF * bO + bG * bP + bH * bQ;
            if (0x0 === bR) {
                var bS = 'THREE.Matrix3:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
                if (!0x0 === bg) throw new Error(bS);
                return console['warn'](bS), this['identity']();
            }
            var bT = 0x1 / bR;
            return bi[0x0] = bO * bT, bi[0x1] = (bH * bM - bN * bG) * bT, bi[0x2] = (bK * bG - bH * bJ) * bT, bi[0x3] = bP * bT, bi[0x4] = (bN * bF - bH * bL) * bT, bi[0x5] = (bH * bI - bK * bF) * bT, bi[0x6] = bQ * bT, bi[0x7] = (bG * bL - bM * bF) * bT, bi[0x8] = (bJ * bF - bG * bI) * bT, this;
        },
        'transpose': function() {
            var bf, bg = this['elements'];
            return bf = bg[0x1], bg[0x1] = bg[0x3], bg[0x3] = bf, bf = bg[0x2], bg[0x2] = bg[0x6], bg[0x6] = bf, bf = bg[0x5], bg[0x5] = bg[0x7], bg[0x7] = bf, this;
        },
        'getNormalMatrix': function(bf) {
            return this['setFromMatrix4'](bf)['getInverse'](this)['transpose']();
        },
        'transposeIntoArray': function(bf) {
            var bg = this['elements'];
            return bf[0x0] = bg[0x0], bf[0x1] = bg[0x3], bf[0x2] = bg[0x6], bf[0x3] = bg[0x1], bf[0x4] = bg[0x4], bf[0x5] = bg[0x7], bf[0x6] = bg[0x2], bf[0x7] = bg[0x5], bf[0x8] = bg[0x8], this;
        },
        'setUvTransform': function(bf, bg, bh, bi, bF, bG, bH) {
            var bI = Math['cos'](bF),
                bJ = Math['sin'](bF);
            this['set'](bh * bI, bh * bJ, -bh * (bI * bG + bJ * bH) + bG + bf, -bi * bJ, bi * bI, -bi * (-bJ * bG + bI * bH) + bH + bg, 0x0, 0x0, 0x1);
        },
        'scale': function(bf, bg) {
            var bh = this['elements'];
            return bh[0x0] *= bf, bh[0x3] *= bf, bh[0x6] *= bf, bh[0x1] *= bg, bh[0x4] *= bg, bh[0x7] *= bg, this;
        },
        'rotate': function(bf) {
            var bg = Math['cos'](bf),
                bh = Math['sin'](bf),
                bi = this['elements'],
                bF = bi[0x0],
                bG = bi[0x3],
                bH = bi[0x6],
                bI = bi[0x1],
                bJ = bi[0x4],
                bK = bi[0x7];
            return bi[0x0] = bg * bF + bh * bI, bi[0x3] = bg * bG + bh * bJ, bi[0x6] = bg * bH + bh * bK, bi[0x1] = -bh * bF + bg * bI, bi[0x4] = -bh * bG + bg * bJ, bi[0x7] = -bh * bH + bg * bK, this;
        },
        'translate': function(bf, bg) {
            var bh = this['elements'];
            return bh[0x0] += bf * bh[0x2], bh[0x3] += bf * bh[0x5], bh[0x6] += bf * bh[0x8], bh[0x1] += bg * bh[0x2], bh[0x4] += bg * bh[0x5], bh[0x7] += bg * bh[0x8], this;
        },
        'equals': function(bf) {
            for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x9; bi++)
                if (bg[bi] !== bh[bi]) return !0x1;
            return !0x0;
        },
        'fromArray': function(bf, bg) {
            void 0x0 === bg && (bg = 0x0);
            for (var bh = 0x0; bh < 0x9; bh++) this['elements'][bh] = bf[bh + bg];
            return this;
        },
        'toArray': function(bf, bg) {
            void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0);
            var bh = this['elements'];
            return bf[bg] = bh[0x0], bf[bg + 0x1] = bh[0x1], bf[bg + 0x2] = bh[0x2], bf[bg + 0x3] = bh[0x3], bf[bg + 0x4] = bh[0x4], bf[bg + 0x5] = bh[0x5], bf[bg + 0x6] = bh[0x6], bf[bg + 0x7] = bh[0x7], bf[bg + 0x8] = bh[0x8], bf;
        }
    });
    var lD, lE, lF, lG, lH, lI, lJ, lK, lL, lM, lN, lO, lP, lQ, lR = {
            'getDataURL': function(bf) {
                var bg;
                if ('undefined' == typeof HTMLCanvasElement) return bf['src'];
                if (bf instanceof HTMLCanvasElement) bg = bf;
                else {
                    void 0x0 === bH && (bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas')), bH['width'] = bf['width'], bH['height'] = bf['height'];
                    var bh = bH['getContext']('2d');
                    bf instanceof ImageData ? bh['putImageData'](bf, 0x0, 0x0) : bh['drawImage'](bf, 0x0, 0x0, bf['width'], bf['height']), bg = bH;
                }
                return bg['width'] > 0x800 || bg['height'] > 0x800 ? bg['toDataURL']('image/jpeg', 0.6) : bg['toDataURL']('image/png');
            }
        },
        lS = 0x0;

    function lW(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
        Object['defineProperty'](this, 'id', {
            'value': lS++
        }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['image'] = void 0x0 !== bf ? bf : lW['DEFAULT_IMAGE'], this['mipmaps'] = [], this['mapping'] = void 0x0 !== bg ? bg : lW['DEFAULT_MAPPING'], this['wrapS'] = void 0x0 !== bh ? bh : cN, this['wrapT'] = void 0x0 !== bi ? bi : cN, this['magFilter'] = void 0x0 !== bF ? bF : cS, this['minFilter'] = void 0x0 !== bG ? bG : cU, this['anisotropy'] = void 0x0 !== bJ ? bJ : 0x1, this['format'] = void 0x0 !== bH ? bH : d9, this['type'] = void 0x0 !== bI ? bI : cV, this['offset'] = new eC(0x0, 0x0), this['repeat'] = new eC(0x1, 0x1), this['center'] = new eC(0x0, 0x0), this['rotation'] = 0x0, this['matrixAutoUpdate'] = !0x0, this['matrix'] = new eO(), this['generateMipmaps'] = !0x0, this['premultiplyAlpha'] = !0x1, this['flipY'] = !0x0, this['unpackAlignment'] = 0x4, this['encoding'] = void 0x0 !== bK ? bK : dQ, this['version'] = 0x0, this['onUpdate'] = null;
    }

    function m7(bf, bg, bh, bi) {
        this['x'] = bf || 0x0, this['y'] = bg || 0x0, this['z'] = bh || 0x0, this['w'] = void 0x0 !== bi ? bi : 0x1;
    }

    function mc(bf, bg, bh) {
        this['width'] = bf, this['height'] = bg, this['scissor'] = new m7(0x0, 0x0, bf, bg), this['scissorTest'] = !0x1, this['viewport'] = new m7(0x0, 0x0, bf, bg), bh = bh || {}, this['texture'] = new lW(void 0x0, void 0x0, bh['wrapS'], bh['wrapT'], bh['magFilter'], bh['minFilter'], bh['format'], bh['type'], bh['anisotropy'], bh['encoding']), this['texture']['generateMipmaps'] = void 0x0 !== bh['generateMipmaps'] && bh['generateMipmaps'], this['texture']['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cS, this['depthBuffer'] = void 0x0 === bh['depthBuffer'] || bh['depthBuffer'], this['stencilBuffer'] = void 0x0 === bh['stencilBuffer'] || bh['stencilBuffer'], this['depthTexture'] = void 0x0 !== bh['depthTexture'] ? bh['depthTexture'] : null;
    }

    function mg(bf, bg, bh) {
        mc['call'](this, bf, bg, bh), this['samples'] = 0x4;
    }

    function mk(bf, bg, bh) {
        mc['call'](this, bf, bg, bh);
    }

    function mo(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
        lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM), this['image'] = {
            'data': bf,
            'width': bg,
            'height': bh
        }, this['magFilter'] = void 0x0 !== bJ ? bJ : cP, this['minFilter'] = void 0x0 !== bK ? bK : cP, this['generateMipmaps'] = !0x1, this['flipY'] = !0x1, this['unpackAlignment'] = 0x1;
    }

    function mB(bf, bg) {
        this['min'] = void 0x0 !== bf ? bf : new eK(0x1 / 0x0, 0x1 / 0x0, 0x1 / 0x0), this['max'] = void 0x0 !== bg ? bg : new eK(-0x1 / 0x0, -0x1 / 0x0, -0x1 / 0x0);
    }

    function mE(bf, bg) {
        this['center'] = void 0x0 !== bf ? bf : new eK(), this['radius'] = void 0x0 !== bg ? bg : 0x0;
    }

    function mH(bf, bg) {
        this['normal'] = void 0x0 !== bf ? bf : new eK(0x1, 0x0, 0x0), this['constant'] = void 0x0 !== bg ? bg : 0x0;
    }

    function mK(bf, bg, bh, bi, bF, bG) {
        this['planes'] = [void 0x0 !== bf ? bf : new mH(), void 0x0 !== bg ? bg : new mH(), void 0x0 !== bh ? bh : new mH(), void 0x0 !== bi ? bi : new mH(), void 0x0 !== bF ? bF : new mH(), void 0x0 !== bG ? bG : new mH()];
    }

    function mR() {
        this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1], arguments['length'] > 0x0 && console['error']('THREE.Matrix4:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
    }
    lW['DEFAULT_IMAGE'] = void 0x0, lW['DEFAULT_MAPPING'] = cE, lW['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': lW,
        'isTexture': !0x0,
        'updateMatrix': function() {
            this['matrix']['setUvTransform'](this['offset']['x'], this['offset']['y'], this['repeat']['x'], this['repeat']['y'], this['rotation'], this['center']['x'], this['center']['y']);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['name'] = bf['name'], this['image'] = bf['image'], this['mipmaps'] = bf['mipmaps']['slice'](0x0), this['mapping'] = bf['mapping'], this['wrapS'] = bf['wrapS'], this['wrapT'] = bf['wrapT'], this['magFilter'] = bf['magFilter'], this['minFilter'] = bf['minFilter'], this['anisotropy'] = bf['anisotropy'], this['format'] = bf['format'], this['type'] = bf['type'], this['offset']['copy'](bf['offset']), this['repeat']['copy'](bf['repeat']), this['center']['copy'](bf['center']), this['rotation'] = bf['rotation'], this['matrixAutoUpdate'] = bf['matrixAutoUpdate'], this['matrix']['copy'](bf['matrix']), this['generateMipmaps'] = bf['generateMipmaps'], this['premultiplyAlpha'] = bf['premultiplyAlpha'], this['flipY'] = bf['flipY'], this['unpackAlignment'] = bf['unpackAlignment'], this['encoding'] = bf['encoding'], this;
        },
        'toJSON': function(bf) {
            var bg = void 0x0 === bf || 'string' == typeof bf;
            if (!bg && void 0x0 !== bf['textures'][this['uuid']]) return bf['textures'][this['uuid']];
            var bh = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Texture',
                    'generator': 'Texture.toJSON'
                },
                'uuid': this['uuid'],
                'name': this['name'],
                'mapping': this['mapping'],
                'repeat': [this['repeat']['x'], this['repeat']['y']],
                'offset': [this['offset']['x'], this['offset']['y']],
                'center': [this['center']['x'], this['center']['y']],
                'rotation': this['rotation'],
                'wrap': [this['wrapS'], this['wrapT']],
                'format': this['format'],
                'type': this['type'],
                'encoding': this['encoding'],
                'minFilter': this['minFilter'],
                'magFilter': this['magFilter'],
                'anisotropy': this['anisotropy'],
                'flipY': this['flipY'],
                'premultiplyAlpha': this['premultiplyAlpha'],
                'unpackAlignment': this['unpackAlignment']
            };
            if (void 0x0 !== this['image']) {
                var bi = this['image'];
                if (void 0x0 === bi['uuid'] && (bi['uuid'] = e2['generateUUID']()), !bg && void 0x0 === bf['images'][bi['uuid']]) {
                    var bF;
                    if (Array['isArray'](bi)) {
                        bF = [];
                        for (var bG = 0x0, bH = bi['length']; bG < bH; bG++) bF['push'](lR['getDataURL'](bi[bG]));
                    } else bF = lR['getDataURL'](bi);
                    bf['images'][bi['uuid']] = {
                        'uuid': bi['uuid'],
                        'url': bF
                    };
                }
                bh['image'] = bi['uuid'];
            }
            return bg || (bf['textures'][this['uuid']] = bh), bh;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        },
        'transformUv': function(bf) {
            if (this['mapping'] !== cE) return bf;
            if (bf['applyMatrix3'](this['matrix']), bf['x'] < 0x0 || bf['x'] > 0x1) switch (this['wrapS']) {
                case cM:
                    bf['x'] = bf['x'] - Math['floor'](bf['x']);
                    break;
                case cN:
                    bf['x'] = bf['x'] < 0x0 ? 0x0 : 0x1;
                    break;
                case cO:
                    0x1 === Math['abs'](Math['floor'](bf['x']) % 0x2) ? bf['x'] = Math['ceil'](bf['x']) - bf['x'] : bf['x'] = bf['x'] - Math['floor'](bf['x']);
            }
            if (bf['y'] < 0x0 || bf['y'] > 0x1) switch (this['wrapT']) {
                case cM:
                    bf['y'] = bf['y'] - Math['floor'](bf['y']);
                    break;
                case cN:
                    bf['y'] = bf['y'] < 0x0 ? 0x0 : 0x1;
                    break;
                case cO:
                    0x1 === Math['abs'](Math['floor'](bf['y']) % 0x2) ? bf['y'] = Math['ceil'](bf['y']) - bf['y'] : bf['y'] = bf['y'] - Math['floor'](bf['y']);
            }
            return this['flipY'] && (bf['y'] = 0x1 - bf['y']), bf;
        }
    }), Object['defineProperty'](lW['prototype'], 'needsUpdate', {
        'set': function(bf) {
            !0x0 === bf && this['version']++;
        }
    }), Object['assign'](m7['prototype'], {
        'isVector4': !0x0,
        'set': function(bf, bg, bh, bi) {
            return this['x'] = bf, this['y'] = bg, this['z'] = bh, this['w'] = bi, this;
        },
        'setScalar': function(bf) {
            return this['x'] = bf, this['y'] = bf, this['z'] = bf, this['w'] = bf, this;
        },
        'setX': function(bf) {
            return this['x'] = bf, this;
        },
        'setY': function(bf) {
            return this['y'] = bf, this;
        },
        'setZ': function(bf) {
            return this['z'] = bf, this;
        },
        'setW': function(bf) {
            return this['w'] = bf, this;
        },
        'setComponent': function(bf, bg) {
            switch (bf) {
                case 0x0:
                    this['x'] = bg;
                    break;
                case 0x1:
                    this['y'] = bg;
                    break;
                case 0x2:
                    this['z'] = bg;
                    break;
                case 0x3:
                    this['w'] = bg;
                    break;
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
            return this;
        },
        'getComponent': function(bf) {
            switch (bf) {
                case 0x0:
                    return this['x'];
                case 0x1:
                    return this['y'];
                case 0x2:
                    return this['z'];
                case 0x3:
                    return this['w'];
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
            }
        },
        'clone': function() {
            return new this['constructor'](this['x'], this['y'], this['z'], this['w']);
        },
        'copy': function(bf) {
            return this['x'] = bf['x'], this['y'] = bf['y'], this['z'] = bf['z'], this['w'] = void 0x0 !== bf['w'] ? bf['w'] : 0x1, this;
        },
        'add': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'), this['addVectors'](bf, bg)) : (this['x'] += bf['x'], this['y'] += bf['y'], this['z'] += bf['z'], this['w'] += bf['w'], this);
        },
        'addScalar': function(bf) {
            return this['x'] += bf, this['y'] += bf, this['z'] += bf, this['w'] += bf, this;
        },
        'addVectors': function(bf, bg) {
            return this['x'] = bf['x'] + bg['x'], this['y'] = bf['y'] + bg['y'], this['z'] = bf['z'] + bg['z'], this['w'] = bf['w'] + bg['w'], this;
        },
        'addScaledVector': function(bf, bg) {
            return this['x'] += bf['x'] * bg, this['y'] += bf['y'] * bg, this['z'] += bf['z'] * bg, this['w'] += bf['w'] * bg, this;
        },
        'sub': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'), this['subVectors'](bf, bg)) : (this['x'] -= bf['x'], this['y'] -= bf['y'], this['z'] -= bf['z'], this['w'] -= bf['w'], this);
        },
        'subScalar': function(bf) {
            return this['x'] -= bf, this['y'] -= bf, this['z'] -= bf, this['w'] -= bf, this;
        },
        'subVectors': function(bf, bg) {
            return this['x'] = bf['x'] - bg['x'], this['y'] = bf['y'] - bg['y'], this['z'] = bf['z'] - bg['z'], this['w'] = bf['w'] - bg['w'], this;
        },
        'multiplyScalar': function(bf) {
            return this['x'] *= bf, this['y'] *= bf, this['z'] *= bf, this['w'] *= bf, this;
        },
        'applyMatrix4': function(bf) {
            var bg = this['x'],
                bh = this['y'],
                bi = this['z'],
                bF = this['w'],
                bG = bf['elements'];
            return this['x'] = bG[0x0] * bg + bG[0x4] * bh + bG[0x8] * bi + bG[0xc] * bF, this['y'] = bG[0x1] * bg + bG[0x5] * bh + bG[0x9] * bi + bG[0xd] * bF, this['z'] = bG[0x2] * bg + bG[0x6] * bh + bG[0xa] * bi + bG[0xe] * bF, this['w'] = bG[0x3] * bg + bG[0x7] * bh + bG[0xb] * bi + bG[0xf] * bF, this;
        },
        'divideScalar': function(bf) {
            return this['multiplyScalar'](0x1 / bf);
        },
        'setAxisAngleFromQuaternion': function(bf) {
            this['w'] = 0x2 * Math['acos'](bf['w']);
            var bg = Math['sqrt'](0x1 - bf['w'] * bf['w']);
            return bg < 0.0001 ? (this['x'] = 0x1, this['y'] = 0x0, this['z'] = 0x0) : (this['x'] = bf['x'] / bg, this['y'] = bf['y'] / bg, this['z'] = bf['z'] / bg), this;
        },
        'setAxisAngleFromRotationMatrix': function(bf) {
            var bg, bh, bi, bF, bG = bf['elements'],
                bH = bG[0x0],
                bI = bG[0x4],
                bJ = bG[0x8],
                bK = bG[0x1],
                bL = bG[0x5],
                bM = bG[0x9],
                bN = bG[0x2],
                bO = bG[0x6],
                bP = bG[0xa];
            if (Math['abs'](bI - bK) < 0.01 && Math['abs'](bJ - bN) < 0.01 && Math['abs'](bM - bO) < 0.01) {
                if (Math['abs'](bI + bK) < 0.1 && Math['abs'](bJ + bN) < 0.1 && Math['abs'](bM + bO) < 0.1 && Math['abs'](bH + bL + bP - 0x3) < 0.1) return this['set'](0x1, 0x0, 0x0, 0x0), this;
                bg = Math['PI'];
                var bQ = (bH + 0x1) / 0x2,
                    bR = (bL + 0x1) / 0x2,
                    bS = (bP + 0x1) / 0x2,
                    bT = (bI + bK) / 0x4,
                    bU = (bJ + bN) / 0x4,
                    bV = (bM + bO) / 0x4;
                return bQ > bR && bQ > bS ? bQ < 0.01 ? (bh = 0x0, bi = 0.707106781, bF = 0.707106781) : (bi = bT / (bh = Math['sqrt'](bQ)), bF = bU / bh) : bR > bS ? bR < 0.01 ? (bh = 0.707106781, bi = 0x0, bF = 0.707106781) : (bh = bT / (bi = Math['sqrt'](bR)), bF = bV / bi) : bS < 0.01 ? (bh = 0.707106781, bi = 0.707106781, bF = 0x0) : (bh = bU / (bF = Math['sqrt'](bS)), bi = bV / bF), this['set'](bh, bi, bF, bg), this;
            }
            var bW = Math['sqrt']((bO - bM) * (bO - bM) + (bJ - bN) * (bJ - bN) + (bK - bI) * (bK - bI));
            return Math['abs'](bW) < 0.001 && (bW = 0x1), this['x'] = (bO - bM) / bW, this['y'] = (bJ - bN) / bW, this['z'] = (bK - bI) / bW, this['w'] = Math['acos']((bH + bL + bP - 0x1) / 0x2), this;
        },
        'min': function(bf) {
            return this['x'] = Math['min'](this['x'], bf['x']), this['y'] = Math['min'](this['y'], bf['y']), this['z'] = Math['min'](this['z'], bf['z']), this['w'] = Math['min'](this['w'], bf['w']), this;
        },
        'max': function(bf) {
            return this['x'] = Math['max'](this['x'], bf['x']), this['y'] = Math['max'](this['y'], bf['y']), this['z'] = Math['max'](this['z'], bf['z']), this['w'] = Math['max'](this['w'], bf['w']), this;
        },
        'clamp': function(bf, bg) {
            return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])), this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])), this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])), this['w'] = Math['max'](bf['w'], Math['min'](bg['w'], this['w'])), this;
        },
        'clampScalar': function(bf, bg) {
            return void 0x0 === lD && (lD = new m7(), lE = new m7()), lD['set'](bf, bf, bf, bf), lE['set'](bg, bg, bg, bg), this['clamp'](lD, lE);
        },
        'clampLength': function(bf, bg) {
            var bh = this['length']();
            return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
        },
        'floor': function() {
            return this['x'] = Math['floor'](this['x']), this['y'] = Math['floor'](this['y']), this['z'] = Math['floor'](this['z']), this['w'] = Math['floor'](this['w']), this;
        },
        'ceil': function() {
            return this['x'] = Math['ceil'](this['x']), this['y'] = Math['ceil'](this['y']), this['z'] = Math['ceil'](this['z']), this['w'] = Math['ceil'](this['w']), this;
        },
        'round': function() {
            return this['x'] = Math['round'](this['x']), this['y'] = Math['round'](this['y']), this['z'] = Math['round'](this['z']), this['w'] = Math['round'](this['w']), this;
        },
        'roundToZero': function() {
            return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']), this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']), this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']), this['w'] = this['w'] < 0x0 ? Math['ceil'](this['w']) : Math['floor'](this['w']), this;
        },
        'negate': function() {
            return this['x'] = -this['x'], this['y'] = -this['y'], this['z'] = -this['z'], this['w'] = -this['w'], this;
        },
        'dot': function(bf) {
            return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'] + this['w'] * bf['w'];
        },
        'lengthSq': function() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        },
        'length': function() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        },
        'manhattanLength': function() {
            return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']) + Math['abs'](this['w']);
        },
        'normalize': function() {
            return this['divideScalar'](this['length']() || 0x1);
        },
        'setLength': function(bf) {
            return this['normalize']()['multiplyScalar'](bf);
        },
        'lerp': function(bf, bg) {
            return this['x'] += (bf['x'] - this['x']) * bg, this['y'] += (bf['y'] - this['y']) * bg, this['z'] += (bf['z'] - this['z']) * bg, this['w'] += (bf['w'] - this['w']) * bg, this;
        },
        'lerpVectors': function(bf, bg, bh) {
            return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
        },
        'equals': function(bf) {
            return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'] && bf['w'] === this['w'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0), this['x'] = bf[bg], this['y'] = bf[bg + 0x1], this['z'] = bf[bg + 0x2], this['w'] = bf[bg + 0x3], this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['x'], bf[bg + 0x1] = this['y'], bf[bg + 0x2] = this['z'], bf[bg + 0x3] = this['w'], bf;
        },
        'fromBufferAttribute': function(bf, bg, bh) {
            return void 0x0 !== bh && console['warn']('THREE.Vector4:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'), this['x'] = bf['getX'](bg), this['y'] = bf['getY'](bg), this['z'] = bf['getZ'](bg), this['w'] = bf['getW'](bg), this;
        }
    }), mc['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': mc,
        'isWebGLRenderTarget': !0x0,
        'setSize': function(bf, bg) {
            this['width'] === bf && this['height'] === bg || (this['width'] = bf, this['height'] = bg, this['dispose']()), this['viewport']['set'](0x0, 0x0, bf, bg), this['scissor']['set'](0x0, 0x0, bf, bg);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['width'] = bf['width'], this['height'] = bf['height'], this['viewport']['copy'](bf['viewport']), this['texture'] = bf['texture']['clone'](), this['depthBuffer'] = bf['depthBuffer'], this['stencilBuffer'] = bf['stencilBuffer'], this['depthTexture'] = bf['depthTexture'], this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }), mg['prototype'] = Object['assign'](Object['create'](mc['prototype']), {
        'constructor': mg,
        'isWebGLMultisampleRenderTarget': !0x0,
        'copy': function(bf) {
            return mc['prototype']['copy']['call'](this, bf), this['samples'] = bf['samples'], this;
        }
    }), mk['prototype'] = Object['create'](mc['prototype']), mk['prototype']['constructor'] = mk, mk['prototype']['isWebGLRenderTargetCube'] = !0x0, mo['prototype'] = Object['create'](lW['prototype']), mo['prototype']['constructor'] = mo, mo['prototype']['isDataTexture'] = !0x0, Object['assign'](mB['prototype'], {
        'isBox3': !0x0,
        'set': function(bf, bg) {
            return this['min']['copy'](bf), this['max']['copy'](bg), this;
        },
        'setFromArray': function(bf) {
            for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['length']; bI < bJ; bI += 0x3) {
                var bK = bf[bI],
                    bL = bf[bI + 0x1],
                    bM = bf[bI + 0x2];
                bK < bg && (bg = bK), bL < bh && (bh = bL), bM < bi && (bi = bM), bK > bF && (bF = bK), bL > bG && (bG = bL), bM > bH && (bH = bM);
            }
            return this['min']['set'](bg, bh, bi), this['max']['set'](bF, bG, bH), this;
        },
        'setFromBufferAttribute': function(bf) {
            for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['count']; bI < bJ; bI++) {
                var bK = bf['getX'](bI),
                    bL = bf['getY'](bI),
                    bM = bf['getZ'](bI);
                bK < bg && (bg = bK), bL < bh && (bh = bL), bM < bi && (bi = bM), bK > bF && (bF = bK), bL > bG && (bG = bL), bM > bH && (bH = bM);
            }
            return this['min']['set'](bg, bh, bi), this['max']['set'](bF, bG, bH), this;
        },
        'setFromPoints': function(bf) {
            this['makeEmpty']();
            for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) this['expandByPoint'](bf[bg]);
            return this;
        },
        'setFromCenterAndSize': function() {
            var bf = new eK();
            return function(bg, bh) {
                var bi = bf['copy'](bh)['multiplyScalar'](0.5);
                return this['min']['copy'](bg)['sub'](bi), this['max']['copy'](bg)['add'](bi), this;
            };
        }(),
        'setFromObject': function(bf) {
            return this['makeEmpty'](), this['expandByObject'](bf);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['min']['copy'](bf['min']), this['max']['copy'](bf['max']), this;
        },
        'makeEmpty': function() {
            return this['min']['x'] = this['min']['y'] = this['min']['z'] = 0x1 / 0x0, this['max']['x'] = this['max']['y'] = this['max']['z'] = -0x1 / 0x0, this;
        },
        'isEmpty': function() {
            return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'] || this['max']['z'] < this['min']['z'];
        },
        'getCenter': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getCenter()\x20target\x20is\x20now\x20required'), bf = new eK()), this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
        },
        'getSize': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getSize()\x20target\x20is\x20now\x20required'), bf = new eK()), this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
        },
        'expandByPoint': function(bf) {
            return this['min']['min'](bf), this['max']['max'](bf), this;
        },
        'expandByVector': function(bf) {
            return this['min']['sub'](bf), this['max']['add'](bf), this;
        },
        'expandByScalar': function(bf) {
            return this['min']['addScalar'](-bf), this['max']['addScalar'](bf), this;
        },
        'expandByObject': function() {
            var bf, bg, bh, bi = new eK();

            function bF(bF) {
                var bG = bF['geometry'];
                if (void 0x0 !== bG)
                    if (bG['isGeometry']) {
                        var bH = bG['vertices'];
                        for (bg = 0x0, bh = bH['length']; bg < bh; bg++) bi['copy'](bH[bg]), bi['applyMatrix4'](bF['matrixWorld']), bf['expandByPoint'](bi);
                    } else if (bG['isBufferGeometry']) {
                    var bI = bG['attributes']['position'];
                    if (void 0x0 !== bI)
                        for (bg = 0x0, bh = bI['count']; bg < bh; bg++) bi['fromBufferAttribute'](bI, bg)['applyMatrix4'](bF['matrixWorld']), bf['expandByPoint'](bi);
                }
            }
            return function(bg) {
                return bf = this, bg['updateMatrixWorld'](!0x0), bg['traverse'](bF), this;
            };
        }(),
        'containsPoint': function(bf) {
            return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y'] || bf['z'] < this['min']['z'] || bf['z'] > this['max']['z']);
        },
        'containsBox': function(bf) {
            return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'] && this['min']['z'] <= bf['min']['z'] && bf['max']['z'] <= this['max']['z'];
        },
        'getParameter': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.getParameter()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']), (bf['z'] - this['min']['z']) / (this['max']['z'] - this['min']['z']));
        },
        'intersectsBox': function(bf) {
            return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y'] || bf['max']['z'] < this['min']['z'] || bf['min']['z'] > this['max']['z']);
        },
        'intersectsSphere': (lG = new eK(), function(bf) {
            return this['clampPoint'](bf['center'], lG), lG['distanceToSquared'](bf['center']) <= bf['radius'] * bf['radius'];
        }),
        'intersectsPlane': function(bf) {
            var bg, bh;
            return bf['normal']['x'] > 0x0 ? (bg = bf['normal']['x'] * this['min']['x'], bh = bf['normal']['x'] * this['max']['x']) : (bg = bf['normal']['x'] * this['max']['x'], bh = bf['normal']['x'] * this['min']['x']), bf['normal']['y'] > 0x0 ? (bg += bf['normal']['y'] * this['min']['y'], bh += bf['normal']['y'] * this['max']['y']) : (bg += bf['normal']['y'] * this['max']['y'], bh += bf['normal']['y'] * this['min']['y']), bf['normal']['z'] > 0x0 ? (bg += bf['normal']['z'] * this['min']['z'], bh += bf['normal']['z'] * this['max']['z']) : (bg += bf['normal']['z'] * this['max']['z'], bh += bf['normal']['z'] * this['min']['z']), bg <= -bf['constant'] && bh >= -bf['constant'];
        },
        'intersectsTriangle': function() {
            var bf = new eK(),
                bg = new eK(),
                bh = new eK(),
                bi = new eK(),
                bF = new eK(),
                bG = new eK(),
                bH = new eK(),
                bI = new eK(),
                bJ = new eK(),
                bK = new eK();

            function bL(bi) {
                var bF, bG;
                for (bF = 0x0, bG = bi['length'] - 0x3; bF <= bG; bF += 0x3) {
                    bH['fromArray'](bi, bF);
                    var bI = bJ['x'] * Math['abs'](bH['x']) + bJ['y'] * Math['abs'](bH['y']) + bJ['z'] * Math['abs'](bH['z']),
                        bK = bf['dot'](bH),
                        bL = bg['dot'](bH),
                        bM = bh['dot'](bH);
                    if (Math['max'](-Math['max'](bK, bL, bM), Math['min'](bK, bL, bM)) > bI) return !0x1;
                }
                return !0x0;
            }
            return function(bH) {
                if (this['isEmpty']()) return !0x1;
                this['getCenter'](bI), bJ['subVectors'](this['max'], bI), bf['subVectors'](bH['a'], bI), bg['subVectors'](bH['b'], bI), bh['subVectors'](bH['c'], bI), bi['subVectors'](bg, bf), bF['subVectors'](bh, bg), bG['subVectors'](bf, bh);
                var bM = [0x0, -bi['z'], bi['y'], 0x0, -bF['z'], bF['y'], 0x0, -bG['z'], bG['y'], bi['z'], 0x0, -bi['x'], bF['z'], 0x0, -bF['x'], bG['z'], 0x0, -bG['x'], -bi['y'], bi['x'], 0x0, -bF['y'], bF['x'], 0x0, -bG['y'], bG['x'], 0x0];
                return !!bL(bM) && (!!bL(bM = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1]) && (bK['crossVectors'](bi, bF), bL(bM = [bK['x'], bK['y'], bK['z']])));
            };
        }(),
        'clampPoint': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.clampPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](bf)['clamp'](this['min'], this['max']);
        },
        'distanceToPoint': function() {
            var bf = new eK();
            return function(bg) {
                return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
            };
        }(),
        'getBoundingSphere': function() {
            var bf = new eK();
            return function(bg) {
                return void 0x0 === bg && console['error']('THREE.Box3:\x20.getBoundingSphere()\x20target\x20is\x20now\x20required'), this['getCenter'](bg['center']), bg['radius'] = 0.5 * this['getSize'](bf)['length'](), bg;
            };
        }(),
        'intersect': function(bf) {
            return this['min']['max'](bf['min']), this['max']['min'](bf['max']), this['isEmpty']() && this['makeEmpty'](), this;
        },
        'union': function(bf) {
            return this['min']['min'](bf['min']), this['max']['max'](bf['max']), this;
        },
        'applyMatrix4': (lF = [new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK()], function(bf) {
            return this['isEmpty']() ? this : (lF[0x0]['set'](this['min']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x1]['set'](this['min']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf), lF[0x2]['set'](this['min']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x3]['set'](this['min']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf), lF[0x4]['set'](this['max']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x5]['set'](this['max']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf), lF[0x6]['set'](this['max']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x7]['set'](this['max']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf), this['setFromPoints'](lF), this);
        }),
        'translate': function(bf) {
            return this['min']['add'](bf), this['max']['add'](bf), this;
        },
        'equals': function(bf) {
            return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
        }
    }), Object['assign'](mE['prototype'], {
        'set': function(bf, bg) {
            return this['center']['copy'](bf), this['radius'] = bg, this;
        },
        'setFromPoints': (lH = new mB(), function(bf, bg) {
            var bh = this['center'];
            void 0x0 !== bg ? bh['copy'](bg) : lH['setFromPoints'](bf)['getCenter'](bh);
            for (var bi = 0x0, bF = 0x0, bG = bf['length']; bF < bG; bF++) bi = Math['max'](bi, bh['distanceToSquared'](bf[bF]));
            return this['radius'] = Math['sqrt'](bi), this;
        }),
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['center']['copy'](bf['center']), this['radius'] = bf['radius'], this;
        },
        'empty': function() {
            return this['radius'] <= 0x0;
        },
        'containsPoint': function(bf) {
            return bf['distanceToSquared'](this['center']) <= this['radius'] * this['radius'];
        },
        'distanceToPoint': function(bf) {
            return bf['distanceTo'](this['center']) - this['radius'];
        },
        'intersectsSphere': function(bf) {
            var bg = this['radius'] + bf['radius'];
            return bf['center']['distanceToSquared'](this['center']) <= bg * bg;
        },
        'intersectsBox': function(bf) {
            return bf['intersectsSphere'](this);
        },
        'intersectsPlane': function(bf) {
            return Math['abs'](bf['distanceToPoint'](this['center'])) <= this['radius'];
        },
        'clampPoint': function(bf, bg) {
            var bh = this['center']['distanceToSquared'](bf);
            return void 0x0 === bg && (console['warn']('THREE.Sphere:\x20.clampPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](bf), bh > this['radius'] * this['radius'] && (bg['sub'](this['center'])['normalize'](), bg['multiplyScalar'](this['radius'])['add'](this['center'])), bg;
        },
        'getBoundingBox': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Sphere:\x20.getBoundingBox()\x20target\x20is\x20now\x20required'), bf = new mB()), bf['set'](this['center'], this['center']), bf['expandByScalar'](this['radius']), bf;
        },
        'applyMatrix4': function(bf) {
            return this['center']['applyMatrix4'](bf), this['radius'] = this['radius'] * bf['getMaxScaleOnAxis'](), this;
        },
        'translate': function(bf) {
            return this['center']['add'](bf), this;
        },
        'equals': function(bf) {
            return bf['center']['equals'](this['center']) && bf['radius'] === this['radius'];
        }
    }), Object['assign'](mH['prototype'], {
        'set': function(bf, bg) {
            return this['normal']['copy'](bf), this['constant'] = bg, this;
        },
        'setComponents': function(bf, bg, bh, bi) {
            return this['normal']['set'](bf, bg, bh), this['constant'] = bi, this;
        },
        'setFromNormalAndCoplanarPoint': function(bf, bg) {
            return this['normal']['copy'](bf), this['constant'] = -bg['dot'](this['normal']), this;
        },
        'setFromCoplanarPoints': function() {
            var bf = new eK(),
                bg = new eK();
            return function(bh, bi, bF) {
                var bG = bf['subVectors'](bF, bi)['cross'](bg['subVectors'](bh, bi))['normalize']();
                return this['setFromNormalAndCoplanarPoint'](bG, bh), this;
            };
        }(),
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['normal']['copy'](bf['normal']), this['constant'] = bf['constant'], this;
        },
        'normalize': function() {
            var bf = 0x1 / this['normal']['length']();
            return this['normal']['multiplyScalar'](bf), this['constant'] *= bf, this;
        },
        'negate': function() {
            return this['constant'] *= -0x1, this['normal']['negate'](), this;
        },
        'distanceToPoint': function(bf) {
            return this['normal']['dot'](bf) + this['constant'];
        },
        'distanceToSphere': function(bf) {
            return this['distanceToPoint'](bf['center']) - bf['radius'];
        },
        'projectPoint': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Plane:\x20.projectPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](this['normal'])['multiplyScalar'](-this['distanceToPoint'](bf))['add'](bf);
        },
        'intersectLine': function() {
            var bf = new eK();
            return function(bg, bh) {
                void 0x0 === bh && (console['warn']('THREE.Plane:\x20.intersectLine()\x20target\x20is\x20now\x20required'), bh = new eK());
                var bi = bg['delta'](bf),
                    bF = this['normal']['dot'](bi);
                if (0x0 === bF) return 0x0 === this['distanceToPoint'](bg['start']) ? bh['copy'](bg['start']) : void 0x0;
                var bG = -(bg['start']['dot'](this['normal']) + this['constant']) / bF;
                return bG < 0x0 || bG > 0x1 ? void 0x0 : bh['copy'](bi)['multiplyScalar'](bG)['add'](bg['start']);
            };
        }(),
        'intersectsLine': function(bf) {
            var bg = this['distanceToPoint'](bf['start']),
                bh = this['distanceToPoint'](bf['end']);
            return bg < 0x0 && bh > 0x0 || bh < 0x0 && bg > 0x0;
        },
        'intersectsBox': function(bf) {
            return bf['intersectsPlane'](this);
        },
        'intersectsSphere': function(bf) {
            return bf['intersectsPlane'](this);
        },
        'coplanarPoint': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Plane:\x20.coplanarPoint()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['copy'](this['normal'])['multiplyScalar'](-this['constant']);
        },
        'applyMatrix4': function() {
            var bf = new eK(),
                bg = new eO();
            return function(bh, bi) {
                var bF = bi || bg['getNormalMatrix'](bh),
                    bG = this['coplanarPoint'](bf)['applyMatrix4'](bh),
                    bH = this['normal']['applyMatrix3'](bF)['normalize']();
                return this['constant'] = -bG['dot'](bH), this;
            };
        }(),
        'translate': function(bf) {
            return this['constant'] -= bf['dot'](this['normal']), this;
        },
        'equals': function(bf) {
            return bf['normal']['equals'](this['normal']) && bf['constant'] === this['constant'];
        }
    }), Object['assign'](mK['prototype'], {
        'set': function(bf, bg, bh, bi, bF, bG) {
            var bH = this['planes'];
            return bH[0x0]['copy'](bf), bH[0x1]['copy'](bg), bH[0x2]['copy'](bh), bH[0x3]['copy'](bi), bH[0x4]['copy'](bF), bH[0x5]['copy'](bG), this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++) bg[bh]['copy'](bf['planes'][bh]);
            return this;
        },
        'setFromMatrix': function(bf) {
            var bg = this['planes'],
                bh = bf['elements'],
                bi = bh[0x0],
                bF = bh[0x1],
                bG = bh[0x2],
                bH = bh[0x3],
                bI = bh[0x4],
                bJ = bh[0x5],
                bK = bh[0x6],
                bL = bh[0x7],
                bM = bh[0x8],
                bN = bh[0x9],
                bO = bh[0xa],
                bP = bh[0xb],
                bQ = bh[0xc],
                bR = bh[0xd],
                bS = bh[0xe],
                bT = bh[0xf];
            return bg[0x0]['setComponents'](bH - bi, bL - bI, bP - bM, bT - bQ)['normalize'](), bg[0x1]['setComponents'](bH + bi, bL + bI, bP + bM, bT + bQ)['normalize'](), bg[0x2]['setComponents'](bH + bF, bL + bJ, bP + bN, bT + bR)['normalize'](), bg[0x3]['setComponents'](bH - bF, bL - bJ, bP - bN, bT - bR)['normalize'](), bg[0x4]['setComponents'](bH - bG, bL - bK, bP - bO, bT - bS)['normalize'](), bg[0x5]['setComponents'](bH + bG, bL + bK, bP + bO, bT + bS)['normalize'](), this;
        },
        'intersectsObject': (lJ = new mE(), function(bf) {
            var bg = bf['geometry'];
            return null === bg['boundingSphere'] && bg['computeBoundingSphere'](), lJ['copy'](bg['boundingSphere'])['applyMatrix4'](bf['matrixWorld']), this['intersectsSphere'](lJ);
        }),
        'intersectsSprite': function() {
            var bf = new mE();
            return function(bg) {
                return bf['center']['set'](0x0, 0x0, 0x0), bf['radius'] = 0.7071067811865476, bf['applyMatrix4'](bg['matrixWorld']), this['intersectsSphere'](bf);
            };
        }(),
        'intersectsSphere': function(bf) {
            for (var bg = this['planes'], bh = bf['center'], bi = -bf['radius'], bF = 0x0; bF < 0x6; bF++) {
                if (bg[bF]['distanceToPoint'](bh) < bi) return !0x1;
            }
            return !0x0;
        },
        'intersectsBox': (lI = new eK(), function(bf) {
            for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++) {
                var bi = bg[bh];
                if (lI['x'] = bi['normal']['x'] > 0x0 ? bf['max']['x'] : bf['min']['x'], lI['y'] = bi['normal']['y'] > 0x0 ? bf['max']['y'] : bf['min']['y'], lI['z'] = bi['normal']['z'] > 0x0 ? bf['max']['z'] : bf['min']['z'], bi['distanceToPoint'](lI) < 0x0) return !0x1;
            }
            return !0x0;
        }),
        'containsPoint': function(bf) {
            for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++)
                if (bg[bh]['distanceToPoint'](bf) < 0x0) return !0x1;
            return !0x0;
        }
    }), Object['assign'](mR['prototype'], {
        'isMatrix4': !0x0,
        'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM, bN, bO, bP, bQ) {
            var bR = this['elements'];
            return bR[0x0] = bf, bR[0x4] = bg, bR[0x8] = bh, bR[0xc] = bi, bR[0x1] = bF, bR[0x5] = bG, bR[0x9] = bH, bR[0xd] = bI, bR[0x2] = bJ, bR[0x6] = bK, bR[0xa] = bL, bR[0xe] = bM, bR[0x3] = bN, bR[0x7] = bO, bR[0xb] = bP, bR[0xf] = bQ, this;
        },
        'identity': function() {
            return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'clone': function() {
            return new mR()['fromArray'](this['elements']);
        },
        'copy': function(bf) {
            var bg = this['elements'],
                bh = bf['elements'];
            return bg[0x0] = bh[0x0], bg[0x1] = bh[0x1], bg[0x2] = bh[0x2], bg[0x3] = bh[0x3], bg[0x4] = bh[0x4], bg[0x5] = bh[0x5], bg[0x6] = bh[0x6], bg[0x7] = bh[0x7], bg[0x8] = bh[0x8], bg[0x9] = bh[0x9], bg[0xa] = bh[0xa], bg[0xb] = bh[0xb], bg[0xc] = bh[0xc], bg[0xd] = bh[0xd], bg[0xe] = bh[0xe], bg[0xf] = bh[0xf], this;
        },
        'copyPosition': function(bf) {
            var bg = this['elements'],
                bh = bf['elements'];
            return bg[0xc] = bh[0xc], bg[0xd] = bh[0xd], bg[0xe] = bh[0xe], this;
        },
        'extractBasis': function(bf, bg, bh) {
            return bf['setFromMatrixColumn'](this, 0x0), bg['setFromMatrixColumn'](this, 0x1), bh['setFromMatrixColumn'](this, 0x2), this;
        },
        'makeBasis': function(bf, bg, bh) {
            return this['set'](bf['x'], bg['x'], bh['x'], 0x0, bf['y'], bg['y'], bh['y'], 0x0, bf['z'], bg['z'], bh['z'], 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'extractRotation': function() {
            var bf = new eK();
            return function(bg) {
                var bh = this['elements'],
                    bi = bg['elements'],
                    bF = 0x1 / bf['setFromMatrixColumn'](bg, 0x0)['length'](),
                    bG = 0x1 / bf['setFromMatrixColumn'](bg, 0x1)['length'](),
                    bH = 0x1 / bf['setFromMatrixColumn'](bg, 0x2)['length']();
                return bh[0x0] = bi[0x0] * bF, bh[0x1] = bi[0x1] * bF, bh[0x2] = bi[0x2] * bF, bh[0x3] = 0x0, bh[0x4] = bi[0x4] * bG, bh[0x5] = bi[0x5] * bG, bh[0x6] = bi[0x6] * bG, bh[0x7] = 0x0, bh[0x8] = bi[0x8] * bH, bh[0x9] = bi[0x9] * bH, bh[0xa] = bi[0xa] * bH, bh[0xb] = 0x0, bh[0xc] = 0x0, bh[0xd] = 0x0, bh[0xe] = 0x0, bh[0xf] = 0x1, this;
            };
        }(),
        'makeRotationFromEuler': function(bf) {
            bf && bf['isEuler'] || console['error']('THREE.Matrix4:\x20.makeRotationFromEuler()\x20now\x20expects\x20a\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
            var bg = this['elements'],
                bh = bf['x'],
                bi = bf['y'],
                bF = bf['z'],
                bG = Math['cos'](bh),
                bH = Math['sin'](bh),
                bI = Math['cos'](bi),
                bJ = Math['sin'](bi),
                bK = Math['cos'](bF),
                bL = Math['sin'](bF);
            if ('XYZ' === bf['order']) {
                var bM = bG * bK,
                    bN = bG * bL,
                    bO = bH * bK,
                    bP = bH * bL;
                bg[0x0] = bI * bK, bg[0x4] = -bI * bL, bg[0x8] = bJ, bg[0x1] = bN + bO * bJ, bg[0x5] = bM - bP * bJ, bg[0x9] = -bH * bI, bg[0x2] = bP - bM * bJ, bg[0x6] = bO + bN * bJ, bg[0xa] = bG * bI;
            } else if ('YXZ' === bf['order']) {
                var bQ = bI * bK,
                    bR = bI * bL,
                    bS = bJ * bK,
                    bT = bJ * bL;
                bg[0x0] = bQ + bT * bH, bg[0x4] = bS * bH - bR, bg[0x8] = bG * bJ, bg[0x1] = bG * bL, bg[0x5] = bG * bK, bg[0x9] = -bH, bg[0x2] = bR * bH - bS, bg[0x6] = bT + bQ * bH, bg[0xa] = bG * bI;
            } else if ('ZXY' === bf['order']) {
                bQ = bI * bK, bR = bI * bL, bS = bJ * bK, bT = bJ * bL;
                bg[0x0] = bQ - bT * bH, bg[0x4] = -bG * bL, bg[0x8] = bS + bR * bH, bg[0x1] = bR + bS * bH, bg[0x5] = bG * bK, bg[0x9] = bT - bQ * bH, bg[0x2] = -bG * bJ, bg[0x6] = bH, bg[0xa] = bG * bI;
            } else if ('ZYX' === bf['order']) {
                bM = bG * bK, bN = bG * bL, bO = bH * bK, bP = bH * bL;
                bg[0x0] = bI * bK, bg[0x4] = bO * bJ - bN, bg[0x8] = bM * bJ + bP, bg[0x1] = bI * bL, bg[0x5] = bP * bJ + bM, bg[0x9] = bN * bJ - bO, bg[0x2] = -bJ, bg[0x6] = bH * bI, bg[0xa] = bG * bI;
            } else if ('YZX' === bf['order']) {
                var bU = bG * bI,
                    bV = bG * bJ,
                    bW = bH * bI,
                    bX = bH * bJ;
                bg[0x0] = bI * bK, bg[0x4] = bX - bU * bL, bg[0x8] = bW * bL + bV, bg[0x1] = bL, bg[0x5] = bG * bK, bg[0x9] = -bH * bK, bg[0x2] = -bJ * bK, bg[0x6] = bV * bL + bW, bg[0xa] = bU - bX * bL;
            } else if ('XZY' === bf['order']) {
                bU = bG * bI, bV = bG * bJ, bW = bH * bI, bX = bH * bJ;
                bg[0x0] = bI * bK, bg[0x4] = -bL, bg[0x8] = bJ * bK, bg[0x1] = bU * bL + bX, bg[0x5] = bG * bK, bg[0x9] = bV * bL - bW, bg[0x2] = bW * bL - bV, bg[0x6] = bH * bK, bg[0xa] = bX * bL + bU;
            }
            return bg[0x3] = 0x0, bg[0x7] = 0x0, bg[0xb] = 0x0, bg[0xc] = 0x0, bg[0xd] = 0x0, bg[0xe] = 0x0, bg[0xf] = 0x1, this;
        },
        'makeRotationFromQuaternion': (lP = new eK(0x0, 0x0, 0x0), lQ = new eK(0x1, 0x1, 0x1), function(bf) {
            return this['compose'](lP, bf, lQ);
        }),
        'lookAt': (lM = new eK(), lN = new eK(), lO = new eK(), function(bf, bg, bh) {
            var bi = this['elements'];
            return lO['subVectors'](bf, bg), 0x0 === lO['lengthSq']() && (lO['z'] = 0x1), lO['normalize'](), lM['crossVectors'](bh, lO), 0x0 === lM['lengthSq']() && (0x1 === Math['abs'](bh['z']) ? lO['x'] += 0.0001 : lO['z'] += 0.0001, lO['normalize'](), lM['crossVectors'](bh, lO)), lM['normalize'](), lN['crossVectors'](lO, lM), bi[0x0] = lM['x'], bi[0x4] = lN['x'], bi[0x8] = lO['x'], bi[0x1] = lM['y'], bi[0x5] = lN['y'], bi[0x9] = lO['y'], bi[0x2] = lM['z'], bi[0x6] = lN['z'], bi[0xa] = lO['z'], this;
        }),
        'multiply': function(bf, bg) {
            return void 0x0 !== bg ? (console['warn']('THREE.Matrix4:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyMatrices(\x20a,\x20b\x20)\x20instead.'), this['multiplyMatrices'](bf, bg)) : this['multiplyMatrices'](this, bf);
        },
        'premultiply': function(bf) {
            return this['multiplyMatrices'](bf, this);
        },
        'multiplyMatrices': function(bf, bg) {
            var bh = bf['elements'],
                bi = bg['elements'],
                bF = this['elements'],
                bG = bh[0x0],
                bH = bh[0x4],
                bI = bh[0x8],
                bJ = bh[0xc],
                bK = bh[0x1],
                bL = bh[0x5],
                bM = bh[0x9],
                bN = bh[0xd],
                bO = bh[0x2],
                bP = bh[0x6],
                bQ = bh[0xa],
                bR = bh[0xe],
                bS = bh[0x3],
                bT = bh[0x7],
                bU = bh[0xb],
                bV = bh[0xf],
                bW = bi[0x0],
                bX = bi[0x4],
                bY = bi[0x8],
                bZ = bi[0xc],
                c0 = bi[0x1],
                c1 = bi[0x5],
                c2 = bi[0x9],
                c3 = bi[0xd],
                c4 = bi[0x2],
                c5 = bi[0x6],
                c6 = bi[0xa],
                c7 = bi[0xe],
                c8 = bi[0x3],
                c9 = bi[0x7],
                ca = bi[0xb],
                cb = bi[0xf];
            return bF[0x0] = bG * bW + bH * c0 + bI * c4 + bJ * c8, bF[0x4] = bG * bX + bH * c1 + bI * c5 + bJ * c9, bF[0x8] = bG * bY + bH * c2 + bI * c6 + bJ * ca, bF[0xc] = bG * bZ + bH * c3 + bI * c7 + bJ * cb, bF[0x1] = bK * bW + bL * c0 + bM * c4 + bN * c8, bF[0x5] = bK * bX + bL * c1 + bM * c5 + bN * c9, bF[0x9] = bK * bY + bL * c2 + bM * c6 + bN * ca, bF[0xd] = bK * bZ + bL * c3 + bM * c7 + bN * cb, bF[0x2] = bO * bW + bP * c0 + bQ * c4 + bR * c8, bF[0x6] = bO * bX + bP * c1 + bQ * c5 + bR * c9, bF[0xa] = bO * bY + bP * c2 + bQ * c6 + bR * ca, bF[0xe] = bO * bZ + bP * c3 + bQ * c7 + bR * cb, bF[0x3] = bS * bW + bT * c0 + bU * c4 + bV * c8, bF[0x7] = bS * bX + bT * c1 + bU * c5 + bV * c9, bF[0xb] = bS * bY + bT * c2 + bU * c6 + bV * ca, bF[0xf] = bS * bZ + bT * c3 + bU * c7 + bV * cb, this;
        },
        'multiplyScalar': function(bf) {
            var bg = this['elements'];
            return bg[0x0] *= bf, bg[0x4] *= bf, bg[0x8] *= bf, bg[0xc] *= bf, bg[0x1] *= bf, bg[0x5] *= bf, bg[0x9] *= bf, bg[0xd] *= bf, bg[0x2] *= bf, bg[0x6] *= bf, bg[0xa] *= bf, bg[0xe] *= bf, bg[0x3] *= bf, bg[0x7] *= bf, bg[0xb] *= bf, bg[0xf] *= bf, this;
        },
        'applyToBufferAttribute': function() {
            var bf = new eK();
            return function(bg) {
                for (var bh = 0x0, bi = bg['count']; bh < bi; bh++) bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['applyMatrix4'](this), bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
                return bg;
            };
        }(),
        'determinant': function() {
            var bf = this['elements'],
                bg = bf[0x0],
                bh = bf[0x4],
                bi = bf[0x8],
                bF = bf[0xc],
                bG = bf[0x1],
                bH = bf[0x5],
                bI = bf[0x9],
                bJ = bf[0xd],
                bK = bf[0x2],
                bL = bf[0x6],
                bM = bf[0xa],
                bN = bf[0xe];
            return bf[0x3] * (+bF * bI * bL - bi * bJ * bL - bF * bH * bM + bh * bJ * bM + bi * bH * bN - bh * bI * bN) + bf[0x7] * (+bg * bI * bN - bg * bJ * bM + bF * bG * bM - bi * bG * bN + bi * bJ * bK - bF * bI * bK) + bf[0xb] * (+bg * bJ * bL - bg * bH * bN - bF * bG * bL + bh * bG * bN + bF * bH * bK - bh * bJ * bK) + bf[0xf] * (-bi * bH * bK - bg * bI * bL + bg * bH * bM + bi * bG * bL - bh * bG * bM + bh * bI * bK);
        },
        'transpose': function() {
            var bf, bg = this['elements'];
            return bf = bg[0x1], bg[0x1] = bg[0x4], bg[0x4] = bf, bf = bg[0x2], bg[0x2] = bg[0x8], bg[0x8] = bf, bf = bg[0x6], bg[0x6] = bg[0x9], bg[0x9] = bf, bf = bg[0x3], bg[0x3] = bg[0xc], bg[0xc] = bf, bf = bg[0x7], bg[0x7] = bg[0xd], bg[0xd] = bf, bf = bg[0xb], bg[0xb] = bg[0xe], bg[0xe] = bf, this;
        },
        'setPosition': function(bf, bg, bh) {
            var bi = this['elements'];
            return bf['isVector3'] ? (bi[0xc] = bf['x'], bi[0xd] = bf['y'], bi[0xe] = bf['z']) : (bi[0xc] = bf, bi[0xd] = bg, bi[0xe] = bh), this;
        },
        'getInverse': function(bf, bg) {
            var bh = this['elements'],
                bi = bf['elements'],
                bF = bi[0x0],
                bG = bi[0x1],
                bH = bi[0x2],
                bI = bi[0x3],
                bJ = bi[0x4],
                bK = bi[0x5],
                bL = bi[0x6],
                bM = bi[0x7],
                bN = bi[0x8],
                bO = bi[0x9],
                bP = bi[0xa],
                bQ = bi[0xb],
                bR = bi[0xc],
                bS = bi[0xd],
                bT = bi[0xe],
                bU = bi[0xf],
                bV = bO * bT * bM - bS * bP * bM + bS * bL * bQ - bK * bT * bQ - bO * bL * bU + bK * bP * bU,
                bW = bR * bP * bM - bN * bT * bM - bR * bL * bQ + bJ * bT * bQ + bN * bL * bU - bJ * bP * bU,
                bX = bN * bS * bM - bR * bO * bM + bR * bK * bQ - bJ * bS * bQ - bN * bK * bU + bJ * bO * bU,
                bY = bR * bO * bL - bN * bS * bL - bR * bK * bP + bJ * bS * bP + bN * bK * bT - bJ * bO * bT,
                bZ = bF * bV + bG * bW + bH * bX + bI * bY;
            if (0x0 === bZ) {
                var c0 = 'THREE.Matrix4:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
                if (!0x0 === bg) throw new Error(c0);
                return console['warn'](c0), this['identity']();
            }
            var c1 = 0x1 / bZ;
            return bh[0x0] = bV * c1, bh[0x1] = (bS * bP * bI - bO * bT * bI - bS * bH * bQ + bG * bT * bQ + bO * bH * bU - bG * bP * bU) * c1, bh[0x2] = (bK * bT * bI - bS * bL * bI + bS * bH * bM - bG * bT * bM - bK * bH * bU + bG * bL * bU) * c1, bh[0x3] = (bO * bL * bI - bK * bP * bI - bO * bH * bM + bG * bP * bM + bK * bH * bQ - bG * bL * bQ) * c1, bh[0x4] = bW * c1, bh[0x5] = (bN * bT * bI - bR * bP * bI + bR * bH * bQ - bF * bT * bQ - bN * bH * bU + bF * bP * bU) * c1, bh[0x6] = (bR * bL * bI - bJ * bT * bI - bR * bH * bM + bF * bT * bM + bJ * bH * bU - bF * bL * bU) * c1, bh[0x7] = (bJ * bP * bI - bN * bL * bI + bN * bH * bM - bF * bP * bM - bJ * bH * bQ + bF * bL * bQ) * c1, bh[0x8] = bX * c1, bh[0x9] = (bR * bO * bI - bN * bS * bI - bR * bG * bQ + bF * bS * bQ + bN * bG * bU - bF * bO * bU) * c1, bh[0xa] = (bJ * bS * bI - bR * bK * bI + bR * bG * bM - bF * bS * bM - bJ * bG * bU + bF * bK * bU) * c1, bh[0xb] = (bN * bK * bI - bJ * bO * bI - bN * bG * bM + bF * bO * bM + bJ * bG * bQ - bF * bK * bQ) * c1, bh[0xc] = bY * c1, bh[0xd] = (bN * bS * bH - bR * bO * bH + bR * bG * bP - bF * bS * bP - bN * bG * bT + bF * bO * bT) * c1, bh[0xe] = (bR * bK * bH - bJ * bS * bH - bR * bG * bL + bF * bS * bL + bJ * bG * bT - bF * bK * bT) * c1, bh[0xf] = (bJ * bO * bH - bN * bK * bH + bN * bG * bL - bF * bO * bL - bJ * bG * bP + bF * bK * bP) * c1, this;
        },
        'scale': function(bf) {
            var bg = this['elements'],
                bh = bf['x'],
                bi = bf['y'],
                bF = bf['z'];
            return bg[0x0] *= bh, bg[0x4] *= bi, bg[0x8] *= bF, bg[0x1] *= bh, bg[0x5] *= bi, bg[0x9] *= bF, bg[0x2] *= bh, bg[0x6] *= bi, bg[0xa] *= bF, bg[0x3] *= bh, bg[0x7] *= bi, bg[0xb] *= bF, this;
        },
        'getMaxScaleOnAxis': function() {
            var bf = this['elements'],
                bg = bf[0x0] * bf[0x0] + bf[0x1] * bf[0x1] + bf[0x2] * bf[0x2],
                bh = bf[0x4] * bf[0x4] + bf[0x5] * bf[0x5] + bf[0x6] * bf[0x6],
                bi = bf[0x8] * bf[0x8] + bf[0x9] * bf[0x9] + bf[0xa] * bf[0xa];
            return Math['sqrt'](Math['max'](bg, bh, bi));
        },
        'makeTranslation': function(bf, bg, bh) {
            return this['set'](0x1, 0x0, 0x0, bf, 0x0, 0x1, 0x0, bg, 0x0, 0x0, 0x1, bh, 0x0, 0x0, 0x0, 0x1), this;
        },
        'makeRotationX': function(bf) {
            var bg = Math['cos'](bf),
                bh = Math['sin'](bf);
            return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'makeRotationY': function(bf) {
            var bg = Math['cos'](bf),
                bh = Math['sin'](bf);
            return this['set'](bg, 0x0, bh, 0x0, 0x0, 0x1, 0x0, 0x0, -bh, 0x0, bg, 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'makeRotationZ': function(bf) {
            var bg = Math['cos'](bf),
                bh = Math['sin'](bf);
            return this['set'](bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'makeRotationAxis': function(bf, bg) {
            var bh = Math['cos'](bg),
                bi = Math['sin'](bg),
                bF = 0x1 - bh,
                bG = bf['x'],
                bH = bf['y'],
                bI = bf['z'],
                bJ = bF * bG,
                bK = bF * bH;
            return this['set'](bJ * bG + bh, bJ * bH - bi * bI, bJ * bI + bi * bH, 0x0, bJ * bH + bi * bI, bK * bH + bh, bK * bI - bi * bG, 0x0, bJ * bI - bi * bH, bK * bI + bi * bG, bF * bI * bI + bh, 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'makeScale': function(bf, bg, bh) {
            return this['set'](bf, 0x0, 0x0, 0x0, 0x0, bg, 0x0, 0x0, 0x0, 0x0, bh, 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'makeShear': function(bf, bg, bh) {
            return this['set'](0x1, bg, bh, 0x0, bf, 0x1, bh, 0x0, bf, bg, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), this;
        },
        'compose': function(bf, bg, bh) {
            var bi = this['elements'],
                bF = bg['_x'],
                bG = bg['_y'],
                bH = bg['_z'],
                bI = bg['_w'],
                bJ = bF + bF,
                bK = bG + bG,
                bL = bH + bH,
                bM = bF * bJ,
                bN = bF * bK,
                bO = bF * bL,
                bP = bG * bK,
                bQ = bG * bL,
                bR = bH * bL,
                bS = bI * bJ,
                bT = bI * bK,
                bU = bI * bL,
                bV = bh['x'],
                bW = bh['y'],
                bX = bh['z'];
            return bi[0x0] = (0x1 - (bP + bR)) * bV, bi[0x1] = (bN + bU) * bV, bi[0x2] = (bO - bT) * bV, bi[0x3] = 0x0, bi[0x4] = (bN - bU) * bW, bi[0x5] = (0x1 - (bM + bR)) * bW, bi[0x6] = (bQ + bS) * bW, bi[0x7] = 0x0, bi[0x8] = (bO + bT) * bX, bi[0x9] = (bQ - bS) * bX, bi[0xa] = (0x1 - (bM + bP)) * bX, bi[0xb] = 0x0, bi[0xc] = bf['x'], bi[0xd] = bf['y'], bi[0xe] = bf['z'], bi[0xf] = 0x1, this;
        },
        'decompose': (lK = new eK(), lL = new mR(), function(bf, bg, bh) {
            var bi = this['elements'],
                bF = lK['set'](bi[0x0], bi[0x1], bi[0x2])['length'](),
                bG = lK['set'](bi[0x4], bi[0x5], bi[0x6])['length'](),
                bH = lK['set'](bi[0x8], bi[0x9], bi[0xa])['length']();
            this['determinant']() < 0x0 && (bF = -bF), bf['x'] = bi[0xc], bf['y'] = bi[0xd], bf['z'] = bi[0xe], lL['copy'](this);
            var bI = 0x1 / bF,
                bJ = 0x1 / bG,
                bK = 0x1 / bH;
            return lL['elements'][0x0] *= bI, lL['elements'][0x1] *= bI, lL['elements'][0x2] *= bI, lL['elements'][0x4] *= bJ, lL['elements'][0x5] *= bJ, lL['elements'][0x6] *= bJ, lL['elements'][0x8] *= bK, lL['elements'][0x9] *= bK, lL['elements'][0xa] *= bK, bg['setFromRotationMatrix'](lL), bh['x'] = bF, bh['y'] = bG, bh['z'] = bH, this;
        }),
        'makePerspective': function(bf, bg, bh, bi, bF, bG) {
            void 0x0 === bG && console['warn']('THREE.Matrix4:\x20.makePerspective()\x20has\x20been\x20redefined\x20and\x20has\x20a\x20new\x20signature.\x20Please\x20check\x20the\x20docs.');
            var bH = this['elements'],
                bI = 0x2 * bF / (bg - bf),
                bJ = 0x2 * bF / (bh - bi),
                bK = (bg + bf) / (bg - bf),
                bL = (bh + bi) / (bh - bi),
                bM = -(bG + bF) / (bG - bF),
                bN = -0x2 * bG * bF / (bG - bF);
            return bH[0x0] = bI, bH[0x4] = 0x0, bH[0x8] = bK, bH[0xc] = 0x0, bH[0x1] = 0x0, bH[0x5] = bJ, bH[0x9] = bL, bH[0xd] = 0x0, bH[0x2] = 0x0, bH[0x6] = 0x0, bH[0xa] = bM, bH[0xe] = bN, bH[0x3] = 0x0, bH[0x7] = 0x0, bH[0xb] = -0x1, bH[0xf] = 0x0, this;
        },
        'makeOrthographic': function(bf, bg, bh, bi, bF, bG) {
            var bH = this['elements'],
                bI = 0x1 / (bg - bf),
                bJ = 0x1 / (bh - bi),
                bK = 0x1 / (bG - bF),
                bL = (bg + bf) * bI,
                bM = (bh + bi) * bJ,
                bN = (bG + bF) * bK;
            return bH[0x0] = 0x2 * bI, bH[0x4] = 0x0, bH[0x8] = 0x0, bH[0xc] = -bL, bH[0x1] = 0x0, bH[0x5] = 0x2 * bJ, bH[0x9] = 0x0, bH[0xd] = -bM, bH[0x2] = 0x0, bH[0x6] = 0x0, bH[0xa] = -0x2 * bK, bH[0xe] = -bN, bH[0x3] = 0x0, bH[0x7] = 0x0, bH[0xb] = 0x0, bH[0xf] = 0x1, this;
        },
        'equals': function(bf) {
            for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x10; bi++)
                if (bg[bi] !== bh[bi]) return !0x1;
            return !0x0;
        },
        'fromArray': function(bf, bg) {
            void 0x0 === bg && (bg = 0x0);
            for (var bh = 0x0; bh < 0x10; bh++) this['elements'][bh] = bf[bh + bg];
            return this;
        },
        'toArray': function(bf, bg) {
            void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0);
            var bh = this['elements'];
            return bf[bg] = bh[0x0], bf[bg + 0x1] = bh[0x1], bf[bg + 0x2] = bh[0x2], bf[bg + 0x3] = bh[0x3], bf[bg + 0x4] = bh[0x4], bf[bg + 0x5] = bh[0x5], bf[bg + 0x6] = bh[0x6], bf[bg + 0x7] = bh[0x7], bf[bg + 0x8] = bh[0x8], bf[bg + 0x9] = bh[0x9], bf[bg + 0xa] = bh[0xa], bf[bg + 0xb] = bh[0xb], bf[bg + 0xc] = bh[0xc], bf[bg + 0xd] = bh[0xd], bf[bg + 0xe] = bh[0xe], bf[bg + 0xf] = bh[0xf], bf;
        }
    });
    var vP = {
        'alphamap_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09diffuseColor.a\x20*=\x20texture2D(\x20alphaMap,\x20vUv\x20).g;\x0a#endif',
        'alphamap_pars_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09uniform\x20sampler2D\x20alphaMap;\x0a#endif',
        'alphatest_fragment': '#ifdef\x20ALPHATEST\x0a\x09if\x20(\x20diffuseColor.a\x20<\x20ALPHATEST\x20)\x20discard;\x0a#endif',
        'aomap_fragment': '#ifdef\x20USE_AOMAP\x0a\x09float\x20ambientOcclusion\x20=\x20(\x20texture2D(\x20aoMap,\x20vUv2\x20).r\x20-\x201.0\x20)\x20*\x20aoMapIntensity\x20+\x201.0;\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20ambientOcclusion;\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20*=\x20computeSpecularOcclusion(\x20dotNV,\x20ambientOcclusion,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a#endif',
        'aomap_pars_fragment': '#ifdef\x20USE_AOMAP\x0a\x09uniform\x20sampler2D\x20aoMap;\x0a\x09uniform\x20float\x20aoMapIntensity;\x0a#endif',
        'begin_vertex': 'vec3\x20transformed\x20=\x20vec3(\x20position\x20);',
        'beginnormal_vertex': 'vec3\x20objectNormal\x20=\x20vec3(\x20normal\x20);\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20objectTangent\x20=\x20vec3(\x20tangent.xyz\x20);\x0a#endif',
        'bsdfs': 'vec2\x20integrateSpecularBRDF(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20vec4\x20c0\x20=\x20vec4(\x20-\x201,\x20-\x200.0275,\x20-\x200.572,\x200.022\x20);\x0a\x09const\x20vec4\x20c1\x20=\x20vec4(\x201,\x200.0425,\x201.04,\x20-\x200.04\x20);\x0a\x09vec4\x20r\x20=\x20roughness\x20*\x20c0\x20+\x20c1;\x0a\x09float\x20a004\x20=\x20min(\x20r.x\x20*\x20r.x,\x20exp2(\x20-\x209.28\x20*\x20dotNV\x20)\x20)\x20*\x20r.x\x20+\x20r.y;\x0a\x09return\x20vec2(\x20-1.04,\x201.04\x20)\x20*\x20a004\x20+\x20r.zw;\x0a}\x0afloat\x20punctualLightIntensityToIrradianceFactor(\x20const\x20in\x20float\x20lightDistance,\x20const\x20in\x20float\x20cutoffDistance,\x20const\x20in\x20float\x20decayExponent\x20)\x20{\x0a#if\x20defined\x20(\x20PHYSICALLY_CORRECT_LIGHTS\x20)\x0a\x09float\x20distanceFalloff\x20=\x201.0\x20/\x20max(\x20pow(\x20lightDistance,\x20decayExponent\x20),\x200.01\x20);\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20)\x20{\x0a\x09\x09distanceFalloff\x20*=\x20pow2(\x20saturate(\x201.0\x20-\x20pow4(\x20lightDistance\x20/\x20cutoffDistance\x20)\x20)\x20);\x0a\x09}\x0a\x09return\x20distanceFalloff;\x0a#else\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20&&\x20decayExponent\x20>\x200.0\x20)\x20{\x0a\x09\x09return\x20pow(\x20saturate(\x20-lightDistance\x20/\x20cutoffDistance\x20+\x201.0\x20),\x20decayExponent\x20);\x0a\x09}\x0a\x09return\x201.0;\x0a#endif\x0a}\x0avec3\x20BRDF_Diffuse_Lambert(\x20const\x20in\x20vec3\x20diffuseColor\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20diffuseColor;\x0a}\x0avec3\x20F_Schlick(\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20dotLH\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotLH\x20-\x206.98316\x20)\x20*\x20dotLH\x20);\x0a\x09return\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x20fresnel\x20+\x20specularColor;\x0a}\x0avec3\x20F_Schlick_RoughnessDependent(\x20const\x20in\x20vec3\x20F0,\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotNV\x20-\x206.98316\x20)\x20*\x20dotNV\x20);\x0a\x09vec3\x20Fr\x20=\x20max(\x20vec3(\x201.0\x20-\x20roughness\x20),\x20F0\x20)\x20-\x20F0;\x0a\x09return\x20Fr\x20*\x20fresnel\x20+\x20F0;\x0a}\x0afloat\x20G_GGX_Smith(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gl\x20=\x20dotNL\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09float\x20gv\x20=\x20dotNV\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09return\x201.0\x20/\x20(\x20gl\x20*\x20gv\x20);\x0a}\x0afloat\x20G_GGX_SmithCorrelated(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gv\x20=\x20dotNL\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09float\x20gl\x20=\x20dotNV\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09return\x200.5\x20/\x20max(\x20gv\x20+\x20gl,\x20EPSILON\x20);\x0a}\x0afloat\x20D_GGX(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20denom\x20=\x20pow2(\x20dotNH\x20)\x20*\x20(\x20a2\x20-\x201.0\x20)\x20+\x201.0;\x0a\x09return\x20RECIPROCAL_PI\x20*\x20a2\x20/\x20pow2(\x20denom\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20alpha\x20=\x20pow2(\x20roughness\x20);\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20incidentLight.direction\x20)\x20);\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_GGX_SmithCorrelated(\x20alpha,\x20dotNL,\x20dotNV\x20);\x0a\x09float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0avec2\x20LTC_Uv(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20float\x20LUT_SIZE\x20\x20=\x2064.0;\x0a\x09const\x20float\x20LUT_SCALE\x20=\x20(\x20LUT_SIZE\x20-\x201.0\x20)\x20/\x20LUT_SIZE;\x0a\x09const\x20float\x20LUT_BIAS\x20\x20=\x200.5\x20/\x20LUT_SIZE;\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20N,\x20V\x20)\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20roughness,\x20sqrt(\x201.0\x20-\x20dotNV\x20)\x20);\x0a\x09uv\x20=\x20uv\x20*\x20LUT_SCALE\x20+\x20LUT_BIAS;\x0a\x09return\x20uv;\x0a}\x0afloat\x20LTC_ClippedSphereFormFactor(\x20const\x20in\x20vec3\x20f\x20)\x20{\x0a\x09float\x20l\x20=\x20length(\x20f\x20);\x0a\x09return\x20max(\x20(\x20l\x20*\x20l\x20+\x20f.z\x20)\x20/\x20(\x20l\x20+\x201.0\x20),\x200.0\x20);\x0a}\x0avec3\x20LTC_EdgeVectorFormFactor(\x20const\x20in\x20vec3\x20v1,\x20const\x20in\x20vec3\x20v2\x20)\x20{\x0a\x09float\x20x\x20=\x20dot(\x20v1,\x20v2\x20);\x0a\x09float\x20y\x20=\x20abs(\x20x\x20);\x0a\x09float\x20a\x20=\x200.8543985\x20+\x20(\x200.4965155\x20+\x200.0145206\x20*\x20y\x20)\x20*\x20y;\x0a\x09float\x20b\x20=\x203.4175940\x20+\x20(\x204.1616724\x20+\x20y\x20)\x20*\x20y;\x0a\x09float\x20v\x20=\x20a\x20/\x20b;\x0a\x09float\x20theta_sintheta\x20=\x20(\x20x\x20>\x200.0\x20)\x20?\x20v\x20:\x200.5\x20*\x20inversesqrt(\x20max(\x201.0\x20-\x20x\x20*\x20x,\x201e-7\x20)\x20)\x20-\x20v;\x0a\x09return\x20cross(\x20v1,\x20v2\x20)\x20*\x20theta_sintheta;\x0a}\x0avec3\x20LTC_Evaluate(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20vec3\x20P,\x20const\x20in\x20mat3\x20mInv,\x20const\x20in\x20vec3\x20rectCoords[\x204\x20]\x20)\x20{\x0a\x09vec3\x20v1\x20=\x20rectCoords[\x201\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20v2\x20=\x20rectCoords[\x203\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20lightNormal\x20=\x20cross(\x20v1,\x20v2\x20);\x0a\x09if(\x20dot(\x20lightNormal,\x20P\x20-\x20rectCoords[\x200\x20]\x20)\x20<\x200.0\x20)\x20return\x20vec3(\x200.0\x20);\x0a\x09vec3\x20T1,\x20T2;\x0a\x09T1\x20=\x20normalize(\x20V\x20-\x20N\x20*\x20dot(\x20V,\x20N\x20)\x20);\x0a\x09T2\x20=\x20-\x20cross(\x20N,\x20T1\x20);\x0a\x09mat3\x20mat\x20=\x20mInv\x20*\x20transposeMat3(\x20mat3(\x20T1,\x20T2,\x20N\x20)\x20);\x0a\x09vec3\x20coords[\x204\x20];\x0a\x09coords[\x200\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x200\x20]\x20-\x20P\x20);\x0a\x09coords[\x201\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x201\x20]\x20-\x20P\x20);\x0a\x09coords[\x202\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x202\x20]\x20-\x20P\x20);\x0a\x09coords[\x203\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x203\x20]\x20-\x20P\x20);\x0a\x09coords[\x200\x20]\x20=\x20normalize(\x20coords[\x200\x20]\x20);\x0a\x09coords[\x201\x20]\x20=\x20normalize(\x20coords[\x201\x20]\x20);\x0a\x09coords[\x202\x20]\x20=\x20normalize(\x20coords[\x202\x20]\x20);\x0a\x09coords[\x203\x20]\x20=\x20normalize(\x20coords[\x203\x20]\x20);\x0a\x09vec3\x20vectorFormFactor\x20=\x20vec3(\x200.0\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x200\x20],\x20coords[\x201\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x201\x20],\x20coords[\x202\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x202\x20],\x20coords[\x203\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x203\x20],\x20coords[\x200\x20]\x20);\x0a\x09float\x20result\x20=\x20LTC_ClippedSphereFormFactor(\x20vectorFormFactor\x20);\x0a\x09return\x20vec3(\x20result\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09return\x20specularColor\x20*\x20brdf.x\x20+\x20brdf.y;\x0a}\x0avoid\x20BRDF_Specular_Multiscattering_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick_RoughnessDependent(\x20specularColor,\x20dotNV,\x20roughness\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09vec3\x20FssEss\x20=\x20F\x20*\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ess\x20=\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ems\x20=\x201.0\x20-\x20Ess;\x0a\x09vec3\x20Favg\x20=\x20specularColor\x20+\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x200.047619;\x09vec3\x20Fms\x20=\x20FssEss\x20*\x20Favg\x20/\x20(\x201.0\x20-\x20Ems\x20*\x20Favg\x20);\x0a\x09singleScatter\x20+=\x20FssEss;\x0a\x09multiScatter\x20+=\x20Fms\x20*\x20Ems;\x0a}\x0afloat\x20G_BlinnPhong_Implicit(\x20)\x20{\x0a\x09return\x200.25;\x0a}\x0afloat\x20D_BlinnPhong(\x20const\x20in\x20float\x20shininess,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20(\x20shininess\x20*\x200.5\x20+\x201.0\x20)\x20*\x20pow(\x20dotNH,\x20shininess\x20);\x0a}\x0avec3\x20BRDF_Specular_BlinnPhong(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20shininess\x20)\x20{\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_BlinnPhong_Implicit(\x20);\x0a\x09float\x20D\x20=\x20D_BlinnPhong(\x20shininess,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0afloat\x20GGXRoughnessToBlinnExponent(\x20const\x20in\x20float\x20ggxRoughness\x20)\x20{\x0a\x09return\x20(\x202.0\x20/\x20pow2(\x20ggxRoughness\x20+\x200.0001\x20)\x20-\x202.0\x20);\x0a}\x0afloat\x20BlinnExponentToGGXRoughness(\x20const\x20in\x20float\x20blinnExponent\x20)\x20{\x0a\x09return\x20sqrt(\x202.0\x20/\x20(\x20blinnExponent\x20+\x202.0\x20)\x20);\x0a}',
        'bumpmap_pars_fragment': '#ifdef\x20USE_BUMPMAP\x0a\x09uniform\x20sampler2D\x20bumpMap;\x0a\x09uniform\x20float\x20bumpScale;\x0a\x09vec2\x20dHdxy_fwd()\x20{\x0a\x09\x09vec2\x20dSTdx\x20=\x20dFdx(\x20vUv\x20);\x0a\x09\x09vec2\x20dSTdy\x20=\x20dFdy(\x20vUv\x20);\x0a\x09\x09float\x20Hll\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20).x;\x0a\x09\x09float\x20dBx\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdx\x20).x\x20-\x20Hll;\x0a\x09\x09float\x20dBy\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdy\x20).x\x20-\x20Hll;\x0a\x09\x09return\x20vec2(\x20dBx,\x20dBy\x20);\x0a\x09}\x0a\x09vec3\x20perturbNormalArb(\x20vec3\x20surf_pos,\x20vec3\x20surf_norm,\x20vec2\x20dHdxy\x20)\x20{\x0a\x09\x09vec3\x20vSigmaX\x20=\x20vec3(\x20dFdx(\x20surf_pos.x\x20),\x20dFdx(\x20surf_pos.y\x20),\x20dFdx(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vSigmaY\x20=\x20vec3(\x20dFdy(\x20surf_pos.x\x20),\x20dFdy(\x20surf_pos.y\x20),\x20dFdy(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vN\x20=\x20surf_norm;\x0a\x09\x09vec3\x20R1\x20=\x20cross(\x20vSigmaY,\x20vN\x20);\x0a\x09\x09vec3\x20R2\x20=\x20cross(\x20vN,\x20vSigmaX\x20);\x0a\x09\x09float\x20fDet\x20=\x20dot(\x20vSigmaX,\x20R1\x20);\x0a\x09\x09fDet\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09vec3\x20vGrad\x20=\x20sign(\x20fDet\x20)\x20*\x20(\x20dHdxy.x\x20*\x20R1\x20+\x20dHdxy.y\x20*\x20R2\x20);\x0a\x09\x09return\x20normalize(\x20abs(\x20fDet\x20)\x20*\x20surf_norm\x20-\x20vGrad\x20);\x0a\x09}\x0a#endif',
        'clipping_planes_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09vec4\x20plane;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20UNION_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09if\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20discard;\x0a\x09}\x0a\x09#if\x20UNION_CLIPPING_PLANES\x20<\x20NUM_CLIPPING_PLANES\x0a\x09\x09bool\x20clipped\x20=\x20true;\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x20UNION_CLIPPING_PLANES;\x20i\x20<\x20NUM_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09\x09clipped\x20=\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20&&\x20clipped;\x0a\x09\x09}\x0a\x09\x09if\x20(\x20clipped\x20)\x20discard;\x0a\x09#endif\x0a#endif',
        'clipping_planes_pars_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09\x09varying\x20vec3\x20vViewPosition;\x0a\x09#endif\x0a\x09uniform\x20vec4\x20clippingPlanes[\x20NUM_CLIPPING_PLANES\x20];\x0a#endif',
        'clipping_planes_pars_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif',
        'clipping_planes_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif',
        'color_fragment': '#ifdef\x20USE_COLOR\x0a\x09diffuseColor.rgb\x20*=\x20vColor;\x0a#endif',
        'color_pars_fragment': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
        'color_pars_vertex': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
        'color_vertex': '#ifdef\x20USE_COLOR\x0a\x09vColor.xyz\x20=\x20color.xyz;\x0a#endif',
        'common': '#define\x20PI\x203.14159265359\x0a#define\x20PI2\x206.28318530718\x0a#define\x20PI_HALF\x201.5707963267949\x0a#define\x20RECIPROCAL_PI\x200.31830988618\x0a#define\x20RECIPROCAL_PI2\x200.15915494\x0a#define\x20LOG2\x201.442695\x0a#define\x20EPSILON\x201e-6\x0a#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#define\x20whiteCompliment(a)\x20(\x201.0\x20-\x20saturate(\x20a\x20)\x20)\x0afloat\x20pow2(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x;\x20}\x0afloat\x20pow3(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x*x;\x20}\x0afloat\x20pow4(\x20const\x20in\x20float\x20x\x20)\x20{\x20float\x20x2\x20=\x20x*x;\x20return\x20x2*x2;\x20}\x0afloat\x20average(\x20const\x20in\x20vec3\x20color\x20)\x20{\x20return\x20dot(\x20color,\x20vec3(\x200.3333\x20)\x20);\x20}\x0ahighp\x20float\x20rand(\x20const\x20in\x20vec2\x20uv\x20)\x20{\x0a\x09const\x20highp\x20float\x20a\x20=\x2012.9898,\x20b\x20=\x2078.233,\x20c\x20=\x2043758.5453;\x0a\x09highp\x20float\x20dt\x20=\x20dot(\x20uv.xy,\x20vec2(\x20a,b\x20)\x20),\x20sn\x20=\x20mod(\x20dt,\x20PI\x20);\x0a\x09return\x20fract(sin(sn)\x20*\x20c);\x0a}\x0astruct\x20IncidentLight\x20{\x0a\x09vec3\x20color;\x0a\x09vec3\x20direction;\x0a\x09bool\x20visible;\x0a};\x0astruct\x20ReflectedLight\x20{\x0a\x09vec3\x20directDiffuse;\x0a\x09vec3\x20directSpecular;\x0a\x09vec3\x20indirectDiffuse;\x0a\x09vec3\x20indirectSpecular;\x0a};\x0astruct\x20GeometricContext\x20{\x0a\x09vec3\x20position;\x0a\x09vec3\x20normal;\x0a\x09vec3\x20viewDir;\x0a};\x0avec3\x20transformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20matrix\x20*\x20vec4(\x20dir,\x200.0\x20)\x20).xyz\x20);\x0a}\x0avec3\x20inverseTransformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20vec4(\x20dir,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);\x0a}\x0avec3\x20projectOnPlane(in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09float\x20distance\x20=\x20dot(\x20planeNormal,\x20point\x20-\x20pointOnPlane\x20);\x0a\x09return\x20-\x20distance\x20*\x20planeNormal\x20+\x20point;\x0a}\x0afloat\x20sideOfPlane(\x20in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20sign(\x20dot(\x20point\x20-\x20pointOnPlane,\x20planeNormal\x20)\x20);\x0a}\x0avec3\x20linePlaneIntersect(\x20in\x20vec3\x20pointOnLine,\x20in\x20vec3\x20lineDirection,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20lineDirection\x20*\x20(\x20dot(\x20planeNormal,\x20pointOnPlane\x20-\x20pointOnLine\x20)\x20/\x20dot(\x20planeNormal,\x20lineDirection\x20)\x20)\x20+\x20pointOnLine;\x0a}\x0amat3\x20transposeMat3(\x20const\x20in\x20mat3\x20m\x20)\x20{\x0a\x09mat3\x20tmp;\x0a\x09tmp[\x200\x20]\x20=\x20vec3(\x20m[\x200\x20].x,\x20m[\x201\x20].x,\x20m[\x202\x20].x\x20);\x0a\x09tmp[\x201\x20]\x20=\x20vec3(\x20m[\x200\x20].y,\x20m[\x201\x20].y,\x20m[\x202\x20].y\x20);\x0a\x09tmp[\x202\x20]\x20=\x20vec3(\x20m[\x200\x20].z,\x20m[\x201\x20].z,\x20m[\x202\x20].z\x20);\x0a\x09return\x20tmp;\x0a}\x0afloat\x20linearToRelativeLuminance(\x20const\x20in\x20vec3\x20color\x20)\x20{\x0a\x09vec3\x20weights\x20=\x20vec3(\x200.2126,\x200.7152,\x200.0722\x20);\x0a\x09return\x20dot(\x20weights,\x20color.rgb\x20);\x0a}',
        'cube_uv_reflection_fragment': '#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a#define\x20cubeUV_textureSize\x20(1024.0)\x0aint\x20getFaceFromDirection(vec3\x20direction)\x20{\x0a\x09vec3\x20absDirection\x20=\x20abs(direction);\x0a\x09int\x20face\x20=\x20-1;\x0a\x09if(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x09\x09if(absDirection.x\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200\x20:\x203;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09if(absDirection.z\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202\x20:\x205;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09return\x20face;\x0a}\x0a#define\x20cubeUV_maxLods1\x20\x20(log2(cubeUV_textureSize*0.25)\x20-\x201.0)\x0a#define\x20cubeUV_rangeClamp\x20(exp2((6.0\x20-\x201.0)\x20*\x202.0))\x0avec2\x20MipLevelInfo(\x20vec3\x20vec,\x20float\x20roughnessLevel,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20scale\x20=\x20exp2(cubeUV_maxLods1\x20-\x20roughnessLevel);\x0a\x09float\x20dxRoughness\x20=\x20dFdx(roughness);\x0a\x09float\x20dyRoughness\x20=\x20dFdy(roughness);\x0a\x09vec3\x20dx\x20=\x20dFdx(\x20vec\x20*\x20scale\x20*\x20dxRoughness\x20);\x0a\x09vec3\x20dy\x20=\x20dFdy(\x20vec\x20*\x20scale\x20*\x20dyRoughness\x20);\x0a\x09float\x20d\x20=\x20max(\x20dot(\x20dx,\x20dx\x20),\x20dot(\x20dy,\x20dy\x20)\x20);\x0a\x09d\x20=\x20clamp(d,\x201.0,\x20cubeUV_rangeClamp);\x0a\x09float\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x09return\x20vec2(floor(mipLevel),\x20fract(mipLevel));\x0a}\x0a#define\x20cubeUV_maxLods2\x20(log2(cubeUV_textureSize*0.25)\x20-\x202.0)\x0a#define\x20cubeUV_rcpTextureSize\x20(1.0\x20/\x20cubeUV_textureSize)\x0avec2\x20getCubeUV(vec3\x20direction,\x20float\x20roughnessLevel,\x20float\x20mipLevel)\x20{\x0a\x09mipLevel\x20=\x20roughnessLevel\x20>\x20cubeUV_maxLods2\x20-\x203.0\x20?\x200.0\x20:\x20mipLevel;\x0a\x09float\x20a\x20=\x2016.0\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20exp2_packed\x20=\x20exp2(\x20vec2(\x20roughnessLevel,\x20mipLevel\x20)\x20);\x0a\x09vec2\x20rcp_exp2_packed\x20=\x20vec2(\x201.0\x20)\x20/\x20exp2_packed;\x0a\x09float\x20powScale\x20=\x20exp2_packed.x\x20*\x20exp2_packed.y;\x0a\x09float\x20scale\x20=\x20rcp_exp2_packed.x\x20*\x20rcp_exp2_packed.y\x20*\x200.25;\x0a\x09float\x20mipOffset\x20=\x200.75*(1.0\x20-\x20rcp_exp2_packed.y)\x20*\x20rcp_exp2_packed.x;\x0a\x09bool\x20bRes\x20=\x20mipLevel\x20==\x200.0;\x0a\x09scale\x20=\x20\x20bRes\x20&&\x20(scale\x20<\x20a)\x20?\x20a\x20:\x20scale;\x0a\x09vec3\x20r;\x0a\x09vec2\x20offset;\x0a\x09int\x20face\x20=\x20getFaceFromDirection(direction);\x0a\x09float\x20rcpPowScale\x20=\x201.0\x20/\x20powScale;\x0a\x09if(\x20face\x20==\x200)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20-direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x201)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x202)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x203)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x204)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20-direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20-direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09r\x20=\x20normalize(r);\x0a\x09float\x20texelOffset\x20=\x200.5\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20s\x20=\x20(\x20r.yz\x20/\x20abs(\x20r.x\x20)\x20+\x20vec2(\x201.0\x20)\x20)\x20*\x200.5;\x0a\x09vec2\x20base\x20=\x20offset\x20+\x20vec2(\x20texelOffset\x20);\x0a\x09return\x20base\x20+\x20s\x20*\x20(\x20scale\x20-\x202.0\x20*\x20texelOffset\x20);\x0a}\x0a#define\x20cubeUV_maxLods3\x20(log2(cubeUV_textureSize*0.25)\x20-\x203.0)\x0avec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20reflectedDirection,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20roughnessVal\x20=\x20roughness*\x20cubeUV_maxLods3;\x0a\x09float\x20r1\x20=\x20floor(roughnessVal);\x0a\x09float\x20r2\x20=\x20r1\x20+\x201.0;\x0a\x09float\x20t\x20=\x20fract(roughnessVal);\x0a\x09vec2\x20mipInfo\x20=\x20MipLevelInfo(reflectedDirection,\x20r1,\x20roughness);\x0a\x09float\x20s\x20=\x20mipInfo.y;\x0a\x09float\x20level0\x20=\x20mipInfo.x;\x0a\x09float\x20level1\x20=\x20level0\x20+\x201.0;\x0a\x09level1\x20=\x20level1\x20>\x205.0\x20?\x205.0\x20:\x20level1;\x0a\x09level0\x20+=\x20min(\x20floor(\x20s\x20+\x200.5\x20),\x205.0\x20);\x0a\x09vec2\x20uv_10\x20=\x20getCubeUV(reflectedDirection,\x20r1,\x20level0);\x0a\x09vec4\x20color10\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_10));\x0a\x09vec2\x20uv_20\x20=\x20getCubeUV(reflectedDirection,\x20r2,\x20level0);\x0a\x09vec4\x20color20\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_20));\x0a\x09vec4\x20result\x20=\x20mix(color10,\x20color20,\x20t);\x0a\x09return\x20vec4(result.rgb,\x201.0);\x0a}\x0a#endif',
        'defaultnormal_vertex': 'vec3\x20transformedNormal\x20=\x20normalMatrix\x20*\x20objectNormal;\x0a#ifdef\x20FLIP_SIDED\x0a\x09transformedNormal\x20=\x20-\x20transformedNormal;\x0a#endif\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20transformedTangent\x20=\x20normalMatrix\x20*\x20objectTangent;\x0a\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09transformedTangent\x20=\x20-\x20transformedTangent;\x0a\x09#endif\x0a#endif',
        'displacementmap_pars_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09uniform\x20sampler2D\x20displacementMap;\x0a\x09uniform\x20float\x20displacementScale;\x0a\x09uniform\x20float\x20displacementBias;\x0a#endif',
        'displacementmap_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09transformed\x20+=\x20normalize(\x20objectNormal\x20)\x20*\x20(\x20texture2D(\x20displacementMap,\x20uv\x20).x\x20*\x20displacementScale\x20+\x20displacementBias\x20);\x0a#endif',
        'emissivemap_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09vec4\x20emissiveColor\x20=\x20texture2D(\x20emissiveMap,\x20vUv\x20);\x0a\x09emissiveColor.rgb\x20=\x20emissiveMapTexelToLinear(\x20emissiveColor\x20).rgb;\x0a\x09totalEmissiveRadiance\x20*=\x20emissiveColor.rgb;\x0a#endif',
        'emissivemap_pars_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09uniform\x20sampler2D\x20emissiveMap;\x0a#endif',
        'encodings_fragment': 'gl_FragColor\x20=\x20linearToOutputTexel(\x20gl_FragColor\x20);',
        'encodings_pars_fragment': '\x0avec4\x20LinearToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20value;\x0a}\x0avec4\x20GammaToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearToGamma(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x201.0\x20/\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20sRGBToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb\x20*\x200.9478672986\x20+\x20vec3(\x200.0521327014\x20),\x20vec3(\x202.4\x20)\x20),\x20value.rgb\x20*\x200.0773993808,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.04045\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearTosRGB(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb,\x20vec3(\x200.41666\x20)\x20)\x20*\x201.055\x20-\x20vec3(\x200.055\x20),\x20value.rgb\x20*\x2012.92,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.0031308\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20RGBEToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20exp2(\x20value.a\x20*\x20255.0\x20-\x20128.0\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBE(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20maxComponent\x20=\x20max(\x20max(\x20value.r,\x20value.g\x20),\x20value.b\x20);\x0a\x09float\x20fExp\x20=\x20clamp(\x20ceil(\x20log2(\x20maxComponent\x20)\x20),\x20-128.0,\x20127.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20exp2(\x20fExp\x20),\x20(\x20fExp\x20+\x20128.0\x20)\x20/\x20255.0\x20);\x0a}\x0avec4\x20RGBMToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20value.a\x20*\x20maxRange,\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBM(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20M\x20=\x20clamp(\x20maxRGB\x20/\x20maxRange,\x200.0,\x201.0\x20);\x0a\x09M\x20=\x20ceil(\x20M\x20*\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20(\x20M\x20*\x20maxRange\x20),\x20M\x20);\x0a}\x0avec4\x20RGBDToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20(\x20maxRange\x20/\x20255.0\x20)\x20/\x20value.a\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBD(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20D\x20=\x20max(\x20maxRange\x20/\x20maxRGB,\x201.0\x20);\x0a\x09D\x20=\x20min(\x20floor(\x20D\x20)\x20/\x20255.0,\x201.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20D\x20*\x20(\x20255.0\x20/\x20maxRange\x20)\x20),\x20D\x20);\x0a}\x0aconst\x20mat3\x20cLogLuvM\x20=\x20mat3(\x200.2209,\x200.3390,\x200.4184,\x200.1138,\x200.6780,\x200.7319,\x200.0102,\x200.1130,\x200.2969\x20);\x0avec4\x20LinearToLogLuv(\x20in\x20vec4\x20value\x20)\x20\x20{\x0a\x09vec3\x20Xp_Y_XYZp\x20=\x20cLogLuvM\x20*\x20value.rgb;\x0a\x09Xp_Y_XYZp\x20=\x20max(\x20Xp_Y_XYZp,\x20vec3(\x201e-6,\x201e-6,\x201e-6\x20)\x20);\x0a\x09vec4\x20vResult;\x0a\x09vResult.xy\x20=\x20Xp_Y_XYZp.xy\x20/\x20Xp_Y_XYZp.z;\x0a\x09float\x20Le\x20=\x202.0\x20*\x20log2(Xp_Y_XYZp.y)\x20+\x20127.0;\x0a\x09vResult.w\x20=\x20fract(\x20Le\x20);\x0a\x09vResult.z\x20=\x20(\x20Le\x20-\x20(\x20floor(\x20vResult.w\x20*\x20255.0\x20)\x20)\x20/\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vResult;\x0a}\x0aconst\x20mat3\x20cLogLuvInverseM\x20=\x20mat3(\x206.0014,\x20-2.7008,\x20-1.7996,\x20-1.3320,\x203.1029,\x20-5.7721,\x200.3008,\x20-1.0882,\x205.6268\x20);\x0avec4\x20LogLuvToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20Le\x20=\x20value.z\x20*\x20255.0\x20+\x20value.w;\x0a\x09vec3\x20Xp_Y_XYZp;\x0a\x09Xp_Y_XYZp.y\x20=\x20exp2(\x20(\x20Le\x20-\x20127.0\x20)\x20/\x202.0\x20);\x0a\x09Xp_Y_XYZp.z\x20=\x20Xp_Y_XYZp.y\x20/\x20value.y;\x0a\x09Xp_Y_XYZp.x\x20=\x20value.x\x20*\x20Xp_Y_XYZp.z;\x0a\x09vec3\x20vRGB\x20=\x20cLogLuvInverseM\x20*\x20Xp_Y_XYZp.rgb;\x0a\x09return\x20vec4(\x20max(\x20vRGB,\x200.0\x20),\x201.0\x20);\x0a}',
        'envmap_fragment': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20vWorldPosition\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#else\x0a\x09\x09vec3\x20reflectVec\x20=\x20vReflect;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09vec4\x20envColor\x20=\x20textureCube(\x20envMap,\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20)\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09vec2\x20sampleUV;\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20sampleUV\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,\x200.0,\x201.0\x20)\x20);\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5\x20);\x0a\x09#else\x0a\x09\x09vec4\x20envColor\x20=\x20vec4(\x200.0\x20);\x0a\x09#endif\x0a\x09envColor\x20=\x20envMapTexelToLinear(\x20envColor\x20);\x0a\x09#ifdef\x20ENVMAP_BLENDING_MULTIPLY\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20outgoingLight\x20*\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_MIX\x20)\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_ADD\x20)\x0a\x09\x09outgoingLight\x20+=\x20envColor.xyz\x20*\x20specularStrength\x20*\x20reflectivity;\x0a\x09#endif\x0a#endif',
        'envmap_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09uniform\x20float\x20reflectivity;\x0a\x09uniform\x20float\x20envMapIntensity;\x0a#endif\x0a#ifdef\x20USE_ENVMAP\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20(\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09uniform\x20samplerCube\x20envMap;\x0a\x09#else\x0a\x09\x09uniform\x20sampler2D\x20envMap;\x0a\x09#endif\x0a\x09uniform\x20float\x20flipEnvMap;\x0a\x09uniform\x20int\x20maxMipLevel;\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09#endif\x0a#endif',
        'envmap_pars_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#endif\x0a#endif',
        'envmap_physical_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09vec3\x20getLightProbeIndirectIrradiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryVec,\x201.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20vec4(\x200.0\x20);\x0a\x09\x09#endif\x0a\x09\x09return\x20PI\x20*\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a\x09float\x20getSpecularMIPLevel(\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09float\x20maxMIPLevelScalar\x20=\x20float(\x20maxMIPLevel\x20);\x0a\x09\x09float\x20desiredMIPLevel\x20=\x20maxMIPLevelScalar\x20+\x200.79248\x20-\x200.5\x20*\x20log2(\x20pow2(\x20blinnShininessExponent\x20)\x20+\x201.0\x20);\x0a\x09\x09return\x20clamp(\x20desiredMIPLevel,\x200.0,\x20maxMIPLevelScalar\x20);\x0a\x09}\x0a\x09vec3\x20getLightProbeIndirectRadiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20-geometry.viewDir,\x20geometry.normal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20-geometry.viewDir,\x20geometry.normal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09\x09reflectVec\x20=\x20inverseTransformDirection(\x20reflectVec,\x20viewMatrix\x20);\x0a\x09\x09float\x20specularMIPLevel\x20=\x20getSpecularMIPLevel(\x20blinnShininessExponent,\x20maxMIPLevel\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryReflectVec,\x20BlinnExponentToGGXRoughness(blinnShininessExponent\x20));\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09\x09vec2\x20sampleUV;\x0a\x09\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,0.0,1.0\x20)\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#endif\x0a\x09\x09return\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a#endif',
        'envmap_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a\x09#else\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20worldPosition.xyz\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20transformedNormal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vReflect\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vReflect\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
        'fog_vertex': '#ifdef\x20USE_FOG\x0a\x09fogDepth\x20=\x20-mvPosition.z;\x0a#endif',
        'fog_pars_vertex': '#ifdef\x20USE_FOG\x0a\x09varying\x20float\x20fogDepth;\x0a#endif',
        'fog_fragment': '#ifdef\x20USE_FOG\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09float\x20fogFactor\x20=\x20whiteCompliment(\x20exp2(\x20-\x20fogDensity\x20*\x20fogDensity\x20*\x20fogDepth\x20*\x20fogDepth\x20*\x20LOG2\x20)\x20);\x0a\x09#else\x0a\x09\x09float\x20fogFactor\x20=\x20smoothstep(\x20fogNear,\x20fogFar,\x20fogDepth\x20);\x0a\x09#endif\x0a\x09gl_FragColor.rgb\x20=\x20mix(\x20gl_FragColor.rgb,\x20fogColor,\x20fogFactor\x20);\x0a#endif',
        'fog_pars_fragment': '#ifdef\x20USE_FOG\x0a\x09uniform\x20vec3\x20fogColor;\x0a\x09varying\x20float\x20fogDepth;\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09uniform\x20float\x20fogDensity;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20fogNear;\x0a\x09\x09uniform\x20float\x20fogFar;\x0a\x09#endif\x0a#endif',
        'gradientmap_pars_fragment': '#ifdef\x20TOON\x0a\x09uniform\x20sampler2D\x20gradientMap;\x0a\x09vec3\x20getGradientIrradiance(\x20vec3\x20normal,\x20vec3\x20lightDirection\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20normal,\x20lightDirection\x20);\x0a\x09\x09vec2\x20coord\x20=\x20vec2(\x20dotNL\x20*\x200.5\x20+\x200.5,\x200.0\x20);\x0a\x09\x09#ifdef\x20USE_GRADIENTMAP\x0a\x09\x09\x09return\x20texture2D(\x20gradientMap,\x20coord\x20).rgb;\x0a\x09\x09#else\x0a\x09\x09\x09return\x20(\x20coord.x\x20<\x200.7\x20)\x20?\x20vec3(\x200.7\x20)\x20:\x20vec3(\x201.0\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
        'lightmap_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20PI\x20*\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a#endif',
        'lightmap_pars_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09uniform\x20sampler2D\x20lightMap;\x0a\x09uniform\x20float\x20lightMapIntensity;\x0a#endif',
        'lights_lambert_vertex': 'vec3\x20diffuse\x20=\x20vec3(\x201.0\x20);\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20mvPosition.xyz;\x0ageometry.normal\x20=\x20normalize(\x20transformedNormal\x20);\x0ageometry.viewDir\x20=\x20normalize(\x20-mvPosition.xyz\x20);\x0aGeometricContext\x20backGeometry;\x0abackGeometry.position\x20=\x20geometry.position;\x0abackGeometry.normal\x20=\x20-geometry.normal;\x0abackGeometry.viewDir\x20=\x20geometry.viewDir;\x0avLightFront\x20=\x20vec3(\x200.0\x20);\x0avIndirectFront\x20=\x20vec3(\x200.0\x20);\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09vLightBack\x20=\x20vec3(\x200.0\x20);\x0a\x09vIndirectBack\x20=\x20vec3(\x200.0\x20);\x0a#endif\x0aIncidentLight\x20directLight;\x0afloat\x20dotNL;\x0avec3\x20directLightColor_Diffuse;\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vIndirectFront\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vIndirectBack\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20backGeometry\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
        'lights_pars_begin': 'uniform\x20vec3\x20ambientLightColor;\x0auniform\x20vec3\x20lightProbe[\x209\x20];\x0avec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{\x0a\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;\x0a\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;\x0a\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;\x0a\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);\x0a\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);\x0a\x09return\x20result;\x0a}\x0avec3\x20getLightProbeIrradiance(\x20const\x20in\x20vec3\x20lightProbe[\x209\x20],\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20lightProbe\x20);\x0a\x09return\x20irradiance;\x0a}\x0avec3\x20getAmbientLightIrradiance(\x20const\x20in\x20vec3\x20ambientLightColor\x20)\x20{\x0a\x09vec3\x20irradiance\x20=\x20ambientLightColor;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09return\x20irradiance;\x0a}\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09struct\x20DirectionalLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a\x09void\x20getDirectionalDirectLightIrradiance(\x20const\x20in\x20DirectionalLight\x20directionalLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09directLight.color\x20=\x20directionalLight.color;\x0a\x09\x09directLight.direction\x20=\x20directionalLight.direction;\x0a\x09\x09directLight.visible\x20=\x20true;\x0a\x09}\x0a#endif\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09struct\x20PointLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09float\x20shadowCameraNear;\x0a\x09\x09float\x20shadowCameraFar;\x0a\x09};\x0a\x09uniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a\x09void\x20getPointDirectLightIrradiance(\x20const\x20in\x20PointLight\x20pointLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20pointLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09directLight.color\x20=\x20pointLight.color;\x0a\x09\x09directLight.color\x20*=\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20pointLight.distance,\x20pointLight.decay\x20);\x0a\x09\x09directLight.visible\x20=\x20(\x20directLight.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09struct\x20SpotLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09float\x20coneCos;\x0a\x09\x09float\x20penumbraCos;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20SpotLight\x20spotLights[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09void\x20getSpotDirectLightIrradiance(\x20const\x20in\x20SpotLight\x20spotLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20spotLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09float\x20angleCos\x20=\x20dot(\x20directLight.direction,\x20spotLight.direction\x20);\x0a\x09\x09if\x20(\x20angleCos\x20>\x20spotLight.coneCos\x20)\x20{\x0a\x09\x09\x09float\x20spotEffect\x20=\x20smoothstep(\x20spotLight.coneCos,\x20spotLight.penumbraCos,\x20angleCos\x20);\x0a\x09\x09\x09directLight.color\x20=\x20spotLight.color;\x0a\x09\x09\x09directLight.color\x20*=\x20spotEffect\x20*\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20spotLight.distance,\x20spotLight.decay\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20true;\x0a\x09\x09}\x20else\x20{\x0a\x09\x09\x09directLight.color\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20false;\x0a\x09\x09}\x0a\x09}\x0a#endif\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09struct\x20RectAreaLight\x20{\x0a\x09\x09vec3\x20color;\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20halfWidth;\x0a\x09\x09vec3\x20halfHeight;\x0a\x09};\x0a\x09uniform\x20sampler2D\x20ltc_1;\x09uniform\x20sampler2D\x20ltc_2;\x0a\x09uniform\x20RectAreaLight\x20rectAreaLights[\x20NUM_RECT_AREA_LIGHTS\x20];\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09struct\x20HemisphereLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20skyColor;\x0a\x09\x09vec3\x20groundColor;\x0a\x09};\x0a\x09uniform\x20HemisphereLight\x20hemisphereLights[\x20NUM_HEMI_LIGHTS\x20];\x0a\x09vec3\x20getHemisphereLightIrradiance(\x20const\x20in\x20HemisphereLight\x20hemiLight,\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20geometry.normal,\x20hemiLight.direction\x20);\x0a\x09\x09float\x20hemiDiffuseWeight\x20=\x200.5\x20*\x20dotNL\x20+\x200.5;\x0a\x09\x09vec3\x20irradiance\x20=\x20mix(\x20hemiLight.groundColor,\x20hemiLight.skyColor,\x20hemiDiffuseWeight\x20);\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09irradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09return\x20irradiance;\x0a\x09}\x0a#endif',
        'lights_phong_fragment': 'BlinnPhongMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb;\x0amaterial.specularColor\x20=\x20specular;\x0amaterial.specularShininess\x20=\x20shininess;\x0amaterial.specularStrength\x20=\x20specularStrength;',
        'lights_phong_pars_fragment': 'varying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0astruct\x20BlinnPhongMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09vec3\x09specularColor;\x0a\x09float\x09specularShininess;\x0a\x09float\x09specularStrength;\x0a};\x0avoid\x20RE_Direct_BlinnPhong(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifdef\x20TOON\x0a\x09\x09vec3\x20irradiance\x20=\x20getGradientIrradiance(\x20geometry.normal,\x20directLight.direction\x20)\x20*\x20directLight.color;\x0a\x09#else\x0a\x09\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#endif\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_Specular_BlinnPhong(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularShininess\x20)\x20*\x20material.specularStrength;\x0a}\x0avoid\x20RE_IndirectDiffuse_BlinnPhong(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_BlinnPhong\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_BlinnPhong\x0a#define\x20Material_LightProbeLOD(\x20material\x20)\x09(0)',
        'lights_physical_fragment': 'PhysicalMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb\x20*\x20(\x201.0\x20-\x20metalnessFactor\x20);\x0amaterial.specularRoughness\x20=\x20clamp(\x20roughnessFactor,\x200.04,\x201.0\x20);\x0a#ifdef\x20STANDARD\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a#else\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20MAXIMUM_SPECULAR_COEFFICIENT\x20*\x20pow2(\x20reflectivity\x20)\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a\x09material.clearCoat\x20=\x20saturate(\x20clearCoat\x20);\x09material.clearCoatRoughness\x20=\x20clamp(\x20clearCoatRoughness,\x200.04,\x201.0\x20);\x0a#endif',
        'lights_physical_pars_fragment': 'struct\x20PhysicalMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09float\x09specularRoughness;\x0a\x09vec3\x09specularColor;\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoat;\x0a\x09\x09float\x20clearCoatRoughness;\x0a\x09#endif\x0a};\x0a#define\x20MAXIMUM_SPECULAR_COEFFICIENT\x200.16\x0a#define\x20DEFAULT_SPECULAR_COEFFICIENT\x200.04\x0afloat\x20clearCoatDHRApprox(\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20float\x20dotNL\x20)\x20{\x0a\x09return\x20DEFAULT_SPECULAR_COEFFICIENT\x20+\x20(\x201.0\x20-\x20DEFAULT_SPECULAR_COEFFICIENT\x20)\x20*\x20(\x20pow(\x201.0\x20-\x20dotNL,\x205.0\x20)\x20*\x20pow(\x201.0\x20-\x20roughness,\x202.0\x20)\x20);\x0a}\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09void\x20RE_Direct_RectArea_Physical(\x20const\x20in\x20RectAreaLight\x20rectAreaLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09\x09vec3\x20normal\x20=\x20geometry.normal;\x0a\x09\x09vec3\x20viewDir\x20=\x20geometry.viewDir;\x0a\x09\x09vec3\x20position\x20=\x20geometry.position;\x0a\x09\x09vec3\x20lightPos\x20=\x20rectAreaLight.position;\x0a\x09\x09vec3\x20halfWidth\x20=\x20rectAreaLight.halfWidth;\x0a\x09\x09vec3\x20halfHeight\x20=\x20rectAreaLight.halfHeight;\x0a\x09\x09vec3\x20lightColor\x20=\x20rectAreaLight.color;\x0a\x09\x09float\x20roughness\x20=\x20material.specularRoughness;\x0a\x09\x09vec3\x20rectCoords[\x204\x20];\x0a\x09\x09rectCoords[\x200\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20-\x20halfHeight;\x09\x09rectCoords[\x201\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20-\x20halfHeight;\x0a\x09\x09rectCoords[\x202\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09rectCoords[\x203\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09vec2\x20uv\x20=\x20LTC_Uv(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x09\x09vec4\x20t1\x20=\x20texture2D(\x20ltc_1,\x20uv\x20);\x0a\x09\x09vec4\x20t2\x20=\x20texture2D(\x20ltc_2,\x20uv\x20);\x0a\x09\x09mat3\x20mInv\x20=\x20mat3(\x0a\x09\x09\x09vec3(\x20t1.x,\x200,\x20t1.y\x20),\x0a\x09\x09\x09vec3(\x20\x20\x20\x200,\x201,\x20\x20\x20\x200\x20),\x0a\x09\x09\x09vec3(\x20t1.z,\x200,\x20t1.w\x20)\x0a\x09\x09);\x0a\x09\x09vec3\x20fresnel\x20=\x20(\x20material.specularColor\x20*\x20t2.x\x20+\x20(\x20vec3(\x201.0\x20)\x20-\x20material.specularColor\x20)\x20*\x20t2.y\x20);\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20lightColor\x20*\x20fresnel\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mInv,\x20rectCoords\x20);\x0a\x09\x09reflectedLight.directDiffuse\x20+=\x20lightColor\x20*\x20material.diffuseColor\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mat3(\x201.0\x20),\x20rectCoords\x20);\x0a\x09}\x0a#endif\x0avoid\x20RE_Direct_Physical(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09reflectedLight.directSpecular\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09reflectedLight.directDiffuse\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectDiffuse_Physical(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifndef\x20ENVMAP_TYPE_CUBE_UV\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectSpecular_Physical(\x20const\x20in\x20vec3\x20radiance,\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20clearCoatRadiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight)\x20{\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09float\x20dotNL\x20=\x20dotNV;\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09float\x20clearCoatInv\x20=\x201.0\x20-\x20clearCoatDHR;\x0a\x09#if\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09vec3\x20singleScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20multiScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20cosineWeightedIrradiance\x20=\x20irradiance\x20*\x20RECIPROCAL_PI;\x0a\x09\x09BRDF_Specular_Multiscattering_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x09\x09vec3\x20diffuse\x20=\x20material.diffuseColor\x20*\x20(\x201.0\x20-\x20(\x20singleScattering\x20+\x20multiScattering\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20singleScattering;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20multiScattering\x20*\x20cosineWeightedIrradiance;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20diffuse\x20*\x20cosineWeightedIrradiance;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatRadiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_Physical\x0a#define\x20RE_Direct_RectArea\x09\x09RE_Direct_RectArea_Physical\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_Physical\x0a#define\x20RE_IndirectSpecular\x09\x09RE_IndirectSpecular_Physical\x0a#define\x20Material_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.specularRoughness\x20)\x0a#define\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.clearCoatRoughness\x20)\x0afloat\x20computeSpecularOcclusion(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20ambientOcclusion,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09return\x20saturate(\x20pow(\x20dotNV\x20+\x20ambientOcclusion,\x20exp2(\x20-\x2016.0\x20*\x20roughness\x20-\x201.0\x20)\x20)\x20-\x201.0\x20+\x20ambientOcclusion\x20);\x0a}',
        'lights_fragment_begin': '\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20-\x20vViewPosition;\x0ageometry.normal\x20=\x20normal;\x0ageometry.viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0aIncidentLight\x20directLight;\x0a#if\x20(\x20NUM_POINT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20pointLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_SPOT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20spotLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_DIR_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20directionalLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct_RectArea\x20)\x0a\x09RectAreaLight\x20rectAreaLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_RECT_AREA_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09rectAreaLight\x20=\x20rectAreaLights[\x20i\x20];\x0a\x09\x09RE_Direct_RectArea(\x20rectAreaLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09vec3\x20irradiance\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09irradiance\x20+=\x20getLightProbeIrradiance(\x20lightProbe,\x20geometry\x20);\x0a\x09#if\x20(\x20NUM_HEMI_LIGHTS\x20>\x200\x20)\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09irradiance\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09vec3\x20radiance\x20=\x20vec3(\x200.0\x20);\x0a\x09vec3\x20clearCoatRadiance\x20=\x20vec3(\x200.0\x20);\x0a#endif',
        'lights_fragment_maps': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09vec3\x20lightMapIrradiance\x20=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09lightMapIrradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09irradiance\x20+=\x20lightMapIrradiance;\x0a\x09#endif\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x20&&\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09irradiance\x20+=\x20getLightProbeIndirectIrradiance(\x20geometry,\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09radiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09clearCoatRadiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif',
        'lights_fragment_end': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09RE_IndirectDiffuse(\x20irradiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09RE_IndirectSpecular(\x20radiance,\x20irradiance,\x20clearCoatRadiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif',
        'logdepthbuf_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09gl_FragDepthEXT\x20=\x20log2(\x20vFragDepth\x20)\x20*\x20logDepthBufFC\x20*\x200.5;\x0a#endif',
        'logdepthbuf_pars_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09uniform\x20float\x20logDepthBufFC;\x0a\x09varying\x20float\x20vFragDepth;\x0a#endif',
        'logdepthbuf_pars_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09varying\x20float\x20vFragDepth;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20logDepthBufFC;\x0a\x09#endif\x0a#endif',
        'logdepthbuf_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09vFragDepth\x20=\x201.0\x20+\x20gl_Position.w;\x0a\x09#else\x0a\x09\x09gl_Position.z\x20=\x20log2(\x20max(\x20EPSILON,\x20gl_Position.w\x20+\x201.0\x20)\x20)\x20*\x20logDepthBufFC\x20-\x201.0;\x0a\x09\x09gl_Position.z\x20*=\x20gl_Position.w;\x0a\x09#endif\x0a#endif',
        'map_fragment': '#ifdef\x20USE_MAP\x0a\x09vec4\x20texelColor\x20=\x20texture2D(\x20map,\x20vUv\x20);\x0a\x09texelColor\x20=\x20mapTexelToLinear(\x20texelColor\x20);\x0a\x09diffuseColor\x20*=\x20texelColor;\x0a#endif',
        'map_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
        'map_particle_fragment': '#ifdef\x20USE_MAP\x0a\x09vec2\x20uv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20gl_PointCoord.x,\x201.0\x20-\x20gl_PointCoord.y,\x201\x20)\x20).xy;\x0a\x09vec4\x20mapTexel\x20=\x20texture2D(\x20map,\x20uv\x20);\x0a\x09diffuseColor\x20*=\x20mapTexelToLinear(\x20mapTexel\x20);\x0a#endif',
        'map_particle_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20mat3\x20uvTransform;\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
        'metalnessmap_fragment': 'float\x20metalnessFactor\x20=\x20metalness;\x0a#ifdef\x20USE_METALNESSMAP\x0a\x09vec4\x20texelMetalness\x20=\x20texture2D(\x20metalnessMap,\x20vUv\x20);\x0a\x09metalnessFactor\x20*=\x20texelMetalness.b;\x0a#endif',
        'metalnessmap_pars_fragment': '#ifdef\x20USE_METALNESSMAP\x0a\x09uniform\x20sampler2D\x20metalnessMap;\x0a#endif',
        'morphnormal_vertex': '#ifdef\x20USE_MORPHNORMALS\x0a\x09objectNormal\x20+=\x20(\x20morphNormal0\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal1\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal2\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal3\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a#endif',
        'morphtarget_pars_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09uniform\x20float\x20morphTargetInfluences[\x208\x20];\x0a\x09#else\x0a\x09uniform\x20float\x20morphTargetInfluences[\x204\x20];\x0a\x09#endif\x0a#endif',
        'morphtarget_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09transformed\x20+=\x20(\x20morphTarget0\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget1\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget2\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget3\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09transformed\x20+=\x20(\x20morphTarget4\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x204\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget5\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x205\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget6\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x206\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget7\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x207\x20];\x0a\x09#endif\x0a#endif',
        'normal_fragment_begin': '#ifdef\x20FLAT_SHADED\x0a\x09vec3\x20fdx\x20=\x20vec3(\x20dFdx(\x20vViewPosition.x\x20),\x20dFdx(\x20vViewPosition.y\x20),\x20dFdx(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20fdy\x20=\x20vec3(\x20dFdy(\x20vViewPosition.x\x20),\x20dFdy(\x20vViewPosition.y\x20),\x20dFdy(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20normal\x20=\x20normalize(\x20cross(\x20fdx,\x20fdy\x20)\x20);\x0a#else\x0a\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09#endif\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vec3\x20tangent\x20=\x20normalize(\x20vTangent\x20);\x0a\x09\x09vec3\x20bitangent\x20=\x20normalize(\x20vBitangent\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09tangent\x20=\x20tangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09bitangent\x20=\x20bitangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
        'normal_fragment_maps': '#ifdef\x20USE_NORMALMAP\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09normal\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09\x09normal\x20=\x20-\x20normal;\x0a\x09\x09#endif\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09\x09normal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);\x0a\x09#else\x0a\x09\x09#ifdef\x20USE_TANGENT\x0a\x09\x09\x09mat3\x20vTBN\x20=\x20mat3(\x20tangent,\x20bitangent,\x20normal\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20=\x20normalScale\x20*\x20mapN.xy;\x0a\x09\x09\x09normal\x20=\x20normalize(\x20vTBN\x20*\x20mapN\x20);\x0a\x09\x09#else\x0a\x09\x09\x09normal\x20=\x20perturbNormal2Arb(\x20-vViewPosition,\x20normal\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#elif\x20defined(\x20USE_BUMPMAP\x20)\x0a\x09normal\x20=\x20perturbNormalArb(\x20-vViewPosition,\x20normal,\x20dHdxy_fwd()\x20);\x0a#endif',
        'normalmap_pars_fragment': '#ifdef\x20USE_NORMALMAP\x0a\x09uniform\x20sampler2D\x20normalMap;\x0a\x09uniform\x20vec2\x20normalScale;\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09uniform\x20mat3\x20normalMatrix;\x0a\x09#else\x0a\x09\x09vec3\x20perturbNormal2Arb(\x20vec3\x20eye_pos,\x20vec3\x20surf_norm\x20)\x20{\x0a\x09\x09\x09vec3\x20q0\x20=\x20vec3(\x20dFdx(\x20eye_pos.x\x20),\x20dFdx(\x20eye_pos.y\x20),\x20dFdx(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec3\x20q1\x20=\x20vec3(\x20dFdy(\x20eye_pos.x\x20),\x20dFdy(\x20eye_pos.y\x20),\x20dFdy(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec2\x20st0\x20=\x20dFdx(\x20vUv.st\x20);\x0a\x09\x09\x09vec2\x20st1\x20=\x20dFdy(\x20vUv.st\x20);\x0a\x09\x09\x09float\x20scale\x20=\x20sign(\x20st1.t\x20*\x20st0.s\x20-\x20st0.t\x20*\x20st1.s\x20);\x0a\x09\x09\x09vec3\x20S\x20=\x20normalize(\x20(\x20q0\x20*\x20st1.t\x20-\x20q1\x20*\x20st0.t\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20T\x20=\x20normalize(\x20(\x20-\x20q0\x20*\x20st1.s\x20+\x20q1\x20*\x20st0.s\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20N\x20=\x20normalize(\x20surf_norm\x20);\x0a\x09\x09\x09mat3\x20tsn\x20=\x20mat3(\x20S,\x20T,\x20N\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20*=\x20normalScale;\x0a\x09\x09\x09mapN.xy\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09return\x20normalize(\x20tsn\x20*\x20mapN\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
        'packing': 'vec3\x20packNormalToRGB(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x09return\x20normalize(\x20normal\x20)\x20*\x200.5\x20+\x200.5;\x0a}\x0avec3\x20unpackRGBToNormal(\x20const\x20in\x20vec3\x20rgb\x20)\x20{\x0a\x09return\x202.0\x20*\x20rgb.xyz\x20-\x201.0;\x0a}\x0aconst\x20float\x20PackUpscale\x20=\x20256.\x20/\x20255.;const\x20float\x20UnpackDownscale\x20=\x20255.\x20/\x20256.;\x0aconst\x20vec3\x20PackFactors\x20=\x20vec3(\x20256.\x20*\x20256.\x20*\x20256.,\x20256.\x20*\x20256.,\x20\x20256.\x20);\x0aconst\x20vec4\x20UnpackFactors\x20=\x20UnpackDownscale\x20/\x20vec4(\x20PackFactors,\x201.\x20);\x0aconst\x20float\x20ShiftRight8\x20=\x201.\x20/\x20256.;\x0avec4\x20packDepthToRGBA(\x20const\x20in\x20float\x20v\x20)\x20{\x0a\x09vec4\x20r\x20=\x20vec4(\x20fract(\x20v\x20*\x20PackFactors\x20),\x20v\x20);\x0a\x09r.yzw\x20-=\x20r.xyz\x20*\x20ShiftRight8;\x09return\x20r\x20*\x20PackUpscale;\x0a}\x0afloat\x20unpackRGBAToDepth(\x20const\x20in\x20vec4\x20v\x20)\x20{\x0a\x09return\x20dot(\x20v,\x20UnpackFactors\x20);\x0a}\x0afloat\x20viewZToOrthographicDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20viewZ\x20+\x20near\x20)\x20/\x20(\x20near\x20-\x20far\x20);\x0a}\x0afloat\x20orthographicDepthToViewZ(\x20const\x20in\x20float\x20linearClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20linearClipZ\x20*\x20(\x20near\x20-\x20far\x20)\x20-\x20near;\x0a}\x0afloat\x20viewZToPerspectiveDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20((\x20near\x20+\x20viewZ\x20)\x20*\x20far\x20)\x20/\x20((\x20far\x20-\x20near\x20)\x20*\x20viewZ\x20);\x0a}\x0afloat\x20perspectiveDepthToViewZ(\x20const\x20in\x20float\x20invClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20near\x20*\x20far\x20)\x20/\x20(\x20(\x20far\x20-\x20near\x20)\x20*\x20invClipZ\x20-\x20far\x20);\x0a}',
        'premultiplied_alpha_fragment': '#ifdef\x20PREMULTIPLIED_ALPHA\x0a\x09gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a#endif',
        'project_vertex': 'vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0agl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;',
        'dithering_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20dithering(\x20gl_FragColor.rgb\x20);\x0a#endif',
        'dithering_pars_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09vec3\x20dithering(\x20vec3\x20color\x20)\x20{\x0a\x09\x09float\x20grid_position\x20=\x20rand(\x20gl_FragCoord.xy\x20);\x0a\x09\x09vec3\x20dither_shift_RGB\x20=\x20vec3(\x200.25\x20/\x20255.0,\x20-0.25\x20/\x20255.0,\x200.25\x20/\x20255.0\x20);\x0a\x09\x09dither_shift_RGB\x20=\x20mix(\x202.0\x20*\x20dither_shift_RGB,\x20-2.0\x20*\x20dither_shift_RGB,\x20grid_position\x20);\x0a\x09\x09return\x20color\x20+\x20dither_shift_RGB;\x0a\x09}\x0a#endif',
        'roughnessmap_fragment': 'float\x20roughnessFactor\x20=\x20roughness;\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x09vec4\x20texelRoughness\x20=\x20texture2D(\x20roughnessMap,\x20vUv\x20);\x0a\x09roughnessFactor\x20*=\x20texelRoughness.g;\x0a#endif',
        'roughnessmap_pars_fragment': '#ifdef\x20USE_ROUGHNESSMAP\x0a\x09uniform\x20sampler2D\x20roughnessMap;\x0a#endif',
        'shadowmap_pars_fragment': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20directionalShadowMap[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20spotShadowMap[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20pointShadowMap[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a\x09float\x20texture2DCompare(\x20sampler2D\x20depths,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09return\x20step(\x20compare,\x20unpackRGBAToDepth(\x20texture2D(\x20depths,\x20uv\x20)\x20)\x20);\x0a\x09}\x0a\x09float\x20texture2DShadowLerp(\x20sampler2D\x20depths,\x20vec2\x20size,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09const\x20vec2\x20offset\x20=\x20vec2(\x200.0,\x201.0\x20);\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20size;\x0a\x09\x09vec2\x20centroidUV\x20=\x20floor(\x20uv\x20*\x20size\x20+\x200.5\x20)\x20/\x20size;\x0a\x09\x09float\x20lb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xx,\x20compare\x20);\x0a\x09\x09float\x20lt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xy,\x20compare\x20);\x0a\x09\x09float\x20rb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yx,\x20compare\x20);\x0a\x09\x09float\x20rt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yy,\x20compare\x20);\x0a\x09\x09vec2\x20f\x20=\x20fract(\x20uv\x20*\x20size\x20+\x200.5\x20);\x0a\x09\x09float\x20a\x20=\x20mix(\x20lb,\x20lt,\x20f.y\x20);\x0a\x09\x09float\x20b\x20=\x20mix(\x20rb,\x20rt,\x20f.y\x20);\x0a\x09\x09float\x20c\x20=\x20mix(\x20a,\x20b,\x20f.x\x20);\x0a\x09\x09return\x20c;\x0a\x09}\x0a\x09float\x20getShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord\x20)\x20{\x0a\x09\x09float\x20shadow\x20=\x201.0;\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0a\x09\x09shadowCoord.z\x20+=\x20shadowBias;\x0a\x09\x09bvec4\x20inFrustumVec\x20=\x20bvec4\x20(\x20shadowCoord.x\x20>=\x200.0,\x20shadowCoord.x\x20<=\x201.0,\x20shadowCoord.y\x20>=\x200.0,\x20shadowCoord.y\x20<=\x201.0\x20);\x0a\x09\x09bool\x20inFrustum\x20=\x20all(\x20inFrustumVec\x20);\x0a\x09\x09bvec2\x20frustumTestVec\x20=\x20bvec2(\x20inFrustum,\x20shadowCoord.z\x20<=\x201.0\x20);\x0a\x09\x09bool\x20frustumTest\x20=\x20all(\x20frustumTestVec\x20);\x0a\x09\x09if\x20(\x20frustumTest\x20)\x20{\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#elif\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09shadow\x20=\x20texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20);\x0a\x09\x09#endif\x0a\x09\x09}\x0a\x09\x09return\x20shadow;\x0a\x09}\x0a\x09vec2\x20cubeToUV(\x20vec3\x20v,\x20float\x20texelSizeY\x20)\x20{\x0a\x09\x09vec3\x20absV\x20=\x20abs(\x20v\x20);\x0a\x09\x09float\x20scaleToCube\x20=\x201.0\x20/\x20max(\x20absV.x,\x20max(\x20absV.y,\x20absV.z\x20)\x20);\x0a\x09\x09absV\x20*=\x20scaleToCube;\x0a\x09\x09v\x20*=\x20scaleToCube\x20*\x20(\x201.0\x20-\x202.0\x20*\x20texelSizeY\x20);\x0a\x09\x09vec2\x20planar\x20=\x20v.xy;\x0a\x09\x09float\x20almostATexel\x20=\x201.5\x20*\x20texelSizeY;\x0a\x09\x09float\x20almostOne\x20=\x201.0\x20-\x20almostATexel;\x0a\x09\x09if\x20(\x20absV.z\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09if\x20(\x20v.z\x20>\x200.0\x20)\x0a\x09\x09\x09\x09planar.x\x20=\x204.0\x20-\x20v.x;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.x\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signX\x20=\x20sign(\x20v.x\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.z\x20*\x20signX\x20+\x202.0\x20*\x20signX;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.y\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signY\x20=\x20sign(\x20v.y\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.x\x20+\x202.0\x20*\x20signY\x20+\x202.0;\x0a\x09\x09\x09planar.y\x20=\x20v.z\x20*\x20signY\x20-\x202.0;\x0a\x09\x09}\x0a\x09\x09return\x20vec2(\x200.125,\x200.25\x20)\x20*\x20planar\x20+\x20vec2(\x200.375,\x200.75\x20);\x0a\x09}\x0a\x09float\x20getPointShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord,\x20float\x20shadowCameraNear,\x20float\x20shadowCameraFar\x20)\x20{\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20(\x20shadowMapSize\x20*\x20vec2(\x204.0,\x202.0\x20)\x20);\x0a\x09\x09vec3\x20lightToPosition\x20=\x20shadowCoord.xyz;\x0a\x09\x09float\x20dp\x20=\x20(\x20length(\x20lightToPosition\x20)\x20-\x20shadowCameraNear\x20)\x20/\x20(\x20shadowCameraFar\x20-\x20shadowCameraNear\x20);\x09\x09dp\x20+=\x20shadowBias;\x0a\x09\x09vec3\x20bd3D\x20=\x20normalize(\x20lightToPosition\x20);\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x20||\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20offset\x20=\x20vec2(\x20-\x201,\x201\x20)\x20*\x20shadowRadius\x20*\x20texelSize.y;\x0a\x09\x09\x09return\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxx,\x20texelSize.y\x20),\x20dp\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09return\x20texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
        'shadowmap_pars_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20directionalShadowMatrix[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20spotShadowMatrix[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20pointShadowMatrix[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a#endif',
        'shadowmap_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vDirectionalShadowCoord[\x20i\x20]\x20=\x20directionalShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vSpotShadowCoord[\x20i\x20]\x20=\x20spotShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vPointShadowCoord[\x20i\x20]\x20=\x20pointShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a#endif',
        'shadowmask_pars_fragment': 'float\x20getShadowMask()\x20{\x0a\x09float\x20shadow\x20=\x201.0;\x0a\x09#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20directionalLight.shadow\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20spotLight.shadow\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20pointLight.shadow\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#endif\x0a\x09return\x20shadow;\x0a}',
        'skinbase_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20boneMatX\x20=\x20getBoneMatrix(\x20skinIndex.x\x20);\x0a\x09mat4\x20boneMatY\x20=\x20getBoneMatrix(\x20skinIndex.y\x20);\x0a\x09mat4\x20boneMatZ\x20=\x20getBoneMatrix(\x20skinIndex.z\x20);\x0a\x09mat4\x20boneMatW\x20=\x20getBoneMatrix(\x20skinIndex.w\x20);\x0a#endif',
        'skinning_pars_vertex': '#ifdef\x20USE_SKINNING\x0a\x09uniform\x20mat4\x20bindMatrix;\x0a\x09uniform\x20mat4\x20bindMatrixInverse;\x0a\x09#ifdef\x20BONE_TEXTURE\x0a\x09\x09uniform\x20sampler2D\x20boneTexture;\x0a\x09\x09uniform\x20int\x20boneTextureSize;\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09float\x20j\x20=\x20i\x20*\x204.0;\x0a\x09\x09\x09float\x20x\x20=\x20mod(\x20j,\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20y\x20=\x20floor(\x20j\x20/\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20dx\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09float\x20dy\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09y\x20=\x20dy\x20*\x20(\x20y\x20+\x200.5\x20);\x0a\x09\x09\x09vec4\x20v1\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x200.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v2\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x201.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v3\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x202.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v4\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x203.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09mat4\x20bone\x20=\x20mat4(\x20v1,\x20v2,\x20v3,\x20v4\x20);\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#else\x0a\x09\x09uniform\x20mat4\x20boneMatrices[\x20MAX_BONES\x20];\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09mat4\x20bone\x20=\x20boneMatrices[\x20int(i)\x20];\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
        'skinning_vertex': '#ifdef\x20USE_SKINNING\x0a\x09vec4\x20skinVertex\x20=\x20bindMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a\x09vec4\x20skinned\x20=\x20vec4(\x200.0\x20);\x0a\x09skinned\x20+=\x20boneMatX\x20*\x20skinVertex\x20*\x20skinWeight.x;\x0a\x09skinned\x20+=\x20boneMatY\x20*\x20skinVertex\x20*\x20skinWeight.y;\x0a\x09skinned\x20+=\x20boneMatZ\x20*\x20skinVertex\x20*\x20skinWeight.z;\x0a\x09skinned\x20+=\x20boneMatW\x20*\x20skinVertex\x20*\x20skinWeight.w;\x0a\x09transformed\x20=\x20(\x20bindMatrixInverse\x20*\x20skinned\x20).xyz;\x0a#endif',
        'skinnormal_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20skinMatrix\x20=\x20mat4(\x200.0\x20);\x0a\x09skinMatrix\x20+=\x20skinWeight.x\x20*\x20boneMatX;\x0a\x09skinMatrix\x20+=\x20skinWeight.y\x20*\x20boneMatY;\x0a\x09skinMatrix\x20+=\x20skinWeight.z\x20*\x20boneMatZ;\x0a\x09skinMatrix\x20+=\x20skinWeight.w\x20*\x20boneMatW;\x0a\x09skinMatrix\x20\x20=\x20bindMatrixInverse\x20*\x20skinMatrix\x20*\x20bindMatrix;\x0a\x09objectNormal\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectNormal,\x200.0\x20)\x20).xyz;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09objectTangent\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectTangent,\x200.0\x20)\x20).xyz;\x0a\x09#endif\x0a#endif',
        'specularmap_fragment': 'float\x20specularStrength;\x0a#ifdef\x20USE_SPECULARMAP\x0a\x09vec4\x20texelSpecular\x20=\x20texture2D(\x20specularMap,\x20vUv\x20);\x0a\x09specularStrength\x20=\x20texelSpecular.r;\x0a#else\x0a\x09specularStrength\x20=\x201.0;\x0a#endif',
        'specularmap_pars_fragment': '#ifdef\x20USE_SPECULARMAP\x0a\x09uniform\x20sampler2D\x20specularMap;\x0a#endif',
        'tonemapping_fragment': '#if\x20defined(\x20TONE_MAPPING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20toneMapping(\x20gl_FragColor.rgb\x20);\x0a#endif',
        'tonemapping_pars_fragment': '#ifndef\x20saturate\x0a\x09#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#endif\x0auniform\x20float\x20toneMappingExposure;\x0auniform\x20float\x20toneMappingWhitePoint;\x0avec3\x20LinearToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09return\x20toneMappingExposure\x20*\x20color;\x0a}\x0avec3\x20ReinhardToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20color\x20/\x20(\x20vec3(\x201.0\x20)\x20+\x20color\x20)\x20);\x0a}\x0a#define\x20Uncharted2Helper(\x20x\x20)\x20max(\x20(\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.10\x20*\x200.50\x20)\x20+\x200.20\x20*\x200.02\x20)\x20/\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.50\x20)\x20+\x200.20\x20*\x200.30\x20)\x20)\x20-\x200.02\x20/\x200.30,\x20vec3(\x200.0\x20)\x20)\x0avec3\x20Uncharted2ToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20Uncharted2Helper(\x20color\x20)\x20/\x20Uncharted2Helper(\x20vec3(\x20toneMappingWhitePoint\x20)\x20)\x20);\x0a}\x0avec3\x20OptimizedCineonToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09color\x20=\x20max(\x20vec3(\x200.0\x20),\x20color\x20-\x200.004\x20);\x0a\x09return\x20pow(\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x200.5\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x201.7\x20)\x20+\x200.06\x20),\x20vec3(\x202.2\x20)\x20);\x0a}\x0avec3\x20ACESFilmicToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20(\x20color\x20*\x20(\x202.51\x20*\x20color\x20+\x200.03\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x202.43\x20*\x20color\x20+\x200.59\x20)\x20+\x200.14\x20)\x20);\x0a}',
        'uv_pars_fragment': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a#endif',
        'uv_pars_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a\x09uniform\x20mat3\x20uvTransform;\x0a#endif',
        'uv_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a#endif',
        'uv2_pars_fragment': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
        'uv2_pars_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09attribute\x20vec2\x20uv2;\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
        'uv2_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09vUv2\x20=\x20uv2;\x0a#endif',
        'worldpos_vertex': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20DISTANCE\x20)\x20||\x20defined\x20(\x20USE_SHADOWMAP\x20)\x0a\x09vec4\x20worldPosition\x20=\x20modelMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a#endif',
        'background_frag': 'uniform\x20sampler2D\x20t2D;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20t2D,\x20vUv\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
        'background_vert': 'varying\x20vec2\x20vUv;\x0auniform\x20mat3\x20uvTransform;\x0avoid\x20main()\x20{\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a\x09gl_Position\x20=\x20vec4(\x20position.xy,\x201.0,\x201.0\x20);\x0a}',
        'cube_frag': 'uniform\x20samplerCube\x20tCube;\x0auniform\x20float\x20tFlip;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vWorldDirection;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20textureCube(\x20tCube,\x20vec3(\x20tFlip\x20*\x20vWorldDirection.x,\x20vWorldDirection.yz\x20)\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09gl_FragColor.a\x20*=\x20opacity;\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
        'cube_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_Position.z\x20=\x20gl_Position.w;\x0a}',
        'depth_frag': '#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09uniform\x20float\x20opacity;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09diffuseColor.a\x20=\x20opacity;\x0a\x09#endif\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09gl_FragColor\x20=\x20vec4(\x20vec3(\x201.0\x20-\x20gl_FragCoord.z\x20),\x20opacity\x20);\x0a\x09#elif\x20DEPTH_PACKING\x20==\x203201\x0a\x09\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20gl_FragCoord.z\x20);\x0a\x09#endif\x0a}',
        'depth_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a}',
        'distanceRGBA_frag': '#define\x20DISTANCE\x0auniform\x20vec3\x20referencePosition;\x0auniform\x20float\x20nearDistance;\x0auniform\x20float\x20farDistance;\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main\x20()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09float\x20dist\x20=\x20length(\x20vWorldPosition\x20-\x20referencePosition\x20);\x0a\x09dist\x20=\x20(\x20dist\x20-\x20nearDistance\x20)\x20/\x20(\x20farDistance\x20-\x20nearDistance\x20);\x0a\x09dist\x20=\x20saturate(\x20dist\x20);\x0a\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20dist\x20);\x0a}',
        'distanceRGBA_vert': '#define\x20DISTANCE\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a}',
        'equirect_frag': 'uniform\x20sampler2D\x20tEquirect;\x0avarying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vec3\x20direction\x20=\x20normalize(\x20vWorldDirection\x20);\x0a\x09vec2\x20sampleUV;\x0a\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20direction.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09sampleUV.x\x20=\x20atan(\x20direction.z,\x20direction.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20tEquirect,\x20sampleUV\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
        'equirect_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a}',
        'linedashed_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20float\x20dashSize;\x0auniform\x20float\x20totalSize;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09if\x20(\x20mod(\x20vLineDistance,\x20totalSize\x20)\x20>\x20dashSize\x20)\x20{\x0a\x09\x09discard;\x0a\x09}\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'linedashed_vert': 'uniform\x20float\x20scale;\x0aattribute\x20float\x20lineDistance;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09vLineDistance\x20=\x20scale\x20*\x20lineDistance;\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshbasic_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vec3(\x201.0\x20);\x0a\x09#endif\x0a\x09#include\x20<aomap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20diffuseColor.rgb;\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.indirectDiffuse;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'meshbasic_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_ENVMAP\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshlambert_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x09#endif\x0a\x09#include\x20<lightmap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x09#else\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
        'meshlambert_vert': '#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<lights_lambert_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshmatcap_frag': '#define\x20MATCAP\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20sampler2D\x20matcap;\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09vec3\x20viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0a\x09vec3\x20x\x20=\x20normalize(\x20vec3(\x20viewDir.z,\x200.0,\x20-\x20viewDir.x\x20)\x20);\x0a\x09vec3\x20y\x20=\x20cross(\x20viewDir,\x20x\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20dot(\x20x,\x20normal\x20),\x20dot(\x20y,\x20normal\x20)\x20)\x20*\x200.495\x20+\x200.5;\x0a\x09#ifdef\x20USE_MATCAP\x0a\x09\x09vec4\x20matcapColor\x20=\x20texture2D(\x20matcap,\x20uv\x20);\x0a\x09\x09matcapColor\x20=\x20matcapTexelToLinear(\x20matcapColor\x20);\x0a\x09#else\x0a\x09\x09vec4\x20matcapColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#endif\x0a\x09vec3\x20outgoingLight\x20=\x20diffuseColor.rgb\x20*\x20matcapColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'meshmatcap_vert': '#define\x20MATCAP\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#ifndef\x20FLAT_SHADED\x0a\x09\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a}',
        'meshphong_frag': '#define\x20PHONG\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20vec3\x20specular;\x0auniform\x20float\x20shininess;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<gradientmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_phong_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_phong_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
        'meshphong_vert': '#define\x20PHONG\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'meshphysical_frag': '#define\x20PHYSICAL\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20metalness;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20STANDARD\x0a\x09uniform\x20float\x20clearCoat;\x0a\x09uniform\x20float\x20clearCoatRoughness;\x0a#endif\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<cube_uv_reflection_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<envmap_physical_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_physical_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<roughnessmap_pars_fragment>\x0a#include\x20<metalnessmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<roughnessmap_fragment>\x0a\x09#include\x20<metalnessmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_physical_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
        'meshphysical_vert': '#define\x20PHYSICAL\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'normal_frag': '#define\x20NORMAL\x0auniform\x20float\x20opacity;\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09gl_FragColor\x20=\x20vec4(\x20packNormalToRGB(\x20normal\x20),\x20opacity\x20);\x0a}',
        'normal_vert': '#define\x20NORMAL\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif\x0a}',
        'points_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<map_particle_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_particle_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'points_vert': 'uniform\x20float\x20size;\x0auniform\x20float\x20scale;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_PointSize\x20=\x20size;\x0a\x09#ifdef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20gl_PointSize\x20*=\x20(\x20scale\x20/\x20-\x20mvPosition.z\x20);\x0a\x09#endif\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'shadow_frag': 'uniform\x20vec3\x20color;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x20color,\x20opacity\x20*\x20(\x201.0\x20-\x20getShadowMask()\x20)\x20);\x0a\x09#include\x20<fog_fragment>\x0a}',
        'shadow_vert': '#include\x20<fog_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
        'sprite_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
        'sprite_vert': 'uniform\x20float\x20rotation;\x0auniform\x20vec2\x20center;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x09vec2\x20scale;\x0a\x09scale.x\x20=\x20length(\x20vec3(\x20modelMatrix[\x200\x20].x,\x20modelMatrix[\x200\x20].y,\x20modelMatrix[\x200\x20].z\x20)\x20);\x0a\x09scale.y\x20=\x20length(\x20vec3(\x20modelMatrix[\x201\x20].x,\x20modelMatrix[\x201\x20].y,\x20modelMatrix[\x201\x20].z\x20)\x20);\x0a\x09#ifndef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20scale\x20*=\x20-\x20mvPosition.z;\x0a\x09#endif\x0a\x09vec2\x20alignedPosition\x20=\x20(\x20position.xy\x20-\x20(\x20center\x20-\x20vec2(\x200.5\x20)\x20)\x20)\x20*\x20scale;\x0a\x09vec2\x20rotatedPosition;\x0a\x09rotatedPosition.x\x20=\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.x\x20-\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09rotatedPosition.y\x20=\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.x\x20+\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09mvPosition.xy\x20+=\x20rotatedPosition;\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}'
    };

    function vQ(bf) {
        var bg = {};
        for (var bh in bf)
            for (var bi in bg[bh] = {}, bf[bh]) {
                var bF = bf[bh][bi];
                bF && (bF['isColor'] || bF['isMatrix3'] || bF['isMatrix4'] || bF['isVector2'] || bF['isVector3'] || bF['isVector4'] || bF['isTexture']) ? bg[bh][bi] = bF['clone']() : Array['isArray'](bF) ? bg[bh][bi] = bF['slice']() : bg[bh][bi] = bF;
            }
        return bg;
    }

    function vW(bf) {
        for (var bg = {}, bh = 0x0; bh < bf['length']; bh++) {
            var bi = vQ(bf[bh]);
            for (var bF in bi) bg[bF] = bi[bF];
        }
        return bg;
    }
    var w2, w3, w4, w5 = {
            'clone': vQ,
            'merge': vW
        },
        w6 = {
            'aliceblue': 0xf0f8ff,
            'antiquewhite': 0xfaebd7,
            'aqua': 0xffff,
            'aquamarine': 0x7fffd4,
            'azure': 0xf0ffff,
            'beige': 0xf5f5dc,
            'bisque': 0xffe4c4,
            'black': 0x0,
            'blanchedalmond': 0xffebcd,
            'blue': 0xff,
            'blueviolet': 0x8a2be2,
            'brown': 0xa52a2a,
            'burlywood': 0xdeb887,
            'cadetblue': 0x5f9ea0,
            'chartreuse': 0x7fff00,
            'chocolate': 0xd2691e,
            'coral': 0xff7f50,
            'cornflowerblue': 0x6495ed,
            'cornsilk': 0xfff8dc,
            'crimson': 0xdc143c,
            'cyan': 0xffff,
            'darkblue': 0x8b,
            'darkcyan': 0x8b8b,
            'darkgoldenrod': 0xb8860b,
            'darkgray': 0xa9a9a9,
            'darkgreen': 0x6400,
            'darkgrey': 0xa9a9a9,
            'darkkhaki': 0xbdb76b,
            'darkmagenta': 0x8b008b,
            'darkolivegreen': 0x556b2f,
            'darkorange': 0xff8c00,
            'darkorchid': 0x9932cc,
            'darkred': 0x8b0000,
            'darksalmon': 0xe9967a,
            'darkseagreen': 0x8fbc8f,
            'darkslateblue': 0x483d8b,
            'darkslategray': 0x2f4f4f,
            'darkslategrey': 0x2f4f4f,
            'darkturquoise': 0xced1,
            'darkviolet': 0x9400d3,
            'deeppink': 0xff1493,
            'deepskyblue': 0xbfff,
            'dimgray': 0x696969,
            'dimgrey': 0x696969,
            'dodgerblue': 0x1e90ff,
            'firebrick': 0xb22222,
            'floralwhite': 0xfffaf0,
            'forestgreen': 0x228b22,
            'fuchsia': 0xff00ff,
            'gainsboro': 0xdcdcdc,
            'ghostwhite': 0xf8f8ff,
            'gold': 0xffd700,
            'goldenrod': 0xdaa520,
            'gray': 0x808080,
            'green': 0x8000,
            'greenyellow': 0xadff2f,
            'grey': 0x808080,
            'honeydew': 0xf0fff0,
            'hotpink': 0xff69b4,
            'indianred': 0xcd5c5c,
            'indigo': 0x4b0082,
            'ivory': 0xfffff0,
            'khaki': 0xf0e68c,
            'lavender': 0xe6e6fa,
            'lavenderblush': 0xfff0f5,
            'lawngreen': 0x7cfc00,
            'lemonchiffon': 0xfffacd,
            'lightblue': 0xadd8e6,
            'lightcoral': 0xf08080,
            'lightcyan': 0xe0ffff,
            'lightgoldenrodyellow': 0xfafad2,
            'lightgray': 0xd3d3d3,
            'lightgreen': 0x90ee90,
            'lightgrey': 0xd3d3d3,
            'lightpink': 0xffb6c1,
            'lightsalmon': 0xffa07a,
            'lightseagreen': 0x20b2aa,
            'lightskyblue': 0x87cefa,
            'lightslategray': 0x778899,
            'lightslategrey': 0x778899,
            'lightsteelblue': 0xb0c4de,
            'lightyellow': 0xffffe0,
            'lime': 0xff00,
            'limegreen': 0x32cd32,
            'linen': 0xfaf0e6,
            'magenta': 0xff00ff,
            'maroon': 0x800000,
            'mediumaquamarine': 0x66cdaa,
            'mediumblue': 0xcd,
            'mediumorchid': 0xba55d3,
            'mediumpurple': 0x9370db,
            'mediumseagreen': 0x3cb371,
            'mediumslateblue': 0x7b68ee,
            'mediumspringgreen': 0xfa9a,
            'mediumturquoise': 0x48d1cc,
            'mediumvioletred': 0xc71585,
            'midnightblue': 0x191970,
            'mintcream': 0xf5fffa,
            'mistyrose': 0xffe4e1,
            'moccasin': 0xffe4b5,
            'navajowhite': 0xffdead,
            'navy': 0x80,
            'oldlace': 0xfdf5e6,
            'olive': 0x808000,
            'olivedrab': 0x6b8e23,
            'orange': 0xffa500,
            'orangered': 0xff4500,
            'orchid': 0xda70d6,
            'palegoldenrod': 0xeee8aa,
            'palegreen': 0x98fb98,
            'paleturquoise': 0xafeeee,
            'palevioletred': 0xdb7093,
            'papayawhip': 0xffefd5,
            'peachpuff': 0xffdab9,
            'peru': 0xcd853f,
            'pink': 0xffc0cb,
            'plum': 0xdda0dd,
            'powderblue': 0xb0e0e6,
            'purple': 0x800080,
            'rebeccapurple': 0x663399,
            'red': 0xff0000,
            'rosybrown': 0xbc8f8f,
            'royalblue': 0x4169e1,
            'saddlebrown': 0x8b4513,
            'salmon': 0xfa8072,
            'sandybrown': 0xf4a460,
            'seagreen': 0x2e8b57,
            'seashell': 0xfff5ee,
            'sienna': 0xa0522d,
            'silver': 0xc0c0c0,
            'skyblue': 0x87ceeb,
            'slateblue': 0x6a5acd,
            'slategray': 0x708090,
            'slategrey': 0x708090,
            'snow': 0xfffafa,
            'springgreen': 0xff7f,
            'steelblue': 0x4682b4,
            'tan': 0xd2b48c,
            'teal': 0x8080,
            'thistle': 0xd8bfd8,
            'tomato': 0xff6347,
            'turquoise': 0x40e0d0,
            'violet': 0xee82ee,
            'wheat': 0xf5deb3,
            'white': 0xffffff,
            'whitesmoke': 0xf5f5f5,
            'yellow': 0xffff00,
            'yellowgreen': 0x9acd32
        };

    function w7(bf, bg, bh) {
        return void 0x0 === bg && void 0x0 === bh ? this['set'](bf) : this['setRGB'](bf, bg, bh);
    }
    Object['assign'](w7['prototype'], {
        'isColor': !0x0,
        'r': 0x1,
        'g': 0x1,
        'b': 0x1,
        'set': function(bf) {
            return bf && bf['isColor'] ? this['copy'](bf) : 'number' == typeof bf ? this['setHex'](bf) : 'string' == typeof bf && this['setStyle'](bf), this;
        },
        'setScalar': function(bf) {
            return this['r'] = bf, this['g'] = bf, this['b'] = bf, this;
        },
        'setHex': function(bf) {
            return bf = Math['floor'](bf), this['r'] = (bf >> 0x10 & 0xff) / 0xff, this['g'] = (bf >> 0x8 & 0xff) / 0xff, this['b'] = (0xff & bf) / 0xff, this;
        },
        'setRGB': function(bf, bg, bh) {
            return this['r'] = bf, this['g'] = bg, this['b'] = bh, this;
        },
        'setHSL': function() {
            function bf(bf, bg, bh) {
                return bh < 0x0 && (bh += 0x1), bh > 0x1 && (bh -= 0x1), bh < 0x1 / 0x6 ? bf + 0x6 * (bg - bf) * bh : bh < 0.5 ? bg : bh < 0x2 / 0x3 ? bf + 0x6 * (bg - bf) * (0x2 / 0x3 - bh) : bf;
            }
            return function(bg, bh, bi) {
                if (bg = e2['euclideanModulo'](bg, 0x1), bh = e2['clamp'](bh, 0x0, 0x1), bi = e2['clamp'](bi, 0x0, 0x1), 0x0 === bh) this['r'] = this['g'] = this['b'] = bi;
                else {
                    var bF = bi <= 0.5 ? bi * (0x1 + bh) : bi + bh - bi * bh,
                        bG = 0x2 * bi - bF;
                    this['r'] = bf(bG, bF, bg + 0x1 / 0x3), this['g'] = bf(bG, bF, bg), this['b'] = bf(bG, bF, bg - 0x1 / 0x3);
                }
                return this;
            };
        }(),
        'setStyle': function(bf) {
            function bg(bg) {
                void 0x0 !== bg && parseFloat(bg) < 0x1 && console['warn']('THREE.Color:\x20Alpha\x20component\x20of\x20' + bf + '\x20will\x20be\x20ignored.');
            }
            var bh;
            if (bh = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/ ['exec'](bf)) {
                var bi, bF = bh[0x1],
                    bG = bh[0x2];
                switch (bF) {
                    case 'rgb':
                    case 'rgba':
                        if (bi = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/ ['exec'](bG)) return this['r'] = Math['min'](0xff, parseInt(bi[0x1], 0xa)) / 0xff, this['g'] = Math['min'](0xff, parseInt(bi[0x2], 0xa)) / 0xff, this['b'] = Math['min'](0xff, parseInt(bi[0x3], 0xa)) / 0xff, bg(bi[0x5]), this;
                        if (bi = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/ ['exec'](bG)) return this['r'] = Math['min'](0x64, parseInt(bi[0x1], 0xa)) / 0x64, this['g'] = Math['min'](0x64, parseInt(bi[0x2], 0xa)) / 0x64, this['b'] = Math['min'](0x64, parseInt(bi[0x3], 0xa)) / 0x64, bg(bi[0x5]), this;
                        break;
                    case 'hsl':
                    case 'hsla':
                        if (bi = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/ ['exec'](bG)) {
                            var bH = parseFloat(bi[0x1]) / 0x168,
                                bI = parseInt(bi[0x2], 0xa) / 0x64,
                                bJ = parseInt(bi[0x3], 0xa) / 0x64;
                            return bg(bi[0x5]), this['setHSL'](bH, bI, bJ);
                        }
                }
            } else if (bh = /^\#([A-Fa-f0-9]+)$/ ['exec'](bf)) {
                var bK, bL = (bK = bh[0x1])['length'];
                if (0x3 === bL) return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x0), 0x10) / 0xff, this['g'] = parseInt(bK['charAt'](0x1) + bK['charAt'](0x1), 0x10) / 0xff, this['b'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x2), 0x10) / 0xff, this;
                if (0x6 === bL) return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x1), 0x10) / 0xff, this['g'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x3), 0x10) / 0xff, this['b'] = parseInt(bK['charAt'](0x4) + bK['charAt'](0x5), 0x10) / 0xff, this;
            }
            bf && bf['length'] > 0x0 && (void 0x0 !== (bK = w6[bf]) ? this['setHex'](bK) : console['warn']('THREE.Color:\x20Unknown\x20color\x20' + bf));
            return this;
        },
        'clone': function() {
            return new this['constructor'](this['r'], this['g'], this['b']);
        },
        'copy': function(bf) {
            return this['r'] = bf['r'], this['g'] = bf['g'], this['b'] = bf['b'], this;
        },
        'copyGammaToLinear': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x2), this['r'] = Math['pow'](bf['r'], bg), this['g'] = Math['pow'](bf['g'], bg), this['b'] = Math['pow'](bf['b'], bg), this;
        },
        'copyLinearToGamma': function(bf, bg) {
            void 0x0 === bg && (bg = 0x2);
            var bh = bg > 0x0 ? 0x1 / bg : 0x1;
            return this['r'] = Math['pow'](bf['r'], bh), this['g'] = Math['pow'](bf['g'], bh), this['b'] = Math['pow'](bf['b'], bh), this;
        },
        'convertGammaToLinear': function(bf) {
            return this['copyGammaToLinear'](this, bf), this;
        },
        'convertLinearToGamma': function(bf) {
            return this['copyLinearToGamma'](this, bf), this;
        },
        'copySRGBToLinear': function() {
            function bf(bf) {
                return bf < 0.04045 ? 0.0773993808 * bf : Math['pow'](0.9478672986 * bf + 0.0521327014, 2.4);
            }
            return function(bg) {
                return this['r'] = bf(bg['r']), this['g'] = bf(bg['g']), this['b'] = bf(bg['b']), this;
            };
        }(),
        'copyLinearToSRGB': function() {
            function bf(bf) {
                return bf < 0.0031308 ? 12.92 * bf : 1.055 * Math['pow'](bf, 0.41666) - 0.055;
            }
            return function(bg) {
                return this['r'] = bf(bg['r']), this['g'] = bf(bg['g']), this['b'] = bf(bg['b']), this;
            };
        }(),
        'convertSRGBToLinear': function() {
            return this['copySRGBToLinear'](this), this;
        },
        'convertLinearToSRGB': function() {
            return this['copyLinearToSRGB'](this), this;
        },
        'getHex': function() {
            return 0xff * this['r'] << 0x10 ^ 0xff * this['g'] << 0x8 ^ 0xff * this['b'] << 0x0;
        },
        'getHexString': function() {
            return ('000000' + this['getHex']()['toString'](0x10))['slice'](-0x6);
        },
        'getHSL': function(bf) {
            void 0x0 === bf && (console['warn']('THREE.Color:\x20.getHSL()\x20target\x20is\x20now\x20required'), bf = {
                'h': 0x0,
                's': 0x0,
                'l': 0x0
            });
            var bg, bh, bi = this['r'],
                bF = this['g'],
                bG = this['b'],
                bH = Math['max'](bi, bF, bG),
                bI = Math['min'](bi, bF, bG),
                bJ = (bI + bH) / 0x2;
            if (bI === bH) bg = 0x0, bh = 0x0;
            else {
                var bK = bH - bI;
                switch (bh = bJ <= 0.5 ? bK / (bH + bI) : bK / (0x2 - bH - bI), bH) {
                    case bi:
                        bg = (bF - bG) / bK + (bF < bG ? 0x6 : 0x0);
                        break;
                    case bF:
                        bg = (bG - bi) / bK + 0x2;
                        break;
                    case bG:
                        bg = (bi - bF) / bK + 0x4;
                }
                bg /= 0x6;
            }
            return bf['h'] = bg, bf['s'] = bh, bf['l'] = bJ, bf;
        },
        'getStyle': function() {
            return 'rgb(' + (0xff * this['r'] | 0x0) + ',' + (0xff * this['g'] | 0x0) + ',' + (0xff * this['b'] | 0x0) + ')';
        },
        'offsetHSL': (w4 = {}, function(bf, bg, bh) {
            return this['getHSL'](w4), w4['h'] += bf, w4['s'] += bg, w4['l'] += bh, this['setHSL'](w4['h'], w4['s'], w4['l']), this;
        }),
        'add': function(bf) {
            return this['r'] += bf['r'], this['g'] += bf['g'], this['b'] += bf['b'], this;
        },
        'addColors': function(bf, bg) {
            return this['r'] = bf['r'] + bg['r'], this['g'] = bf['g'] + bg['g'], this['b'] = bf['b'] + bg['b'], this;
        },
        'addScalar': function(bf) {
            return this['r'] += bf, this['g'] += bf, this['b'] += bf, this;
        },
        'sub': function(bf) {
            return this['r'] = Math['max'](0x0, this['r'] - bf['r']), this['g'] = Math['max'](0x0, this['g'] - bf['g']), this['b'] = Math['max'](0x0, this['b'] - bf['b']), this;
        },
        'multiply': function(bf) {
            return this['r'] *= bf['r'], this['g'] *= bf['g'], this['b'] *= bf['b'], this;
        },
        'multiplyScalar': function(bf) {
            return this['r'] *= bf, this['g'] *= bf, this['b'] *= bf, this;
        },
        'lerp': function(bf, bg) {
            return this['r'] += (bf['r'] - this['r']) * bg, this['g'] += (bf['g'] - this['g']) * bg, this['b'] += (bf['b'] - this['b']) * bg, this;
        },
        'lerpHSL': (w2 = {
            'h': 0x0,
            's': 0x0,
            'l': 0x0
        }, w3 = {
            'h': 0x0,
            's': 0x0,
            'l': 0x0
        }, function(bf, bg) {
            this['getHSL'](w2), bf['getHSL'](w3);
            var bh = e2['lerp'](w2['h'], w3['h'], bg),
                bi = e2['lerp'](w2['s'], w3['s'], bg),
                bF = e2['lerp'](w2['l'], w3['l'], bg);
            return this['setHSL'](bh, bi, bF), this;
        }),
        'equals': function(bf) {
            return bf['r'] === this['r'] && bf['g'] === this['g'] && bf['b'] === this['b'];
        },
        'fromArray': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0), this['r'] = bf[bg], this['g'] = bf[bg + 0x1], this['b'] = bf[bg + 0x2], this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['r'], bf[bg + 0x1] = this['g'], bf[bg + 0x2] = this['b'], bf;
        },
        'toJSON': function() {
            return this['getHex']();
        }
    });
    var xm, xn = {
            'common': {
                'diffuse': {
                    'value': new w7(0xeeeeee)
                },
                'opacity': {
                    'value': 0x1
                },
                'map': {
                    'value': null
                },
                'uvTransform': {
                    'value': new eO()
                },
                'alphaMap': {
                    'value': null
                }
            },
            'specularmap': {
                'specularMap': {
                    'value': null
                }
            },
            'envmap': {
                'envMap': {
                    'value': null
                },
                'flipEnvMap': {
                    'value': -0x1
                },
                'reflectivity': {
                    'value': 0x1
                },
                'refractionRatio': {
                    'value': 0.98
                },
                'maxMipLevel': {
                    'value': 0x0
                }
            },
            'aomap': {
                'aoMap': {
                    'value': null
                },
                'aoMapIntensity': {
                    'value': 0x1
                }
            },
            'lightmap': {
                'lightMap': {
                    'value': null
                },
                'lightMapIntensity': {
                    'value': 0x1
                }
            },
            'emissivemap': {
                'emissiveMap': {
                    'value': null
                }
            },
            'bumpmap': {
                'bumpMap': {
                    'value': null
                },
                'bumpScale': {
                    'value': 0x1
                }
            },
            'normalmap': {
                'normalMap': {
                    'value': null
                },
                'normalScale': {
                    'value': new eC(0x1, 0x1)
                }
            },
            'displacementmap': {
                'displacementMap': {
                    'value': null
                },
                'displacementScale': {
                    'value': 0x1
                },
                'displacementBias': {
                    'value': 0x0
                }
            },
            'roughnessmap': {
                'roughnessMap': {
                    'value': null
                }
            },
            'metalnessmap': {
                'metalnessMap': {
                    'value': null
                }
            },
            'gradientmap': {
                'gradientMap': {
                    'value': null
                }
            },
            'fog': {
                'fogDensity': {
                    'value': 0.00025
                },
                'fogNear': {
                    'value': 0x1
                },
                'fogFar': {
                    'value': 0x7d0
                },
                'fogColor': {
                    'value': new w7(0xffffff)
                }
            },
            'lights': {
                'ambientLightColor': {
                    'value': []
                },
                'lightProbe': {
                    'value': []
                },
                'directionalLights': {
                    'value': [],
                    'properties': {
                        'direction': {},
                        'color': {},
                        'shadow': {},
                        'shadowBias': {},
                        'shadowRadius': {},
                        'shadowMapSize': {}
                    }
                },
                'directionalShadowMap': {
                    'value': []
                },
                'directionalShadowMatrix': {
                    'value': []
                },
                'spotLights': {
                    'value': [],
                    'properties': {
                        'color': {},
                        'position': {},
                        'direction': {},
                        'distance': {},
                        'coneCos': {},
                        'penumbraCos': {},
                        'decay': {},
                        'shadow': {},
                        'shadowBias': {},
                        'shadowRadius': {},
                        'shadowMapSize': {}
                    }
                },
                'spotShadowMap': {
                    'value': []
                },
                'spotShadowMatrix': {
                    'value': []
                },
                'pointLights': {
                    'value': [],
                    'properties': {
                        'color': {},
                        'position': {},
                        'decay': {},
                        'distance': {},
                        'shadow': {},
                        'shadowBias': {},
                        'shadowRadius': {},
                        'shadowMapSize': {},
                        'shadowCameraNear': {},
                        'shadowCameraFar': {}
                    }
                },
                'pointShadowMap': {
                    'value': []
                },
                'pointShadowMatrix': {
                    'value': []
                },
                'hemisphereLights': {
                    'value': [],
                    'properties': {
                        'direction': {},
                        'skyColor': {},
                        'groundColor': {}
                    }
                },
                'rectAreaLights': {
                    'value': [],
                    'properties': {
                        'color': {},
                        'position': {},
                        'width': {},
                        'height': {}
                    }
                }
            },
            'points': {
                'diffuse': {
                    'value': new w7(0xeeeeee)
                },
                'opacity': {
                    'value': 0x1
                },
                'size': {
                    'value': 0x1
                },
                'scale': {
                    'value': 0x1
                },
                'map': {
                    'value': null
                },
                'uvTransform': {
                    'value': new eO()
                }
            },
            'sprite': {
                'diffuse': {
                    'value': new w7(0xeeeeee)
                },
                'opacity': {
                    'value': 0x1
                },
                'center': {
                    'value': new eC(0.5, 0.5)
                },
                'rotation': {
                    'value': 0x0
                },
                'map': {
                    'value': null
                },
                'uvTransform': {
                    'value': new eO()
                }
            }
        },
        xo = {
            'basic': {
                'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['fog']]),
                'vertexShader': vP['meshbasic_vert'],
                'fragmentShader': vP['meshbasic_frag']
            },
            'lambert': {
                'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['fog'], xn['lights'], {
                    'emissive': {
                        'value': new w7(0x0)
                    }
                }]),
                'vertexShader': vP['meshlambert_vert'],
                'fragmentShader': vP['meshlambert_frag']
            },
            'phong': {
                'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['gradientmap'], xn['fog'], xn['lights'], {
                    'emissive': {
                        'value': new w7(0x0)
                    },
                    'specular': {
                        'value': new w7(0x111111)
                    },
                    'shininess': {
                        'value': 0x1e
                    }
                }]),
                'vertexShader': vP['meshphong_vert'],
                'fragmentShader': vP['meshphong_frag']
            },
            'standard': {
                'uniforms': vW([xn['common'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['roughnessmap'], xn['metalnessmap'], xn['fog'], xn['lights'], {
                    'emissive': {
                        'value': new w7(0x0)
                    },
                    'roughness': {
                        'value': 0.5
                    },
                    'metalness': {
                        'value': 0.5
                    },
                    'envMapIntensity': {
                        'value': 0x1
                    }
                }]),
                'vertexShader': vP['meshphysical_vert'],
                'fragmentShader': vP['meshphysical_frag']
            },
            'matcap': {
                'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['fog'], {
                    'matcap': {
                        'value': null
                    }
                }]),
                'vertexShader': vP['meshmatcap_vert'],
                'fragmentShader': vP['meshmatcap_frag']
            },
            'points': {
                'uniforms': vW([xn['points'], xn['fog']]),
                'vertexShader': vP['points_vert'],
                'fragmentShader': vP['points_frag']
            },
            'dashed': {
                'uniforms': vW([xn['common'], xn['fog'], {
                    'scale': {
                        'value': 0x1
                    },
                    'dashSize': {
                        'value': 0x1
                    },
                    'totalSize': {
                        'value': 0x2
                    }
                }]),
                'vertexShader': vP['linedashed_vert'],
                'fragmentShader': vP['linedashed_frag']
            },
            'depth': {
                'uniforms': vW([xn['common'], xn['displacementmap']]),
                'vertexShader': vP['depth_vert'],
                'fragmentShader': vP['depth_frag']
            },
            'normal': {
                'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], {
                    'opacity': {
                        'value': 0x1
                    }
                }]),
                'vertexShader': vP['normal_vert'],
                'fragmentShader': vP['normal_frag']
            },
            'sprite': {
                'uniforms': vW([xn['sprite'], xn['fog']]),
                'vertexShader': vP['sprite_vert'],
                'fragmentShader': vP['sprite_frag']
            },
            'background': {
                'uniforms': {
                    'uvTransform': {
                        'value': new eO()
                    },
                    't2D': {
                        'value': null
                    }
                },
                'vertexShader': vP['background_vert'],
                'fragmentShader': vP['background_frag']
            },
            'cube': {
                'uniforms': {
                    'tCube': {
                        'value': null
                    },
                    'tFlip': {
                        'value': -0x1
                    },
                    'opacity': {
                        'value': 0x1
                    }
                },
                'vertexShader': vP['cube_vert'],
                'fragmentShader': vP['cube_frag']
            },
            'equirect': {
                'uniforms': {
                    'tEquirect': {
                        'value': null
                    }
                },
                'vertexShader': vP['equirect_vert'],
                'fragmentShader': vP['equirect_frag']
            },
            'distanceRGBA': {
                'uniforms': vW([xn['common'], xn['displacementmap'], {
                    'referencePosition': {
                        'value': new eK()
                    },
                    'nearDistance': {
                        'value': 0x1
                    },
                    'farDistance': {
                        'value': 0x3e8
                    }
                }]),
                'vertexShader': vP['distanceRGBA_vert'],
                'fragmentShader': vP['distanceRGBA_frag']
            },
            'shadow': {
                'uniforms': vW([xn['lights'], xn['fog'], {
                    'color': {
                        'value': new w7(0x0)
                    },
                    'opacity': {
                        'value': 0x1
                    }
                }]),
                'vertexShader': vP['shadow_vert'],
                'fragmentShader': vP['shadow_frag']
            }
        };

    function xp() {
        var bf = null,
            bg = !0x1,
            bh = null;

        function bi(bF, bG) {
            !0x1 !== bg && (bh(bF, bG), bf['requestAnimationFrame'](bi));
        }
        return {
            'start': function() {
                !0x0 !== bg && null !== bh && (bf['requestAnimationFrame'](bi), bg = !0x0);
            },
            'stop': function() {
                bg = !0x1;
            },
            'setAnimationLoop': function(bf) {
                bh = bf;
            },
            'setContext': function(bg) {
                bf = bg;
            }
        };
    }

    function xy(bf) {
        var bg = new WeakMap();
        return {
            'get': function(bf) {
                return bf['isInterleavedBufferAttribute'] && (bf = bf['data']), bg['get'](bf);
            },
            'remove': function(bh) {
                bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
                var bi = bg['get'](bh);
                bi && (bf['deleteBuffer'](bi['buffer']), bg['delete'](bh));
            },
            'update': function(bh, bi) {
                bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
                var bF = bg['get'](bh);
                void 0x0 === bF ? bg['set'](bh, function(bg, bh) {
                    var bi = bg['array'],
                        bF = bg['dynamic'] ? 0x88e8 : 0x88e4,
                        bG = bf['createBuffer']();
                    bf['bindBuffer'](bh, bG), bf['bufferData'](bh, bi, bF), bg['onUploadCallback']();
                    var bH = 0x1406;
                    return bi instanceof Float32Array ? bH = 0x1406 : bi instanceof Float64Array ? console['warn']('THREE.WebGLAttributes:\x20Unsupported\x20data\x20buffer\x20format:\x20Float64Array.') : bi instanceof Uint16Array ? bH = 0x1403 : bi instanceof Int16Array ? bH = 0x1402 : bi instanceof Uint32Array ? bH = 0x1405 : bi instanceof Int32Array ? bH = 0x1404 : bi instanceof Int8Array ? bH = 0x1400 : bi instanceof Uint8Array && (bH = 0x1401), {
                        'buffer': bG,
                        'type': bH,
                        'bytesPerElement': bi['BYTES_PER_ELEMENT'],
                        'version': bg['version']
                    };
                }(bh, bi)) : bF['version'] < bh['version'] && (function(bg, bh, bi) {
                    var bF = bh['array'],
                        bG = bh['updateRange'];
                    bf['bindBuffer'](bi, bg), !0x1 === bh['dynamic'] ? bf['bufferData'](bi, bF, 0x88e4) : -0x1 === bG['count'] ? bf['bufferSubData'](bi, 0x0, bF) : 0x0 === bG['count'] ? console['error']('THREE.WebGLObjects.updateBuffer:\x20dynamic\x20THREE.BufferAttribute\x20marked\x20as\x20needsUpdate\x20but\x20updateRange.count\x20is\x200,\x20ensure\x20you\x20are\x20using\x20set\x20methods\x20or\x20updating\x20manually.') : (bf['bufferSubData'](bi, bG['offset'] * bF['BYTES_PER_ELEMENT'], bF['subarray'](bG['offset'], bG['offset'] + bG['count'])), bG['count'] = -0x1);
                }(bF['buffer'], bh, bi), bF['version'] = bh['version']);
            }
        };
    }

    function xS(bf, bg, bh, bi, bF, bG) {
        this['a'] = bf, this['b'] = bg, this['c'] = bh, this['normal'] = bi && bi['isVector3'] ? bi : new eK(), this['vertexNormals'] = Array['isArray'](bi) ? bi : [], this['color'] = bF && bF['isColor'] ? bF : new w7(), this['vertexColors'] = Array['isArray'](bF) ? bF : [], this['materialIndex'] = void 0x0 !== bG ? bG : 0x0;
    }

    function xZ(bf, bg, bh, bi) {
        this['_x'] = bf || 0x0, this['_y'] = bg || 0x0, this['_z'] = bh || 0x0, this['_order'] = bi || xZ['DefaultOrder'];
    }

    function y4() {
        this['mask'] = 0x1;
    }
    xo['physical'] = {
        'uniforms': vW([xo['standard']['uniforms'], {
            'clearCoat': {
                'value': 0x0
            },
            'clearCoatRoughness': {
                'value': 0x0
            }
        }]),
        'vertexShader': vP['meshphysical_vert'],
        'fragmentShader': vP['meshphysical_frag']
    }, Object['assign'](xS['prototype'], {
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            this['a'] = bf['a'], this['b'] = bf['b'], this['c'] = bf['c'], this['normal']['copy'](bf['normal']), this['color']['copy'](bf['color']), this['materialIndex'] = bf['materialIndex'];
            for (var bg = 0x0, bh = bf['vertexNormals']['length']; bg < bh; bg++) this['vertexNormals'][bg] = bf['vertexNormals'][bg]['clone']();
            for (bg = 0x0, bh = bf['vertexColors']['length']; bg < bh; bg++) this['vertexColors'][bg] = bf['vertexColors'][bg]['clone']();
            return this;
        }
    }), xZ['RotationOrders'] = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'], xZ['DefaultOrder'] = 'XYZ', Object['defineProperties'](xZ['prototype'], {
        'x': {
            'get': function() {
                return this['_x'];
            },
            'set': function(bf) {
                this['_x'] = bf, this['onChangeCallback']();
            }
        },
        'y': {
            'get': function() {
                return this['_y'];
            },
            'set': function(bf) {
                this['_y'] = bf, this['onChangeCallback']();
            }
        },
        'z': {
            'get': function() {
                return this['_z'];
            },
            'set': function(bf) {
                this['_z'] = bf, this['onChangeCallback']();
            }
        },
        'order': {
            'get': function() {
                return this['_order'];
            },
            'set': function(bf) {
                this['_order'] = bf, this['onChangeCallback']();
            }
        }
    }), Object['assign'](xZ['prototype'], {
        'isEuler': !0x0,
        'set': function(bf, bg, bh, bi) {
            return this['_x'] = bf, this['_y'] = bg, this['_z'] = bh, this['_order'] = bi || this['_order'], this['onChangeCallback'](), this;
        },
        'clone': function() {
            return new this['constructor'](this['_x'], this['_y'], this['_z'], this['_order']);
        },
        'copy': function(bf) {
            return this['_x'] = bf['_x'], this['_y'] = bf['_y'], this['_z'] = bf['_z'], this['_order'] = bf['_order'], this['onChangeCallback'](), this;
        },
        'setFromRotationMatrix': function(bf, bg, bh) {
            var bi = e2['clamp'],
                bF = bf['elements'],
                bG = bF[0x0],
                bH = bF[0x4],
                bI = bF[0x8],
                bJ = bF[0x1],
                bK = bF[0x5],
                bL = bF[0x9],
                bM = bF[0x2],
                bN = bF[0x6],
                bO = bF[0xa];
            return 'XYZ' === (bg = bg || this['_order']) ? (this['_y'] = Math['asin'](bi(bI, -0x1, 0x1)), Math['abs'](bI) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bO), this['_z'] = Math['atan2'](-bH, bG)) : (this['_x'] = Math['atan2'](bN, bK), this['_z'] = 0x0)) : 'YXZ' === bg ? (this['_x'] = Math['asin'](-bi(bL, -0x1, 0x1)), Math['abs'](bL) < 0.99999 ? (this['_y'] = Math['atan2'](bI, bO), this['_z'] = Math['atan2'](bJ, bK)) : (this['_y'] = Math['atan2'](-bM, bG), this['_z'] = 0x0)) : 'ZXY' === bg ? (this['_x'] = Math['asin'](bi(bN, -0x1, 0x1)), Math['abs'](bN) < 0.99999 ? (this['_y'] = Math['atan2'](-bM, bO), this['_z'] = Math['atan2'](-bH, bK)) : (this['_y'] = 0x0, this['_z'] = Math['atan2'](bJ, bG))) : 'ZYX' === bg ? (this['_y'] = Math['asin'](-bi(bM, -0x1, 0x1)), Math['abs'](bM) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bO), this['_z'] = Math['atan2'](bJ, bG)) : (this['_x'] = 0x0, this['_z'] = Math['atan2'](-bH, bK))) : 'YZX' === bg ? (this['_z'] = Math['asin'](bi(bJ, -0x1, 0x1)), Math['abs'](bJ) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bK), this['_y'] = Math['atan2'](-bM, bG)) : (this['_x'] = 0x0, this['_y'] = Math['atan2'](bI, bO))) : 'XZY' === bg ? (this['_z'] = Math['asin'](-bi(bH, -0x1, 0x1)), Math['abs'](bH) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bK), this['_y'] = Math['atan2'](bI, bG)) : (this['_x'] = Math['atan2'](-bL, bO), this['_y'] = 0x0)) : console['warn']('THREE.Euler:\x20.setFromRotationMatrix()\x20given\x20unsupported\x20order:\x20' + bg), this['_order'] = bg, !0x1 !== bh && this['onChangeCallback'](), this;
        },
        'setFromQuaternion': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeRotationFromQuaternion'](bg), this['setFromRotationMatrix'](bf, bh, bi);
            };
        }(),
        'setFromVector3': function(bf, bg) {
            return this['set'](bf['x'], bf['y'], bf['z'], bg || this['_order']);
        },
        'reorder': (xm = new eF(), function(bf) {
            return xm['setFromEuler'](this), this['setFromQuaternion'](xm, bf);
        }),
        'equals': function(bf) {
            return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_order'] === this['_order'];
        },
        'fromArray': function(bf) {
            return this['_x'] = bf[0x0], this['_y'] = bf[0x1], this['_z'] = bf[0x2], void 0x0 !== bf[0x3] && (this['_order'] = bf[0x3]), this['onChangeCallback'](), this;
        },
        'toArray': function(bf, bg) {
            return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['_x'], bf[bg + 0x1] = this['_y'], bf[bg + 0x2] = this['_z'], bf[bg + 0x3] = this['_order'], bf;
        },
        'toVector3': function(bf) {
            return bf ? bf['set'](this['_x'], this['_y'], this['_z']) : new eK(this['_x'], this['_y'], this['_z']);
        },
        'onChange': function(bf) {
            return this['onChangeCallback'] = bf, this;
        },
        'onChangeCallback': function() {}
    }), Object['assign'](y4['prototype'], {
        'set': function(bf) {
            this['mask'] = 0x1 << bf | 0x0;
        },
        'enable': function(bf) {
            this['mask'] |= 0x1 << bf | 0x0;
        },
        'toggle': function(bf) {
            this['mask'] ^= 0x1 << bf | 0x0;
        },
        'disable': function(bf) {
            this['mask'] &= ~(0x1 << bf | 0x0);
        },
        'test': function(bf) {
            return 0x0 != (this['mask'] & bf['mask']);
        }
    });
    var yN, yO, yP, yQ, yR, yS = 0x0;

    function yT() {
        Object['defineProperty'](this, 'id', {
            'value': yS++
        }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'Object3D', this['parent'] = null, this['children'] = [], this['up'] = yT['DefaultUp']['clone']();
        var bf = new eK(),
            bg = new xZ(),
            bh = new eF(),
            bi = new eK(0x1, 0x1, 0x1);
        bg['onChange'](function() {
            bh['setFromEuler'](bg, !0x1);
        }), bh['onChange'](function() {
            bg['setFromQuaternion'](bh, void 0x0, !0x1);
        }), Object['defineProperties'](this, {
            'position': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bf
            },
            'rotation': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bg
            },
            'quaternion': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bh
            },
            'scale': {
                'configurable': !0x0,
                'enumerable': !0x0,
                'value': bi
            },
            'modelViewMatrix': {
                'value': new mR()
            },
            'normalMatrix': {
                'value': new eO()
            }
        }), this['matrix'] = new mR(), this['matrixWorld'] = new mR(), this['matrixAutoUpdate'] = yT['DefaultMatrixAutoUpdate'], this['matrixWorldNeedsUpdate'] = !0x1, this['layers'] = new y4(), this['visible'] = !0x0, this['castShadow'] = !0x1, this['receiveShadow'] = !0x1, this['frustumCulled'] = !0x0, this['renderOrder'] = 0x0, this['userData'] = {};
    }
    yT['DefaultUp'] = new eK(0x0, 0x1, 0x0), yT['DefaultMatrixAutoUpdate'] = !0x0, yT['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': yT,
        'isObject3D': !0x0,
        'onBeforeRender': function() {},
        'onAfterRender': function() {},
        'applyMatrix': function(bf) {
            this['matrixAutoUpdate'] && this['updateMatrix'](), this['matrix']['premultiply'](bf), this['matrix']['decompose'](this['position'], this['quaternion'], this['scale']);
        },
        'applyQuaternion': function(bf) {
            return this['quaternion']['premultiply'](bf), this;
        },
        'setRotationFromAxisAngle': function(bf, bg) {
            this['quaternion']['setFromAxisAngle'](bf, bg);
        },
        'setRotationFromEuler': function(bf) {
            this['quaternion']['setFromEuler'](bf, !0x0);
        },
        'setRotationFromMatrix': function(bf) {
            this['quaternion']['setFromRotationMatrix'](bf);
        },
        'setRotationFromQuaternion': function(bf) {
            this['quaternion']['copy'](bf);
        },
        'rotateOnAxis': (yR = new eF(), function(bf, bg) {
            return yR['setFromAxisAngle'](bf, bg), this['quaternion']['multiply'](yR), this;
        }),
        'rotateOnWorldAxis': function() {
            var bf = new eF();
            return function(bg, bh) {
                return bf['setFromAxisAngle'](bg, bh), this['quaternion']['premultiply'](bf), this;
            };
        }(),
        'rotateX': function() {
            var bf = new eK(0x1, 0x0, 0x0);
            return function(bg) {
                return this['rotateOnAxis'](bf, bg);
            };
        }(),
        'rotateY': function() {
            var bf = new eK(0x0, 0x1, 0x0);
            return function(bg) {
                return this['rotateOnAxis'](bf, bg);
            };
        }(),
        'rotateZ': function() {
            var bf = new eK(0x0, 0x0, 0x1);
            return function(bg) {
                return this['rotateOnAxis'](bf, bg);
            };
        }(),
        'translateOnAxis': function() {
            var bf = new eK();
            return function(bg, bh) {
                return bf['copy'](bg)['applyQuaternion'](this['quaternion']), this['position']['add'](bf['multiplyScalar'](bh)), this;
            };
        }(),
        'translateX': function() {
            var bf = new eK(0x1, 0x0, 0x0);
            return function(bg) {
                return this['translateOnAxis'](bf, bg);
            };
        }(),
        'translateY': function() {
            var bf = new eK(0x0, 0x1, 0x0);
            return function(bg) {
                return this['translateOnAxis'](bf, bg);
            };
        }(),
        'translateZ': function() {
            var bf = new eK(0x0, 0x0, 0x1);
            return function(bg) {
                return this['translateOnAxis'](bf, bg);
            };
        }(),
        'localToWorld': function(bf) {
            return bf['applyMatrix4'](this['matrixWorld']);
        },
        'worldToLocal': (yQ = new mR(), function(bf) {
            return bf['applyMatrix4'](yQ['getInverse'](this['matrixWorld']));
        }),
        'lookAt': function() {
            var bf = new eF(),
                bg = new mR(),
                bh = new eK(),
                bi = new eK();
            return function(bF, bG, bH) {
                bF['isVector3'] ? bh['copy'](bF) : bh['set'](bF, bG, bH);
                var bI = this['parent'];
                this['updateWorldMatrix'](!0x0, !0x1), bi['setFromMatrixPosition'](this['matrixWorld']), this['isCamera'] || this['isLight'] ? bg['lookAt'](bi, bh, this['up']) : bg['lookAt'](bh, bi, this['up']), this['quaternion']['setFromRotationMatrix'](bg), bI && (bg['extractRotation'](bI['matrixWorld']), bf['setFromRotationMatrix'](bg), this['quaternion']['premultiply'](bf['inverse']()));
            };
        }(),
        'add': function(bf) {
            if (arguments['length'] > 0x1) {
                for (var bg = 0x0; bg < arguments['length']; bg++) this['add'](arguments[bg]);
                return this;
            }
            return bf === this ? (console['error']('THREE.Object3D.add:\x20object\x20can\x27t\x20be\x20added\x20as\x20a\x20child\x20of\x20itself.', bf), this) : (bf && bf['isObject3D'] ? (null !== bf['parent'] && bf['parent']['remove'](bf), bf['parent'] = this, bf['dispatchEvent']({
                'type': 'added'
            }), this['children']['push'](bf)) : console['error']('THREE.Object3D.add:\x20object\x20not\x20an\x20instance\x20of\x20THREE.Object3D.', bf), this);
        },
        'remove': function(bf) {
            if (arguments['length'] > 0x1) {
                for (var bg = 0x0; bg < arguments['length']; bg++) this['remove'](arguments[bg]);
                return this;
            }
            var bh = this['children']['indexOf'](bf);
            return -0x1 !== bh && (bf['parent'] = null, bf['dispatchEvent']({
                'type': 'removed'
            }), this['children']['splice'](bh, 0x1)), this;
        },
        'attach': (yP = new mR(), function(bf) {
            return this['updateWorldMatrix'](!0x0, !0x1), yP['getInverse'](this['matrixWorld']), null !== bf['parent'] && (bf['parent']['updateWorldMatrix'](!0x0, !0x1), yP['multiply'](bf['parent']['matrixWorld'])), bf['applyMatrix'](yP), bf['updateWorldMatrix'](!0x1, !0x1), this['add'](bf), this;
        }),
        'getObjectById': function(bf) {
            return this['getObjectByProperty']('id', bf);
        },
        'getObjectByName': function(bf) {
            return this['getObjectByProperty']('name', bf);
        },
        'getObjectByProperty': function(bf, bg) {
            if (this[bf] === bg) return this;
            for (var bh = 0x0, bi = this['children']['length']; bh < bi; bh++) {
                var bF = this['children'][bh]['getObjectByProperty'](bf, bg);
                if (void 0x0 !== bF) return bF;
            }
        },
        'getWorldPosition': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldPosition()\x20target\x20is\x20now\x20required'), bf = new eK()), this['updateMatrixWorld'](!0x0), bf['setFromMatrixPosition'](this['matrixWorld']);
        },
        'getWorldQuaternion': (yN = new eK(), yO = new eK(), function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldQuaternion()\x20target\x20is\x20now\x20required'), bf = new eF()), this['updateMatrixWorld'](!0x0), this['matrixWorld']['decompose'](yN, bf, yO), bf;
        }),
        'getWorldScale': function() {
            var bf = new eK(),
                bg = new eF();
            return function(bh) {
                return void 0x0 === bh && (console['warn']('THREE.Object3D:\x20.getWorldScale()\x20target\x20is\x20now\x20required'), bh = new eK()), this['updateMatrixWorld'](!0x0), this['matrixWorld']['decompose'](bf, bg, bh), bh;
            };
        }(),
        'getWorldDirection': function(bf) {
            void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'), bf = new eK()), this['updateMatrixWorld'](!0x0);
            var bg = this['matrixWorld']['elements'];
            return bf['set'](bg[0x8], bg[0x9], bg[0xa])['normalize']();
        },
        'raycast': function() {},
        'traverse': function(bf) {
            bf(this);
            for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++) bg[bh]['traverse'](bf);
        },
        'traverseVisible': function(bf) {
            if (!0x1 !== this['visible']) {
                bf(this);
                for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++) bg[bh]['traverseVisible'](bf);
            }
        },
        'traverseAncestors': function(bf) {
            var bg = this['parent'];
            null !== bg && (bf(bg), bg['traverseAncestors'](bf));
        },
        'updateMatrix': function() {
            this['matrix']['compose'](this['position'], this['quaternion'], this['scale']), this['matrixWorldNeedsUpdate'] = !0x0;
        },
        'updateMatrixWorld': function(bf) {
            this['matrixAutoUpdate'] && this['updateMatrix'](), (this['matrixWorldNeedsUpdate'] || bf) && (null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']), this['matrixWorldNeedsUpdate'] = !0x1, bf = !0x0);
            for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++) bg[bh]['updateMatrixWorld'](bf);
        },
        'updateWorldMatrix': function(bf, bg) {
            var bh = this['parent'];
            if (!0x0 === bf && null !== bh && bh['updateWorldMatrix'](!0x0, !0x1), this['matrixAutoUpdate'] && this['updateMatrix'](), null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']), !0x0 === bg)
                for (var bi = this['children'], bF = 0x0, bG = bi['length']; bF < bG; bF++) bi[bF]['updateWorldMatrix'](!0x1, !0x0);
        },
        'toJSON': function(bf) {
            var bg = void 0x0 === bf || 'string' == typeof bf,
                bh = {};
            bg && (bf = {
                'geometries': {},
                'materials': {},
                'textures': {},
                'images': {},
                'shapes': {}
            }, bh['metadata'] = {
                'version': 4.5,
                'type': 'Object',
                'generator': 'Object3D.toJSON'
            });
            var bi = {};

            function bF(bg, bh) {
                return void 0x0 === bg[bh['uuid']] && (bg[bh['uuid']] = bh['toJSON'](bf)), bh['uuid'];
            }
            if (bi['uuid'] = this['uuid'], bi['type'] = this['type'], '' !== this['name'] && (bi['name'] = this['name']), !0x0 === this['castShadow'] && (bi['castShadow'] = !0x0), !0x0 === this['receiveShadow'] && (bi['receiveShadow'] = !0x0), !0x1 === this['visible'] && (bi['visible'] = !0x1), !0x1 === this['frustumCulled'] && (bi['frustumCulled'] = !0x1), 0x0 !== this['renderOrder'] && (bi['renderOrder'] = this['renderOrder']), '{}' !== JSON['stringify'](this['userData']) && (bi['userData'] = this['userData']), bi['layers'] = this['layers']['mask'], bi['matrix'] = this['matrix']['toArray'](), !0x1 === this['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = !0x1), this['isMesh'] && this['drawMode'] !== dN && (bi['drawMode'] = this['drawMode']), this['isMesh'] || this['isLine'] || this['isPoints']) {
                bi['geometry'] = bF(bf['geometries'], this['geometry']);
                var bG = this['geometry']['parameters'];
                if (void 0x0 !== bG && void 0x0 !== bG['shapes']) {
                    var bH = bG['shapes'];
                    if (Array['isArray'](bH))
                        for (var bI = 0x0, bJ = bH['length']; bI < bJ; bI++) {
                            var bK = bH[bI];
                            bF(bf['shapes'], bK);
                        } else bF(bf['shapes'], bH);
                }
            }
            if (void 0x0 !== this['material'])
                if (Array['isArray'](this['material'])) {
                    var bL = [];
                    for (bI = 0x0, bJ = this['material']['length']; bI < bJ; bI++) bL['push'](bF(bf['materials'], this['material'][bI]));
                    bi['material'] = bL;
                } else bi['material'] = bF(bf['materials'], this['material']);
            if (this['children']['length'] > 0x0) {
                bi['children'] = [];
                for (bI = 0x0; bI < this['children']['length']; bI++) bi['children']['push'](this['children'][bI]['toJSON'](bf)['object']);
            }
            if (bg) {
                var bM = bQ(bf['geometries']),
                    bN = bQ(bf['materials']),
                    bO = bQ(bf['textures']),
                    bP = bQ(bf['images']);
                bH = bQ(bf['shapes']);
                bM['length'] > 0x0 && (bh['geometries'] = bM), bN['length'] > 0x0 && (bh['materials'] = bN), bO['length'] > 0x0 && (bh['textures'] = bO), bP['length'] > 0x0 && (bh['images'] = bP), bH['length'] > 0x0 && (bh['shapes'] = bH);
            }
            return bh['object'] = bi, bh;

            function bQ(bf) {
                var bg = [];
                for (var bh in bf) {
                    var bi = bf[bh];
                    delete bi['metadata'], bg['push'](bi);
                }
                return bg;
            }
        },
        'clone': function(bf) {
            return new this['constructor']()['copy'](this, bf);
        },
        'copy': function(bf, bg) {
            if (void 0x0 === bg && (bg = !0x0), this['name'] = bf['name'], this['up']['copy'](bf['up']), this['position']['copy'](bf['position']), this['quaternion']['copy'](bf['quaternion']), this['scale']['copy'](bf['scale']), this['matrix']['copy'](bf['matrix']), this['matrixWorld']['copy'](bf['matrixWorld']), this['matrixAutoUpdate'] = bf['matrixAutoUpdate'], this['matrixWorldNeedsUpdate'] = bf['matrixWorldNeedsUpdate'], this['layers']['mask'] = bf['layers']['mask'], this['visible'] = bf['visible'], this['castShadow'] = bf['castShadow'], this['receiveShadow'] = bf['receiveShadow'], this['frustumCulled'] = bf['frustumCulled'], this['renderOrder'] = bf['renderOrder'], this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])), !0x0 === bg)
                for (var bh = 0x0; bh < bf['children']['length']; bh++) {
                    var bi = bf['children'][bh];
                    this['add'](bi['clone']());
                }
            return this;
        }
    });
    var AE, AF, AG = 0x0;

    function AH() {
        Object['defineProperty'](this, 'id', {
            'value': AG += 0x2
        }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'Geometry', this['vertices'] = [], this['colors'] = [], this['faces'] = [], this['faceVertexUvs'] = [
            []
        ], this['morphTargets'] = [], this['morphNormals'] = [], this['skinWeights'] = [], this['skinIndices'] = [], this['lineDistances'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['elementsNeedUpdate'] = !0x1, this['verticesNeedUpdate'] = !0x1, this['uvsNeedUpdate'] = !0x1, this['normalsNeedUpdate'] = !0x1, this['colorsNeedUpdate'] = !0x1, this['lineDistancesNeedUpdate'] = !0x1, this['groupsNeedUpdate'] = !0x1;
    }

    function AI(bf, bg, bh) {
        if (Array['isArray'](bf)) throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
        this['name'] = '', this['array'] = bf, this['itemSize'] = bg, this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0, this['normalized'] = !0x0 === bh, this['dynamic'] = !0x1, this['updateRange'] = {
            'offset': 0x0,
            'count': -0x1
        }, this['version'] = 0x0;
    }

    function AM(bf, bg, bh) {
        AI['call'](this, new Int8Array(bf), bg, bh);
    }

    function AQ(bf, bg, bh) {
        AI['call'](this, new Uint8Array(bf), bg, bh);
    }

    function AU(bf, bg, bh) {
        AI['call'](this, new Uint8ClampedArray(bf), bg, bh);
    }

    function AY(bf, bg, bh) {
        AI['call'](this, new Int16Array(bf), bg, bh);
    }

    function B2(bf, bg, bh) {
        AI['call'](this, new Uint16Array(bf), bg, bh);
    }

    function B6(bf, bg, bh) {
        AI['call'](this, new Int32Array(bf), bg, bh);
    }

    function Ba(bf, bg, bh) {
        AI['call'](this, new Uint32Array(bf), bg, bh);
    }

    function Be(bf, bg, bh) {
        AI['call'](this, new Float32Array(bf), bg, bh);
    }

    function Bi(bf, bg, bh) {
        AI['call'](this, new Float64Array(bf), bg, bh);
    }

    function Bm() {
        this['vertices'] = [], this['normals'] = [], this['colors'] = [], this['uvs'] = [], this['uvs2'] = [], this['groups'] = [], this['morphTargets'] = {}, this['skinWeights'] = [], this['skinIndices'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['verticesNeedUpdate'] = !0x1, this['normalsNeedUpdate'] = !0x1, this['colorsNeedUpdate'] = !0x1, this['uvsNeedUpdate'] = !0x1, this['groupsNeedUpdate'] = !0x1;
    }

    function Bn(bf) {
        if (0x0 === bf['length']) return -0x1 / 0x0;
        for (var bg = bf[0x0], bh = 0x1, bi = bf['length']; bh < bi; ++bh) bf[bh] > bg && (bg = bf[bh]);
        return bg;
    }
    AH['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': AH,
        'isGeometry': !0x0,
        'applyMatrix': function(bf) {
            for (var bg = new eO()['getNormalMatrix'](bf), bh = 0x0, bi = this['vertices']['length']; bh < bi; bh++) {
                this['vertices'][bh]['applyMatrix4'](bf);
            }
            for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
                var bF = this['faces'][bh];
                bF['normal']['applyMatrix3'](bg)['normalize']();
                for (var bG = 0x0, bH = bF['vertexNormals']['length']; bG < bH; bG++) bF['vertexNormals'][bG]['applyMatrix3'](bg)['normalize']();
            }
            return null !== this['boundingBox'] && this['computeBoundingBox'](), null !== this['boundingSphere'] && this['computeBoundingSphere'](), this['verticesNeedUpdate'] = !0x0, this['normalsNeedUpdate'] = !0x0, this;
        },
        'rotateX': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationX'](bg), this['applyMatrix'](bf), this;
            };
        }(),
        'rotateY': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationY'](bg), this['applyMatrix'](bf), this;
            };
        }(),
        'rotateZ': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationZ'](bg), this['applyMatrix'](bf), this;
            };
        }(),
        'translate': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeTranslation'](bg, bh, bi), this['applyMatrix'](bf), this;
            };
        }(),
        'scale': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeScale'](bg, bh, bi), this['applyMatrix'](bf), this;
            };
        }(),
        'lookAt': (AF = new yT(), function(bf) {
            AF['lookAt'](bf), AF['updateMatrix'](), this['applyMatrix'](AF['matrix']);
        }),
        'fromBufferGeometry': function(bf) {
            var bg = this,
                bh = null !== bf['index'] ? bf['index']['array'] : void 0x0,
                bi = bf['attributes'],
                bF = bi['position']['array'],
                bG = void 0x0 !== bi['normal'] ? bi['normal']['array'] : void 0x0,
                bH = void 0x0 !== bi['color'] ? bi['color']['array'] : void 0x0,
                bI = void 0x0 !== bi['uv'] ? bi['uv']['array'] : void 0x0,
                bJ = void 0x0 !== bi['uv2'] ? bi['uv2']['array'] : void 0x0;
            void 0x0 !== bJ && (this['faceVertexUvs'][0x1] = []);
            for (var bK = 0x0; bK < bF['length']; bK += 0x3) bg['vertices']['push'](new eK()['fromArray'](bF, bK)), void 0x0 !== bH && bg['colors']['push'](new w7()['fromArray'](bH, bK));

            function bL(bf, bh, bi, bF) {
                var bK = void 0x0 === bH ? [] : [bg['colors'][bf]['clone'](), bg['colors'][bh]['clone'](), bg['colors'][bi]['clone']()],
                    bL = new xS(bf, bh, bi, void 0x0 === bG ? [] : [new eK()['fromArray'](bG, 0x3 * bf), new eK()['fromArray'](bG, 0x3 * bh), new eK()['fromArray'](bG, 0x3 * bi)], bK, bF);
                bg['faces']['push'](bL), void 0x0 !== bI && bg['faceVertexUvs'][0x0]['push']([new eC()['fromArray'](bI, 0x2 * bf), new eC()['fromArray'](bI, 0x2 * bh), new eC()['fromArray'](bI, 0x2 * bi)]), void 0x0 !== bJ && bg['faceVertexUvs'][0x1]['push']([new eC()['fromArray'](bJ, 0x2 * bf), new eC()['fromArray'](bJ, 0x2 * bh), new eC()['fromArray'](bJ, 0x2 * bi)]);
            }
            var bM = bf['groups'];
            if (bM['length'] > 0x0)
                for (bK = 0x0; bK < bM['length']; bK++)
                    for (var bN = bM[bK], bO = bN['start'], bP = bO, bQ = bO + bN['count']; bP < bQ; bP += 0x3) void 0x0 !== bh ? bL(bh[bP], bh[bP + 0x1], bh[bP + 0x2], bN['materialIndex']) : bL(bP, bP + 0x1, bP + 0x2, bN['materialIndex']);
            else if (void 0x0 !== bh)
                for (bK = 0x0; bK < bh['length']; bK += 0x3) bL(bh[bK], bh[bK + 0x1], bh[bK + 0x2]);
            else
                for (bK = 0x0; bK < bF['length'] / 0x3; bK += 0x3) bL(bK, bK + 0x1, bK + 0x2);
            return this['computeFaceNormals'](), null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()), null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()), this;
        },
        'center': (AE = new eK(), function() {
            return this['computeBoundingBox'](), this['boundingBox']['getCenter'](AE)['negate'](), this['translate'](AE['x'], AE['y'], AE['z']), this;
        }),
        'normalize': function() {
            this['computeBoundingSphere']();
            var bf = this['boundingSphere']['center'],
                bg = this['boundingSphere']['radius'],
                bh = 0x0 === bg ? 0x1 : 0x1 / bg,
                bi = new mR();
            return bi['set'](bh, 0x0, 0x0, -bh * bf['x'], 0x0, bh, 0x0, -bh * bf['y'], 0x0, 0x0, bh, -bh * bf['z'], 0x0, 0x0, 0x0, 0x1), this['applyMatrix'](bi), this;
        },
        'computeFaceNormals': function() {
            for (var bf = new eK(), bg = new eK(), bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
                var bF = this['faces'][bh],
                    bG = this['vertices'][bF['a']],
                    bH = this['vertices'][bF['b']],
                    bI = this['vertices'][bF['c']];
                bf['subVectors'](bI, bH), bg['subVectors'](bG, bH), bf['cross'](bg), bf['normalize'](), bF['normal']['copy'](bf);
            }
        },
        'computeVertexNormals': function(bf) {
            var bg, bh, bi, bF, bG, bH;
            for (void 0x0 === bf && (bf = !0x0), bH = new Array(this['vertices']['length']), bg = 0x0, bh = this['vertices']['length']; bg < bh; bg++) bH[bg] = new eK();
            if (bf) {
                var bI, bJ, bK, bL = new eK(),
                    bM = new eK();
                for (bi = 0x0, bF = this['faces']['length']; bi < bF; bi++) bG = this['faces'][bi], bI = this['vertices'][bG['a']], bJ = this['vertices'][bG['b']], bK = this['vertices'][bG['c']], bL['subVectors'](bK, bJ), bM['subVectors'](bI, bJ), bL['cross'](bM), bH[bG['a']]['add'](bL), bH[bG['b']]['add'](bL), bH[bG['c']]['add'](bL);
            } else
                for (this['computeFaceNormals'](), bi = 0x0, bF = this['faces']['length']; bi < bF; bi++) bH[(bG = this['faces'][bi])['a']]['add'](bG['normal']), bH[bG['b']]['add'](bG['normal']), bH[bG['c']]['add'](bG['normal']);
            for (bg = 0x0, bh = this['vertices']['length']; bg < bh; bg++) bH[bg]['normalize']();
            for (bi = 0x0, bF = this['faces']['length']; bi < bF; bi++) {
                var bN = (bG = this['faces'][bi])['vertexNormals'];
                0x3 === bN['length'] ? (bN[0x0]['copy'](bH[bG['a']]), bN[0x1]['copy'](bH[bG['b']]), bN[0x2]['copy'](bH[bG['c']])) : (bN[0x0] = bH[bG['a']]['clone'](), bN[0x1] = bH[bG['b']]['clone'](), bN[0x2] = bH[bG['c']]['clone']());
            }
            this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
        },
        'computeFlatVertexNormals': function() {
            var bf, bg, bh;
            for (this['computeFaceNormals'](), bf = 0x0, bg = this['faces']['length']; bf < bg; bf++) {
                var bi = (bh = this['faces'][bf])['vertexNormals'];
                0x3 === bi['length'] ? (bi[0x0]['copy'](bh['normal']), bi[0x1]['copy'](bh['normal']), bi[0x2]['copy'](bh['normal'])) : (bi[0x0] = bh['normal']['clone'](), bi[0x1] = bh['normal']['clone'](), bi[0x2] = bh['normal']['clone']());
            }
            this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
        },
        'computeMorphNormals': function() {
            var bf, bg, bh, bi, bF;
            for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++)
                for ((bF = this['faces'][bh])['__originalFaceNormal'] ? bF['__originalFaceNormal']['copy'](bF['normal']) : bF['__originalFaceNormal'] = bF['normal']['clone'](), bF['__originalVertexNormals'] || (bF['__originalVertexNormals'] = []), bf = 0x0, bg = bF['vertexNormals']['length']; bf < bg; bf++) bF['__originalVertexNormals'][bf] ? bF['__originalVertexNormals'][bf]['copy'](bF['vertexNormals'][bf]) : bF['__originalVertexNormals'][bf] = bF['vertexNormals'][bf]['clone']();
            var bG = new AH();
            for (bG['faces'] = this['faces'], bf = 0x0, bg = this['morphTargets']['length']; bf < bg; bf++) {
                if (!this['morphNormals'][bf]) {
                    this['morphNormals'][bf] = {}, this['morphNormals'][bf]['faceNormals'] = [], this['morphNormals'][bf]['vertexNormals'] = [];
                    var bH = this['morphNormals'][bf]['faceNormals'],
                        bI = this['morphNormals'][bf]['vertexNormals'];
                    for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) bJ = new eK(), bK = {
                        'a': new eK(),
                        'b': new eK(),
                        'c': new eK()
                    }, bH['push'](bJ), bI['push'](bK);
                }
                var bJ, bK, bL = this['morphNormals'][bf];
                for (bG['vertices'] = this['morphTargets'][bf]['vertices'], bG['computeFaceNormals'](), bG['computeVertexNormals'](), bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) bF = this['faces'][bh], bJ = bL['faceNormals'][bh], bK = bL['vertexNormals'][bh], bJ['copy'](bF['normal']), bK['a']['copy'](bF['vertexNormals'][0x0]), bK['b']['copy'](bF['vertexNormals'][0x1]), bK['c']['copy'](bF['vertexNormals'][0x2]);
            }
            for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++)(bF = this['faces'][bh])['normal'] = bF['__originalFaceNormal'], bF['vertexNormals'] = bF['__originalVertexNormals'];
        },
        'computeBoundingBox': function() {
            null === this['boundingBox'] && (this['boundingBox'] = new mB()), this['boundingBox']['setFromPoints'](this['vertices']);
        },
        'computeBoundingSphere': function() {
            null === this['boundingSphere'] && (this['boundingSphere'] = new mE()), this['boundingSphere']['setFromPoints'](this['vertices']);
        },
        'merge': function(bf, bg, bh) {
            if (bf && bf['isGeometry']) {
                var bi, bF = this['vertices']['length'],
                    bG = this['vertices'],
                    bH = bf['vertices'],
                    bI = this['faces'],
                    bJ = bf['faces'],
                    bK = this['faceVertexUvs'][0x0],
                    bL = bf['faceVertexUvs'][0x0],
                    bM = this['colors'],
                    bN = bf['colors'];
                void 0x0 === bh && (bh = 0x0), void 0x0 !== bg && (bi = new eO()['getNormalMatrix'](bg));
                for (var bO = 0x0, bP = bH['length']; bO < bP; bO++) {
                    var bQ = bH[bO]['clone']();
                    void 0x0 !== bg && bQ['applyMatrix4'](bg), bG['push'](bQ);
                }
                for (bO = 0x0, bP = bN['length']; bO < bP; bO++) bM['push'](bN[bO]['clone']());
                for (bO = 0x0, bP = bJ['length']; bO < bP; bO++) {
                    var bR, bS, bT, bU = bJ[bO],
                        bV = bU['vertexNormals'],
                        bW = bU['vertexColors'];
                    (bR = new xS(bU['a'] + bF, bU['b'] + bF, bU['c'] + bF))['normal']['copy'](bU['normal']), void 0x0 !== bi && bR['normal']['applyMatrix3'](bi)['normalize']();
                    for (var bX = 0x0, bY = bV['length']; bX < bY; bX++) bS = bV[bX]['clone'](), void 0x0 !== bi && bS['applyMatrix3'](bi)['normalize'](), bR['vertexNormals']['push'](bS);
                    bR['color']['copy'](bU['color']);
                    for (bX = 0x0, bY = bW['length']; bX < bY; bX++) bT = bW[bX], bR['vertexColors']['push'](bT['clone']());
                    bR['materialIndex'] = bU['materialIndex'] + bh, bI['push'](bR);
                }
                for (bO = 0x0, bP = bL['length']; bO < bP; bO++) {
                    var bZ = bL[bO],
                        c0 = [];
                    if (void 0x0 !== bZ) {
                        for (bX = 0x0, bY = bZ['length']; bX < bY; bX++) c0['push'](bZ[bX]['clone']());
                        bK['push'](c0);
                    }
                }
            } else console['error']('THREE.Geometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.Geometry.', bf);
        },
        'mergeMesh': function(bf) {
            bf && bf['isMesh'] ? (bf['matrixAutoUpdate'] && bf['updateMatrix'](), this['merge'](bf['geometry'], bf['matrix'])) : console['error']('THREE.Geometry.mergeMesh():\x20mesh\x20not\x20an\x20instance\x20of\x20THREE.Mesh.', bf);
        },
        'mergeVertices': function() {
            var bf, bg, bh, bi, bF, bG, bH, bI, bJ = {},
                bK = [],
                bL = [],
                bM = Math['pow'](0xa, 0x4);
            for (bh = 0x0, bi = this['vertices']['length']; bh < bi; bh++) bf = this['vertices'][bh], void 0x0 === bJ[bg = Math['round'](bf['x'] * bM) + '_' + Math['round'](bf['y'] * bM) + '_' + Math['round'](bf['z'] * bM)] ? (bJ[bg] = bh, bK['push'](this['vertices'][bh]), bL[bh] = bK['length'] - 0x1) : bL[bh] = bL[bJ[bg]];
            var bN = [];
            for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
                (bF = this['faces'][bh])['a'] = bL[bF['a']], bF['b'] = bL[bF['b']], bF['c'] = bL[bF['c']], bG = [bF['a'], bF['b'], bF['c']];
                for (var bO = 0x0; bO < 0x3; bO++)
                    if (bG[bO] === bG[(bO + 0x1) % 0x3]) {
                        bN['push'](bh);
                        break;
                    }
            }
            for (bh = bN['length'] - 0x1; bh >= 0x0; bh--) {
                var bP = bN[bh];
                for (this['faces']['splice'](bP, 0x1), bH = 0x0, bI = this['faceVertexUvs']['length']; bH < bI; bH++) this['faceVertexUvs'][bH]['splice'](bP, 0x1);
            }
            var bQ = this['vertices']['length'] - bK['length'];
            return this['vertices'] = bK, bQ;
        },
        'setFromPoints': function(bf) {
            this['vertices'] = [];
            for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) {
                var bi = bf[bg];
                this['vertices']['push'](new eK(bi['x'], bi['y'], bi['z'] || 0x0));
            }
            return this;
        },
        'sortFacesByMaterialIndex': function() {
            for (var bf = this['faces'], bg = bf['length'], bh = 0x0; bh < bg; bh++) bf[bh]['_id'] = bh;
            bf['sort'](function(bf, bg) {
                return bf['materialIndex'] - bg['materialIndex'];
            });
            var bi, bF, bG = this['faceVertexUvs'][0x0],
                bH = this['faceVertexUvs'][0x1];
            bG && bG['length'] === bg && (bi = []), bH && bH['length'] === bg && (bF = []);
            for (bh = 0x0; bh < bg; bh++) {
                var bI = bf[bh]['_id'];
                bi && bi['push'](bG[bI]), bF && bF['push'](bH[bI]);
            }
            bi && (this['faceVertexUvs'][0x0] = bi), bF && (this['faceVertexUvs'][0x1] = bF);
        },
        'toJSON': function() {
            var bf = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Geometry',
                    'generator': 'Geometry.toJSON'
                }
            };
            if (bf['uuid'] = this['uuid'], bf['type'] = this['type'], '' !== this['name'] && (bf['name'] = this['name']), void 0x0 !== this['parameters']) {
                var bg = this['parameters'];
                for (var bh in bg) void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
                return bf;
            }
            for (var bi = [], bF = 0x0; bF < this['vertices']['length']; bF++) {
                var bG = this['vertices'][bF];
                bi['push'](bG['x'], bG['y'], bG['z']);
            }
            var bH = [],
                bI = [],
                bJ = {},
                bK = [],
                bL = {},
                bM = [],
                bN = {};
            for (bF = 0x0; bF < this['faces']['length']; bF++) {
                var bO = this['faces'][bF],
                    bP = void 0x0 !== this['faceVertexUvs'][0x0][bF],
                    bQ = bO['normal']['length']() > 0x0,
                    bR = bO['vertexNormals']['length'] > 0x0,
                    bS = 0x1 !== bO['color']['r'] || 0x1 !== bO['color']['g'] || 0x1 !== bO['color']['b'],
                    bT = bO['vertexColors']['length'] > 0x0,
                    bU = 0x0;
                if (bU = bY(bU, 0x0, 0x0), bU = bY(bU, 0x1, !0x0), bU = bY(bU, 0x2, !0x1), bU = bY(bU, 0x3, bP), bU = bY(bU, 0x4, bQ), bU = bY(bU, 0x5, bR), bU = bY(bU, 0x6, bS), bU = bY(bU, 0x7, bT), bH['push'](bU), bH['push'](bO['a'], bO['b'], bO['c']), bH['push'](bO['materialIndex']), bP) {
                    var bV = this['faceVertexUvs'][0x0][bF];
                    bH['push'](c1(bV[0x0]), c1(bV[0x1]), c1(bV[0x2]));
                }
                if (bQ && bH['push'](bZ(bO['normal'])), bR) {
                    var bW = bO['vertexNormals'];
                    bH['push'](bZ(bW[0x0]), bZ(bW[0x1]), bZ(bW[0x2]));
                }
                if (bS && bH['push'](c0(bO['color'])), bT) {
                    var bX = bO['vertexColors'];
                    bH['push'](c0(bX[0x0]), c0(bX[0x1]), c0(bX[0x2]));
                }
            }

            function bY(bf, bg, bh) {
                return bh ? bf | 0x1 << bg : bf & ~(0x1 << bg);
            }

            function bZ(bf) {
                var bg = bf['x']['toString']() + bf['y']['toString']() + bf['z']['toString']();
                return void 0x0 !== bJ[bg] ? bJ[bg] : (bJ[bg] = bI['length'] / 0x3, bI['push'](bf['x'], bf['y'], bf['z']), bJ[bg]);
            }

            function c0(bf) {
                var bg = bf['r']['toString']() + bf['g']['toString']() + bf['b']['toString']();
                return void 0x0 !== bL[bg] ? bL[bg] : (bL[bg] = bK['length'], bK['push'](bf['getHex']()), bL[bg]);
            }

            function c1(bf) {
                var bg = bf['x']['toString']() + bf['y']['toString']();
                return void 0x0 !== bN[bg] ? bN[bg] : (bN[bg] = bM['length'] / 0x2, bM['push'](bf['x'], bf['y']), bN[bg]);
            }
            return bf['data'] = {}, bf['data']['vertices'] = bi, bf['data']['normals'] = bI, bK['length'] > 0x0 && (bf['data']['colors'] = bK), bM['length'] > 0x0 && (bf['data']['uvs'] = [bM]), bf['data']['faces'] = bH, bf;
        },
        'clone': function() {
            return new AH()['copy'](this);
        },
        'copy': function(bf) {
            var bg, bh, bi, bF, bG, bH;
            this['vertices'] = [], this['colors'] = [], this['faces'] = [], this['faceVertexUvs'] = [
                []
            ], this['morphTargets'] = [], this['morphNormals'] = [], this['skinWeights'] = [], this['skinIndices'] = [], this['lineDistances'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['name'] = bf['name'];
            var bI = bf['vertices'];
            for (bg = 0x0, bh = bI['length']; bg < bh; bg++) this['vertices']['push'](bI[bg]['clone']());
            var bJ = bf['colors'];
            for (bg = 0x0, bh = bJ['length']; bg < bh; bg++) this['colors']['push'](bJ[bg]['clone']());
            var bK = bf['faces'];
            for (bg = 0x0, bh = bK['length']; bg < bh; bg++) this['faces']['push'](bK[bg]['clone']());
            for (bg = 0x0, bh = bf['faceVertexUvs']['length']; bg < bh; bg++) {
                var bL = bf['faceVertexUvs'][bg];
                for (void 0x0 === this['faceVertexUvs'][bg] && (this['faceVertexUvs'][bg] = []), bi = 0x0, bF = bL['length']; bi < bF; bi++) {
                    var bM = bL[bi],
                        bN = [];
                    for (bG = 0x0, bH = bM['length']; bG < bH; bG++) {
                        var bO = bM[bG];
                        bN['push'](bO['clone']());
                    }
                    this['faceVertexUvs'][bg]['push'](bN);
                }
            }
            var bP = bf['morphTargets'];
            for (bg = 0x0, bh = bP['length']; bg < bh; bg++) {
                var bQ = {};
                if (bQ['name'] = bP[bg]['name'], void 0x0 !== bP[bg]['vertices'])
                    for (bQ['vertices'] = [], bi = 0x0, bF = bP[bg]['vertices']['length']; bi < bF; bi++) bQ['vertices']['push'](bP[bg]['vertices'][bi]['clone']());
                if (void 0x0 !== bP[bg]['normals'])
                    for (bQ['normals'] = [], bi = 0x0, bF = bP[bg]['normals']['length']; bi < bF; bi++) bQ['normals']['push'](bP[bg]['normals'][bi]['clone']());
                this['morphTargets']['push'](bQ);
            }
            var bR = bf['morphNormals'];
            for (bg = 0x0, bh = bR['length']; bg < bh; bg++) {
                var bS = {};
                if (void 0x0 !== bR[bg]['vertexNormals'])
                    for (bS['vertexNormals'] = [], bi = 0x0, bF = bR[bg]['vertexNormals']['length']; bi < bF; bi++) {
                        var bT = bR[bg]['vertexNormals'][bi],
                            bU = {};
                        bU['a'] = bT['a']['clone'](), bU['b'] = bT['b']['clone'](), bU['c'] = bT['c']['clone'](), bS['vertexNormals']['push'](bU);
                    }
                if (void 0x0 !== bR[bg]['faceNormals'])
                    for (bS['faceNormals'] = [], bi = 0x0, bF = bR[bg]['faceNormals']['length']; bi < bF; bi++) bS['faceNormals']['push'](bR[bg]['faceNormals'][bi]['clone']());
                this['morphNormals']['push'](bS);
            }
            var bV = bf['skinWeights'];
            for (bg = 0x0, bh = bV['length']; bg < bh; bg++) this['skinWeights']['push'](bV[bg]['clone']());
            var bW = bf['skinIndices'];
            for (bg = 0x0, bh = bW['length']; bg < bh; bg++) this['skinIndices']['push'](bW[bg]['clone']());
            var bX = bf['lineDistances'];
            for (bg = 0x0, bh = bX['length']; bg < bh; bg++) this['lineDistances']['push'](bX[bg]);
            var bY = bf['boundingBox'];
            null !== bY && (this['boundingBox'] = bY['clone']());
            var bZ = bf['boundingSphere'];
            return null !== bZ && (this['boundingSphere'] = bZ['clone']()), this['elementsNeedUpdate'] = bf['elementsNeedUpdate'], this['verticesNeedUpdate'] = bf['verticesNeedUpdate'], this['uvsNeedUpdate'] = bf['uvsNeedUpdate'], this['normalsNeedUpdate'] = bf['normalsNeedUpdate'], this['colorsNeedUpdate'] = bf['colorsNeedUpdate'], this['lineDistancesNeedUpdate'] = bf['lineDistancesNeedUpdate'], this['groupsNeedUpdate'] = bf['groupsNeedUpdate'], this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }), Object['defineProperty'](AI['prototype'], 'needsUpdate', {
        'set': function(bf) {
            !0x0 === bf && this['version']++;
        }
    }), Object['assign'](AI['prototype'], {
        'isBufferAttribute': !0x0,
        'onUploadCallback': function() {},
        'setArray': function(bf) {
            if (Array['isArray'](bf)) throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
            return this['count'] = void 0x0 !== bf ? bf['length'] / this['itemSize'] : 0x0, this['array'] = bf, this;
        },
        'setDynamic': function(bf) {
            return this['dynamic'] = bf, this;
        },
        'copy': function(bf) {
            return this['name'] = bf['name'], this['array'] = new bf['array']['constructor'](bf['array']), this['itemSize'] = bf['itemSize'], this['count'] = bf['count'], this['normalized'] = bf['normalized'], this['dynamic'] = bf['dynamic'], this;
        },
        'copyAt': function(bf, bg, bh) {
            bf *= this['itemSize'], bh *= bg['itemSize'];
            for (var bi = 0x0, bF = this['itemSize']; bi < bF; bi++) this['array'][bf + bi] = bg['array'][bh + bi];
            return this;
        },
        'copyArray': function(bf) {
            return this['array']['set'](bf), this;
        },
        'copyColorsArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyColorsArray():\x20color\x20is\x20undefined', bi), bG = new w7()), bg[bh++] = bG['r'], bg[bh++] = bG['g'], bg[bh++] = bG['b'];
            }
            return this;
        },
        'copyVector2sArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector2sArray():\x20vector\x20is\x20undefined', bi), bG = new eC()), bg[bh++] = bG['x'], bg[bh++] = bG['y'];
            }
            return this;
        },
        'copyVector3sArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector3sArray():\x20vector\x20is\x20undefined', bi), bG = new eK()), bg[bh++] = bG['x'], bg[bh++] = bG['y'], bg[bh++] = bG['z'];
            }
            return this;
        },
        'copyVector4sArray': function(bf) {
            for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector4sArray():\x20vector\x20is\x20undefined', bi), bG = new m7()), bg[bh++] = bG['x'], bg[bh++] = bG['y'], bg[bh++] = bG['z'], bg[bh++] = bG['w'];
            }
            return this;
        },
        'set': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0), this['array']['set'](bf, bg), this;
        },
        'getX': function(bf) {
            return this['array'][bf * this['itemSize']];
        },
        'setX': function(bf, bg) {
            return this['array'][bf * this['itemSize']] = bg, this;
        },
        'getY': function(bf) {
            return this['array'][bf * this['itemSize'] + 0x1];
        },
        'setY': function(bf, bg) {
            return this['array'][bf * this['itemSize'] + 0x1] = bg, this;
        },
        'getZ': function(bf) {
            return this['array'][bf * this['itemSize'] + 0x2];
        },
        'setZ': function(bf, bg) {
            return this['array'][bf * this['itemSize'] + 0x2] = bg, this;
        },
        'getW': function(bf) {
            return this['array'][bf * this['itemSize'] + 0x3];
        },
        'setW': function(bf, bg) {
            return this['array'][bf * this['itemSize'] + 0x3] = bg, this;
        },
        'setXY': function(bf, bg, bh) {
            return bf *= this['itemSize'], this['array'][bf + 0x0] = bg, this['array'][bf + 0x1] = bh, this;
        },
        'setXYZ': function(bf, bg, bh, bi) {
            return bf *= this['itemSize'], this['array'][bf + 0x0] = bg, this['array'][bf + 0x1] = bh, this['array'][bf + 0x2] = bi, this;
        },
        'setXYZW': function(bf, bg, bh, bi, bF) {
            return bf *= this['itemSize'], this['array'][bf + 0x0] = bg, this['array'][bf + 0x1] = bh, this['array'][bf + 0x2] = bi, this['array'][bf + 0x3] = bF, this;
        },
        'onUpload': function(bf) {
            return this['onUploadCallback'] = bf, this;
        },
        'clone': function() {
            return new this['constructor'](this['array'], this['itemSize'])['copy'](this);
        },
        'toJSON': function() {
            return {
                'itemSize': this['itemSize'],
                'type': this['array']['constructor']['name'],
                'array': Array['prototype']['slice']['call'](this['array']),
                'normalized': this['normalized']
            };
        }
    }), AM['prototype'] = Object['create'](AI['prototype']), AM['prototype']['constructor'] = AM, AQ['prototype'] = Object['create'](AI['prototype']), AQ['prototype']['constructor'] = AQ, AU['prototype'] = Object['create'](AI['prototype']), AU['prototype']['constructor'] = AU, AY['prototype'] = Object['create'](AI['prototype']), AY['prototype']['constructor'] = AY, B2['prototype'] = Object['create'](AI['prototype']), B2['prototype']['constructor'] = B2, B6['prototype'] = Object['create'](AI['prototype']), B6['prototype']['constructor'] = B6, Ba['prototype'] = Object['create'](AI['prototype']), Ba['prototype']['constructor'] = Ba, Be['prototype'] = Object['create'](AI['prototype']), Be['prototype']['constructor'] = Be, Bi['prototype'] = Object['create'](AI['prototype']), Bi['prototype']['constructor'] = Bi, Object['assign'](Bm['prototype'], {
        'computeGroups': function(bf) {
            for (var bg, bh = [], bi = void 0x0, bF = bf['faces'], bG = 0x0; bG < bF['length']; bG++) {
                var bH = bF[bG];
                bH['materialIndex'] !== bi && (bi = bH['materialIndex'], void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'], bh['push'](bg)), bg = {
                    'start': 0x3 * bG,
                    'materialIndex': bi
                });
            }
            void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'], bh['push'](bg)), this['groups'] = bh;
        },
        'fromGeometry': function(bf) {
            var bg, bh = bf['faces'],
                bi = bf['vertices'],
                bF = bf['faceVertexUvs'],
                bG = bF[0x0] && bF[0x0]['length'] > 0x0,
                bH = bF[0x1] && bF[0x1]['length'] > 0x0,
                bI = bf['morphTargets'],
                bJ = bI['length'];
            if (bJ > 0x0) {
                bg = [];
                for (var bK = 0x0; bK < bJ; bK++) bg[bK] = {
                    'name': bI[bK]['name'],
                    'data': []
                };
                this['morphTargets']['position'] = bg;
            }
            var bL, bM = bf['morphNormals'],
                bN = bM['length'];
            if (bN > 0x0) {
                bL = [];
                for (bK = 0x0; bK < bN; bK++) bL[bK] = {
                    'name': bM[bK]['name'],
                    'data': []
                };
                this['morphTargets']['normal'] = bL;
            }
            var bO = bf['skinIndices'],
                bP = bf['skinWeights'],
                bQ = bO['length'] === bi['length'],
                bR = bP['length'] === bi['length'];
            bi['length'] > 0x0 && 0x0 === bh['length'] && console['error']('THREE.DirectGeometry:\x20Faceless\x20geometries\x20are\x20not\x20supported.');
            for (bK = 0x0; bK < bh['length']; bK++) {
                var bS = bh[bK];
                this['vertices']['push'](bi[bS['a']], bi[bS['b']], bi[bS['c']]);
                var bT = bS['vertexNormals'];
                if (0x3 === bT['length']) this['normals']['push'](bT[0x0], bT[0x1], bT[0x2]);
                else {
                    var bU = bS['normal'];
                    this['normals']['push'](bU, bU, bU);
                }
                var bV, bW = bS['vertexColors'];
                if (0x3 === bW['length']) this['colors']['push'](bW[0x0], bW[0x1], bW[0x2]);
                else {
                    var bX = bS['color'];
                    this['colors']['push'](bX, bX, bX);
                }
                if (!0x0 === bG) void 0x0 !== (bV = bF[0x0][bK]) ? this['uvs']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv\x20', bK), this['uvs']['push'](new eC(), new eC(), new eC()));
                if (!0x0 === bH) void 0x0 !== (bV = bF[0x1][bK]) ? this['uvs2']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv2\x20', bK), this['uvs2']['push'](new eC(), new eC(), new eC()));
                for (var bY = 0x0; bY < bJ; bY++) {
                    var bZ = bI[bY]['vertices'];
                    bg[bY]['data']['push'](bZ[bS['a']], bZ[bS['b']], bZ[bS['c']]);
                }
                for (bY = 0x0; bY < bN; bY++) {
                    var c0 = bM[bY]['vertexNormals'][bK];
                    bL[bY]['data']['push'](c0['a'], c0['b'], c0['c']);
                }
                bQ && this['skinIndices']['push'](bO[bS['a']], bO[bS['b']], bO[bS['c']]), bR && this['skinWeights']['push'](bP[bS['a']], bP[bS['b']], bP[bS['c']]);
            }
            return this['computeGroups'](bf), this['verticesNeedUpdate'] = bf['verticesNeedUpdate'], this['normalsNeedUpdate'] = bf['normalsNeedUpdate'], this['colorsNeedUpdate'] = bf['colorsNeedUpdate'], this['uvsNeedUpdate'] = bf['uvsNeedUpdate'], this['groupsNeedUpdate'] = bf['groupsNeedUpdate'], this;
        }
    });
    var Ge = 0x1;

    function Gf() {
        Object['defineProperty'](this, 'id', {
            'value': Ge += 0x2
        }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'BufferGeometry', this['index'] = null, this['attributes'] = {}, this['morphAttributes'] = {}, this['groups'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['drawRange'] = {
            'start': 0x0,
            'count': 0x1 / 0x0
        }, this['userData'] = {};
    }

    function Gg(bf, bg, bh, bi, bF, bG) {
        AH['call'](this), this['type'] = 'BoxGeometry', this['parameters'] = {
            'width': bf,
            'height': bg,
            'depth': bh,
            'widthSegments': bi,
            'heightSegments': bF,
            'depthSegments': bG
        }, this['fromBufferGeometry'](new Gn(bf, bg, bh, bi, bF, bG)), this['mergeVertices']();
    }

    function Gn(bf, bg, bh, bi, bF, bG) {
        Gf['call'](this), this['type'] = 'BoxBufferGeometry', this['parameters'] = {
            'width': bf,
            'height': bg,
            'depth': bh,
            'widthSegments': bi,
            'heightSegments': bF,
            'depthSegments': bG
        };
        var bH = this;
        bf = bf || 0x1, bg = bg || 0x1, bh = bh || 0x1, bi = Math['floor'](bi) || 0x1, bF = Math['floor'](bF) || 0x1, bG = Math['floor'](bG) || 0x1;
        var bI = [],
            bJ = [],
            bK = [],
            bL = [],
            bM = 0x0,
            bN = 0x0;

        function bO(bf, bg, bh, bi, bF, bG, bO, bP, bQ, bR, bS) {
            var bT, bU, bV = bG / bQ,
                bW = bO / bR,
                bX = bG / 0x2,
                bY = bO / 0x2,
                bZ = bP / 0x2,
                c0 = bQ + 0x1,
                c1 = bR + 0x1,
                c2 = 0x0,
                c3 = 0x0,
                c4 = new eK();
            for (bU = 0x0; bU < c1; bU++) {
                var c5 = bU * bW - bY;
                for (bT = 0x0; bT < c0; bT++) {
                    var c6 = bT * bV - bX;
                    c4[bf] = c6 * bi, c4[bg] = c5 * bF, c4[bh] = bZ, bJ['push'](c4['x'], c4['y'], c4['z']), c4[bf] = 0x0, c4[bg] = 0x0, c4[bh] = bP > 0x0 ? 0x1 : -0x1, bK['push'](c4['x'], c4['y'], c4['z']), bL['push'](bT / bQ), bL['push'](0x1 - bU / bR), c2 += 0x1;
                }
            }
            for (bU = 0x0; bU < bR; bU++)
                for (bT = 0x0; bT < bQ; bT++) {
                    var c7 = bM + bT + c0 * bU,
                        c8 = bM + bT + c0 * (bU + 0x1),
                        c9 = bM + (bT + 0x1) + c0 * (bU + 0x1),
                        ca = bM + (bT + 0x1) + c0 * bU;
                    bI['push'](c7, c8, ca), bI['push'](c8, c9, ca), c3 += 0x6;
                }
            bH['addGroup'](bN, c3, bS), bN += c3, bM += c2;
        }
        bO('z', 'y', 'x', -0x1, -0x1, bh, bg, bf, bG, bF, 0x0), bO('z', 'y', 'x', 0x1, -0x1, bh, bg, -bf, bG, bF, 0x1), bO('x', 'z', 'y', 0x1, 0x1, bf, bh, bg, bi, bG, 0x2), bO('x', 'z', 'y', 0x1, -0x1, bf, bh, -bg, bi, bG, 0x3), bO('x', 'y', 'z', 0x1, -0x1, bf, bg, bh, bi, bF, 0x4), bO('x', 'y', 'z', -0x1, -0x1, bf, bg, -bh, bi, bF, 0x5), this['setIndex'](bI), this['addAttribute']('position', new Be(bJ, 0x3)), this['addAttribute']('normal', new Be(bK, 0x3)), this['addAttribute']('uv', new Be(bL, 0x2));
    }

    function H5(bf, bg, bh, bi) {
        AH['call'](this), this['type'] = 'PlaneGeometry', this['parameters'] = {
            'width': bf,
            'height': bg,
            'widthSegments': bh,
            'heightSegments': bi
        }, this['fromBufferGeometry'](new Ha(bf, bg, bh, bi)), this['mergeVertices']();
    }

    function Ha(bf, bg, bh, bi) {
        Gf['call'](this), this['type'] = 'PlaneBufferGeometry', this['parameters'] = {
            'width': bf,
            'height': bg,
            'widthSegments': bh,
            'heightSegments': bi
        };
        var bF, bG, bH = (bf = bf || 0x1) / 0x2,
            bI = (bg = bg || 0x1) / 0x2,
            bJ = Math['floor'](bh) || 0x1,
            bK = Math['floor'](bi) || 0x1,
            bL = bJ + 0x1,
            bM = bK + 0x1,
            bN = bf / bJ,
            bO = bg / bK,
            bP = [],
            bQ = [],
            bR = [],
            bS = [];
        for (bG = 0x0; bG < bM; bG++) {
            var bT = bG * bO - bI;
            for (bF = 0x0; bF < bL; bF++) {
                var bU = bF * bN - bH;
                bQ['push'](bU, -bT, 0x0), bR['push'](0x0, 0x0, 0x1), bS['push'](bF / bJ), bS['push'](0x1 - bG / bK);
            }
        }
        for (bG = 0x0; bG < bK; bG++)
            for (bF = 0x0; bF < bJ; bF++) {
                var bV = bF + bL * bG,
                    bW = bF + bL * (bG + 0x1),
                    bX = bF + 0x1 + bL * (bG + 0x1),
                    bY = bF + 0x1 + bL * bG;
                bP['push'](bV, bW, bY), bP['push'](bW, bX, bY);
            }
        this['setIndex'](bP), this['addAttribute']('position', new Be(bQ, 0x3)), this['addAttribute']('normal', new Be(bR, 0x3)), this['addAttribute']('uv', new Be(bS, 0x2));
    }
    Gf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': Gf,
        'isBufferGeometry': !0x0,
        'getIndex': function() {
            return this['index'];
        },
        'setIndex': function(bf) {
            Array['isArray'](bf) ? this['index'] = new((Bn(bf)) > 0xffff ? Ba : B2)(bf, 0x1) : this['index'] = bf;
        },
        'addAttribute': function(bf, bg) {
            return bg && bg['isBufferAttribute'] || bg && bg['isInterleavedBufferAttribute'] ? 'index' === bf ? (console['warn']('THREE.BufferGeometry.addAttribute:\x20Use\x20.setIndex()\x20for\x20index\x20attribute.'), this['setIndex'](bg), this) : (this['attributes'][bf] = bg, this) : (console['warn']('THREE.BufferGeometry:\x20.addAttribute()\x20now\x20expects\x20(\x20name,\x20attribute\x20).'), this['addAttribute'](bf, new AI(arguments[0x1], arguments[0x2])));
        },
        'getAttribute': function(bf) {
            return this['attributes'][bf];
        },
        'removeAttribute': function(bf) {
            return delete this['attributes'][bf], this;
        },
        'addGroup': function(bf, bg, bh) {
            this['groups']['push']({
                'start': bf,
                'count': bg,
                'materialIndex': void 0x0 !== bh ? bh : 0x0
            });
        },
        'clearGroups': function() {
            this['groups'] = [];
        },
        'setDrawRange': function(bf, bg) {
            this['drawRange']['start'] = bf, this['drawRange']['count'] = bg;
        },
        'applyMatrix': function(bf) {
            var bg = this['attributes']['position'];
            void 0x0 !== bg && (bf['applyToBufferAttribute'](bg), bg['needsUpdate'] = !0x0);
            var bh = this['attributes']['normal'];
            void 0x0 !== bh && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bh), bh['needsUpdate'] = !0x0);
            var bi = this['attributes']['tangent'];
            void 0x0 !== bi && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bi), bi['needsUpdate'] = !0x0);
            return null !== this['boundingBox'] && this['computeBoundingBox'](), null !== this['boundingSphere'] && this['computeBoundingSphere'](), this;
        },
        'rotateX': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationX'](bg), this['applyMatrix'](bf), this;
            };
        }(),
        'rotateY': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationY'](bg), this['applyMatrix'](bf), this;
            };
        }(),
        'rotateZ': function() {
            var bf = new mR();
            return function(bg) {
                return bf['makeRotationZ'](bg), this['applyMatrix'](bf), this;
            };
        }(),
        'translate': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeTranslation'](bg, bh, bi), this['applyMatrix'](bf), this;
            };
        }(),
        'scale': function() {
            var bf = new mR();
            return function(bg, bh, bi) {
                return bf['makeScale'](bg, bh, bi), this['applyMatrix'](bf), this;
            };
        }(),
        'lookAt': function() {
            var bf = new yT();
            return function(bg) {
                bf['lookAt'](bg), bf['updateMatrix'](), this['applyMatrix'](bf['matrix']);
            };
        }(),
        'center': function() {
            var bf = new eK();
            return function() {
                return this['computeBoundingBox'](), this['boundingBox']['getCenter'](bf)['negate'](), this['translate'](bf['x'], bf['y'], bf['z']), this;
            };
        }(),
        'setFromObject': function(bf) {
            var bg = bf['geometry'];
            if (bf['isPoints'] || bf['isLine']) {
                var bh = new Be(0x3 * bg['vertices']['length'], 0x3),
                    bi = new Be(0x3 * bg['colors']['length'], 0x3);
                if (this['addAttribute']('position', bh['copyVector3sArray'](bg['vertices'])), this['addAttribute']('color', bi['copyColorsArray'](bg['colors'])), bg['lineDistances'] && bg['lineDistances']['length'] === bg['vertices']['length']) {
                    var bF = new Be(bg['lineDistances']['length'], 0x1);
                    this['addAttribute']('lineDistance', bF['copyArray'](bg['lineDistances']));
                }
                null !== bg['boundingSphere'] && (this['boundingSphere'] = bg['boundingSphere']['clone']()), null !== bg['boundingBox'] && (this['boundingBox'] = bg['boundingBox']['clone']());
            } else bf['isMesh'] && bg && bg['isGeometry'] && this['fromGeometry'](bg);
            return this;
        },
        'setFromPoints': function(bf) {
            for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                var bF = bf[bh];
                bg['push'](bF['x'], bF['y'], bF['z'] || 0x0);
            }
            return this['addAttribute']('position', new Be(bg, 0x3)), this;
        },
        'updateFromObject': function(bf) {
            var bg, bh = bf['geometry'];
            if (bf['isMesh']) {
                var bi = bh['__directGeometry'];
                if (!0x0 === bh['elementsNeedUpdate'] && (bi = void 0x0, bh['elementsNeedUpdate'] = !0x1), void 0x0 === bi) return this['fromGeometry'](bh);
                bi['verticesNeedUpdate'] = bh['verticesNeedUpdate'], bi['normalsNeedUpdate'] = bh['normalsNeedUpdate'], bi['colorsNeedUpdate'] = bh['colorsNeedUpdate'], bi['uvsNeedUpdate'] = bh['uvsNeedUpdate'], bi['groupsNeedUpdate'] = bh['groupsNeedUpdate'], bh['verticesNeedUpdate'] = !0x1, bh['normalsNeedUpdate'] = !0x1, bh['colorsNeedUpdate'] = !0x1, bh['uvsNeedUpdate'] = !0x1, bh['groupsNeedUpdate'] = !0x1, bh = bi;
            }
            return !0x0 === bh['verticesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['position']) && (bg['copyVector3sArray'](bh['vertices']), bg['needsUpdate'] = !0x0), bh['verticesNeedUpdate'] = !0x1), !0x0 === bh['normalsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['normal']) && (bg['copyVector3sArray'](bh['normals']), bg['needsUpdate'] = !0x0), bh['normalsNeedUpdate'] = !0x1), !0x0 === bh['colorsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['color']) && (bg['copyColorsArray'](bh['colors']), bg['needsUpdate'] = !0x0), bh['colorsNeedUpdate'] = !0x1), bh['uvsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['uv']) && (bg['copyVector2sArray'](bh['uvs']), bg['needsUpdate'] = !0x0), bh['uvsNeedUpdate'] = !0x1), bh['lineDistancesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['lineDistance']) && (bg['copyArray'](bh['lineDistances']), bg['needsUpdate'] = !0x0), bh['lineDistancesNeedUpdate'] = !0x1), bh['groupsNeedUpdate'] && (bh['computeGroups'](bf['geometry']), this['groups'] = bh['groups'], bh['groupsNeedUpdate'] = !0x1), this;
        },
        'fromGeometry': function(bf) {
            return bf['__directGeometry'] = new Bm()['fromGeometry'](bf), this['fromDirectGeometry'](bf['__directGeometry']);
        },
        'fromDirectGeometry': function(bf) {
            var bg = new Float32Array(0x3 * bf['vertices']['length']);
            if (this['addAttribute']('position', new AI(bg, 0x3)['copyVector3sArray'](bf['vertices'])), bf['normals']['length'] > 0x0) {
                var bh = new Float32Array(0x3 * bf['normals']['length']);
                this['addAttribute']('normal', new AI(bh, 0x3)['copyVector3sArray'](bf['normals']));
            }
            if (bf['colors']['length'] > 0x0) {
                var bi = new Float32Array(0x3 * bf['colors']['length']);
                this['addAttribute']('color', new AI(bi, 0x3)['copyColorsArray'](bf['colors']));
            }
            if (bf['uvs']['length'] > 0x0) {
                var bF = new Float32Array(0x2 * bf['uvs']['length']);
                this['addAttribute']('uv', new AI(bF, 0x2)['copyVector2sArray'](bf['uvs']));
            }
            if (bf['uvs2']['length'] > 0x0) {
                var bG = new Float32Array(0x2 * bf['uvs2']['length']);
                this['addAttribute']('uv2', new AI(bG, 0x2)['copyVector2sArray'](bf['uvs2']));
            }
            for (var bH in this['groups'] = bf['groups'], bf['morphTargets']) {
                for (var bI = [], bJ = bf['morphTargets'][bH], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                    var bM = bJ[bK],
                        bN = new Be(0x3 * bM['data']['length'], 0x3);
                    bN['name'] = bM['name'], bI['push'](bN['copyVector3sArray'](bM['data']));
                }
                this['morphAttributes'][bH] = bI;
            }
            if (bf['skinIndices']['length'] > 0x0) {
                var bO = new Be(0x4 * bf['skinIndices']['length'], 0x4);
                this['addAttribute']('skinIndex', bO['copyVector4sArray'](bf['skinIndices']));
            }
            if (bf['skinWeights']['length'] > 0x0) {
                var bP = new Be(0x4 * bf['skinWeights']['length'], 0x4);
                this['addAttribute']('skinWeight', bP['copyVector4sArray'](bf['skinWeights']));
            }
            return null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()), null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()), this;
        },
        'computeBoundingBox': function() {
            var bf = new mB();
            return function() {
                null === this['boundingBox'] && (this['boundingBox'] = new mB());
                var bg = this['attributes']['position'],
                    bh = this['morphAttributes']['position'];
                if (void 0x0 !== bg) {
                    if (this['boundingBox']['setFromBufferAttribute'](bg), bh)
                        for (var bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                            var bG = bh[bi];
                            bf['setFromBufferAttribute'](bG), this['boundingBox']['expandByPoint'](bf['min']), this['boundingBox']['expandByPoint'](bf['max']);
                        }
                } else this['boundingBox']['makeEmpty']();
                (isNaN(this['boundingBox']['min']['x']) || isNaN(this['boundingBox']['min']['y']) || isNaN(this['boundingBox']['min']['z'])) && console['error']('THREE.BufferGeometry.computeBoundingBox:\x20Computed\x20min/max\x20have\x20NaN\x20values.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
            };
        }(),
        'computeBoundingSphere': function() {
            var bf = new mB(),
                bg = new mB(),
                bh = new eK();
            return function() {
                null === this['boundingSphere'] && (this['boundingSphere'] = new mE());
                var bi = this['attributes']['position'],
                    bF = this['morphAttributes']['position'];
                if (bi) {
                    var bG = this['boundingSphere']['center'];
                    if (bf['setFromBufferAttribute'](bi), bF)
                        for (var bH = 0x0, bI = bF['length']; bH < bI; bH++) {
                            var bJ = bF[bH];
                            bg['setFromBufferAttribute'](bJ), bf['expandByPoint'](bg['min']), bf['expandByPoint'](bg['max']);
                        }
                    bf['getCenter'](bG);
                    var bK = 0x0;
                    for (bH = 0x0, bI = bi['count']; bH < bI; bH++) bh['fromBufferAttribute'](bi, bH), bK = Math['max'](bK, bG['distanceToSquared'](bh));
                    if (bF)
                        for (bH = 0x0, bI = bF['length']; bH < bI; bH++)
                            for (var bL = 0x0, bM = (bJ = bF[bH])['count']; bL < bM; bL++) bh['fromBufferAttribute'](bJ, bL), bK = Math['max'](bK, bG['distanceToSquared'](bh));
                    this['boundingSphere']['radius'] = Math['sqrt'](bK), isNaN(this['boundingSphere']['radius']) && console['error']('THREE.BufferGeometry.computeBoundingSphere():\x20Computed\x20radius\x20is\x20NaN.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
                }
            };
        }(),
        'computeFaceNormals': function() {},
        'computeVertexNormals': function() {
            var bf = this['index'],
                bg = this['attributes'];
            if (bg['position']) {
                var bh = bg['position']['array'];
                if (void 0x0 === bg['normal']) this['addAttribute']('normal', new AI(new Float32Array(bh['length']), 0x3));
                else
                    for (var bi = bg['normal']['array'], bF = 0x0, bG = bi['length']; bF < bG; bF++) bi[bF] = 0x0;
                var bH, bI, bJ, bK = bg['normal']['array'],
                    bL = new eK(),
                    bM = new eK(),
                    bN = new eK(),
                    bO = new eK(),
                    bP = new eK();
                if (bf) {
                    var bQ = bf['array'];
                    for (bF = 0x0, bG = bf['count']; bF < bG; bF += 0x3) bH = 0x3 * bQ[bF + 0x0], bI = 0x3 * bQ[bF + 0x1], bJ = 0x3 * bQ[bF + 0x2], bL['fromArray'](bh, bH), bM['fromArray'](bh, bI), bN['fromArray'](bh, bJ), bO['subVectors'](bN, bM), bP['subVectors'](bL, bM), bO['cross'](bP), bK[bH] += bO['x'], bK[bH + 0x1] += bO['y'], bK[bH + 0x2] += bO['z'], bK[bI] += bO['x'], bK[bI + 0x1] += bO['y'], bK[bI + 0x2] += bO['z'], bK[bJ] += bO['x'], bK[bJ + 0x1] += bO['y'], bK[bJ + 0x2] += bO['z'];
                } else
                    for (bF = 0x0, bG = bh['length']; bF < bG; bF += 0x9) bL['fromArray'](bh, bF), bM['fromArray'](bh, bF + 0x3), bN['fromArray'](bh, bF + 0x6), bO['subVectors'](bN, bM), bP['subVectors'](bL, bM), bO['cross'](bP), bK[bF] = bO['x'], bK[bF + 0x1] = bO['y'], bK[bF + 0x2] = bO['z'], bK[bF + 0x3] = bO['x'], bK[bF + 0x4] = bO['y'], bK[bF + 0x5] = bO['z'], bK[bF + 0x6] = bO['x'], bK[bF + 0x7] = bO['y'], bK[bF + 0x8] = bO['z'];
                this['normalizeNormals'](), bg['normal']['needsUpdate'] = !0x0;
            }
        },
        'merge': function(bf, bg) {
            if (bf && bf['isBufferGeometry']) {
                void 0x0 === bg && (bg = 0x0, console['warn']('THREE.BufferGeometry.merge():\x20Overwriting\x20original\x20geometry,\x20starting\x20at\x20offset=0.\x20Use\x20BufferGeometryUtils.mergeBufferGeometries()\x20for\x20lossless\x20merge.'));
                var bh = this['attributes'];
                for (var bi in bh)
                    if (void 0x0 !== bf['attributes'][bi])
                        for (var bF = bh[bi]['array'], bG = bf['attributes'][bi], bH = bG['array'], bI = bG['itemSize'] * bg, bJ = Math['min'](bH['length'], bF['length'] - bI), bK = 0x0, bL = bI; bK < bJ; bK++, bL++) bF[bL] = bH[bK];
                return this;
            }
            console['error']('THREE.BufferGeometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.BufferGeometry.', bf);
        },
        'normalizeNormals': function() {
            var bf = new eK();
            return function() {
                for (var bg = this['attributes']['normal'], bh = 0x0, bi = bg['count']; bh < bi; bh++) bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['normalize'](), bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
            };
        }(),
        'toNonIndexed': function() {
            function bf(bf, bg) {
                for (var bh = bf['array'], bi = bf['itemSize'], bF = new bh['constructor'](bg['length'] * bi), bG = 0x0, bH = 0x0, bI = 0x0, bJ = bg['length']; bI < bJ; bI++) {
                    bG = bg[bI] * bi;
                    for (var bK = 0x0; bK < bi; bK++) bF[bH++] = bh[bG++];
                }
                return new AI(bF, bi);
            }
            if (null === this['index']) return console['warn']('THREE.BufferGeometry.toNonIndexed():\x20Geometry\x20is\x20already\x20non-indexed.'), this;
            var bg = new Gf(),
                bh = this['index']['array'],
                bi = this['attributes'];
            for (var bF in bi) {
                var bG = bf(bi[bF], bh);
                bg['addAttribute'](bF, bG);
            }
            var bH = this['morphAttributes'];
            for (bF in bH) {
                for (var bI = [], bJ = bH[bF], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                    bG = bf(bJ[bK], bh);
                    bI['push'](bG);
                }
                bg['morphAttributes'][bF] = bI;
            }
            for (var bM = this['groups'], bN = (bK = 0x0, bM['length']); bK < bN; bK++) {
                var bO = bM[bK];
                bg['addGroup'](bO['start'], bO['count'], bO['materialIndex']);
            }
            return bg;
        },
        'toJSON': function() {
            var bf = {
                'metadata': {
                    'version': 4.5,
                    'type': 'BufferGeometry',
                    'generator': 'BufferGeometry.toJSON'
                }
            };
            if (bf['uuid'] = this['uuid'], bf['type'] = this['type'], '' !== this['name'] && (bf['name'] = this['name']), Object['keys'](this['userData'])['length'] > 0x0 && (bf['userData'] = this['userData']), void 0x0 !== this['parameters']) {
                var bg = this['parameters'];
                for (var bh in bg) void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
                return bf;
            }
            bf['data'] = {
                'attributes': {}
            };
            var bi = this['index'];
            null !== bi && (bf['data']['index'] = {
                'type': bi['array']['constructor']['name'],
                'array': Array['prototype']['slice']['call'](bi['array'])
            });
            var bF = this['attributes'];
            for (var bh in bF) {
                var bG = (bN = bF[bh])['toJSON']();
                '' !== bN['name'] && (bG['name'] = bN['name']), bf['data']['attributes'][bh] = bG;
            }
            var bH = {},
                bI = !0x1;
            for (var bh in this['morphAttributes']) {
                for (var bJ = this['morphAttributes'][bh], bK = [], bL = 0x0, bM = bJ['length']; bL < bM; bL++) {
                    var bN;
                    bG = (bN = bJ[bL])['toJSON']();
                    '' !== bN['name'] && (bG['name'] = bN['name']), bK['push'](bG);
                }
                bK['length'] > 0x0 && (bH[bh] = bK, bI = !0x0);
            }
            bI && (bf['data']['morphAttributes'] = bH);
            var bO = this['groups'];
            bO['length'] > 0x0 && (bf['data']['groups'] = JSON['parse'](JSON['stringify'](bO)));
            var bP = this['boundingSphere'];
            return null !== bP && (bf['data']['boundingSphere'] = {
                'center': bP['center']['toArray'](),
                'radius': bP['radius']
            }), bf;
        },
        'clone': function() {
            return new Gf()['copy'](this);
        },
        'copy': function(bf) {
            var bg, bh, bi;
            this['index'] = null, this['attributes'] = {}, this['morphAttributes'] = {}, this['groups'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['name'] = bf['name'];
            var bF = bf['index'];
            null !== bF && this['setIndex'](bF['clone']());
            var bG = bf['attributes'];
            for (bg in bG) {
                var bH = bG[bg];
                this['addAttribute'](bg, bH['clone']());
            }
            var bI = bf['morphAttributes'];
            for (bg in bI) {
                var bJ = [],
                    bK = bI[bg];
                for (bh = 0x0, bi = bK['length']; bh < bi; bh++) bJ['push'](bK[bh]['clone']());
                this['morphAttributes'][bg] = bJ;
            }
            var bL = bf['groups'];
            for (bh = 0x0, bi = bL['length']; bh < bi; bh++) {
                var bM = bL[bh];
                this['addGroup'](bM['start'], bM['count'], bM['materialIndex']);
            }
            var bN = bf['boundingBox'];
            null !== bN && (this['boundingBox'] = bN['clone']());
            var bO = bf['boundingSphere'];
            return null !== bO && (this['boundingSphere'] = bO['clone']()), this['drawRange']['start'] = bf['drawRange']['start'], this['drawRange']['count'] = bf['drawRange']['count'], this['userData'] = bf['userData'], this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }), Gg['prototype'] = Object['create'](AH['prototype']), Gg['prototype']['constructor'] = Gg, Gn['prototype'] = Object['create'](Gf['prototype']), Gn['prototype']['constructor'] = Gn, H5['prototype'] = Object['create'](AH['prototype']), H5['prototype']['constructor'] = H5, Ha['prototype'] = Object['create'](Gf['prototype']), Ha['prototype']['constructor'] = Ha;
    var Ke = 0x0;

    function Kf() {
        Object['defineProperty'](this, 'id', {
            'value': Ke++
        }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'Material', this['fog'] = !0x0, this['lights'] = !0x0, this['blending'] = c2, this['side'] = bT, this['flatShading'] = !0x1, this['vertexTangents'] = !0x1, this['vertexColors'] = bY, this['opacity'] = 0x1, this['transparent'] = !0x1, this['blendSrc'] = cg, this['blendDst'] = ch, this['blendEquation'] = c7, this['blendSrcAlpha'] = null, this['blendDstAlpha'] = null, this['blendEquationAlpha'] = null, this['depthFunc'] = cq, this['depthTest'] = !0x0, this['depthWrite'] = !0x0, this['clippingPlanes'] = null, this['clipIntersection'] = !0x1, this['clipShadows'] = !0x1, this['shadowSide'] = null, this['colorWrite'] = !0x0, this['precision'] = null, this['polygonOffset'] = !0x1, this['polygonOffsetFactor'] = 0x0, this['polygonOffsetUnits'] = 0x0, this['dithering'] = !0x1, this['alphaTest'] = 0x0, this['premultipliedAlpha'] = !0x1, this['visible'] = !0x0, this['userData'] = {}, this['needsUpdate'] = !0x0;
    }
    Kf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': Kf,
        'isMaterial': !0x0,
        'onBeforeCompile': function() {},
        'setValues': function(bf) {
            if (void 0x0 !== bf)
                for (var bg in bf) {
                    var bh = bf[bg];
                    if (void 0x0 !== bh)
                        if ('shading' !== bg) {
                            var bi = this[bg];
                            void 0x0 !== bi ? bi && bi['isColor'] ? bi['set'](bh) : bi && bi['isVector3'] && bh && bh['isVector3'] ? bi['copy'](bh) : this[bg] = bh : console['warn']('THREE.' + this['type'] + ':\x20\x27' + bg + '\x27\x20is\x20not\x20a\x20property\x20of\x20this\x20material.');
                        } else console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'), this['flatShading'] = bh === bW;
                    else console['warn']('THREE.Material:\x20\x27' + bg + '\x27\x20parameter\x20is\x20undefined.');
                }
        },
        'toJSON': function(bf) {
            var bg = void 0x0 === bf || 'string' == typeof bf;
            bg && (bf = {
                'textures': {},
                'images': {}
            });
            var bh = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Material',
                    'generator': 'Material.toJSON'
                }
            };

            function bi(bf) {
                var bg = [];
                for (var bh in bf) {
                    var bi = bf[bh];
                    delete bi['metadata'], bg['push'](bi);
                }
                return bg;
            }
            if (bh['uuid'] = this['uuid'], bh['type'] = this['type'], '' !== this['name'] && (bh['name'] = this['name']), this['color'] && this['color']['isColor'] && (bh['color'] = this['color']['getHex']()), void 0x0 !== this['roughness'] && (bh['roughness'] = this['roughness']), void 0x0 !== this['metalness'] && (bh['metalness'] = this['metalness']), this['emissive'] && this['emissive']['isColor'] && (bh['emissive'] = this['emissive']['getHex']()), 0x1 !== this['emissiveIntensity'] && (bh['emissiveIntensity'] = this['emissiveIntensity']), this['specular'] && this['specular']['isColor'] && (bh['specular'] = this['specular']['getHex']()), void 0x0 !== this['shininess'] && (bh['shininess'] = this['shininess']), void 0x0 !== this['clearCoat'] && (bh['clearCoat'] = this['clearCoat']), void 0x0 !== this['clearCoatRoughness'] && (bh['clearCoatRoughness'] = this['clearCoatRoughness']), this['map'] && this['map']['isTexture'] && (bh['map'] = this['map']['toJSON'](bf)['uuid']), this['matcap'] && this['matcap']['isTexture'] && (bh['matcap'] = this['matcap']['toJSON'](bf)['uuid']), this['alphaMap'] && this['alphaMap']['isTexture'] && (bh['alphaMap'] = this['alphaMap']['toJSON'](bf)['uuid']), this['lightMap'] && this['lightMap']['isTexture'] && (bh['lightMap'] = this['lightMap']['toJSON'](bf)['uuid']), this['aoMap'] && this['aoMap']['isTexture'] && (bh['aoMap'] = this['aoMap']['toJSON'](bf)['uuid'], bh['aoMapIntensity'] = this['aoMapIntensity']), this['bumpMap'] && this['bumpMap']['isTexture'] && (bh['bumpMap'] = this['bumpMap']['toJSON'](bf)['uuid'], bh['bumpScale'] = this['bumpScale']), this['normalMap'] && this['normalMap']['isTexture'] && (bh['normalMap'] = this['normalMap']['toJSON'](bf)['uuid'], bh['normalMapType'] = this['normalMapType'], bh['normalScale'] = this['normalScale']['toArray']()), this['displacementMap'] && this['displacementMap']['isTexture'] && (bh['displacementMap'] = this['displacementMap']['toJSON'](bf)['uuid'], bh['displacementScale'] = this['displacementScale'], bh['displacementBias'] = this['displacementBias']), this['roughnessMap'] && this['roughnessMap']['isTexture'] && (bh['roughnessMap'] = this['roughnessMap']['toJSON'](bf)['uuid']), this['metalnessMap'] && this['metalnessMap']['isTexture'] && (bh['metalnessMap'] = this['metalnessMap']['toJSON'](bf)['uuid']), this['emissiveMap'] && this['emissiveMap']['isTexture'] && (bh['emissiveMap'] = this['emissiveMap']['toJSON'](bf)['uuid']), this['specularMap'] && this['specularMap']['isTexture'] && (bh['specularMap'] = this['specularMap']['toJSON'](bf)['uuid']), this['envMap'] && this['envMap']['isTexture'] && (bh['envMap'] = this['envMap']['toJSON'](bf)['uuid'], bh['reflectivity'] = this['reflectivity'], void 0x0 !== this['combine'] && (bh['combine'] = this['combine']), void 0x0 !== this['envMapIntensity'] && (bh['envMapIntensity'] = this['envMapIntensity'])), this['gradientMap'] && this['gradientMap']['isTexture'] && (bh['gradientMap'] = this['gradientMap']['toJSON'](bf)['uuid']), void 0x0 !== this['size'] && (bh['size'] = this['size']), void 0x0 !== this['sizeAttenuation'] && (bh['sizeAttenuation'] = this['sizeAttenuation']), this['blending'] !== c2 && (bh['blending'] = this['blending']), !0x0 === this['flatShading'] && (bh['flatShading'] = this['flatShading']), this['side'] !== bT && (bh['side'] = this['side']), this['vertexColors'] !== bY && (bh['vertexColors'] = this['vertexColors']), this['opacity'] < 0x1 && (bh['opacity'] = this['opacity']), !0x0 === this['transparent'] && (bh['transparent'] = this['transparent']), bh['depthFunc'] = this['depthFunc'], bh['depthTest'] = this['depthTest'], bh['depthWrite'] = this['depthWrite'], 0x0 !== this['rotation'] && (bh['rotation'] = this['rotation']), !0x0 === this['polygonOffset'] && (bh['polygonOffset'] = !0x0), 0x0 !== this['polygonOffsetFactor'] && (bh['polygonOffsetFactor'] = this['polygonOffsetFactor']), 0x0 !== this['polygonOffsetUnits'] && (bh['polygonOffsetUnits'] = this['polygonOffsetUnits']), 0x1 !== this['linewidth'] && (bh['linewidth'] = this['linewidth']), void 0x0 !== this['dashSize'] && (bh['dashSize'] = this['dashSize']), void 0x0 !== this['gapSize'] && (bh['gapSize'] = this['gapSize']), void 0x0 !== this['scale'] && (bh['scale'] = this['scale']), !0x0 === this['dithering'] && (bh['dithering'] = !0x0), this['alphaTest'] > 0x0 && (bh['alphaTest'] = this['alphaTest']), !0x0 === this['premultipliedAlpha'] && (bh['premultipliedAlpha'] = this['premultipliedAlpha']), !0x0 === this['wireframe'] && (bh['wireframe'] = this['wireframe']), this['wireframeLinewidth'] > 0x1 && (bh['wireframeLinewidth'] = this['wireframeLinewidth']), 'round' !== this['wireframeLinecap'] && (bh['wireframeLinecap'] = this['wireframeLinecap']), 'round' !== this['wireframeLinejoin'] && (bh['wireframeLinejoin'] = this['wireframeLinejoin']), !0x0 === this['morphTargets'] && (bh['morphTargets'] = !0x0), !0x0 === this['skinning'] && (bh['skinning'] = !0x0), !0x1 === this['visible'] && (bh['visible'] = !0x1), '{}' !== JSON['stringify'](this['userData']) && (bh['userData'] = this['userData']), bg) {
                var bF = bi(bf['textures']),
                    bG = bi(bf['images']);
                bF['length'] > 0x0 && (bh['textures'] = bF), bG['length'] > 0x0 && (bh['images'] = bG);
            }
            return bh;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            this['name'] = bf['name'], this['fog'] = bf['fog'], this['lights'] = bf['lights'], this['blending'] = bf['blending'], this['side'] = bf['side'], this['flatShading'] = bf['flatShading'], this['vertexColors'] = bf['vertexColors'], this['opacity'] = bf['opacity'], this['transparent'] = bf['transparent'], this['blendSrc'] = bf['blendSrc'], this['blendDst'] = bf['blendDst'], this['blendEquation'] = bf['blendEquation'], this['blendSrcAlpha'] = bf['blendSrcAlpha'], this['blendDstAlpha'] = bf['blendDstAlpha'], this['blendEquationAlpha'] = bf['blendEquationAlpha'], this['depthFunc'] = bf['depthFunc'], this['depthTest'] = bf['depthTest'], this['depthWrite'] = bf['depthWrite'], this['colorWrite'] = bf['colorWrite'], this['precision'] = bf['precision'], this['polygonOffset'] = bf['polygonOffset'], this['polygonOffsetFactor'] = bf['polygonOffsetFactor'], this['polygonOffsetUnits'] = bf['polygonOffsetUnits'], this['dithering'] = bf['dithering'], this['alphaTest'] = bf['alphaTest'], this['premultipliedAlpha'] = bf['premultipliedAlpha'], this['visible'] = bf['visible'], this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])), this['clipShadows'] = bf['clipShadows'], this['clipIntersection'] = bf['clipIntersection'];
            var bg = bf['clippingPlanes'],
                bh = null;
            if (null !== bg) {
                var bi = bg['length'];
                bh = new Array(bi);
                for (var bF = 0x0; bF !== bi; ++bF) bh[bF] = bg[bF]['clone']();
            }
            return this['clippingPlanes'] = bh, this['shadowSide'] = bf['shadowSide'], this;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    });
    var Kz, KA, KB, KC, KD, KE, KF, KG, KH, KI, KJ, KK, KL = 'void\x20main()\x20{\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
        KM = 'void\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x201.0,\x200.0,\x200.0,\x201.0\x20);\x0a}';

    function KN(bf) {
        Kf['call'](this), this['type'] = 'ShaderMaterial', this['defines'] = {}, this['uniforms'] = {}, this['vertexShader'] = KL, this['fragmentShader'] = KM, this['linewidth'] = 0x1, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['fog'] = !0x1, this['lights'] = !0x1, this['clipping'] = !0x1, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['extensions'] = {
            'derivatives': !0x1,
            'fragDepth': !0x1,
            'drawBuffers': !0x1,
            'shaderTextureLOD': !0x1
        }, this['defaultAttributeValues'] = {
            'color': [0x1, 0x1, 0x1],
            'uv': [0x0, 0x0],
            'uv2': [0x0, 0x0]
        }, this['index0AttributeName'] = void 0x0, this['uniformsNeedUpdate'] = !0x1, void 0x0 !== bf && (void 0x0 !== bf['attributes'] && console['error']('THREE.ShaderMaterial:\x20attributes\x20should\x20now\x20be\x20defined\x20in\x20THREE.BufferGeometry\x20instead.'), this['setValues'](bf));
    }

    function KP(bf, bg) {
        this['origin'] = void 0x0 !== bf ? bf : new eK(), this['direction'] = void 0x0 !== bg ? bg : new eK();
    }

    function KS(bf, bg, bh) {
        this['a'] = void 0x0 !== bf ? bf : new eK(), this['b'] = void 0x0 !== bg ? bg : new eK(), this['c'] = void 0x0 !== bh ? bh : new eK();
    }

    function KW(bf) {
        Kf['call'](this), this['type'] = 'MeshBasicMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['specularMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['combine'] = cv, this['reflectivity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
    }

    function KY(bf, bg) {
        yT['call'](this), this['type'] = 'Mesh', this['geometry'] = void 0x0 !== bf ? bf : new Gf(), this['material'] = void 0x0 !== bg ? bg : new KW({
            'color': 0xffffff * Math['random']()
        }), this['drawMode'] = dN, this['updateMorphTargets']();
    }

    function L1(bf, bg, bh, bi) {
        var bF, bG, bH = new w7(0x0),
            bI = 0x0,
            bJ = null,
            bK = 0x0;

        function bL(bf, bh) {
            bg['buffers']['color']['setClear'](bf['r'], bf['g'], bf['b'], bh, bi);
        }
        return {
            'getClearColor': function() {
                return bH;
            },
            'setClearColor': function(bf, bg) {
                bH['set'](bf), bL(bH, bI = void 0x0 !== bg ? bg : 0x1);
            },
            'getClearAlpha': function() {
                return bI;
            },
            'setClearAlpha': function(bf) {
                bL(bH, bI = bf);
            },
            'render': function(bg, bi, bM, bN) {
                var bO = bi['background'],
                    bP = bf['vr'],
                    bQ = bP['getSession'] && bP['getSession']();
                if (bQ && 'additive' === bQ['environmentBlendMode'] && (bO = null), null === bO ? (bL(bH, bI), bJ = null, bK = 0x0) : bO && bO['isColor'] && (bL(bO, 0x1), bN = !0x0, bJ = null, bK = 0x0), (bf['autoClear'] || bN) && bf['clear'](bf['autoClearColor'], bf['autoClearDepth'], bf['autoClearStencil']), bO && (bO['isCubeTexture'] || bO['isWebGLRenderTargetCube'])) {
                    void 0x0 === bG && ((bG = new KY(new Gn(0x1, 0x1, 0x1), new KN({
                        'type': 'BackgroundCubeMaterial',
                        'uniforms': vQ(xo['cube']['uniforms']),
                        'vertexShader': xo['cube']['vertexShader'],
                        'fragmentShader': xo['cube']['fragmentShader'],
                        'side': bU,
                        'depthTest': !0x1,
                        'depthWrite': !0x1,
                        'fog': !0x1
                    })))['geometry']['removeAttribute']('normal'), bG['geometry']['removeAttribute']('uv'), bG['onBeforeRender'] = function(bf, bg, bh) {
                        this['matrixWorld']['copyPosition'](bh['matrixWorld']);
                    }, Object['defineProperty'](bG['material'], 'map', {
                        'get': function() {
                            return this['uniforms']['tCube']['value'];
                        }
                    }), bh['update'](bG));
                    var bR = bO['isWebGLRenderTargetCube'] ? bO['texture'] : bO;
                    bG['material']['uniforms']['tCube']['value'] = bR, bG['material']['uniforms']['tFlip']['value'] = bO['isWebGLRenderTargetCube'] ? 0x1 : -0x1, bJ === bO && bK === bR['version'] || (bG['material']['needsUpdate'] = !0x0, bJ = bO, bK = bR['version']), bg['unshift'](bG, bG['geometry'], bG['material'], 0x0, 0x0, null);
                } else bO && bO['isTexture'] && (void 0x0 === bF && ((bF = new KY(new Ha(0x2, 0x2), new KN({
                    'type': 'BackgroundMaterial',
                    'uniforms': vQ(xo['background']['uniforms']),
                    'vertexShader': xo['background']['vertexShader'],
                    'fragmentShader': xo['background']['fragmentShader'],
                    'side': bT,
                    'depthTest': !0x1,
                    'depthWrite': !0x1,
                    'fog': !0x1
                })))['geometry']['removeAttribute']('normal'), Object['defineProperty'](bF['material'], 'map', {
                    'get': function() {
                        return this['uniforms']['t2D']['value'];
                    }
                }), bh['update'](bF)), bF['material']['uniforms']['t2D']['value'] = bO, !0x0 === bO['matrixAutoUpdate'] && bO['updateMatrix'](), bF['material']['uniforms']['uvTransform']['value']['copy'](bO['matrix']), bJ === bO && bK === bO['version'] || (bF['material']['needsUpdate'] = !0x0, bJ = bO, bK = bO['version']), bg['unshift'](bF, bF['geometry'], bF['material'], 0x0, 0x0, null));
            }
        };
    }

    function Lt(bf, bg, bh, bi) {
        var bF;
        this['setMode'] = function(bf) {
            bF = bf;
        }, this['render'] = function(bg, bi) {
            bf['drawArrays'](bF, bg, bi), bh['update'](bi, bF);
        }, this['renderInstances'] = function(bG, bH, bI) {
            var bJ;
            if (bi['isWebGL2']) bJ = bf;
            else if (null === (bJ = bg['get']('ANGLE_instanced_arrays'))) return void console['error']('THREE.WebGLBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
            bJ[bi['isWebGL2'] ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE'](bF, bH, bI, bG['maxInstancedCount']), bh['update'](bI, bF, bG['maxInstancedCount']);
        };
    }

    function LG(bf, bg, bh) {
        var bi;

        function bF(bg) {
            if ('highp' === bg) {
                if (bf['getShaderPrecisionFormat'](0x8b31, 0x8df2)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df2)['precision'] > 0x0) return 'highp';
                bg = 'mediump';
            }
            return 'mediump' === bg && bf['getShaderPrecisionFormat'](0x8b31, 0x8df1)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df1)['precision'] > 0x0 ? 'mediump' : 'lowp';
        }
        var bG = 'undefined' != typeof WebGL2RenderingContext && bf instanceof WebGL2RenderingContext,
            bH = void 0x0 !== bh['precision'] ? bh['precision'] : 'highp',
            bI = bF(bH);
        bI !== bH && (console['warn']('THREE.WebGLRenderer:', bH, 'not\x20supported,\x20using', bI, 'instead.'), bH = bI);
        var bJ = !0x0 === bh['logarithmicDepthBuffer'],
            bK = bf['getParameter'](0x8872),
            bL = bf['getParameter'](0x8b4c),
            bM = bf['getParameter'](0xd33),
            bN = bf['getParameter'](0x851c),
            bO = bf['getParameter'](0x8869),
            bP = bf['getParameter'](0x8dfb),
            bQ = bf['getParameter'](0x8dfc),
            bR = bf['getParameter'](0x8dfd),
            bS = bL > 0x0,
            bT = bG || !!bg['get']('OES_texture_float');
        return {
            'isWebGL2': bG,
            'getMaxAnisotropy': function() {
                if (void 0x0 !== bi) return bi;
                var bh = bg['get']('EXT_texture_filter_anisotropic');
                return bi = null !== bh ? bf['getParameter'](bh['MAX_TEXTURE_MAX_ANISOTROPY_EXT']) : 0x0;
            },
            'getMaxPrecision': bF,
            'precision': bH,
            'logarithmicDepthBuffer': bJ,
            'maxTextures': bK,
            'maxVertexTextures': bL,
            'maxTextureSize': bM,
            'maxCubemapSize': bN,
            'maxAttributes': bO,
            'maxVertexUniforms': bP,
            'maxVaryings': bQ,
            'maxFragmentUniforms': bR,
            'vertexTextures': bS,
            'floatFragmentTextures': bT,
            'floatVertexTextures': bS && bT,
            'maxSamples': bG ? bf['getParameter'](0x8d57) : 0x0
        };
    }

    function M2() {
        var bf = this,
            bg = null,
            bh = 0x0,
            bi = !0x1,
            bF = !0x1,
            bG = new mH(),
            bH = new eO(),
            bI = {
                'value': null,
                'needsUpdate': !0x1
            };

        function bJ() {
            bI['value'] !== bg && (bI['value'] = bg, bI['needsUpdate'] = bh > 0x0), bf['numPlanes'] = bh, bf['numIntersection'] = 0x0;
        }

        function bK(bg, bh, bi, bF) {
            var bJ = null !== bg ? bg['length'] : 0x0,
                bK = null;
            if (0x0 !== bJ) {
                if (bK = bI['value'], !0x0 !== bF || null === bK) {
                    var bL = bi + 0x4 * bJ,
                        bM = bh['matrixWorldInverse'];
                    bH['getNormalMatrix'](bM), (null === bK || bK['length'] < bL) && (bK = new Float32Array(bL));
                    for (var bN = 0x0, bO = bi; bN !== bJ; ++bN, bO += 0x4) bG['copy'](bg[bN])['applyMatrix4'](bM, bH), bG['normal']['toArray'](bK, bO), bK[bO + 0x3] = bG['constant'];
                }
                bI['value'] = bK, bI['needsUpdate'] = !0x0;
            }
            return bf['numPlanes'] = bJ, bK;
        }
        this['uniform'] = bI, this['numPlanes'] = 0x0, this['numIntersection'] = 0x0, this['init'] = function(bf, bF, bG) {
            var bH = 0x0 !== bf['length'] || bF || 0x0 !== bh || bi;
            return bi = bF, bg = bK(bf, bG, 0x0), bh = bf['length'], bH;
        }, this['beginShadows'] = function() {
            bF = !0x0, bK(null);
        }, this['endShadows'] = function() {
            bF = !0x1, bJ();
        }, this['setState'] = function(bf, bG, bH, bL, bM, bN) {
            if (!bi || null === bf || 0x0 === bf['length'] || bF && !bH) bF ? bK(null) : bJ();
            else {
                var bO = bF ? 0x0 : bh,
                    bP = 0x4 * bO,
                    bQ = bM['clippingState'] || null;
                bI['value'] = bQ, bQ = bK(bf, bL, bP, bN);
                for (var bR = 0x0; bR !== bP; ++bR) bQ[bR] = bg[bR];
                bM['clippingState'] = bQ, this['numIntersection'] = bG ? this['numPlanes'] : 0x0, this['numPlanes'] += bO;
            }
        };
    }

    function MB(bf) {
        var bg = {};
        return {
            'get': function(bh) {
                if (void 0x0 !== bg[bh]) return bg[bh];
                var bi;
                switch (bh) {
                    case 'WEBGL_depth_texture':
                        bi = bf['getExtension']('WEBGL_depth_texture') || bf['getExtension']('MOZ_WEBGL_depth_texture') || bf['getExtension']('WEBKIT_WEBGL_depth_texture');
                        break;
                    case 'EXT_texture_filter_anisotropic':
                        bi = bf['getExtension']('EXT_texture_filter_anisotropic') || bf['getExtension']('MOZ_EXT_texture_filter_anisotropic') || bf['getExtension']('WEBKIT_EXT_texture_filter_anisotropic');
                        break;
                    case 'WEBGL_compressed_texture_s3tc':
                        bi = bf['getExtension']('WEBGL_compressed_texture_s3tc') || bf['getExtension']('MOZ_WEBGL_compressed_texture_s3tc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_s3tc');
                        break;
                    case 'WEBGL_compressed_texture_pvrtc':
                        bi = bf['getExtension']('WEBGL_compressed_texture_pvrtc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_pvrtc');
                        break;
                    default:
                        bi = bf['getExtension'](bh);
                }
                return null === bi && console['warn']('THREE.WebGLRenderer:\x20' + bh + '\x20extension\x20not\x20supported.'), bg[bh] = bi, bi;
            }
        };
    }

    function MG(bf, bg, bh) {
        var bi = {},
            bF = {};

        function bG(bf) {
            var bH = bf['target'],
                bI = bi[bH['id']];
            for (var bJ in null !== bI['index'] && bg['remove'](bI['index']), bI['attributes']) bg['remove'](bI['attributes'][bJ]);
            bH['removeEventListener']('dispose', bG), delete bi[bH['id']];
            var bK = bF[bI['id']];
            bK && (bg['remove'](bK), delete bF[bI['id']]), bh['memory']['geometries']--;
        }
        return {
            'get': function(bf, bg) {
                var bF = bi[bg['id']];
                return bF || (bg['addEventListener']('dispose', bG), bg['isBufferGeometry'] ? bF = bg : bg['isGeometry'] && (void 0x0 === bg['_bufferGeometry'] && (bg['_bufferGeometry'] = new Gf()['setFromObject'](bf)), bF = bg['_bufferGeometry']), bi[bg['id']] = bF, bh['memory']['geometries']++, bF);
            },
            'update': function(bf) {
                var bh = bf['index'],
                    bi = bf['attributes'];
                for (var bF in null !== bh && bg['update'](bh, 0x8893), bi) bg['update'](bi[bF], 0x8892);
                var bG = bf['morphAttributes'];
                for (var bF in bG)
                    for (var bH = bG[bF], bI = 0x0, bJ = bH['length']; bI < bJ; bI++) bg['update'](bH[bI], 0x8892);
            },
            'getWireframeAttribute': function(bf) {
                var bh = bF[bf['id']];
                if (bh) return bh;
                var bi, bG = [],
                    bH = bf['index'],
                    bI = bf['attributes'];
                if (null !== bH)
                    for (var bJ = 0x0, bK = (bi = bH['array'])['length']; bJ < bK; bJ += 0x3) {
                        var bL = bi[bJ + 0x0],
                            bM = bi[bJ + 0x1],
                            bN = bi[bJ + 0x2];
                        bG['push'](bL, bM, bM, bN, bN, bL);
                    } else
                        for (bJ = 0x0, bK = (bi = bI['position']['array'])['length'] / 0x3 - 0x1; bJ < bK; bJ += 0x3) bL = bJ + 0x0, bM = bJ + 0x1, bN = bJ + 0x2, bG['push'](bL, bM, bM, bN, bN, bL);
                return bh = new((Bn(bG)) > 0xffff ? Ba : B2)(bG, 0x1), bg['update'](bh, 0x8893), bF[bf['id']] = bh, bh;
            }
        };
    }

    function Nf(bf, bg, bh, bi) {
        var bF, bG, bH;
        this['setMode'] = function(bf) {
            bF = bf;
        }, this['setIndex'] = function(bf) {
            bG = bf['type'], bH = bf['bytesPerElement'];
        }, this['render'] = function(bg, bi) {
            bf['drawElements'](bF, bi, bG, bg * bH), bh['update'](bi, bF);
        }, this['renderInstances'] = function(bI, bJ, bK) {
            var bL;
            if (bi['isWebGL2']) bL = bf;
            else if (null === (bL = bg['get']('ANGLE_instanced_arrays'))) return void console['error']('THREE.WebGLIndexedBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
            bL[bi['isWebGL2'] ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE'](bF, bK, bG, bJ * bH, bI['maxInstancedCount']), bh['update'](bK, bF, bI['maxInstancedCount']);
        };
    }

    function Nv(bf) {
        var bg = {
            'frame': 0x0,
            'calls': 0x0,
            'triangles': 0x0,
            'points': 0x0,
            'lines': 0x0
        };
        return {
            'memory': {
                'geometries': 0x0,
                'textures': 0x0
            },
            'render': bg,
            'programs': null,
            'autoReset': !0x0,
            'reset': function() {
                bg['frame']++, bg['calls'] = 0x0, bg['triangles'] = 0x0, bg['points'] = 0x0, bg['lines'] = 0x0;
            },
            'update': function(bf, bh, bi) {
                switch (bi = bi || 0x1, bg['calls']++, bh) {
                    case 0x4:
                        bg['triangles'] += bi * (bf / 0x3);
                        break;
                    case 0x5:
                    case 0x6:
                        bg['triangles'] += bi * (bf - 0x2);
                        break;
                    case 0x1:
                        bg['lines'] += bi * (bf / 0x2);
                        break;
                    case 0x3:
                        bg['lines'] += bi * (bf - 0x1);
                        break;
                    case 0x2:
                        bg['lines'] += bi * bf;
                        break;
                    case 0x0:
                        bg['points'] += bi * bf;
                        break;
                    default:
                        console['error']('THREE.WebGLInfo:\x20Unknown\x20draw\x20mode:', bh);
                }
            }
        };
    }

    function NB(bf, bg) {
        return Math['abs'](bg[0x1]) - Math['abs'](bf[0x1]);
    }

    function NE(bf) {
        var bg = {},
            bh = new Float32Array(0x8);
        return {
            'update': function(bi, bF, bG, bH) {
                var bI = bi['morphTargetInfluences'],
                    bJ = bI['length'],
                    bK = bg[bF['id']];
                if (void 0x0 === bK) {
                    bK = [];
                    for (var bL = 0x0; bL < bJ; bL++) bK[bL] = [bL, 0x0];
                    bg[bF['id']] = bK;
                }
                var bM = bG['morphTargets'] && bF['morphAttributes']['position'],
                    bN = bG['morphNormals'] && bF['morphAttributes']['normal'];
                for (bL = 0x0; bL < bJ; bL++) 0x0 !== (bO = bK[bL])[0x1] && (bM && bF['removeAttribute']('morphTarget' + bL), bN && bF['removeAttribute']('morphNormal' + bL));
                for (bL = 0x0; bL < bJ; bL++)(bO = bK[bL])[0x0] = bL, bO[0x1] = bI[bL];
                for (bK['sort'](NB), bL = 0x0; bL < 0x8; bL++) {
                    var bO;
                    if (bO = bK[bL]) {
                        var bP = bO[0x0],
                            bQ = bO[0x1];
                        if (bQ) {
                            bM && bF['addAttribute']('morphTarget' + bL, bM[bP]), bN && bF['addAttribute']('morphNormal' + bL, bN[bP]), bh[bL] = bQ;
                            continue;
                        }
                    }
                    bh[bL] = 0x0;
                }
                bH['getUniforms']()['setValue'](bf, 'morphTargetInfluences', bh);
            }
        };
    }

    function NV(bf, bg) {
        var bh = {};
        return {
            'update': function(bi) {
                var bF = bg['render']['frame'],
                    bG = bi['geometry'],
                    bH = bf['get'](bi, bG);
                return bh[bH['id']] !== bF && (bG['isGeometry'] && bH['updateFromObject'](bi), bf['update'](bH), bh[bH['id']] = bF), bH;
            },
            'dispose': function() {
                bh = {};
            }
        };
    }

    function O3(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
        bf = void 0x0 !== bf ? bf : [], bg = void 0x0 !== bg ? bg : cF, bH = void 0x0 !== bH ? bH : d8, lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK), this['flipY'] = !0x1;
    }

    function Oe(bf, bg, bh, bi) {
        lW['call'](this, null), this['image'] = {
            'data': bf,
            'width': bg,
            'height': bh,
            'depth': bi
        }, this['magFilter'] = cP, this['minFilter'] = cP, this['wrapR'] = cN, this['generateMipmaps'] = !0x1, this['flipY'] = !0x1;
    }

    function Oj(bf, bg, bh, bi) {
        lW['call'](this, null), this['image'] = {
            'data': bf,
            'width': bg,
            'height': bh,
            'depth': bi
        }, this['magFilter'] = cP, this['minFilter'] = cP, this['wrapR'] = cN, this['generateMipmaps'] = !0x1, this['flipY'] = !0x1;
    }
    KN['prototype'] = Object['create'](Kf['prototype']), KN['prototype']['constructor'] = KN, KN['prototype']['isShaderMaterial'] = !0x0, KN['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['fragmentShader'] = bf['fragmentShader'], this['vertexShader'] = bf['vertexShader'], this['uniforms'] = vQ(bf['uniforms']), this['defines'] = Object['assign']({}, bf['defines']), this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['lights'] = bf['lights'], this['clipping'] = bf['clipping'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this['extensions'] = bf['extensions'], this;
    }, KN['prototype']['toJSON'] = function(bf) {
        var bg = Kf['prototype']['toJSON']['call'](this, bf);
        for (var bh in bg['uniforms'] = {}, this['uniforms']) {
            var bi = this['uniforms'][bh]['value'];
            bi && bi['isTexture'] ? bg['uniforms'][bh] = {
                'type': 't',
                'value': bi['toJSON'](bf)['uuid']
            } : bi && bi['isColor'] ? bg['uniforms'][bh] = {
                'type': 'c',
                'value': bi['getHex']()
            } : bi && bi['isVector2'] ? bg['uniforms'][bh] = {
                'type': 'v2',
                'value': bi['toArray']()
            } : bi && bi['isVector3'] ? bg['uniforms'][bh] = {
                'type': 'v3',
                'value': bi['toArray']()
            } : bi && bi['isVector4'] ? bg['uniforms'][bh] = {
                'type': 'v4',
                'value': bi['toArray']()
            } : bi && bi['isMatrix3'] ? bg['uniforms'][bh] = {
                'type': 'm3',
                'value': bi['toArray']()
            } : bi && bi['isMatrix4'] ? bg['uniforms'][bh] = {
                'type': 'm4',
                'value': bi['toArray']()
            } : bg['uniforms'][bh] = {
                'value': bi
            };
        }
        Object['keys'](this['defines'])['length'] > 0x0 && (bg['defines'] = this['defines']), bg['vertexShader'] = this['vertexShader'], bg['fragmentShader'] = this['fragmentShader'];
        var bF = {};
        for (var bG in this['extensions']) !0x0 === this['extensions'][bG] && (bF[bG] = !0x0);
        return Object['keys'](bF)['length'] > 0x0 && (bg['extensions'] = bF), bg;
    }, Object['assign'](KP['prototype'], {
        'set': function(bf, bg) {
            return this['origin']['copy'](bf), this['direction']['copy'](bg), this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['origin']['copy'](bf['origin']), this['direction']['copy'](bf['direction']), this;
        },
        'at': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Ray:\x20.at()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](this['direction'])['multiplyScalar'](bf)['add'](this['origin']);
        },
        'lookAt': function(bf) {
            return this['direction']['copy'](bf)['sub'](this['origin'])['normalize'](), this;
        },
        'recast': function() {
            var bf = new eK();
            return function(bg) {
                return this['origin']['copy'](this['at'](bg, bf)), this;
            };
        }(),
        'closestPointToPoint': function(bf, bg) {
            void 0x0 === bg && (console['warn']('THREE.Ray:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['subVectors'](bf, this['origin']);
            var bh = bg['dot'](this['direction']);
            return bh < 0x0 ? bg['copy'](this['origin']) : bg['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']);
        },
        'distanceToPoint': function(bf) {
            return Math['sqrt'](this['distanceSqToPoint'](bf));
        },
        'distanceSqToPoint': function() {
            var bf = new eK();
            return function(bg) {
                var bh = bf['subVectors'](bg, this['origin'])['dot'](this['direction']);
                return bh < 0x0 ? this['origin']['distanceToSquared'](bg) : (bf['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']), bf['distanceToSquared'](bg));
            };
        }(),
        'distanceSqToSegment': (KA = new eK(), KB = new eK(), KC = new eK(), function(bf, bg, bh, bi) {
            KA['copy'](bf)['add'](bg)['multiplyScalar'](0.5), KB['copy'](bg)['sub'](bf)['normalize'](), KC['copy'](this['origin'])['sub'](KA);
            var bF, bG, bH, bI, bJ = 0.5 * bf['distanceTo'](bg),
                bK = -this['direction']['dot'](KB),
                bL = KC['dot'](this['direction']),
                bM = -KC['dot'](KB),
                bN = KC['lengthSq'](),
                bO = Math['abs'](0x1 - bK * bK);
            if (bO > 0x0)
                if (bG = bK * bL - bM, bI = bJ * bO, (bF = bK * bM - bL) >= 0x0)
                    if (bG >= -bI)
                        if (bG <= bI) {
                            var bP = 0x1 / bO;
                            bH = (bF *= bP) * (bF + bK * (bG *= bP) + 0x2 * bL) + bG * (bK * bF + bG + 0x2 * bM) + bN;
                        } else bG = bJ, bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
            else bG = -bJ, bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
            else bG <= -bI ? bH = -(bF = Math['max'](0x0, -(-bK * bJ + bL))) * bF + (bG = bF > 0x0 ? -bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN : bG <= bI ? (bF = 0x0, bH = (bG = Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN) : bH = -(bF = Math['max'](0x0, -(bK * bJ + bL))) * bF + (bG = bF > 0x0 ? bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN;
            else bG = bK > 0x0 ? -bJ : bJ, bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
            return bh && bh['copy'](this['direction'])['multiplyScalar'](bF)['add'](this['origin']), bi && bi['copy'](KB)['multiplyScalar'](bG)['add'](KA), bH;
        }),
        'intersectSphere': function() {
            var bf = new eK();
            return function(bg, bh) {
                bf['subVectors'](bg['center'], this['origin']);
                var bi = bf['dot'](this['direction']),
                    bF = bf['dot'](bf) - bi * bi,
                    bG = bg['radius'] * bg['radius'];
                if (bF > bG) return null;
                var bH = Math['sqrt'](bG - bF),
                    bI = bi - bH,
                    bJ = bi + bH;
                return bI < 0x0 && bJ < 0x0 ? null : bI < 0x0 ? this['at'](bJ, bh) : this['at'](bI, bh);
            };
        }(),
        'intersectsSphere': function(bf) {
            return this['distanceSqToPoint'](bf['center']) <= bf['radius'] * bf['radius'];
        },
        'distanceToPlane': function(bf) {
            var bg = bf['normal']['dot'](this['direction']);
            if (0x0 === bg) return 0x0 === bf['distanceToPoint'](this['origin']) ? 0x0 : null;
            var bh = -(this['origin']['dot'](bf['normal']) + bf['constant']) / bg;
            return bh >= 0x0 ? bh : null;
        },
        'intersectPlane': function(bf, bg) {
            var bh = this['distanceToPlane'](bf);
            return null === bh ? null : this['at'](bh, bg);
        },
        'intersectsPlane': function(bf) {
            var bg = bf['distanceToPoint'](this['origin']);
            return 0x0 === bg || bf['normal']['dot'](this['direction']) * bg < 0x0;
        },
        'intersectBox': function(bf, bg) {
            var bh, bi, bF, bG, bH, bI, bJ = 0x1 / this['direction']['x'],
                bK = 0x1 / this['direction']['y'],
                bL = 0x1 / this['direction']['z'],
                bM = this['origin'];
            return bJ >= 0x0 ? (bh = (bf['min']['x'] - bM['x']) * bJ, bi = (bf['max']['x'] - bM['x']) * bJ) : (bh = (bf['max']['x'] - bM['x']) * bJ, bi = (bf['min']['x'] - bM['x']) * bJ), bK >= 0x0 ? (bF = (bf['min']['y'] - bM['y']) * bK, bG = (bf['max']['y'] - bM['y']) * bK) : (bF = (bf['max']['y'] - bM['y']) * bK, bG = (bf['min']['y'] - bM['y']) * bK), bh > bG || bF > bi ? null : ((bF > bh || bh != bh) && (bh = bF), (bG < bi || bi != bi) && (bi = bG), bL >= 0x0 ? (bH = (bf['min']['z'] - bM['z']) * bL, bI = (bf['max']['z'] - bM['z']) * bL) : (bH = (bf['max']['z'] - bM['z']) * bL, bI = (bf['min']['z'] - bM['z']) * bL), bh > bI || bH > bi ? null : ((bH > bh || bh != bh) && (bh = bH), (bI < bi || bi != bi) && (bi = bI), bi < 0x0 ? null : this['at'](bh >= 0x0 ? bh : bi, bg)));
        },
        'intersectsBox': (Kz = new eK(), function(bf) {
            return null !== this['intersectBox'](bf, Kz);
        }),
        'intersectTriangle': function() {
            var bf = new eK(),
                bg = new eK(),
                bh = new eK(),
                bi = new eK();
            return function(bF, bG, bH, bI, bJ) {
                bg['subVectors'](bG, bF), bh['subVectors'](bH, bF), bi['crossVectors'](bg, bh);
                var bK, bL = this['direction']['dot'](bi);
                if (bL > 0x0) {
                    if (bI) return null;
                    bK = 0x1;
                } else {
                    if (!(bL < 0x0)) return null;
                    bK = -0x1, bL = -bL;
                }
                bf['subVectors'](this['origin'], bF);
                var bM = bK * this['direction']['dot'](bh['crossVectors'](bf, bh));
                if (bM < 0x0) return null;
                var bN = bK * this['direction']['dot'](bg['cross'](bf));
                if (bN < 0x0) return null;
                if (bM + bN > bL) return null;
                var bO = -bK * bf['dot'](bi);
                return bO < 0x0 ? null : this['at'](bO / bL, bJ);
            };
        }(),
        'applyMatrix4': function(bf) {
            return this['origin']['applyMatrix4'](bf), this['direction']['transformDirection'](bf), this;
        },
        'equals': function(bf) {
            return bf['origin']['equals'](this['origin']) && bf['direction']['equals'](this['direction']);
        }
    }), Object['assign'](KS, {
        'getNormal': (KE = new eK(), function(bf, bg, bh, bi) {
            void 0x0 === bi && (console['warn']('THREE.Triangle:\x20.getNormal()\x20target\x20is\x20now\x20required'), bi = new eK()), bi['subVectors'](bh, bg), KE['subVectors'](bf, bg), bi['cross'](KE);
            var bF = bi['lengthSq']();
            return bF > 0x0 ? bi['multiplyScalar'](0x1 / Math['sqrt'](bF)) : bi['set'](0x0, 0x0, 0x0);
        }),
        'getBarycoord': function() {
            var bf = new eK(),
                bg = new eK(),
                bh = new eK();
            return function(bi, bF, bG, bH, bI) {
                bf['subVectors'](bH, bF), bg['subVectors'](bG, bF), bh['subVectors'](bi, bF);
                var bJ = bf['dot'](bf),
                    bK = bf['dot'](bg),
                    bL = bf['dot'](bh),
                    bM = bg['dot'](bg),
                    bN = bg['dot'](bh),
                    bO = bJ * bM - bK * bK;
                if (void 0x0 === bI && (console['warn']('THREE.Triangle:\x20.getBarycoord()\x20target\x20is\x20now\x20required'), bI = new eK()), 0x0 === bO) return bI['set'](-0x2, -0x1, -0x1);
                var bP = 0x1 / bO,
                    bQ = (bM * bL - bK * bN) * bP,
                    bR = (bJ * bN - bK * bL) * bP;
                return bI['set'](0x1 - bQ - bR, bR, bQ);
            };
        }(),
        'containsPoint': function() {
            var bf = new eK();
            return function(bg, bh, bi, bF) {
                return KS['getBarycoord'](bg, bh, bi, bF, bf), bf['x'] >= 0x0 && bf['y'] >= 0x0 && bf['x'] + bf['y'] <= 0x1;
            };
        }(),
        'getUV': (KD = new eK(), function(bf, bg, bh, bi, bF, bG, bH, bI) {
            return this['getBarycoord'](bf, bg, bh, bi, KD), bI['set'](0x0, 0x0), bI['addScaledVector'](bF, KD['x']), bI['addScaledVector'](bG, KD['y']), bI['addScaledVector'](bH, KD['z']), bI;
        }),
        'isFrontFacing': function() {
            var bf = new eK(),
                bg = new eK();
            return function(bh, bi, bF, bG) {
                return bf['subVectors'](bF, bi), bg['subVectors'](bh, bi), bf['cross'](bg)['dot'](bG) < 0x0;
            };
        }()
    }), Object['assign'](KS['prototype'], {
        'set': function(bf, bg, bh) {
            return this['a']['copy'](bf), this['b']['copy'](bg), this['c']['copy'](bh), this;
        },
        'setFromPointsAndIndices': function(bf, bg, bh, bi) {
            return this['a']['copy'](bf[bg]), this['b']['copy'](bf[bh]), this['c']['copy'](bf[bi]), this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['a']['copy'](bf['a']), this['b']['copy'](bf['b']), this['c']['copy'](bf['c']), this;
        },
        'getArea': function() {
            var bf = new eK(),
                bg = new eK();
            return function() {
                return bf['subVectors'](this['c'], this['b']), bg['subVectors'](this['a'], this['b']), 0.5 * bf['cross'](bg)['length']();
            };
        }(),
        'getMidpoint': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getMidpoint()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['addVectors'](this['a'], this['b'])['add'](this['c'])['multiplyScalar'](0x1 / 0x3);
        },
        'getNormal': function(bf) {
            return KS['getNormal'](this['a'], this['b'], this['c'], bf);
        },
        'getPlane': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getPlane()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['setFromCoplanarPoints'](this['a'], this['b'], this['c']);
        },
        'getBarycoord': function(bf, bg) {
            return KS['getBarycoord'](bf, this['a'], this['b'], this['c'], bg);
        },
        'getUV': function(bf, bg, bh, bi, bF) {
            return KS['getUV'](bf, this['a'], this['b'], this['c'], bg, bh, bi, bF);
        },
        'containsPoint': function(bf) {
            return KS['containsPoint'](bf, this['a'], this['b'], this['c']);
        },
        'isFrontFacing': function(bf) {
            return KS['isFrontFacing'](this['a'], this['b'], this['c'], bf);
        },
        'intersectsBox': function(bf) {
            return bf['intersectsTriangle'](this);
        },
        'closestPointToPoint': (KF = new eK(), KG = new eK(), KH = new eK(), KI = new eK(), KJ = new eK(), KK = new eK(), function(bf, bg) {
            void 0x0 === bg && (console['warn']('THREE.Triangle:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'), bg = new eK());
            var bh, bi, bF = this['a'],
                bG = this['b'],
                bH = this['c'];
            KF['subVectors'](bG, bF), KG['subVectors'](bH, bF), KI['subVectors'](bf, bF);
            var bI = KF['dot'](KI),
                bJ = KG['dot'](KI);
            if (bI <= 0x0 && bJ <= 0x0) return bg['copy'](bF);
            KJ['subVectors'](bf, bG);
            var bK = KF['dot'](KJ),
                bL = KG['dot'](KJ);
            if (bK >= 0x0 && bL <= bK) return bg['copy'](bG);
            var bM = bI * bL - bK * bJ;
            if (bM <= 0x0 && bI >= 0x0 && bK <= 0x0) return bh = bI / (bI - bK), bg['copy'](bF)['addScaledVector'](KF, bh);
            KK['subVectors'](bf, bH);
            var bN = KF['dot'](KK),
                bO = KG['dot'](KK);
            if (bO >= 0x0 && bN <= bO) return bg['copy'](bH);
            var bP = bN * bJ - bI * bO;
            if (bP <= 0x0 && bJ >= 0x0 && bO <= 0x0) return bi = bJ / (bJ - bO), bg['copy'](bF)['addScaledVector'](KG, bi);
            var bQ = bK * bO - bN * bL;
            if (bQ <= 0x0 && bL - bK >= 0x0 && bN - bO >= 0x0) return KH['subVectors'](bH, bG), bi = (bL - bK) / (bL - bK + (bN - bO)), bg['copy'](bG)['addScaledVector'](KH, bi);
            var bR = 0x1 / (bQ + bP + bM);
            return bh = bP * bR, bi = bM * bR, bg['copy'](bF)['addScaledVector'](KF, bh)['addScaledVector'](KG, bi);
        }),
        'equals': function(bf) {
            return bf['a']['equals'](this['a']) && bf['b']['equals'](this['b']) && bf['c']['equals'](this['c']);
        }
    }), KW['prototype'] = Object['create'](Kf['prototype']), KW['prototype']['constructor'] = KW, KW['prototype']['isMeshBasicMaterial'] = !0x0, KW['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['specularMap'] = bf['specularMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['combine'] = bf['combine'], this['reflectivity'] = bf['reflectivity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this;
    }, KY['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': KY,
        'isMesh': !0x0,
        'setDrawMode': function(bf) {
            this['drawMode'] = bf;
        },
        'copy': function(bf) {
            return yT['prototype']['copy']['call'](this, bf), this['drawMode'] = bf['drawMode'], void 0x0 !== bf['morphTargetInfluences'] && (this['morphTargetInfluences'] = bf['morphTargetInfluences']['slice']()), void 0x0 !== bf['morphTargetDictionary'] && (this['morphTargetDictionary'] = Object['assign']({}, bf['morphTargetDictionary'])), this;
        },
        'updateMorphTargets': function() {
            var bf, bg, bh, bi = this['geometry'];
            if (bi['isBufferGeometry']) {
                var bF = bi['morphAttributes'],
                    bG = Object['keys'](bF);
                if (bG['length'] > 0x0) {
                    var bH = bF[bG[0x0]];
                    if (void 0x0 !== bH)
                        for (this['morphTargetInfluences'] = [], this['morphTargetDictionary'] = {}, bf = 0x0, bg = bH['length']; bf < bg; bf++) bh = bH[bf]['name'] || String(bf), this['morphTargetInfluences']['push'](0x0), this['morphTargetDictionary'][bh] = bf;
                }
            } else {
                var bI = bi['morphTargets'];
                void 0x0 !== bI && bI['length'] > 0x0 && console['error']('THREE.Mesh.updateMorphTargets()\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.');
            }
        },
        'raycast': function() {
            var bf = new mR(),
                bg = new KP(),
                bh = new mE(),
                bi = new eK(),
                bF = new eK(),
                bG = new eK(),
                bH = new eK(),
                bI = new eK(),
                bJ = new eK(),
                bK = new eK(),
                bL = new eK(),
                bM = new eK(),
                bN = new eC(),
                bO = new eC(),
                bP = new eC(),
                bQ = new eK(),
                bR = new eK();

            function bS(bf, bg, bh, bi, bF, bG, bH, bI) {
                if (null === (bg['side'] === bU ? bi['intersectTriangle'](bH, bG, bF, !0x0, bI) : bi['intersectTriangle'](bF, bG, bH, bg['side'] !== bV, bI))) return null;
                bR['copy'](bI), bR['applyMatrix4'](bf['matrixWorld']);
                var bJ = bh['ray']['origin']['distanceTo'](bR);
                return bJ < bh['near'] || bJ > bh['far'] ? null : {
                    'distance': bJ,
                    'point': bR['clone'](),
                    'object': bf
                };
            }

            function bT(bf, bg, bh, bR, bT, bU, bV, bW, bX, bY) {
                bi['fromBufferAttribute'](bT, bW), bF['fromBufferAttribute'](bT, bX), bG['fromBufferAttribute'](bT, bY);
                var bZ = bf['morphTargetInfluences'];
                if (bg['morphTargets'] && bU && bZ) {
                    bK['set'](0x0, 0x0, 0x0), bL['set'](0x0, 0x0, 0x0), bM['set'](0x0, 0x0, 0x0);
                    for (var c0 = 0x0, c1 = bU['length']; c0 < c1; c0++) {
                        var c2 = bZ[c0],
                            c3 = bU[c0];
                        0x0 !== c2 && (bH['fromBufferAttribute'](c3, bW), bI['fromBufferAttribute'](c3, bX), bJ['fromBufferAttribute'](c3, bY), bK['addScaledVector'](bH['sub'](bi), c2), bL['addScaledVector'](bI['sub'](bF), c2), bM['addScaledVector'](bJ['sub'](bG), c2));
                    }
                    bi['add'](bK), bF['add'](bL), bG['add'](bM);
                }
                var c4 = bS(bf, bg, bh, bR, bi, bF, bG, bQ);
                if (c4) {
                    bV && (bN['fromBufferAttribute'](bV, bW), bO['fromBufferAttribute'](bV, bX), bP['fromBufferAttribute'](bV, bY), c4['uv'] = KS['getUV'](bQ, bi, bF, bG, bN, bO, bP, new eC()));
                    var c5 = new xS(bW, bX, bY);
                    KS['getNormal'](bi, bF, bG, c5['normal']), c4['face'] = c5;
                }
                return c4;
            }
            return function(bi, bF) {
                var bG, bH = this['geometry'],
                    bI = this['material'],
                    bJ = this['matrixWorld'];
                if (void 0x0 !== bI && (null === bH['boundingSphere'] && bH['computeBoundingSphere'](), bh['copy'](bH['boundingSphere']), bh['applyMatrix4'](bJ), !0x1 !== bi['ray']['intersectsSphere'](bh) && (bf['getInverse'](bJ), bg['copy'](bi['ray'])['applyMatrix4'](bf), null === bH['boundingBox'] || !0x1 !== bg['intersectsBox'](bH['boundingBox']))))
                    if (bH['isBufferGeometry']) {
                        var bK, bL, bM, bR, bU, bV, bW, bX, bY, bZ = bH['index'],
                            c0 = bH['attributes']['position'],
                            c1 = bH['morphAttributes']['position'],
                            c2 = bH['attributes']['uv'],
                            c3 = bH['groups'],
                            c4 = bH['drawRange'];
                        if (null !== bZ)
                            if (Array['isArray'](bI))
                                for (bR = 0x0, bV = c3['length']; bR < bV; bR++)
                                    for (bY = bI[(bX = c3[bR])['materialIndex']], bU = Math['max'](bX['start'], c4['start']), bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3) bK = bZ['getX'](bU), bL = bZ['getX'](bU + 0x1), bM = bZ['getX'](bU + 0x2), (bG = bT(this, bY, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bU / 0x3), bG['face']['materialIndex'] = bX['materialIndex'], bF['push'](bG));
                            else
                                for (bR = Math['max'](0x0, c4['start']), bV = Math['min'](bZ['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3) bK = bZ['getX'](bR), bL = bZ['getX'](bR + 0x1), bM = bZ['getX'](bR + 0x2), (bG = bT(this, bI, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bR / 0x3), bF['push'](bG));
                        else if (void 0x0 !== c0)
                            if (Array['isArray'](bI))
                                for (bR = 0x0, bV = c3['length']; bR < bV; bR++)
                                    for (bY = bI[(bX = c3[bR])['materialIndex']], bU = Math['max'](bX['start'], c4['start']), bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3)(bG = bT(this, bY, bi, bg, c0, c1, c2, bK = bU, bL = bU + 0x1, bM = bU + 0x2)) && (bG['faceIndex'] = Math['floor'](bU / 0x3), bG['face']['materialIndex'] = bX['materialIndex'], bF['push'](bG));
                            else
                                for (bR = Math['max'](0x0, c4['start']), bV = Math['min'](c0['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3)(bG = bT(this, bI, bi, bg, c0, c1, c2, bK = bR, bL = bR + 0x1, bM = bR + 0x2)) && (bG['faceIndex'] = Math['floor'](bR / 0x3), bF['push'](bG));
                    } else if (bH['isGeometry']) {
                    var c5, c6, c7, c8, c9 = Array['isArray'](bI),
                        ca = bH['vertices'],
                        cb = bH['faces'],
                        cc = bH['faceVertexUvs'][0x0];
                    cc['length'] > 0x0 && (c8 = cc);
                    for (var cd = 0x0, ce = cb['length']; cd < ce; cd++) {
                        var cf = cb[cd],
                            cg = c9 ? bI[cf['materialIndex']] : bI;
                        if (void 0x0 !== cg && (c5 = ca[cf['a']], c6 = ca[cf['b']], c7 = ca[cf['c']], bG = bS(this, cg, bi, bg, c5, c6, c7, bQ))) {
                            if (c8 && c8[cd]) {
                                var ch = c8[cd];
                                bN['copy'](ch[0x0]), bO['copy'](ch[0x1]), bP['copy'](ch[0x2]), bG['uv'] = KS['getUV'](bQ, c5, c6, c7, bN, bO, bP, new eC());
                            }
                            bG['face'] = cf, bG['faceIndex'] = cd, bF['push'](bG);
                        }
                    }
                }
            };
        }(),
        'clone': function() {
            return new this['constructor'](this['geometry'], this['material'])['copy'](this);
        }
    }), O3['prototype'] = Object['create'](lW['prototype']), O3['prototype']['constructor'] = O3, O3['prototype']['isCubeTexture'] = !0x0, Object['defineProperty'](O3['prototype'], 'images', {
        'get': function() {
            return this['image'];
        },
        'set': function(bf) {
            this['image'] = bf;
        }
    }), Oe['prototype'] = Object['create'](lW['prototype']), Oe['prototype']['constructor'] = Oe, Oe['prototype']['isDataTexture2DArray'] = !0x0, Oj['prototype'] = Object['create'](lW['prototype']), Oj['prototype']['constructor'] = Oj, Oj['prototype']['isDataTexture3D'] = !0x0;
    var Sx = new lW(),
        Sy = new Oe(),
        Sz = new Oj(),
        SA = new O3(),
        SB = [],
        SC = [],
        SD = new Float32Array(0x10),
        SE = new Float32Array(0x9),
        SF = new Float32Array(0x4);

    function SG(bf, bg, bh) {
        var bi = bf[0x0];
        if (bi <= 0x0 || bi > 0x0) return bf;
        var bF = bg * bh,
            bG = SB[bF];
        if (void 0x0 === bG && (bG = new Float32Array(bF), SB[bF] = bG), 0x0 !== bg) {
            bi['toArray'](bG, 0x0);
            for (var bH = 0x1, bI = 0x0; bH !== bg; ++bH) bI += bh, bf[bH]['toArray'](bG, bI);
        }
        return bG;
    }

    function SP(bf, bg) {
        if (bf['length'] !== bg['length']) return !0x1;
        for (var bh = 0x0, bi = bf['length']; bh < bi; bh++)
            if (bf[bh] !== bg[bh]) return !0x1;
        return !0x0;
    }

    function SU(bf, bg) {
        for (var bh = 0x0, bi = bg['length']; bh < bi; bh++) bf[bh] = bg[bh];
    }

    function SZ(bf, bg) {
        var bh = SC[bg];
        void 0x0 === bh && (bh = new Int32Array(bg), SC[bg] = bh);
        for (var bi = 0x0; bi !== bg; ++bi) bh[bi] = bf['allocateTextureUnit']();
        return bh;
    }

    function T4(bf, bg) {
        var bh = this['cache'];
        bh[0x0] !== bg && (bf['uniform1f'](this['addr'], bg), bh[0x0] = bg);
    }

    function T8(bf, bg) {
        var bh = this['cache'];
        if (void 0x0 !== bg['x']) bh[0x0] === bg['x'] && bh[0x1] === bg['y'] || (bf['uniform2f'](this['addr'], bg['x'], bg['y']), bh[0x0] = bg['x'], bh[0x1] = bg['y']);
        else {
            if (SP(bh, bg)) return;
            bf['uniform2fv'](this['addr'], bg), SU(bh, bg);
        }
    }

    function Tc(bf, bg) {
        var bh = this['cache'];
        if (void 0x0 !== bg['x']) bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] || (bf['uniform3f'](this['addr'], bg['x'], bg['y'], bg['z']), bh[0x0] = bg['x'], bh[0x1] = bg['y'], bh[0x2] = bg['z']);
        else if (void 0x0 !== bg['r']) bh[0x0] === bg['r'] && bh[0x1] === bg['g'] && bh[0x2] === bg['b'] || (bf['uniform3f'](this['addr'], bg['r'], bg['g'], bg['b']), bh[0x0] = bg['r'], bh[0x1] = bg['g'], bh[0x2] = bg['b']);
        else {
            if (SP(bh, bg)) return;
            bf['uniform3fv'](this['addr'], bg), SU(bh, bg);
        }
    }

    function Tg(bf, bg) {
        var bh = this['cache'];
        if (void 0x0 !== bg['x']) bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] && bh[0x3] === bg['w'] || (bf['uniform4f'](this['addr'], bg['x'], bg['y'], bg['z'], bg['w']), bh[0x0] = bg['x'], bh[0x1] = bg['y'], bh[0x2] = bg['z'], bh[0x3] = bg['w']);
        else {
            if (SP(bh, bg)) return;
            bf['uniform4fv'](this['addr'], bg), SU(bh, bg);
        }
    }

    function Tk(bf, bg) {
        var bh = this['cache'],
            bi = bg['elements'];
        if (void 0x0 === bi) {
            if (SP(bh, bg)) return;
            bf['uniformMatrix2fv'](this['addr'], !0x1, bg), SU(bh, bg);
        } else {
            if (SP(bh, bi)) return;
            SF['set'](bi), bf['uniformMatrix2fv'](this['addr'], !0x1, SF), SU(bh, bi);
        }
    }

    function Tp(bf, bg) {
        var bh = this['cache'],
            bi = bg['elements'];
        if (void 0x0 === bi) {
            if (SP(bh, bg)) return;
            bf['uniformMatrix3fv'](this['addr'], !0x1, bg), SU(bh, bg);
        } else {
            if (SP(bh, bi)) return;
            SE['set'](bi), bf['uniformMatrix3fv'](this['addr'], !0x1, SE), SU(bh, bi);
        }
    }

    function Tu(bf, bg) {
        var bh = this['cache'],
            bi = bg['elements'];
        if (void 0x0 === bi) {
            if (SP(bh, bg)) return;
            bf['uniformMatrix4fv'](this['addr'], !0x1, bg), SU(bh, bg);
        } else {
            if (SP(bh, bi)) return;
            SD['set'](bi), bf['uniformMatrix4fv'](this['addr'], !0x1, SD), SU(bh, bi);
        }
    }

    function Tz(bf, bg, bh) {
        var bi = this['cache'],
            bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['safeSetTexture2D'](bg || Sx, bF);
    }

    function TF(bf, bg, bh) {
        var bi = this['cache'],
            bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['setTexture2DArray'](bg || Sy, bF);
    }

    function TL(bf, bg, bh) {
        var bi = this['cache'],
            bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['setTexture3D'](bg || Sz, bF);
    }

    function TR(bf, bg, bh) {
        var bi = this['cache'],
            bF = bh['allocateTextureUnit']();
        bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['safeSetTextureCube'](bg || SA, bF);
    }

    function TX(bf, bg) {
        var bh = this['cache'];
        bh[0x0] !== bg && (bf['uniform1i'](this['addr'], bg), bh[0x0] = bg);
    }

    function U1(bf, bg) {
        var bh = this['cache'];
        SP(bh, bg) || (bf['uniform2iv'](this['addr'], bg), SU(bh, bg));
    }

    function U5(bf, bg) {
        var bh = this['cache'];
        SP(bh, bg) || (bf['uniform3iv'](this['addr'], bg), SU(bh, bg));
    }

    function U9(bf, bg) {
        var bh = this['cache'];
        SP(bh, bg) || (bf['uniform4iv'](this['addr'], bg), SU(bh, bg));
    }

    function Ud(bf, bg) {
        bf['uniform1fv'](this['addr'], bg);
    }

    function Ug(bf, bg) {
        bf['uniform1iv'](this['addr'], bg);
    }

    function Uj(bf, bg) {
        bf['uniform2iv'](this['addr'], bg);
    }

    function Um(bf, bg) {
        bf['uniform3iv'](this['addr'], bg);
    }

    function Up(bf, bg) {
        bf['uniform4iv'](this['addr'], bg);
    }

    function Us(bf, bg) {
        var bh = SG(bg, this['size'], 0x2);
        bf['uniform2fv'](this['addr'], bh);
    }

    function Uw(bf, bg) {
        var bh = SG(bg, this['size'], 0x3);
        bf['uniform3fv'](this['addr'], bh);
    }

    function UA(bf, bg) {
        var bh = SG(bg, this['size'], 0x4);
        bf['uniform4fv'](this['addr'], bh);
    }

    function UE(bf, bg) {
        var bh = SG(bg, this['size'], 0x4);
        bf['uniformMatrix2fv'](this['addr'], !0x1, bh);
    }

    function UI(bf, bg) {
        var bh = SG(bg, this['size'], 0x9);
        bf['uniformMatrix3fv'](this['addr'], !0x1, bh);
    }

    function UM(bf, bg) {
        var bh = SG(bg, this['size'], 0x10);
        bf['uniformMatrix4fv'](this['addr'], !0x1, bh);
    }

    function UQ(bf, bg, bh) {
        var bi = bg['length'],
            bF = SZ(bh, bi);
        bf['uniform1iv'](this['addr'], bF);
        for (var bG = 0x0; bG !== bi; ++bG) bh['safeSetTexture2D'](bg[bG] || Sx, bF[bG]);
    }

    function UX(bf, bg, bh) {
        var bi = bg['length'],
            bF = SZ(bh, bi);
        bf['uniform1iv'](this['addr'], bF);
        for (var bG = 0x0; bG !== bi; ++bG) bh['safeSetTextureCube'](bg[bG] || SA, bF[bG]);
    }

    function V4(bf, bg, bh) {
        this['id'] = bf, this['addr'] = bh, this['cache'] = [], this['setValue'] = function(bf) {
            switch (bf) {
                case 0x1406:
                    return T4;
                case 0x8b50:
                    return T8;
                case 0x8b51:
                    return Tc;
                case 0x8b52:
                    return Tg;
                case 0x8b5a:
                    return Tk;
                case 0x8b5b:
                    return Tp;
                case 0x8b5c:
                    return Tu;
                case 0x8b5e:
                case 0x8d66:
                    return Tz;
                case 0x8b5f:
                    return TL;
                case 0x8b60:
                    return TR;
                case 0x8dc1:
                    return TF;
                case 0x1404:
                case 0x8b56:
                    return TX;
                case 0x8b53:
                case 0x8b57:
                    return U1;
                case 0x8b54:
                case 0x8b58:
                    return U5;
                case 0x8b55:
                case 0x8b59:
                    return U9;
            }
        }(bg['type']);
    }

    function V9(bf, bg, bh) {
        this['id'] = bf, this['addr'] = bh, this['cache'] = [], this['size'] = bg['size'], this['setValue'] = function(bf) {
            switch (bf) {
                case 0x1406:
                    return Ud;
                case 0x8b50:
                    return Us;
                case 0x8b51:
                    return Uw;
                case 0x8b52:
                    return UA;
                case 0x8b5a:
                    return UE;
                case 0x8b5b:
                    return UI;
                case 0x8b5c:
                    return UM;
                case 0x8b5e:
                    return UQ;
                case 0x8b60:
                    return UX;
                case 0x1404:
                case 0x8b56:
                    return Ug;
                case 0x8b53:
                case 0x8b57:
                    return Uj;
                case 0x8b54:
                case 0x8b58:
                    return Um;
                case 0x8b55:
                case 0x8b59:
                    return Up;
            }
        }(bg['type']);
    }

    function Ve(bf) {
        this['id'] = bf, this['seq'] = [], this['map'] = {};
    }
    V9['prototype']['updateCache'] = function(bf) {
        var bg = this['cache'];
        bf instanceof Float32Array && bg['length'] !== bf['length'] && (this['cache'] = new Float32Array(bf['length'])), SU(bg, bf);
    }, Ve['prototype']['setValue'] = function(bf, bg, bh) {
        for (var bi = this['seq'], bF = 0x0, bG = bi['length']; bF !== bG; ++bF) {
            var bH = bi[bF];
            bH['setValue'](bf, bg[bH['id']], bh);
        }
    };
    var Vp = /([\w\d_]+)(\])?(\[|\.)?/g;

    function Vq(bf, bg) {
        bf['seq']['push'](bg), bf['map'][bg['id']] = bg;
    }

    function Vt(bf, bg, bh) {
        var bi = bf['name'],
            bF = bi['length'];
        for (Vp['lastIndex'] = 0x0;;) {
            var bG = Vp['exec'](bi),
                bH = Vp['lastIndex'],
                bI = bG[0x1],
                bJ = ']' === bG[0x2],
                bK = bG[0x3];
            if (bJ && (bI |= 0x0), void 0x0 === bK || '[' === bK && bH + 0x2 === bF) {
                Vq(bh, void 0x0 === bK ? new V4(bI, bf, bg) : new V9(bI, bf, bg));
                break;
            }
            var bL = bh['map'][bI];
            void 0x0 === bL && Vq(bh, bL = new Ve(bI)), bh = bL;
        }
    }

    function VF(bf, bg) {
        this['seq'] = [], this['map'] = {};
        for (var bh = bf['getProgramParameter'](bg, 0x8b86), bi = 0x0; bi < bh; ++bi) {
            var bF = bf['getActiveUniform'](bg, bi);
            Vt(bF, bf['getUniformLocation'](bg, bF['name']), this);
        }
    }

    function VL(bf, bg, bh, bi) {
        var bF = bf['createShader'](bg);
        return bf['shaderSource'](bF, bh), bf['compileShader'](bF), !0x0 === bi && (!0x1 === bf['getShaderParameter'](bF, 0x8b81) && console['error']('THREE.WebGLShader:\x20Shader\x20couldn\x27t\x20compile.'), '' !== bf['getShaderInfoLog'](bF) && console['warn']('THREE.WebGLShader:\x20gl.getShaderInfoLog()', 0x8b31 === bg ? 'vertex' : 'fragment', bf['getShaderInfoLog'](bF), function(bf) {
            for (var bg = bf['split']('\x0a'), bh = 0x0; bh < bg['length']; bh++) bg[bh] = bh + 0x1 + ':\x20' + bg[bh];
            return bg['join']('\x0a');
        }(bh))), bF;
    }
    VF['prototype']['setValue'] = function(bf, bg, bh, bi) {
        var bF = this['map'][bg];
        void 0x0 !== bF && bF['setValue'](bf, bh, bi);
    }, VF['prototype']['setOptional'] = function(bf, bg, bh) {
        var bi = bg[bh];
        void 0x0 !== bi && this['setValue'](bf, bh, bi);
    }, VF['upload'] = function(bf, bg, bh, bi) {
        for (var bF = 0x0, bG = bg['length']; bF !== bG; ++bF) {
            var bH = bg[bF],
                bI = bh[bH['id']];
            !0x1 !== bI['needsUpdate'] && bH['setValue'](bf, bI['value'], bi);
        }
    }, VF['seqWithValue'] = function(bf, bg) {
        for (var bh = [], bi = 0x0, bF = bf['length']; bi !== bF; ++bi) {
            var bG = bf[bi];
            bG['id'] in bg && bh['push'](bG);
        }
        return bh;
    };
    var Wh = 0x0;

    function Wi(bf) {
        switch (bf) {
            case dQ:
                return ['Linear', '(\x20value\x20)'];
            case dR:
                return ['sRGB', '(\x20value\x20)'];
            case dT:
                return ['RGBE', '(\x20value\x20)'];
            case dV:
                return ['RGBM', '(\x20value,\x207.0\x20)'];
            case dW:
                return ['RGBM', '(\x20value,\x2016.0\x20)'];
            case dX:
                return ['RGBD', '(\x20value,\x20256.0\x20)'];
            case dS:
                return ['Gamma', '(\x20value,\x20float(\x20GAMMA_FACTOR\x20)\x20)'];
            default:
                throw new Error('unsupported\x20encoding:\x20' + bf);
        }
    }

    function Wk(bf, bg) {
        var bh = Wi(bg);
        return 'vec4\x20' + bf + '(\x20vec4\x20value\x20)\x20{\x20return\x20' + bh[0x0] + 'ToLinear' + bh[0x1] + ';\x20}';
    }

    function Wo(bf, bg) {
        var bh;
        switch (bg) {
            case cz:
                bh = 'Linear';
                break;
            case cA:
                bh = 'Reinhard';
                break;
            case cB:
                bh = 'Uncharted2';
                break;
            case cC:
                bh = 'OptimizedCineon';
                break;
            case cD:
                bh = 'ACESFilmic';
                break;
            default:
                throw new Error('unsupported\x20toneMapping:\x20' + bg);
        }
        return 'vec3\x20' + bf + '(\x20vec3\x20color\x20)\x20{\x20return\x20' + bh + 'ToneMapping(\x20color\x20);\x20}';
    }

    function Ws(bf) {
        return '' !== bf;
    }

    function Wu(bf, bg) {
        return bf['replace'](/NUM_DIR_LIGHTS/g, bg['numDirLights'])['replace'](/NUM_SPOT_LIGHTS/g, bg['numSpotLights'])['replace'](/NUM_RECT_AREA_LIGHTS/g, bg['numRectAreaLights'])['replace'](/NUM_POINT_LIGHTS/g, bg['numPointLights'])['replace'](/NUM_HEMI_LIGHTS/g, bg['numHemiLights']);
    }

    function Wx(bf, bg) {
        return bf['replace'](/NUM_CLIPPING_PLANES/g, bg['numClippingPlanes'])['replace'](/UNION_CLIPPING_PLANES/g, bg['numClippingPlanes'] - bg['numClipIntersection']);
    }

    function WA(bf) {
        return bf['replace'](/^[ \t]*#include +<([\w\d.\/]+)>/gm, function(bf, bg) {
            var bh = vP[bg];
            if (void 0x0 === bh) throw new Error('Can\x20not\x20resolve\x20#include\x20<' + bg + '>');
            return WA(bh);
        });
    }

    function WF(bf) {
        return bf['replace'](/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(bf, bg, bh, bi) {
            for (var bF = '', bG = parseInt(bg); bG < parseInt(bh); bG++) bF += bi['replace'](/\[ i \]/g, '[\x20' + bG + '\x20]');
            return bF;
        });
    }

    function WN(bf, bg, bh, bi, bF, bG, bH, bI) {
        var bJ = bf['context'],
            bK = bi['defines'],
            bL = bF['vertexShader'],
            bM = bF['fragmentShader'],
            bN = 'SHADOWMAP_TYPE_BASIC';
        bG['shadowMapType'] === bR ? bN = 'SHADOWMAP_TYPE_PCF' : bG['shadowMapType'] === bS && (bN = 'SHADOWMAP_TYPE_PCF_SOFT');
        var bO = 'ENVMAP_TYPE_CUBE',
            bP = 'ENVMAP_MODE_REFLECTION',
            bQ = 'ENVMAP_BLENDING_MULTIPLY';
        if (bG['envMap']) {
            switch (bi['envMap']['mapping']) {
                case cF:
                case cG:
                    bO = 'ENVMAP_TYPE_CUBE';
                    break;
                case cK:
                case cL:
                    bO = 'ENVMAP_TYPE_CUBE_UV';
                    break;
                case cH:
                case cI:
                    bO = 'ENVMAP_TYPE_EQUIREC';
                    break;
                case cJ:
                    bO = 'ENVMAP_TYPE_SPHERE';
            }
            switch (bi['envMap']['mapping']) {
                case cG:
                case cI:
                    bP = 'ENVMAP_MODE_REFRACTION';
            }
            switch (bi['combine']) {
                case cv:
                    bQ = 'ENVMAP_BLENDING_MULTIPLY';
                    break;
                case cw:
                    bQ = 'ENVMAP_BLENDING_MIX';
                    break;
                case cx:
                    bQ = 'ENVMAP_BLENDING_ADD';
            }
        }
        var bT, bU, bV, bW, bX, bY = bf['gammaFactor'] > 0x0 ? bf['gammaFactor'] : 0x1,
            bZ = bH['isWebGL2'] ? '' : function(bf, bg, bh) {
                return [(bf = bf || {})['derivatives'] || bg['envMapCubeUV'] || bg['bumpMap'] || bg['normalMap'] && !bg['objectSpaceNormalMap'] || bg['flatShading'] ? '#extension\x20GL_OES_standard_derivatives\x20:\x20enable' : '', (bf['fragDepth'] || bg['logarithmicDepthBuffer']) && bh['get']('EXT_frag_depth') ? '#extension\x20GL_EXT_frag_depth\x20:\x20enable' : '', bf['drawBuffers'] && bh['get']('WEBGL_draw_buffers') ? '#extension\x20GL_EXT_draw_buffers\x20:\x20require' : '', (bf['shaderTextureLOD'] || bg['envMap']) && bh['get']('EXT_shader_texture_lod') ? '#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable' : '']['filter'](Ws)['join']('\x0a');
            }(bi['extensions'], bG, bg),
            c0 = function(bf) {
                var bg = [];
                for (var bh in bf) {
                    var bi = bf[bh];
                    !0x1 !== bi && bg['push']('#define\x20' + bh + '\x20' + bi);
                }
                return bg['join']('\x0a');
            }(bK),
            c1 = bJ['createProgram']();
        if (bi['isRawShaderMaterial'] ? ((bT = [c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bT += '\x0a'), (bU = [bZ, c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bU += '\x0a')) : (bT = ['precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['supportsVertexTextures'] ? '#define\x20VERTEX_TEXTURES' : '', '#define\x20GAMMA_FACTOR\x20' + bY, '#define\x20MAX_BONES\x20' + bG['maxBones'], bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bP : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['displacementMap'] && bG['supportsVertexTextures'] ? '#define\x20USE_DISPLACEMENTMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['skinning'] ? '#define\x20USE_SKINNING' : '', bG['useVertexTexture'] ? '#define\x20BONE_TEXTURE' : '', bG['morphTargets'] ? '#define\x20USE_MORPHTARGETS' : '', bG['morphNormals'] && !0x1 === bG['flatShading'] ? '#define\x20USE_MORPHNORMALS' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['sizeAttenuation'] ? '#define\x20USE_SIZEATTENUATION' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', 'uniform\x20mat4\x20modelMatrix;', 'uniform\x20mat4\x20modelViewMatrix;', 'uniform\x20mat4\x20projectionMatrix;', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20mat3\x20normalMatrix;', 'uniform\x20vec3\x20cameraPosition;', 'attribute\x20vec3\x20position;', 'attribute\x20vec3\x20normal;', 'attribute\x20vec2\x20uv;', '#ifdef\x20USE_TANGENT', '\x09attribute\x20vec4\x20tangent;', '#endif', '#ifdef\x20USE_COLOR', '\x09attribute\x20vec3\x20color;', '#endif', '#ifdef\x20USE_MORPHTARGETS', '\x09attribute\x20vec3\x20morphTarget0;', '\x09attribute\x20vec3\x20morphTarget1;', '\x09attribute\x20vec3\x20morphTarget2;', '\x09attribute\x20vec3\x20morphTarget3;', '\x09#ifdef\x20USE_MORPHNORMALS', '\x09\x09attribute\x20vec3\x20morphNormal0;', '\x09\x09attribute\x20vec3\x20morphNormal1;', '\x09\x09attribute\x20vec3\x20morphNormal2;', '\x09\x09attribute\x20vec3\x20morphNormal3;', '\x09#else', '\x09\x09attribute\x20vec3\x20morphTarget4;', '\x09\x09attribute\x20vec3\x20morphTarget5;', '\x09\x09attribute\x20vec3\x20morphTarget6;', '\x09\x09attribute\x20vec3\x20morphTarget7;', '\x09#endif', '#endif', '#ifdef\x20USE_SKINNING', '\x09attribute\x20vec4\x20skinIndex;', '\x09attribute\x20vec4\x20skinWeight;', '#endif', '\x0a']['filter'](Ws)['join']('\x0a'), bU = [bZ, 'precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['alphaTest'] ? '#define\x20ALPHATEST\x20' + bG['alphaTest'] + (bG['alphaTest'] % 0x1 ? '' : '.0') : '', '#define\x20GAMMA_FACTOR\x20' + bY, bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['matcap'] ? '#define\x20USE_MATCAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bO : '', bG['envMap'] ? '#define\x20' + bP : '', bG['envMap'] ? '#define\x20' + bQ : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['gradientMap'] ? '#define\x20USE_GRADIENTMAP' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['premultipliedAlpha'] ? '#define\x20PREMULTIPLIED_ALPHA' : '', bG['physicallyCorrectLights'] ? '#define\x20PHYSICALLY_CORRECT_LIGHTS' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', bG['envMap'] && (bH['isWebGL2'] || bg['get']('EXT_shader_texture_lod')) ? '#define\x20TEXTURE_LOD_EXT' : '', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20vec3\x20cameraPosition;', bG['toneMapping'] !== cy ? '#define\x20TONE_MAPPING' : '', bG['toneMapping'] !== cy ? vP['tonemapping_pars_fragment'] : '', bG['toneMapping'] !== cy ? Wo('toneMapping', bG['toneMapping']) : '', bG['dithering'] ? '#define\x20DITHERING' : '', bG['outputEncoding'] || bG['mapEncoding'] || bG['matcapEncoding'] || bG['envMapEncoding'] || bG['emissiveMapEncoding'] ? vP['encodings_pars_fragment'] : '', bG['mapEncoding'] ? Wk('mapTexelToLinear', bG['mapEncoding']) : '', bG['matcapEncoding'] ? Wk('matcapTexelToLinear', bG['matcapEncoding']) : '', bG['envMapEncoding'] ? Wk('envMapTexelToLinear', bG['envMapEncoding']) : '', bG['emissiveMapEncoding'] ? Wk('emissiveMapTexelToLinear', bG['emissiveMapEncoding']) : '', bG['outputEncoding'] ? (bV = 'linearToOutputTexel', bW = bG['outputEncoding'], bX = Wi(bW), 'vec4\x20' + bV + '(\x20vec4\x20value\x20)\x20{\x20return\x20LinearTo' + bX[0x0] + bX[0x1] + ';\x20}') : '', bG['depthPacking'] ? '#define\x20DEPTH_PACKING\x20' + bi['depthPacking'] : '', '\x0a']['filter'](Ws)['join']('\x0a')), bL = Wx(bL = Wu(bL = WA(bL), bG), bG), bM = Wx(bM = Wu(bM = WA(bM), bG), bG), bL = WF(bL), bM = WF(bM), bH['isWebGL2'] && !bi['isRawShaderMaterial']) {
            var c2 = !0x1,
                c3 = /^\s*#version\s+300\s+es\s*\n/;
            bi['isShaderMaterial'] && null !== bL['match'](c3) && null !== bM['match'](c3) && (c2 = !0x0, bL = bL['replace'](c3, ''), bM = bM['replace'](c3, '')), bT = ['#version\x20300\x20es\x0a', '#define\x20attribute\x20in', '#define\x20varying\x20out', '#define\x20texture2D\x20texture']['join']('\x0a') + '\x0a' + bT, bU = ['#version\x20300\x20es\x0a', '#define\x20varying\x20in', c2 ? '' : 'out\x20highp\x20vec4\x20pc_fragColor;', c2 ? '' : '#define\x20gl_FragColor\x20pc_fragColor', '#define\x20gl_FragDepthEXT\x20gl_FragDepth', '#define\x20texture2D\x20texture', '#define\x20textureCube\x20texture', '#define\x20texture2DProj\x20textureProj', '#define\x20texture2DLodEXT\x20textureLod', '#define\x20texture2DProjLodEXT\x20textureProjLod', '#define\x20textureCubeLodEXT\x20textureLod', '#define\x20texture2DGradEXT\x20textureGrad', '#define\x20texture2DProjGradEXT\x20textureProjGrad', '#define\x20textureCubeGradEXT\x20textureGrad']['join']('\x0a') + '\x0a' + bU;
        }
        var c4, c5, c6 = bU + bM,
            c7 = VL(bJ, 0x8b31, bT + bL, bf['debug']['checkShaderErrors']),
            c8 = VL(bJ, 0x8b30, c6, bf['debug']['checkShaderErrors']);
        if (bJ['attachShader'](c1, c7), bJ['attachShader'](c1, c8), void 0x0 !== bi['index0AttributeName'] ? bJ['bindAttribLocation'](c1, 0x0, bi['index0AttributeName']) : !0x0 === bG['morphTargets'] && bJ['bindAttribLocation'](c1, 0x0, 'position'), bJ['linkProgram'](c1), bf['debug']['checkShaderErrors']) {
            var c9 = bJ['getProgramInfoLog'](c1)['trim'](),
                ca = bJ['getShaderInfoLog'](c7)['trim'](),
                cb = bJ['getShaderInfoLog'](c8)['trim'](),
                cc = !0x0,
                cd = !0x0;
            !0x1 === bJ['getProgramParameter'](c1, 0x8b82) ? (cc = !0x1, console['error']('THREE.WebGLProgram:\x20shader\x20error:\x20', bJ['getError'](), '35715', bJ['getProgramParameter'](c1, 0x8b83), 'gl.getProgramInfoLog', c9, ca, cb)) : '' !== c9 ? console['warn']('THREE.WebGLProgram:\x20gl.getProgramInfoLog()', c9) : '' !== ca && '' !== cb || (cd = !0x1), cd && (this['diagnostics'] = {
                'runnable': cc,
                'material': bi,
                'programLog': c9,
                'vertexShader': {
                    'log': ca,
                    'prefix': bT
                },
                'fragmentShader': {
                    'log': cb,
                    'prefix': bU
                }
            });
        }
        return bJ['deleteShader'](c7), bJ['deleteShader'](c8), this['getUniforms'] = function() {
            return void 0x0 === c4 && (c4 = new VF(bJ, c1, bI)), c4;
        }, this['getAttributes'] = function() {
            return void 0x0 === c5 && (c5 = function(bf, bg) {
                for (var bh = {}, bi = bf['getProgramParameter'](bg, 0x8b89), bF = 0x0; bF < bi; bF++) {
                    var bG = bf['getActiveAttrib'](bg, bF)['name'];
                    bh[bG] = bf['getAttribLocation'](bg, bG);
                }
                return bh;
            }(bJ, c1)), c5;
        }, this['destroy'] = function() {
            bJ['deleteProgram'](c1), this['program'] = void 0x0;
        }, Object['defineProperties'](this, {
            'uniforms': {
                'get': function() {
                    return console['warn']('THREE.WebGLProgram:\x20.uniforms\x20is\x20now\x20.getUniforms().'), this['getUniforms']();
                }
            },
            'attributes': {
                'get': function() {
                    return console['warn']('THREE.WebGLProgram:\x20.attributes\x20is\x20now\x20.getAttributes().'), this['getAttributes']();
                }
            }
        }), this['name'] = bF['name'], this['id'] = Wh++, this['code'] = bh, this['usedTimes'] = 0x1, this['program'] = c1, this['vertexShader'] = c7, this['fragmentShader'] = c8, this;
    }

    function XC(bf, bg, bh, bi) {
        var bF = [],
            bG = {
                'MeshDepthMaterial': 'depth',
                'MeshDistanceMaterial': 'distanceRGBA',
                'MeshNormalMaterial': 'normal',
                'MeshBasicMaterial': 'basic',
                'MeshLambertMaterial': 'lambert',
                'MeshPhongMaterial': 'phong',
                'MeshToonMaterial': 'phong',
                'MeshStandardMaterial': 'physical',
                'MeshPhysicalMaterial': 'physical',
                'MeshMatcapMaterial': 'matcap',
                'LineBasicMaterial': 'basic',
                'LineDashedMaterial': 'dashed',
                'PointsMaterial': 'points',
                'ShadowMaterial': 'shadow',
                'SpriteMaterial': 'sprite'
            },
            bH = ['precision', 'supportsVertexTextures', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'lightMap', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'fog', 'useFog', 'fogExp', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering'];

        function bI(bf, bg) {
            var bh;
            return bf ? bf['isTexture'] ? bh = bf['encoding'] : bf['isWebGLRenderTarget'] && (console['warn']('THREE.WebGLPrograms.getTextureEncodingFromMap:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'), bh = bf['texture']['encoding']) : bh = dQ, bh === dQ && bg && (bh = dS), bh;
        }
        this['getParameters'] = function(bg, bi, bF, bH, bJ, bK, bL) {
            var bM = bG[bg['type']],
                bN = bL['isSkinnedMesh'] ? function(bf) {
                    var bg = bf['skeleton']['bones'];
                    if (bh['floatVertexTextures']) return 0x400;
                    var bi = bh['maxVertexUniforms'],
                        bF = Math['floor']((bi - 0x14) / 0x4),
                        bG = Math['min'](bF, bg['length']);
                    return bG < bg['length'] ? (console['warn']('THREE.WebGLRenderer:\x20Skeleton\x20has\x20' + bg['length'] + '\x20bones.\x20This\x20GPU\x20supports\x20' + bG + '.'), 0x0) : bG;
                }(bL) : 0x0,
                bO = bh['precision'];
            null !== bg['precision'] && (bO = bh['getMaxPrecision'](bg['precision'])) !== bg['precision'] && console['warn']('THREE.WebGLProgram.getParameters:', bg['precision'], 'not\x20supported,\x20using', bO, 'instead.');
            var bP = bf['getRenderTarget']();
            return {
                'shaderID': bM,
                'precision': bO,
                'supportsVertexTextures': bh['vertexTextures'],
                'outputEncoding': bI(bP ? bP['texture'] : null, bf['gammaOutput']),
                'map': !!bg['map'],
                'mapEncoding': bI(bg['map'], bf['gammaInput']),
                'matcap': !!bg['matcap'],
                'matcapEncoding': bI(bg['matcap'], bf['gammaInput']),
                'envMap': !!bg['envMap'],
                'envMapMode': bg['envMap'] && bg['envMap']['mapping'],
                'envMapEncoding': bI(bg['envMap'], bf['gammaInput']),
                'envMapCubeUV': !!bg['envMap'] && (bg['envMap']['mapping'] === cK || bg['envMap']['mapping'] === cL),
                'lightMap': !!bg['lightMap'],
                'aoMap': !!bg['aoMap'],
                'emissiveMap': !!bg['emissiveMap'],
                'emissiveMapEncoding': bI(bg['emissiveMap'], bf['gammaInput']),
                'bumpMap': !!bg['bumpMap'],
                'normalMap': !!bg['normalMap'],
                'objectSpaceNormalMap': bg['normalMapType'] === e1,
                'displacementMap': !!bg['displacementMap'],
                'roughnessMap': !!bg['roughnessMap'],
                'metalnessMap': !!bg['metalnessMap'],
                'specularMap': !!bg['specularMap'],
                'alphaMap': !!bg['alphaMap'],
                'gradientMap': !!bg['gradientMap'],
                'combine': bg['combine'],
                'vertexTangents': bg['normalMap'] && bg['vertexTangents'],
                'vertexColors': bg['vertexColors'],
                'fog': !!bH,
                'useFog': bg['fog'],
                'fogExp': bH && bH['isFogExp2'],
                'flatShading': bg['flatShading'],
                'sizeAttenuation': bg['sizeAttenuation'],
                'logarithmicDepthBuffer': bh['logarithmicDepthBuffer'],
                'skinning': bg['skinning'] && bN > 0x0,
                'maxBones': bN,
                'useVertexTexture': bh['floatVertexTextures'],
                'morphTargets': bg['morphTargets'],
                'morphNormals': bg['morphNormals'],
                'maxMorphTargets': bf['maxMorphTargets'],
                'maxMorphNormals': bf['maxMorphNormals'],
                'numDirLights': bi['directional']['length'],
                'numPointLights': bi['point']['length'],
                'numSpotLights': bi['spot']['length'],
                'numRectAreaLights': bi['rectArea']['length'],
                'numHemiLights': bi['hemi']['length'],
                'numClippingPlanes': bJ,
                'numClipIntersection': bK,
                'dithering': bg['dithering'],
                'shadowMapEnabled': bf['shadowMap']['enabled'] && bL['receiveShadow'] && bF['length'] > 0x0,
                'shadowMapType': bf['shadowMap']['type'],
                'toneMapping': bf['toneMapping'],
                'physicallyCorrectLights': bf['physicallyCorrectLights'],
                'premultipliedAlpha': bg['premultipliedAlpha'],
                'alphaTest': bg['alphaTest'],
                'doubleSided': bg['side'] === bV,
                'flipSided': bg['side'] === bU,
                'depthPacking': void 0x0 !== bg['depthPacking'] && bg['depthPacking']
            };
        }, this['getProgramCode'] = function(bg, bh) {
            var bi = [];
            if (bh['shaderID'] ? bi['push'](bh['shaderID']) : (bi['push'](bg['fragmentShader']), bi['push'](bg['vertexShader'])), void 0x0 !== bg['defines'])
                for (var bF in bg['defines']) bi['push'](bF), bi['push'](bg['defines'][bF]);
            for (var bG = 0x0; bG < bH['length']; bG++) bi['push'](bh[bH[bG]]);
            return bi['push'](bg['onBeforeCompile']['toString']()), bi['push'](bf['gammaOutput']), bi['push'](bf['gammaFactor']), bi['join']();
        }, this['acquireProgram'] = function(bG, bH, bI, bJ) {
            for (var bK, bL = 0x0, bM = bF['length']; bL < bM; bL++) {
                var bN = bF[bL];
                if (bN['code'] === bJ) {
                    ++(bK = bN)['usedTimes'];
                    break;
                }
            }
            return void 0x0 === bK && (bK = new WN(bf, bg, bJ, bG, bH, bI, bh, bi), bF['push'](bK)), bK;
        }, this['releaseProgram'] = function(bf) {
            if (0x0 == --bf['usedTimes']) {
                var bg = bF['indexOf'](bf);
                bF[bg] = bF[bF['length'] - 0x1], bF['pop'](), bf['destroy']();
            }
        }, this['programs'] = bF;
    }

    function Yj() {
        var bf = new WeakMap();
        return {
            'get': function(bg) {
                var bh = bf['get'](bg);
                return void 0x0 === bh && (bh = {}, bf['set'](bg, bh)), bh;
            },
            'remove': function(bg) {
                bf['delete'](bg);
            },
            'update': function(bg, bh, bi) {
                bf['get'](bg)[bh] = bi;
            },
            'dispose': function() {
                bf = new WeakMap();
            }
        };
    }

    function Yr(bf, bg) {
        return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['program'] !== bg['program'] ? bf['program']['id'] - bg['program']['id'] : bf['material']['id'] !== bg['material']['id'] ? bf['material']['id'] - bg['material']['id'] : bf['z'] !== bg['z'] ? bf['z'] - bg['z'] : bf['id'] - bg['id'];
    }

    function Yu(bf, bg) {
        return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['z'] !== bg['z'] ? bg['z'] - bf['z'] : bf['id'] - bg['id'];
    }

    function Yx() {
        var bf = [],
            bg = 0x0,
            bh = [],
            bi = [],
            bF = {
                'id': -0x1
            };

        function bG(bh, bi, bG, bH, bI, bJ) {
            var bK = bf[bg];
            return void 0x0 === bK ? (bK = {
                'id': bh['id'],
                'object': bh,
                'geometry': bi,
                'material': bG,
                'program': bG['program'] || bF,
                'groupOrder': bH,
                'renderOrder': bh['renderOrder'],
                'z': bI,
                'group': bJ
            }, bf[bg] = bK) : (bK['id'] = bh['id'], bK['object'] = bh, bK['geometry'] = bi, bK['material'] = bG, bK['program'] = bG['program'] || bF, bK['groupOrder'] = bH, bK['renderOrder'] = bh['renderOrder'], bK['z'] = bI, bK['group'] = bJ), bg++, bK;
        }
        return {
            'opaque': bh,
            'transparent': bi,
            'init': function() {
                bg = 0x0, bh['length'] = 0x0, bi['length'] = 0x0;
            },
            'push': function(bf, bg, bF, bH, bI, bJ) {
                var bK = bG(bf, bg, bF, bH, bI, bJ);
                (!0x0 === bF['transparent'] ? bi : bh)['push'](bK);
            },
            'unshift': function(bf, bg, bF, bH, bI, bJ) {
                var bK = bG(bf, bg, bF, bH, bI, bJ);
                (!0x0 === bF['transparent'] ? bi : bh)['unshift'](bK);
            },
            'sort': function() {
                bh['length'] > 0x1 && bh['sort'](Yr), bi['length'] > 0x1 && bi['sort'](Yu);
            }
        };
    }

    function YZ() {
        var bf = {};

        function bg(bh) {
            var bi = bh['target'];
            bi['removeEventListener']('dispose', bg), delete bf[bi['id']];
        }
        return {
            'get': function(bh, bi) {
                var bF, bG = bf[bh['id']];
                return void 0x0 === bG ? (bF = new Yx(), bf[bh['id']] = {}, bf[bh['id']][bi['id']] = bF, bh['addEventListener']('dispose', bg)) : void 0x0 === (bF = bG[bi['id']]) && (bF = new Yx(), bG[bi['id']] = bF), bF;
            },
            'dispose': function() {
                bf = {};
            }
        };
    }

    function Z8() {
        var bf = {};
        return {
            'get': function(bg) {
                if (void 0x0 !== bf[bg['id']]) return bf[bg['id']];
                var bh;
                switch (bg['type']) {
                    case 'DirectionalLight':
                        bh = {
                            'direction': new eK(),
                            'color': new w7(),
                            'shadow': !0x1,
                            'shadowBias': 0x0,
                            'shadowRadius': 0x1,
                            'shadowMapSize': new eC()
                        };
                        break;
                    case 'SpotLight':
                        bh = {
                            'position': new eK(),
                            'direction': new eK(),
                            'color': new w7(),
                            'distance': 0x0,
                            'coneCos': 0x0,
                            'penumbraCos': 0x0,
                            'decay': 0x0,
                            'shadow': !0x1,
                            'shadowBias': 0x0,
                            'shadowRadius': 0x1,
                            'shadowMapSize': new eC()
                        };
                        break;
                    case 'PointLight':
                        bh = {
                            'position': new eK(),
                            'color': new w7(),
                            'distance': 0x0,
                            'decay': 0x0,
                            'shadow': !0x1,
                            'shadowBias': 0x0,
                            'shadowRadius': 0x1,
                            'shadowMapSize': new eC(),
                            'shadowCameraNear': 0x1,
                            'shadowCameraFar': 0x3e8
                        };
                        break;
                    case 'HemisphereLight':
                        bh = {
                            'direction': new eK(),
                            'skyColor': new w7(),
                            'groundColor': new w7()
                        };
                        break;
                    case 'RectAreaLight':
                        bh = {
                            'color': new w7(),
                            'position': new eK(),
                            'halfWidth': new eK(),
                            'halfHeight': new eK()
                        };
                }
                return bf[bg['id']] = bh, bh;
            }
        };
    }
    var Zc = 0x0;

    function Zd() {
        for (var bf = new Z8(), bg = {
                'id': Zc++,
                'hash': {
                    'stateID': -0x1,
                    'directionalLength': -0x1,
                    'pointLength': -0x1,
                    'spotLength': -0x1,
                    'rectAreaLength': -0x1,
                    'hemiLength': -0x1,
                    'shadowsLength': -0x1
                },
                'ambient': [0x0, 0x0, 0x0],
                'probe': [],
                'directional': [],
                'directionalShadowMap': [],
                'directionalShadowMatrix': [],
                'spot': [],
                'spotShadowMap': [],
                'spotShadowMatrix': [],
                'rectArea': [],
                'point': [],
                'pointShadowMap': [],
                'pointShadowMatrix': [],
                'hemi': []
            }, bh = 0x0; bh < 0x9; bh++) bg['probe']['push'](new eK());
        var bi = new eK(),
            bF = new mR(),
            bG = new mR();
        return {
            'setup': function(bh, bH, bI) {
                for (var bJ = 0x0, bK = 0x0, bL = 0x0, bM = 0x0; bM < 0x9; bM++) bg['probe'][bM]['set'](0x0, 0x0, 0x0);
                for (var bN = 0x0, bO = 0x0, bP = 0x0, bQ = 0x0, bR = 0x0, bS = bI['matrixWorldInverse'], bT = (bM = 0x0, bh['length']); bM < bT; bM++) {
                    var bU = bh[bM],
                        bV = bU['color'],
                        bW = bU['intensity'],
                        bX = bU['distance'],
                        bY = bU['shadow'] && bU['shadow']['map'] ? bU['shadow']['map']['texture'] : null;
                    if (bU['isAmbientLight']) bJ += bV['r'] * bW, bK += bV['g'] * bW, bL += bV['b'] * bW;
                    else if (bU['isLightProbe'])
                        for (var bZ = 0x0; bZ < 0x9; bZ++) bg['probe'][bZ]['addScaledVector'](bU['sh']['coefficients'][bZ], bW);
                    else if (bU['isDirectionalLight']) {
                        if ((c1 = bf['get'](bU))['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']), c1['direction']['setFromMatrixPosition'](bU['matrixWorld']), bi['setFromMatrixPosition'](bU['target']['matrixWorld']), c1['direction']['sub'](bi), c1['direction']['transformDirection'](bS), c1['shadow'] = bU['castShadow'], bU['castShadow']) {
                            var c0 = bU['shadow'];
                            c1['shadowBias'] = c0['bias'], c1['shadowRadius'] = c0['radius'], c1['shadowMapSize'] = c0['mapSize'];
                        }
                        bg['directionalShadowMap'][bN] = bY, bg['directionalShadowMatrix'][bN] = bU['shadow']['matrix'], bg['directional'][bN] = c1, bN++;
                    } else if (bU['isSpotLight'])(c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']), c1['position']['applyMatrix4'](bS), c1['color']['copy'](bV)['multiplyScalar'](bW), c1['distance'] = bX, c1['direction']['setFromMatrixPosition'](bU['matrixWorld']), bi['setFromMatrixPosition'](bU['target']['matrixWorld']), c1['direction']['sub'](bi), c1['direction']['transformDirection'](bS), c1['coneCos'] = Math['cos'](bU['angle']), c1['penumbraCos'] = Math['cos'](bU['angle'] * (0x1 - bU['penumbra'])), c1['decay'] = bU['decay'], c1['shadow'] = bU['castShadow'], bU['castShadow'] && (c0 = bU['shadow'], c1['shadowBias'] = c0['bias'], c1['shadowRadius'] = c0['radius'], c1['shadowMapSize'] = c0['mapSize']), bg['spotShadowMap'][bP] = bY, bg['spotShadowMatrix'][bP] = bU['shadow']['matrix'], bg['spot'][bP] = c1, bP++;
                    else if (bU['isRectAreaLight'])(c1 = bf['get'](bU))['color']['copy'](bV)['multiplyScalar'](bW), c1['position']['setFromMatrixPosition'](bU['matrixWorld']), c1['position']['applyMatrix4'](bS), bG['identity'](), bF['copy'](bU['matrixWorld']), bF['premultiply'](bS), bG['extractRotation'](bF), c1['halfWidth']['set'](0.5 * bU['width'], 0x0, 0x0), c1['halfHeight']['set'](0x0, 0.5 * bU['height'], 0x0), c1['halfWidth']['applyMatrix4'](bG), c1['halfHeight']['applyMatrix4'](bG), bg['rectArea'][bQ] = c1, bQ++;
                    else if (bU['isPointLight'])(c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']), c1['position']['applyMatrix4'](bS), c1['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']), c1['distance'] = bU['distance'], c1['decay'] = bU['decay'], c1['shadow'] = bU['castShadow'], bU['castShadow'] && (c0 = bU['shadow'], c1['shadowBias'] = c0['bias'], c1['shadowRadius'] = c0['radius'], c1['shadowMapSize'] = c0['mapSize'], c1['shadowCameraNear'] = c0['camera']['near'], c1['shadowCameraFar'] = c0['camera']['far']), bg['pointShadowMap'][bO] = bY, bg['pointShadowMatrix'][bO] = bU['shadow']['matrix'], bg['point'][bO] = c1, bO++;
                    else if (bU['isHemisphereLight']) {
                        var c1;
                        (c1 = bf['get'](bU))['direction']['setFromMatrixPosition'](bU['matrixWorld']), c1['direction']['transformDirection'](bS), c1['direction']['normalize'](), c1['skyColor']['copy'](bU['color'])['multiplyScalar'](bW), c1['groundColor']['copy'](bU['groundColor'])['multiplyScalar'](bW), bg['hemi'][bR] = c1, bR++;
                    }
                }
                bg['ambient'][0x0] = bJ, bg['ambient'][0x1] = bK, bg['ambient'][0x2] = bL, bg['directional']['length'] = bN, bg['spot']['length'] = bP, bg['rectArea']['length'] = bQ, bg['point']['length'] = bO, bg['hemi']['length'] = bR, bg['hash']['stateID'] = bg['id'], bg['hash']['directionalLength'] = bN, bg['hash']['pointLength'] = bO, bg['hash']['spotLength'] = bP, bg['hash']['rectAreaLength'] = bQ, bg['hash']['hemiLength'] = bR, bg['hash']['shadowsLength'] = bH['length'];
            },
            'state': bg
        };
    }

    function ZG() {
        var bf = new Zd(),
            bg = [],
            bh = [];
        return {
            'init': function() {
                bg['length'] = 0x0, bh['length'] = 0x0;
            },
            'state': {
                'lightsArray': bg,
                'shadowsArray': bh,
                'lights': bf
            },
            'setupLights': function(bi) {
                bf['setup'](bg, bh, bi);
            },
            'pushLight': function(bf) {
                bg['push'](bf);
            },
            'pushShadow': function(bf) {
                bh['push'](bf);
            }
        };
    }

    function ZN() {
        var bf = {};

        function bg(bh) {
            var bi = bh['target'];
            bi['removeEventListener']('dispose', bg), delete bf[bi['id']];
        }
        return {
            'get': function(bh, bi) {
                var bF;
                return void 0x0 === bf[bh['id']] ? (bF = new ZG(), bf[bh['id']] = {}, bf[bh['id']][bi['id']] = bF, bh['addEventListener']('dispose', bg)) : void 0x0 === bf[bh['id']][bi['id']] ? (bF = new ZG(), bf[bh['id']][bi['id']] = bF) : bF = bf[bh['id']][bi['id']], bF;
            },
            'dispose': function() {
                bf = {};
            }
        };
    }

    function ZV(bf) {
        Kf['call'](this), this['type'] = 'MeshDepthMaterial', this['depthPacking'] = dY, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['map'] = null, this['alphaMap'] = null, this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['fog'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
    }

    function ZX(bf) {
        Kf['call'](this), this['type'] = 'MeshDistanceMaterial', this['referencePosition'] = new eK(), this['nearDistance'] = 0x1, this['farDistance'] = 0x3e8, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['map'] = null, this['alphaMap'] = null, this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['fog'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
    }

    function ZZ(bf, bg, bh) {
        for (var bi = new mK(), bF = new mR(), bG = new eC(), bH = new eC(bh, bh), bI = new eK(), bJ = new eK(), bK = 0x1, bL = 0x2, bM = 0x1 + (bK | bL), bN = new Array(bM), bO = new Array(bM), bP = {}, bQ = {
                0: bU,
                1: bT,
                2: bV
            }, bS = [new eK(0x1, 0x0, 0x0), new eK(-0x1, 0x0, 0x0), new eK(0x0, 0x0, 0x1), new eK(0x0, 0x0, -0x1), new eK(0x0, 0x1, 0x0), new eK(0x0, -0x1, 0x0)], bW = [new eK(0x0, 0x1, 0x0), new eK(0x0, 0x1, 0x0), new eK(0x0, 0x1, 0x0), new eK(0x0, 0x1, 0x0), new eK(0x0, 0x0, 0x1), new eK(0x0, 0x0, -0x1)], bX = [new m7(), new m7(), new m7(), new m7(), new m7(), new m7()], bY = 0x0; bY !== bM; ++bY) {
            var bZ = 0x0 != (bY & bK),
                c0 = 0x0 != (bY & bL),
                c2 = new ZV({
                    'depthPacking': dZ,
                    'morphTargets': bZ,
                    'skinning': c0
                });
            bN[bY] = c2;
            var c3 = new ZX({
                'morphTargets': bZ,
                'skinning': c0
            });
            bO[bY] = c3;
        }
        var c4 = this;

        function c5(bg, bh, bi, bF, bG, bH) {
            var bI = bg['geometry'],
                bJ = null,
                bM = bN,
                bR = bg['customDepthMaterial'];
            if (bi && (bM = bO, bR = bg['customDistanceMaterial']), bR) bJ = bR;
            else {
                var bS = !0x1;
                bh['morphTargets'] && (bI && bI['isBufferGeometry'] ? bS = bI['morphAttributes'] && bI['morphAttributes']['position'] && bI['morphAttributes']['position']['length'] > 0x0 : bI && bI['isGeometry'] && (bS = bI['morphTargets'] && bI['morphTargets']['length'] > 0x0)), bg['isSkinnedMesh'] && !0x1 === bh['skinning'] && console['warn']('THREE.WebGLShadowMap:\x20THREE.SkinnedMesh\x20with\x20material.skinning\x20set\x20to\x20false:', bg);
                var bT = bg['isSkinnedMesh'] && bh['skinning'],
                    bU = 0x0;
                bS && (bU |= bK), bT && (bU |= bL), bJ = bM[bU];
            }
            if (bf['localClippingEnabled'] && !0x0 === bh['clipShadows'] && 0x0 !== bh['clippingPlanes']['length']) {
                var bV = bJ['uuid'],
                    bW = bh['uuid'],
                    bX = bP[bV];
                void 0x0 === bX && (bX = {}, bP[bV] = bX);
                var bY = bX[bW];
                void 0x0 === bY && (bY = bJ['clone'](), bX[bW] = bY), bJ = bY;
            }
            return bJ['visible'] = bh['visible'], bJ['wireframe'] = bh['wireframe'], bJ['side'] = null != bh['shadowSide'] ? bh['shadowSide'] : bQ[bh['side']], bJ['clipShadows'] = bh['clipShadows'], bJ['clippingPlanes'] = bh['clippingPlanes'], bJ['clipIntersection'] = bh['clipIntersection'], bJ['wireframeLinewidth'] = bh['wireframeLinewidth'], bJ['linewidth'] = bh['linewidth'], bi && bJ['isMeshDistanceMaterial'] && (bJ['referencePosition']['copy'](bF), bJ['nearDistance'] = bG, bJ['farDistance'] = bH), bJ;
        }

        function c6(bh, bF, bG, bH) {
            if (!0x1 !== bh['visible']) {
                if (bh['layers']['test'](bF['layers']) && (bh['isMesh'] || bh['isLine'] || bh['isPoints']) && bh['castShadow'] && (!bh['frustumCulled'] || bi['intersectsObject'](bh))) {
                    bh['modelViewMatrix']['multiplyMatrices'](bG['matrixWorldInverse'], bh['matrixWorld']);
                    var bI = bg['update'](bh),
                        bK = bh['material'];
                    if (Array['isArray'](bK))
                        for (var bL = bI['groups'], bM = 0x0, bN = bL['length']; bM < bN; bM++) {
                            var bO = bL[bM],
                                bP = bK[bO['materialIndex']];
                            if (bP && bP['visible']) {
                                var bQ = c5(bh, bP, bH, bJ, bG['near'], bG['far']);
                                bf['renderBufferDirect'](bG, null, bI, bQ, bh, bO);
                            }
                        } else if (bK['visible']) {
                            bQ = c5(bh, bK, bH, bJ, bG['near'], bG['far']);
                            bf['renderBufferDirect'](bG, null, bI, bQ, bh, null);
                        }
                }
                for (var bR = bh['children'], bS = 0x0, bT = bR['length']; bS < bT; bS++) c6(bR[bS], bF, bG, bH);
            }
        }
        this['enabled'] = !0x1, this['autoUpdate'] = !0x0, this['needsUpdate'] = !0x1, this['type'] = bR, this['render'] = function(bg, bh, bK) {
            if (!0x1 !== c4['enabled'] && (!0x1 !== c4['autoUpdate'] || !0x1 !== c4['needsUpdate']) && 0x0 !== bg['length']) {
                var bL, bM = bf['getRenderTarget'](),
                    bN = bf['getActiveCubeFace'](),
                    bO = bf['getActiveMipMapLevel'](),
                    bP = bf['state'];
                bP['setBlending'](c1), bP['buffers']['color']['setClear'](0x1, 0x1, 0x1, 0x1), bP['buffers']['depth']['setTest'](!0x0), bP['setScissorTest'](!0x1);
                for (var bQ = 0x0, bR = bg['length']; bQ < bR; bQ++) {
                    var bT = bg[bQ],
                        bU = bT['shadow'],
                        bV = bT && bT['isPointLight'];
                    if (void 0x0 !== bU) {
                        var bY = bU['camera'];
                        if (bG['copy'](bU['mapSize']), bG['min'](bH), bV) {
                            var bZ = bG['x'],
                                c0 = bG['y'];
                            bX[0x0]['set'](0x2 * bZ, c0, bZ, c0), bX[0x1]['set'](0x0, c0, bZ, c0), bX[0x2]['set'](0x3 * bZ, c0, bZ, c0), bX[0x3]['set'](bZ, c0, bZ, c0), bX[0x4]['set'](0x3 * bZ, 0x0, bZ, c0), bX[0x5]['set'](bZ, 0x0, bZ, c0), bG['x'] *= 0x4, bG['y'] *= 0x2;
                        }
                        if (null === bU['map']) {
                            var c2 = {
                                'minFilter': cP,
                                'magFilter': cP,
                                'format': d9
                            };
                            bU['map'] = new mc(bG['x'], bG['y'], c2), bU['map']['texture']['name'] = bT['name'] + '.shadowMap', bY['updateProjectionMatrix']();
                        }
                        bU['isSpotLightShadow'] && bU['update'](bT);
                        var c3 = bU['map'],
                            c5 = bU['matrix'];
                        bJ['setFromMatrixPosition'](bT['matrixWorld']), bY['position']['copy'](bJ), bV ? (bL = 0x6, c5['makeTranslation'](-bJ['x'], -bJ['y'], -bJ['z'])) : (bL = 0x1, bI['setFromMatrixPosition'](bT['target']['matrixWorld']), bY['lookAt'](bI), bY['updateMatrixWorld'](), c5['set'](0.5, 0x0, 0x0, 0.5, 0x0, 0.5, 0x0, 0.5, 0x0, 0x0, 0.5, 0.5, 0x0, 0x0, 0x0, 0x1), c5['multiply'](bY['projectionMatrix']), c5['multiply'](bY['matrixWorldInverse'])), bf['setRenderTarget'](c3), bf['clear']();
                        for (var c7 = 0x0; c7 < bL; c7++) {
                            if (bV) {
                                bI['copy'](bY['position']), bI['add'](bS[c7]), bY['up']['copy'](bW[c7]), bY['lookAt'](bI), bY['updateMatrixWorld']();
                                var c8 = bX[c7];
                                bP['viewport'](c8);
                            }
                            bF['multiplyMatrices'](bY['projectionMatrix'], bY['matrixWorldInverse']), bi['setFromMatrix'](bF), c6(bh, bK, bY, bV);
                        }
                    } else console['warn']('THREE.WebGLShadowMap:', bT, 'has\x20no\x20shadow.');
                }
                c4['needsUpdate'] = !0x1, bf['setRenderTarget'](bM, bN, bO);
            }
        };
    }

    function a1i(bf, bg, bh, bi) {
        var bF = new function() {
                var bg = !0x1,
                    bh = new m7(),
                    bi = null,
                    bF = new m7(0x0, 0x0, 0x0, 0x0);
                return {
                    'setMask': function(bh) {
                        bi === bh || bg || (bf['colorMask'](bh, bh, bh, bh), bi = bh);
                    },
                    'setLocked': function(bf) {
                        bg = bf;
                    },
                    'setClear': function(bg, bi, bG, bH, bI) {
                        !0x0 === bI && (bg *= bH, bi *= bH, bG *= bH), bh['set'](bg, bi, bG, bH), !0x1 === bF['equals'](bh) && (bf['clearColor'](bg, bi, bG, bH), bF['copy'](bh));
                    },
                    'reset': function() {
                        bg = !0x1, bi = null, bF['set'](-0x1, 0x0, 0x0, 0x0);
                    }
                };
            }(),
            bG = new function() {
                var bg = !0x1,
                    bh = null,
                    bi = null,
                    bF = null;
                return {
                    'setTest': function(bf) {
                        bf ? cy(0xb71) : cz(0xb71);
                    },
                    'setMask': function(bi) {
                        bh === bi || bg || (bf['depthMask'](bi), bh = bi);
                    },
                    'setFunc': function(bg) {
                        if (bi !== bg) {
                            if (bg) switch (bg) {
                                case cn:
                                    bf['depthFunc'](0x200);
                                    break;
                                case co:
                                    bf['depthFunc'](0x207);
                                    break;
                                case cp:
                                    bf['depthFunc'](0x201);
                                    break;
                                case cq:
                                    bf['depthFunc'](0x203);
                                    break;
                                case cr:
                                    bf['depthFunc'](0x202);
                                    break;
                                case cs:
                                    bf['depthFunc'](0x206);
                                    break;
                                case ct:
                                    bf['depthFunc'](0x204);
                                    break;
                                case cu:
                                    bf['depthFunc'](0x205);
                                    break;
                                default:
                                    bf['depthFunc'](0x203);
                            } else bf['depthFunc'](0x203);
                            bi = bg;
                        }
                    },
                    'setLocked': function(bf) {
                        bg = bf;
                    },
                    'setClear': function(bg) {
                        bF !== bg && (bf['clearDepth'](bg), bF = bg);
                    },
                    'reset': function() {
                        bg = !0x1, bh = null, bi = null, bF = null;
                    }
                };
            }(),
            bH = new function() {
                var bg = !0x1,
                    bh = null,
                    bi = null,
                    bF = null,
                    bG = null,
                    bH = null,
                    bI = null,
                    bJ = null,
                    bK = null;
                return {
                    'setTest': function(bf) {
                        bf ? cy(0xb90) : cz(0xb90);
                    },
                    'setMask': function(bi) {
                        bh === bi || bg || (bf['stencilMask'](bi), bh = bi);
                    },
                    'setFunc': function(bg, bh, bH) {
                        bi === bg && bF === bh && bG === bH || (bf['stencilFunc'](bg, bh, bH), bi = bg, bF = bh, bG = bH);
                    },
                    'setOp': function(bg, bh, bi) {
                        bH === bg && bI === bh && bJ === bi || (bf['stencilOp'](bg, bh, bi), bH = bg, bI = bh, bJ = bi);
                    },
                    'setLocked': function(bf) {
                        bg = bf;
                    },
                    'setClear': function(bg) {
                        bK !== bg && (bf['clearStencil'](bg), bK = bg);
                    },
                    'reset': function() {
                        bg = !0x1, bh = null, bi = null, bF = null, bG = null, bH = null, bI = null, bJ = null, bK = null;
                    }
                };
            }(),
            bI = bf['getParameter'](0x8869),
            bJ = new Uint8Array(bI),
            bN = new Uint8Array(bI),
            bO = new Uint8Array(bI),
            bP = {},
            bQ = null,
            bR = null,
            bS = null,
            bT = null,
            bW = null,
            bX = null,
            bY = null,
            bZ = null,
            c0 = null,
            c8 = null,
            c9 = !0x1,
            ca = null,
            cb = null,
            cc = null,
            cd = null,
            ce = null,
            cf = bf['getParameter'](0x8b4d),
            cg = !0x1,
            ch = 0x0,
            ci = bf['getParameter'](0x1f02); - 0x1 !== ci['indexOf']('WebGL') ? (ch = parseFloat(/^WebGL\ ([0-9])/ ['exec'](ci)[0x1]), cg = ch >= 0x1) : -0x1 !== ci['indexOf']('OpenGL\x20ES') && (ch = parseFloat(/^OpenGL\ ES\ ([0-9])/ ['exec'](ci)[0x1]), cg = ch >= 0x2);
        var cj = null,
            ck = {},
            cl = new m7(),
            cm = new m7();

        function cv(bg, bh, bi) {
            var bF = new Uint8Array(0x4),
                bG = bf['createTexture']();
            bf['bindTexture'](bg, bG), bf['texParameteri'](bg, 0x2801, 0x2600), bf['texParameteri'](bg, 0x2800, 0x2600);
            for (var bH = 0x0; bH < bi; bH++) bf['texImage2D'](bh + bH, 0x0, 0x1908, 0x1, 0x1, 0x0, 0x1908, 0x1401, bF);
            return bG;
        }
        var cw = {};

        function cx(bh, bF) {
            (bJ[bh] = 0x1, 0x0 === bN[bh] && (bf['enableVertexAttribArray'](bh), bN[bh] = 0x1), bO[bh] !== bF) && ((bi['isWebGL2'] ? bf : bg['get']('ANGLE_instanced_arrays'))[bi['isWebGL2'] ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](bh, bF), bO[bh] = bF);
        }

        function cy(bg) {
            !0x0 !== bP[bg] && (bf['enable'](bg), bP[bg] = !0x0);
        }

        function cz(bg) {
            !0x1 !== bP[bg] && (bf['disable'](bg), bP[bg] = !0x1);
        }

        function cA(bg, bi, bF, bG, bH, bI, bJ, bK) {
            if (bg !== c1) {
                if (bS || (cy(0xbe2), bS = !0x0), bg === c6) bH = bH || bi, bI = bI || bF, bJ = bJ || bG, bi === bW && bH === bZ || (bf['blendEquationSeparate'](bh['convert'](bi), bh['convert'](bH)), bW = bi, bZ = bH), bF === bX && bG === bY && bI === c0 && bJ === c8 || (bf['blendFuncSeparate'](bh['convert'](bF), bh['convert'](bG), bh['convert'](bI), bh['convert'](bJ)), bX = bF, bY = bG, c0 = bI, c8 = bJ), bT = bg, c9 = null;
                else if (bg !== bT || bK !== c9) {
                    if (bW === c7 && bZ === c7 || (bf['blendEquation'](0x8006), bW = c7, bZ = c7), bK) switch (bg) {
                        case c2:
                            bf['blendFuncSeparate'](0x1, 0x303, 0x1, 0x303);
                            break;
                        case c3:
                            bf['blendFunc'](0x1, 0x1);
                            break;
                        case c4:
                            bf['blendFuncSeparate'](0x0, 0x0, 0x301, 0x303);
                            break;
                        case c5:
                            bf['blendFuncSeparate'](0x0, 0x300, 0x0, 0x302);
                            break;
                        default:
                            console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
                    } else switch (bg) {
                        case c2:
                            bf['blendFuncSeparate'](0x302, 0x303, 0x1, 0x303);
                            break;
                        case c3:
                            bf['blendFunc'](0x302, 0x1);
                            break;
                        case c4:
                            bf['blendFunc'](0x0, 0x301);
                            break;
                        case c5:
                            bf['blendFunc'](0x0, 0x300);
                            break;
                        default:
                            console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
                    }
                    bX = null, bY = null, c0 = null, c8 = null, bT = bg, c9 = bK;
                }
            } else bS && (cz(0xbe2), bS = !0x1);
        }

        function cB(bg) {
            ca !== bg && (bg ? bf['frontFace'](0x900) : bf['frontFace'](0x901), ca = bg);
        }

        function cC(bg) {
            bg !== bK ? (cy(0xb44), bg !== cb && (bg === bL ? bf['cullFace'](0x405) : bg === bM ? bf['cullFace'](0x404) : bf['cullFace'](0x408))) : cz(0xb44), cb = bg;
        }

        function cD(bg, bh, bi) {
            bg ? (cy(0x8037), cd === bh && ce === bi || (bf['polygonOffset'](bh, bi), cd = bh, ce = bi)) : cz(0x8037);
        }

        function cE(bg) {
            void 0x0 === bg && (bg = 0x84c0 + cf - 0x1), cj !== bg && (bf['activeTexture'](bg), cj = bg);
        }
        return cw[0xde1] = cv(0xde1, 0xde1, 0x1), cw[0x8513] = cv(0x8513, 0x8515, 0x6), bF['setClear'](0x0, 0x0, 0x0, 0x1), bG['setClear'](0x1), bH['setClear'](0x0), cy(0xb71), bG['setFunc'](cq), cB(!0x1), cC(bL), cy(0xb44), cA(c1), {
            'buffers': {
                'color': bF,
                'depth': bG,
                'stencil': bH
            },
            'initAttributes': function() {
                for (var bf = 0x0, bg = bJ['length']; bf < bg; bf++) bJ[bf] = 0x0;
            },
            'enableAttribute': function(bf) {
                cx(bf, 0x0);
            },
            'enableAttributeAndDivisor': cx,
            'disableUnusedAttributes': function() {
                for (var bg = 0x0, bh = bN['length']; bg !== bh; ++bg) bN[bg] !== bJ[bg] && (bf['disableVertexAttribArray'](bg), bN[bg] = 0x0);
            },
            'enable': cy,
            'disable': cz,
            'getCompressedTextureFormats': function() {
                if (null === bQ && (bQ = [], bg['get']('WEBGL_compressed_texture_pvrtc') || bg['get']('WEBGL_compressed_texture_s3tc') || bg['get']('WEBGL_compressed_texture_etc1') || bg['get']('WEBGL_compressed_texture_astc')))
                    for (var bh = bf['getParameter'](0x86a3), bi = 0x0; bi < bh['length']; bi++) bQ['push'](bh[bi]);
                return bQ;
            },
            'useProgram': function(bg) {
                return bR !== bg && (bf['useProgram'](bg), bR = bg, !0x0);
            },
            'setBlending': cA,
            'setMaterial': function(bf, bg) {
                bf['side'] === bV ? cz(0xb44) : cy(0xb44);
                var bh = bf['side'] === bU;
                bg && (bh = !bh), cB(bh), bf['blending'] === c2 && !0x1 === bf['transparent'] ? cA(c1) : cA(bf['blending'], bf['blendEquation'], bf['blendSrc'], bf['blendDst'], bf['blendEquationAlpha'], bf['blendSrcAlpha'], bf['blendDstAlpha'], bf['premultipliedAlpha']), bG['setFunc'](bf['depthFunc']), bG['setTest'](bf['depthTest']), bG['setMask'](bf['depthWrite']), bF['setMask'](bf['colorWrite']), cD(bf['polygonOffset'], bf['polygonOffsetFactor'], bf['polygonOffsetUnits']);
            },
            'setFlipSided': cB,
            'setCullFace': cC,
            'setLineWidth': function(bg) {
                bg !== cc && (cg && bf['lineWidth'](bg), cc = bg);
            },
            'setPolygonOffset': cD,
            'setScissorTest': function(bf) {
                bf ? cy(0xc11) : cz(0xc11);
            },
            'activeTexture': cE,
            'bindTexture': function(bg, bh) {
                null === cj && cE();
                var bi = ck[cj];
                void 0x0 === bi && (bi = {
                    'type': void 0x0,
                    'texture': void 0x0
                }, ck[cj] = bi), bi['type'] === bg && bi['texture'] === bh || (bf['bindTexture'](bg, bh || cw[bg]), bi['type'] = bg, bi['texture'] = bh);
            },
            'compressedTexImage2D': function() {
                try {
                    bf['compressedTexImage2D']['apply'](bf, arguments);
                } catch (a3k) {
                    console['error']('THREE.WebGLState:', a3k);
                }
            },
            'texImage2D': function() {
                try {
                    bf['texImage2D']['apply'](bf, arguments);
                } catch (a3l) {
                    console['error']('THREE.WebGLState:', a3l);
                }
            },
            'texImage3D': function() {
                try {
                    bf['texImage3D']['apply'](bf, arguments);
                } catch (a3m) {
                    console['error']('THREE.WebGLState:', a3m);
                }
            },
            'scissor': function(bg) {
                !0x1 === cl['equals'](bg) && (bf['scissor'](bg['x'], bg['y'], bg['z'], bg['w']), cl['copy'](bg));
            },
            'viewport': function(bg) {
                !0x1 === cm['equals'](bg) && (bf['viewport'](bg['x'], bg['y'], bg['z'], bg['w']), cm['copy'](bg));
            },
            'reset': function() {
                for (var bg = 0x0; bg < bN['length']; bg++) 0x1 === bN[bg] && (bf['disableVertexAttribArray'](bg), bN[bg] = 0x0);
                bP = {}, bQ = null, cj = null, ck = {}, bR = null, bT = null, ca = null, cb = null, bF['reset'](), bG['reset'](), bH['reset']();
            }
        };
    }

    function a3q(bf, bg, bh, bi, bF, bG, bH) {
        var bI, bJ = {},
            bK = 'undefined' != typeof OffscreenCanvas;

        function bL(bf, bg) {
            return bK ? new OffscreenCanvas(bf, bg) : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas');
        }

        function bM(bf, bg, bh, bi) {
            var bF = 0x1;
            if ((bf['width'] > bi || bf['height'] > bi) && (bF = bi / Math['max'](bf['width'], bf['height'])), bF < 0x1 || !0x0 === bg) {
                if ('undefined' != typeof HTMLImageElement && bf instanceof HTMLImageElement || 'undefined' != typeof HTMLCanvasElement && bf instanceof HTMLCanvasElement || 'undefined' != typeof ImageBitmap && bf instanceof ImageBitmap) {
                    var bG = bg ? e2['floorPowerOfTwo'] : Math['floor'],
                        bH = bG(bF * bf['width']),
                        bJ = bG(bF * bf['height']);
                    void 0x0 === bI && (bI = bL(bH, bJ));
                    var bK = bh ? bL(bH, bJ) : bI;
                    return bK['width'] = bH, bK['height'] = bJ, bK['getContext']('2d')['drawImage'](bf, 0x0, 0x0, bH, bJ), console['warn']('THREE.WebGLRenderer:\x20Texture\x20has\x20been\x20resized\x20from\x20(' + bf['width'] + 'x' + bf['height'] + ')\x20to\x20(' + bH + 'x' + bJ + ').'), bK;
                }
                return 'data' in bf && console['warn']('THREE.WebGLRenderer:\x20Image\x20in\x20DataTexture\x20is\x20too\x20big\x20(' + bf['width'] + 'x' + bf['height'] + ').'), bf;
            }
            return bf;
        }

        function bN(bf) {
            return e2['isPowerOfTwo'](bf['width']) && e2['isPowerOfTwo'](bf['height']);
        }

        function bO(bf, bg) {
            return bf['generateMipmaps'] && bg && bf['minFilter'] !== cP && bf['minFilter'] !== cS;
        }

        function bP(bg, bh, bF, bG) {
            bf['generateMipmap'](bg), bi['get'](bh)['__maxMipLevel'] = Math['log'](Math['max'](bF, bG)) * Math['LOG2E'];
        }

        function bQ(bf, bh) {
            if (!bF['isWebGL2']) return bf;
            var bi = bf;
            return 0x1903 === bf && (0x1406 === bh && (bi = 0x822e), 0x140b === bh && (bi = 0x822d), 0x1401 === bh && (bi = 0x8229)), 0x1907 === bf && (0x1406 === bh && (bi = 0x8815), 0x140b === bh && (bi = 0x881b), 0x1401 === bh && (bi = 0x8051)), 0x1908 === bf && (0x1406 === bh && (bi = 0x8814), 0x140b === bh && (bi = 0x881a), 0x1401 === bh && (bi = 0x8058)), 0x822d === bi || 0x822e === bi || 0x881a === bi || 0x8814 === bi ? bg['get']('EXT_color_buffer_float') : 0x881b !== bi && 0x8815 !== bi || console['warn']('THREE.WebGLRenderer:\x20Floating\x20point\x20textures\x20with\x20RGB\x20format\x20not\x20supported.\x20Please\x20use\x20RGBA\x20instead.'), bi;
        }

        function bR(bf) {
            return bf === cP || bf === cQ || bf === cR ? 0x2600 : 0x2601;
        }

        function bS(bg) {
            var bh = bg['target'];
            bh['removeEventListener']('dispose', bS),
                function(bg) {
                    var bh = bi['get'](bg);
                    if (void 0x0 === bh['__webglInit']) return;
                    bf['deleteTexture'](bh['__webglTexture']), bi['remove'](bg);
                }(bh), bh['isVideoTexture'] && delete bJ[bh['id']], bH['memory']['textures']--;
        }

        function bT(bg) {
            var bh = bg['target'];
            bh['removeEventListener']('dispose', bT),
                function(bg) {
                    var bh = bi['get'](bg),
                        bF = bi['get'](bg['texture']);
                    if (!bg) return;
                    void 0x0 !== bF['__webglTexture'] && bf['deleteTexture'](bF['__webglTexture']);
                    bg['depthTexture'] && bg['depthTexture']['dispose']();
                    if (bg['isWebGLRenderTargetCube'])
                        for (var bG = 0x0; bG < 0x6; bG++) bf['deleteFramebuffer'](bh['__webglFramebuffer'][bG]), bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer'][bG]);
                    else bf['deleteFramebuffer'](bh['__webglFramebuffer']), bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer']);
                    bi['remove'](bg['texture']), bi['remove'](bg);
                }(bh), bH['memory']['textures']--;
        }
        var bU = 0x0;

        function bV(bf, bg) {
            var bF = bi['get'](bf);
            if (bf['isVideoTexture'] && function(bf) {
                    var bg = bf['id'],
                        bh = bH['render']['frame'];
                    bJ[bg] !== bh && (bJ[bg] = bh, bf['update']());
                }(bf), bf['version'] > 0x0 && bF['__version'] !== bf['version']) {
                var bG = bf['image'];
                if (void 0x0 === bG) console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20undefined');
                else {
                    if (!0x1 !== bG['complete']) return void c0(bF, bf, bg);
                    console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20incomplete');
                }
            }
            bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0xde1, bF['__webglTexture']);
        }

        function bW(bg, bH) {
            var bI = bi['get'](bg);
            if (0x6 === bg['image']['length'])
                if (bg['version'] > 0x0 && bI['__version'] !== bg['version']) {
                    bZ(bI, bg), bh['activeTexture'](0x84c0 + bH), bh['bindTexture'](0x8513, bI['__webglTexture']), bf['pixelStorei'](0x9240, bg['flipY']);
                    for (var bJ = bg && bg['isCompressedTexture'], bK = bg['image'][0x0] && bg['image'][0x0]['isDataTexture'], bL = [], bR = 0x0; bR < 0x6; bR++) bL[bR] = bJ || bK ? bK ? bg['image'][bR]['image'] : bg['image'][bR] : bM(bg['image'][bR], !0x1, !0x0, bF['maxCubemapSize']);
                    var bS = bL[0x0],
                        bT = bN(bS) || bF['isWebGL2'],
                        bU = bG['convert'](bg['format']),
                        bV = bG['convert'](bg['type']),
                        bW = bQ(bU, bV);
                    bY(0x8513, bg, bT);
                    for (bR = 0x0; bR < 0x6; bR++)
                        if (bJ)
                            for (var bX, c0 = bL[bR]['mipmaps'], c1 = 0x0, c2 = c0['length']; c1 < c2; c1++) bX = c0[c1], bg['format'] !== d9 && bg['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bU) > -0x1 ? bh['compressedTexImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bX['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.setTextureCube()') : bh['texImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bU, bV, bX['data']);
                        else bK ? bh['texImage2D'](0x8515 + bR, 0x0, bW, bL[bR]['width'], bL[bR]['height'], 0x0, bU, bV, bL[bR]['data']) : bh['texImage2D'](0x8515 + bR, 0x0, bW, bU, bV, bL[bR]);
                    bI['__maxMipLevel'] = bJ ? c0['length'] - 0x1 : 0x0, bO(bg, bT) && bP(0x8513, bg, bS['width'], bS['height']), bI['__version'] = bg['version'], bg['onUpdate'] && bg['onUpdate'](bg);
                } else bh['activeTexture'](0x84c0 + bH), bh['bindTexture'](0x8513, bI['__webglTexture']);
        }

        function bX(bf, bg) {
            bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0x8513, bi['get'](bf)['__webglTexture']);
        }

        function bY(bh, bH, bI) {
            var bJ;
            if (bI ? (bf['texParameteri'](bh, 0x2802, bG['convert'](bH['wrapS'])), bf['texParameteri'](bh, 0x2803, bG['convert'](bH['wrapT'])), 0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, bG['convert'](bH['wrapR'])), bf['texParameteri'](bh, 0x2800, bG['convert'](bH['magFilter'])), bf['texParameteri'](bh, 0x2801, bG['convert'](bH['minFilter']))) : (bf['texParameteri'](bh, 0x2802, 0x812f), bf['texParameteri'](bh, 0x2803, 0x812f), 0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, 0x812f), bH['wrapS'] === cN && bH['wrapT'] === cN || console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.wrapS\x20and\x20Texture.wrapT\x20should\x20be\x20set\x20to\x20THREE.ClampToEdgeWrapping.'), bf['texParameteri'](bh, 0x2800, bR(bH['magFilter'])), bf['texParameteri'](bh, 0x2801, bR(bH['minFilter'])), bH['minFilter'] !== cP && bH['minFilter'] !== cS && console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.minFilter\x20should\x20be\x20set\x20to\x20THREE.NearestFilter\x20or\x20THREE.LinearFilter.')), bJ = bg['get']('EXT_texture_filter_anisotropic')) {
                if (bH['type'] === d1 && null === bg['get']('OES_texture_float_linear')) return;
                if (bH['type'] === d2 && null === (bF['isWebGL2'] || bg['get']('OES_texture_half_float_linear'))) return;
                (bH['anisotropy'] > 0x1 || bi['get'](bH)['__currentAnisotropy']) && (bf['texParameterf'](bh, bJ['TEXTURE_MAX_ANISOTROPY_EXT'], Math['min'](bH['anisotropy'], bF['getMaxAnisotropy']())), bi['get'](bH)['__currentAnisotropy'] = bH['anisotropy']);
            }
        }

        function bZ(bg, bh) {
            void 0x0 === bg['__webglInit'] && (bg['__webglInit'] = !0x0, bh['addEventListener']('dispose', bS), bg['__webglTexture'] = bf['createTexture'](), bH['memory']['textures']++);
        }

        function c0(bg, bi, bH) {
            var bI = 0xde1;
            bi['isDataTexture2DArray'] && (bI = 0x8c1a), bi['isDataTexture3D'] && (bI = 0x806f), bZ(bg, bi), bh['activeTexture'](0x84c0 + bH), bh['bindTexture'](bI, bg['__webglTexture']), bf['pixelStorei'](0x9240, bi['flipY']), bf['pixelStorei'](0x9241, bi['premultiplyAlpha']), bf['pixelStorei'](0xcf5, bi['unpackAlignment']);
            var bJ = function(bf) {
                    return !bF['isWebGL2'] && (bf['wrapS'] !== cN || bf['wrapT'] !== cN || bf['minFilter'] !== cP && bf['minFilter'] !== cS);
                }(bi) && !0x1 === bN(bi['image']),
                bK = bM(bi['image'], bJ, !0x1, bF['maxTextureSize']),
                bL = bN(bK) || bF['isWebGL2'],
                bR = bG['convert'](bi['format']),
                bS = bG['convert'](bi['type']),
                bT = bQ(bR, bS);
            bY(bI, bi, bL);
            var bU, bV = bi['mipmaps'];
            if (bi['isDepthTexture']) {
                if (bT = 0x1902, bi['type'] === d1) {
                    if (!bF['isWebGL2']) throw new Error('Float\x20Depth\x20Texture\x20only\x20supported\x20in\x20WebGL2.0');
                    bT = 0x8cac;
                } else bF['isWebGL2'] && (bT = 0x81a5);
                bi['format'] === dd && 0x1902 === bT && bi['type'] !== cY && bi['type'] !== d0 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedShortType\x20or\x20UnsignedIntType\x20for\x20DepthFormat\x20DepthTexture.'), bi['type'] = cY, bS = bG['convert'](bi['type'])), bi['format'] === de && (bT = 0x84f9, bi['type'] !== d6 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedInt248Type\x20for\x20DepthStencilFormat\x20DepthTexture.'), bi['type'] = d6, bS = bG['convert'](bi['type']))), bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, null);
            } else if (bi['isDataTexture'])
                if (bV['length'] > 0x0 && bL) {
                    for (var bW = 0x0, bX = bV['length']; bW < bX; bW++) bU = bV[bW], bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
                    bi['generateMipmaps'] = !0x1, bg['__maxMipLevel'] = bV['length'] - 0x1;
                } else bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, bK['data']), bg['__maxMipLevel'] = 0x0;
            else if (bi['isCompressedTexture']) {
                for (bW = 0x0, bX = bV['length']; bW < bX; bW++) bU = bV[bW], bi['format'] !== d9 && bi['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bR) > -0x1 ? bh['compressedTexImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bU['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.uploadTexture()') : bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
                bg['__maxMipLevel'] = bV['length'] - 0x1;
            } else if (bi['isDataTexture2DArray']) bh['texImage3D'](0x8c1a, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']), bg['__maxMipLevel'] = 0x0;
            else if (bi['isDataTexture3D']) bh['texImage3D'](0x806f, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']), bg['__maxMipLevel'] = 0x0;
            else if (bV['length'] > 0x0 && bL) {
                for (bW = 0x0, bX = bV['length']; bW < bX; bW++) bU = bV[bW], bh['texImage2D'](0xde1, bW, bT, bR, bS, bU);
                bi['generateMipmaps'] = !0x1, bg['__maxMipLevel'] = bV['length'] - 0x1;
            } else bh['texImage2D'](0xde1, 0x0, bT, bR, bS, bK), bg['__maxMipLevel'] = 0x0;
            bO(bi, bL) && bP(0xde1, bi, bK['width'], bK['height']), bg['__version'] = bi['version'], bi['onUpdate'] && bi['onUpdate'](bi);
        }

        function c1(bg, bF, bH, bI) {
            var bJ = bG['convert'](bF['texture']['format']),
                bK = bG['convert'](bF['texture']['type']),
                bL = bQ(bJ, bK);
            bh['texImage2D'](bI, 0x0, bL, bF['width'], bF['height'], 0x0, bJ, bK, null), bf['bindFramebuffer'](0x8d40, bg), bf['framebufferTexture2D'](0x8d40, bH, bI, bi['get'](bF['texture'])['__webglTexture'], 0x0), bf['bindFramebuffer'](0x8d40, null);
        }

        function c2(bg, bh, bi) {
            if (bf['bindRenderbuffer'](0x8d41, bg), bh['depthBuffer'] && !bh['stencilBuffer']) {
                if (bi) {
                    var bF = c4(bh);
                    bf['renderbufferStorageMultisample'](0x8d41, bF, 0x81a5, bh['width'], bh['height']);
                } else bf['renderbufferStorage'](0x8d41, 0x81a5, bh['width'], bh['height']);
                bf['framebufferRenderbuffer'](0x8d40, 0x8d00, 0x8d41, bg);
            } else if (bh['depthBuffer'] && bh['stencilBuffer']) {
                if (bi) {
                    bF = c4(bh);
                    bf['renderbufferStorageMultisample'](0x8d41, bF, 0x84f9, bh['width'], bh['height']);
                } else bf['renderbufferStorage'](0x8d41, 0x84f9, bh['width'], bh['height']);
                bf['framebufferRenderbuffer'](0x8d40, 0x821a, 0x8d41, bg);
            } else {
                var bH = bQ(bG['convert'](bh['texture']['format']), bG['convert'](bh['texture']['type']));
                if (bi) {
                    bF = c4(bh);
                    bf['renderbufferStorageMultisample'](0x8d41, bF, bH, bh['width'], bh['height']);
                } else bf['renderbufferStorage'](0x8d41, bH, bh['width'], bh['height']);
            }
            bf['bindRenderbuffer'](0x8d41, null);
        }

        function c3(bg) {
            var bh = bi['get'](bg),
                bF = !0x0 === bg['isWebGLRenderTargetCube'];
            if (bg['depthTexture']) {
                if (bF) throw new Error('target.depthTexture\x20not\x20supported\x20in\x20Cube\x20render\x20targets');
                ! function(bg, bh) {
                    if (bh && bh['isWebGLRenderTargetCube']) throw new Error('Depth\x20Texture\x20with\x20cube\x20render\x20targets\x20is\x20not\x20supported');
                    if (bf['bindFramebuffer'](0x8d40, bg), !bh['depthTexture'] || !bh['depthTexture']['isDepthTexture']) throw new Error('renderTarget.depthTexture\x20must\x20be\x20an\x20instance\x20of\x20THREE.DepthTexture');
                    bi['get'](bh['depthTexture'])['__webglTexture'] && bh['depthTexture']['image']['width'] === bh['width'] && bh['depthTexture']['image']['height'] === bh['height'] || (bh['depthTexture']['image']['width'] = bh['width'], bh['depthTexture']['image']['height'] = bh['height'], bh['depthTexture']['needsUpdate'] = !0x0), bV(bh['depthTexture'], 0x0);
                    var bF = bi['get'](bh['depthTexture'])['__webglTexture'];
                    if (bh['depthTexture']['format'] === dd) bf['framebufferTexture2D'](0x8d40, 0x8d00, 0xde1, bF, 0x0);
                    else {
                        if (bh['depthTexture']['format'] !== de) throw new Error('Unknown\x20depthTexture\x20format');
                        bf['framebufferTexture2D'](0x8d40, 0x821a, 0xde1, bF, 0x0);
                    }
                }(bh['__webglFramebuffer'], bg);
            } else if (bF) {
                bh['__webglDepthbuffer'] = [];
                for (var bG = 0x0; bG < 0x6; bG++) bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer'][bG]), bh['__webglDepthbuffer'][bG] = bf['createRenderbuffer'](), c2(bh['__webglDepthbuffer'][bG], bg);
            } else bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer']), bh['__webglDepthbuffer'] = bf['createRenderbuffer'](), c2(bh['__webglDepthbuffer'], bg);
            bf['bindFramebuffer'](0x8d40, null);
        }

        function c4(bf) {
            return bF['isWebGL2'] && bf['isWebGLMultisampleRenderTarget'] ? Math['min'](bF['maxSamples'], bf['samples']) : 0x0;
        }
        var c5 = !0x1,
            c6 = !0x1;
        this['allocateTextureUnit'] = function() {
            var bf = bU;
            return bf >= bF['maxTextures'] && console['warn']('THREE.WebGLTextures:\x20Trying\x20to\x20use\x20' + bf + '\x20texture\x20units\x20while\x20this\x20GPU\x20supports\x20only\x20' + bF['maxTextures']), bU += 0x1, bf;
        }, this['resetTextureUnits'] = function() {
            bU = 0x0;
        }, this['setTexture2D'] = bV, this['setTexture2DArray'] = function(bf, bg) {
            var bF = bi['get'](bf);
            bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0x8c1a, bF['__webglTexture']));
        }, this['setTexture3D'] = function(bf, bg) {
            var bF = bi['get'](bf);
            bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0x806f, bF['__webglTexture']));
        }, this['setTextureCube'] = bW, this['setTextureCubeDynamic'] = bX, this['setupRenderTarget'] = function(bg) {
            var bI = bi['get'](bg),
                bJ = bi['get'](bg['texture']);
            bg['addEventListener']('dispose', bT), bJ['__webglTexture'] = bf['createTexture'](), bH['memory']['textures']++;
            var bK = !0x0 === bg['isWebGLRenderTargetCube'],
                bL = !0x0 === bg['isWebGLMultisampleRenderTarget'],
                bM = bN(bg) || bF['isWebGL2'];
            if (bK) {
                bI['__webglFramebuffer'] = [];
                for (var bR = 0x0; bR < 0x6; bR++) bI['__webglFramebuffer'][bR] = bf['createFramebuffer']();
            } else if (bI['__webglFramebuffer'] = bf['createFramebuffer'](), bL)
                if (bF['isWebGL2']) {
                    bI['__webglMultisampledFramebuffer'] = bf['createFramebuffer'](), bI['__webglColorRenderbuffer'] = bf['createRenderbuffer'](), bf['bindRenderbuffer'](0x8d41, bI['__webglColorRenderbuffer']);
                    var bS = bQ(bG['convert'](bg['texture']['format']), bG['convert'](bg['texture']['type'])),
                        bU = c4(bg);
                    bf['renderbufferStorageMultisample'](0x8d41, bU, bS, bg['width'], bg['height']), bf['bindFramebuffer'](0x8d40, bI['__webglMultisampledFramebuffer']), bf['framebufferRenderbuffer'](0x8d40, 0x8ce0, 0x8d41, bI['__webglColorRenderbuffer']), bf['bindRenderbuffer'](0x8d41, null), bg['depthBuffer'] && (bI['__webglDepthRenderbuffer'] = bf['createRenderbuffer'](), c2(bI['__webglDepthRenderbuffer'], bg, !0x0)), bf['bindFramebuffer'](0x8d40, null);
                } else console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
            if (bK) {
                for (bh['bindTexture'](0x8513, bJ['__webglTexture']), bY(0x8513, bg['texture'], bM), bR = 0x0; bR < 0x6; bR++) c1(bI['__webglFramebuffer'][bR], bg, 0x8ce0, 0x8515 + bR);
                bO(bg['texture'], bM) && bP(0x8513, bg['texture'], bg['width'], bg['height']), bh['bindTexture'](0x8513, null);
            } else bh['bindTexture'](0xde1, bJ['__webglTexture']), bY(0xde1, bg['texture'], bM), c1(bI['__webglFramebuffer'], bg, 0x8ce0, 0xde1), bO(bg['texture'], bM) && bP(0xde1, bg['texture'], bg['width'], bg['height']), bh['bindTexture'](0xde1, null);
            bg['depthBuffer'] && c3(bg);
        }, this['updateRenderTargetMipmap'] = function(bf) {
            var bg = bf['texture'];
            if (bO(bg, bN(bf) || bF['isWebGL2'])) {
                var bG = bf['isWebGLRenderTargetCube'] ? 0x8513 : 0xde1,
                    bH = bi['get'](bg)['__webglTexture'];
                bh['bindTexture'](bG, bH), bP(bG, bg, bf['width'], bf['height']), bh['bindTexture'](bG, null);
            }
        }, this['updateMultisampleRenderTarget'] = function(bg) {
            if (bg['isWebGLMultisampleRenderTarget'])
                if (bF['isWebGL2']) {
                    var bh = bi['get'](bg);
                    bf['bindFramebuffer'](0x8ca8, bh['__webglMultisampledFramebuffer']), bf['bindFramebuffer'](0x8ca9, bh['__webglFramebuffer']);
                    var bG = bg['width'],
                        bH = bg['height'],
                        bI = 0x4000;
                    bg['depthBuffer'] && (bI |= 0x100), bg['stencilBuffer'] && (bI |= 0x400), bf['blitFramebuffer'](0x0, 0x0, bG, bH, 0x0, 0x0, bG, bH, bI, 0x2600);
                } else console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
        }, this['safeSetTexture2D'] = function(bf, bg) {
            bf && bf['isWebGLRenderTarget'] && (!0x1 === c5 && (console['warn']('THREE.WebGLTextures.safeSetTexture2D:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'), c5 = !0x0), bf = bf['texture']), bV(bf, bg);
        }, this['safeSetTextureCube'] = function(bf, bg) {
            bf && bf['isWebGLRenderTargetCube'] && (!0x1 === c6 && (console['warn']('THREE.WebGLTextures.safeSetTextureCube:\x20don\x27t\x20use\x20cube\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'), c6 = !0x0), bf = bf['texture']), bf && bf['isCubeTexture'] || Array['isArray'](bf['image']) && 0x6 === bf['image']['length'] ? bW(bf, bg) : bX(bf, bg);
        };
    }

    function a60(bf, bg, bh) {
        return {
            'convert': function(bf) {
                var bi;
                if (bf === cM) return 0x2901;
                if (bf === cN) return 0x812f;
                if (bf === cO) return 0x8370;
                if (bf === cP) return 0x2600;
                if (bf === cQ) return 0x2700;
                if (bf === cR) return 0x2702;
                if (bf === cS) return 0x2601;
                if (bf === cT) return 0x2701;
                if (bf === cU) return 0x2703;
                if (bf === cV) return 0x1401;
                if (bf === d3) return 0x8033;
                if (bf === d4) return 0x8034;
                if (bf === d5) return 0x8363;
                if (bf === cW) return 0x1400;
                if (bf === cX) return 0x1402;
                if (bf === cY) return 0x1403;
                if (bf === cZ) return 0x1404;
                if (bf === d0) return 0x1405;
                if (bf === d1) return 0x1406;
                if (bf === d2) {
                    if (bh['isWebGL2']) return 0x140b;
                    if (null !== (bi = bg['get']('OES_texture_half_float'))) return bi['HALF_FLOAT_OES'];
                }
                if (bf === d7) return 0x1906;
                if (bf === d8) return 0x1907;
                if (bf === d9) return 0x1908;
                if (bf === da) return 0x1909;
                if (bf === db) return 0x190a;
                if (bf === dd) return 0x1902;
                if (bf === de) return 0x84f9;
                if (bf === df) return 0x1903;
                if (bf === c7) return 0x8006;
                if (bf === c8) return 0x800a;
                if (bf === c9) return 0x800b;
                if (bf === cc) return 0x0;
                if (bf === cd) return 0x1;
                if (bf === ce) return 0x300;
                if (bf === cf) return 0x301;
                if (bf === cg) return 0x302;
                if (bf === ch) return 0x303;
                if (bf === ci) return 0x304;
                if (bf === cj) return 0x305;
                if (bf === ck) return 0x306;
                if (bf === cl) return 0x307;
                if (bf === cm) return 0x308;
                if ((bf === dg || bf === dh || bf === di || bf === dj) && null !== (bi = bg['get']('WEBGL_compressed_texture_s3tc'))) {
                    if (bf === dg) return bi['COMPRESSED_RGB_S3TC_DXT1_EXT'];
                    if (bf === dh) return bi['COMPRESSED_RGBA_S3TC_DXT1_EXT'];
                    if (bf === di) return bi['COMPRESSED_RGBA_S3TC_DXT3_EXT'];
                    if (bf === dj) return bi['COMPRESSED_RGBA_S3TC_DXT5_EXT'];
                }
                if ((bf === dk || bf === dl || bf === dm || bf === dn) && null !== (bi = bg['get']('WEBGL_compressed_texture_pvrtc'))) {
                    if (bf === dk) return bi['COMPRESSED_RGB_PVRTC_4BPPV1_IMG'];
                    if (bf === dl) return bi['COMPRESSED_RGB_PVRTC_2BPPV1_IMG'];
                    if (bf === dm) return bi['COMPRESSED_RGBA_PVRTC_4BPPV1_IMG'];
                    if (bf === dn) return bi['COMPRESSED_RGBA_PVRTC_2BPPV1_IMG'];
                }
                if (bf === dp && null !== (bi = bg['get']('WEBGL_compressed_texture_etc1'))) return bi['COMPRESSED_RGB_ETC1_WEBGL'];
                if ((bf === dq || bf === dr || bf === ds || bf === dt || bf === du || bf === dv || bf === dw || bf === dx || bf === dy || bf === dz || bf === dA || bf === dB || bf === dC || bf === dD) && null !== (bi = bg['get']('WEBGL_compressed_texture_astc'))) return bf;
                if (bf === ca || bf === cb) {
                    if (bh['isWebGL2']) {
                        if (bf === ca) return 0x8007;
                        if (bf === cb) return 0x8008;
                    }
                    if (null !== (bi = bg['get']('EXT_blend_minmax'))) {
                        if (bf === ca) return bi['MIN_EXT'];
                        if (bf === cb) return bi['MAX_EXT'];
                    }
                }
                if (bf === d6) {
                    if (bh['isWebGL2']) return 0x84fa;
                    if (null !== (bi = bg['get']('WEBGL_depth_texture'))) return bi['UNSIGNED_INT_24_8_WEBGL'];
                }
                return 0x0;
            }
        };
    }

    function a66() {
        yT['call'](this), this['type'] = 'Group';
    }

    function a67() {
        yT['call'](this), this['type'] = 'Camera', this['matrixWorldInverse'] = new mR(), this['projectionMatrix'] = new mR(), this['projectionMatrixInverse'] = new mR();
    }

    function a68(bf, bg, bh, bi) {
        a67['call'](this), this['type'] = 'PerspectiveCamera', this['fov'] = void 0x0 !== bf ? bf : 0x32, this['zoom'] = 0x1, this['near'] = void 0x0 !== bh ? bh : 0.1, this['far'] = void 0x0 !== bi ? bi : 0x7d0, this['focus'] = 0xa, this['aspect'] = void 0x0 !== bg ? bg : 0x1, this['view'] = null, this['filmGauge'] = 0x23, this['filmOffset'] = 0x0, this['updateProjectionMatrix']();
    }

    function a6d(bf) {
        a68['call'](this), this['cameras'] = bf || [];
    }
    ZV['prototype'] = Object['create'](Kf['prototype']), ZV['prototype']['constructor'] = ZV, ZV['prototype']['isMeshDepthMaterial'] = !0x0, ZV['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['depthPacking'] = bf['depthPacking'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['map'] = bf['map'], this['alphaMap'] = bf['alphaMap'], this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this;
    }, ZX['prototype'] = Object['create'](Kf['prototype']), ZX['prototype']['constructor'] = ZX, ZX['prototype']['isMeshDistanceMaterial'] = !0x0, ZX['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['referencePosition']['copy'](bf['referencePosition']), this['nearDistance'] = bf['nearDistance'], this['farDistance'] = bf['farDistance'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['map'] = bf['map'], this['alphaMap'] = bf['alphaMap'], this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this;
    }, a66['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': a66,
        'isGroup': !0x0
    }), a67['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': a67,
        'isCamera': !0x0,
        'copy': function(bf, bg) {
            return yT['prototype']['copy']['call'](this, bf, bg), this['matrixWorldInverse']['copy'](bf['matrixWorldInverse']), this['projectionMatrix']['copy'](bf['projectionMatrix']), this['projectionMatrixInverse']['copy'](bf['projectionMatrixInverse']), this;
        },
        'getWorldDirection': function(bf) {
            void 0x0 === bf && (console['warn']('THREE.Camera:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'), bf = new eK()), this['updateMatrixWorld'](!0x0);
            var bg = this['matrixWorld']['elements'];
            return bf['set'](-bg[0x8], -bg[0x9], -bg[0xa])['normalize']();
        },
        'updateMatrixWorld': function(bf) {
            yT['prototype']['updateMatrixWorld']['call'](this, bf), this['matrixWorldInverse']['getInverse'](this['matrixWorld']);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        }
    }), a68['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
        'constructor': a68,
        'isPerspectiveCamera': !0x0,
        'copy': function(bf, bg) {
            return a67['prototype']['copy']['call'](this, bf, bg), this['fov'] = bf['fov'], this['zoom'] = bf['zoom'], this['near'] = bf['near'], this['far'] = bf['far'], this['focus'] = bf['focus'], this['aspect'] = bf['aspect'], this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']), this['filmGauge'] = bf['filmGauge'], this['filmOffset'] = bf['filmOffset'], this;
        },
        'setFocalLength': function(bf) {
            var bg = 0.5 * this['getFilmHeight']() / bf;
            this['fov'] = 0x2 * e2['RAD2DEG'] * Math['atan'](bg), this['updateProjectionMatrix']();
        },
        'getFocalLength': function() {
            var bf = Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']);
            return 0.5 * this['getFilmHeight']() / bf;
        },
        'getEffectiveFOV': function() {
            return 0x2 * e2['RAD2DEG'] * Math['atan'](Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom']);
        },
        'getFilmWidth': function() {
            return this['filmGauge'] * Math['min'](this['aspect'], 0x1);
        },
        'getFilmHeight': function() {
            return this['filmGauge'] / Math['max'](this['aspect'], 0x1);
        },
        'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
            this['aspect'] = bf / bg, null === this['view'] && (this['view'] = {
                'enabled': !0x0,
                'fullWidth': 0x1,
                'fullHeight': 0x1,
                'offsetX': 0x0,
                'offsetY': 0x0,
                'width': 0x1,
                'height': 0x1
            }), this['view']['enabled'] = !0x0, this['view']['fullWidth'] = bf, this['view']['fullHeight'] = bg, this['view']['offsetX'] = bh, this['view']['offsetY'] = bi, this['view']['width'] = bF, this['view']['height'] = bG, this['updateProjectionMatrix']();
        },
        'clearViewOffset': function() {
            null !== this['view'] && (this['view']['enabled'] = !0x1), this['updateProjectionMatrix']();
        },
        'updateProjectionMatrix': function() {
            var bf = this['near'],
                bg = bf * Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom'],
                bh = 0x2 * bg,
                bi = this['aspect'] * bh,
                bF = -0.5 * bi,
                bG = this['view'];
            if (null !== this['view'] && this['view']['enabled']) {
                var bH = bG['fullWidth'],
                    bI = bG['fullHeight'];
                bF += bG['offsetX'] * bi / bH, bg -= bG['offsetY'] * bh / bI, bi *= bG['width'] / bH, bh *= bG['height'] / bI;
            }
            var bJ = this['filmOffset'];
            0x0 !== bJ && (bF += bf * bJ / this['getFilmWidth']()), this['projectionMatrix']['makePerspective'](bF, bF + bi, bg, bg - bh, bf, this['far']), this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return bg['object']['fov'] = this['fov'], bg['object']['zoom'] = this['zoom'], bg['object']['near'] = this['near'], bg['object']['far'] = this['far'], bg['object']['focus'] = this['focus'], bg['object']['aspect'] = this['aspect'], null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])), bg['object']['filmGauge'] = this['filmGauge'], bg['object']['filmOffset'] = this['filmOffset'], bg;
        }
    }), a6d['prototype'] = Object['assign'](Object['create'](a68['prototype']), {
        'constructor': a6d,
        'isArrayCamera': !0x0
    });
    var a6I, a6J, a6K, a6L, a6M, a6N, a6O = new eK(),
        a6P = new eK();

    function a6Q(bf, bg, bh) {
        a6O['setFromMatrixPosition'](bg['matrixWorld']), a6P['setFromMatrixPosition'](bh['matrixWorld']);
        var bi = a6O['distanceTo'](a6P),
            bF = bg['projectionMatrix']['elements'],
            bG = bh['projectionMatrix']['elements'],
            bH = bF[0xe] / (bF[0xa] - 0x1),
            bI = bF[0xe] / (bF[0xa] + 0x1),
            bJ = (bF[0x9] + 0x1) / bF[0x5],
            bK = (bF[0x9] - 0x1) / bF[0x5],
            bL = (bF[0x8] - 0x1) / bF[0x0],
            bM = (bG[0x8] + 0x1) / bG[0x0],
            bN = bH * bL,
            bO = bH * bM,
            bP = bi / (-bL + bM),
            bQ = bP * -bL;
        bg['matrixWorld']['decompose'](bf['position'], bf['quaternion'], bf['scale']), bf['translateX'](bQ), bf['translateZ'](bP), bf['matrixWorld']['compose'](bf['position'], bf['quaternion'], bf['scale']), bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
        var bR = bH + bP,
            bS = bI + bP,
            bT = bN - bQ,
            bU = bO + (bi - bQ),
            bV = bJ * bI / bS * bR,
            bW = bK * bI / bS * bR;
        bf['projectionMatrix']['makePerspective'](bT, bU, bV, bW, bR, bS);
    }

    function a7d(bf) {
        var bg, bh, bi = this,
            bF = null,
            bG = null,
            bH = null,
            bI = [],
            bJ = new mR(),
            bK = new mR(),
            bL = 0x1,
            bM = 'local-floor';
        'undefined' != typeof window && 'VRFrameData' in window && (bG = new window['VRFrameData'](), window['addEventListener']('vrdisplaypresentchange', bW, !0x1));
        var bN = new mR(),
            bO = new eF(),
            bP = new eK(),
            bQ = new a68();
        bQ['viewport'] = new m7(), bQ['layers']['enable'](0x1);
        var bR = new a68();
        bR['viewport'] = new m7(), bR['layers']['enable'](0x2);
        var bS = new a6d([bQ, bR]);

        function bT() {
            return null !== bF && !0x0 === bF['isPresenting'];
        }
        bS['layers']['enable'](0x1), bS['layers']['enable'](0x2);
        var bU, bV = new eC();

        function bW() {
            if (bT()) {
                var bG = bF['getEyeParameters']('left');
                bg = 0x2 * bG['renderWidth'] * bL, bh = bG['renderHeight'] * bL, bU = bf['getPixelRatio'](), bf['getSize'](bV), bf['setDrawingBufferSize'](bg, bh, 0x1), bQ['viewport']['set'](0x0, 0x0, bg / 0x2, bh), bR['viewport']['set'](bg / 0x2, 0x0, bg / 0x2, bh), c0['start']();
            } else bi['enabled'] && bf['setDrawingBufferSize'](bV['width'], bV['height'], bU), c0['stop']();
        }
        var bX = [];

        function bY(bf) {
            for (var bg = navigator['getGamepads'] && navigator['getGamepads'](), bh = 0x0, bi = 0x0, bF = bg['length']; bh < bF; bh++) {
                var bG = bg[bh];
                if (bG && ('Daydream\x20Controller' === bG['id'] || 'Gear\x20VR\x20Controller' === bG['id'] || 'Oculus\x20Go\x20Controller' === bG['id'] || 'OpenVR\x20Gamepad' === bG['id'] || bG['id']['startsWith']('Oculus\x20Touch') || bG['id']['startsWith']('Spatial\x20Controller'))) {
                    if (bi === bf) return bG;
                    bi++;
                }
            }
        }

        function bZ(bf, bi) {
            null !== bi && 0x4 === bi['length'] && bf['set'](bi[0x0] * bg, bi[0x1] * bh, bi[0x2] * bg, bi[0x3] * bh);
        }
        this['enabled'] = !0x1, this['getController'] = function(bf) {
            var bg = bI[bf];
            return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1, bg['visible'] = !0x1, bI[bf] = bg), bg;
        }, this['getDevice'] = function() {
            return bF;
        }, this['setDevice'] = function(bf) {
            void 0x0 !== bf && (bF = bf), c0['setContext'](bf);
        }, this['setFramebufferScaleFactor'] = function(bf) {
            bL = bf;
        }, this['setReferenceSpaceType'] = function(bf) {
            bM = bf;
        }, this['setPoseTarget'] = function(bf) {
            void 0x0 !== bf && (bH = bf);
        }, this['getCamera'] = function(bf) {
            var bg = 'local-floor' === bM ? 1.6 : 0x0;
            if (!0x1 === bT()) return bf['position']['set'](0x0, bg, 0x0), bf['rotation']['set'](0x0, 0x0, 0x0), bf;
            if (bF['depthNear'] = bf['near'], bF['depthFar'] = bf['far'], bF['getFrameData'](bG), 'local-floor' === bM) {
                var bh = bF['stageParameters'];
                bh ? bJ['fromArray'](bh['sittingToStandingTransform']) : bJ['makeTranslation'](0x0, bg, 0x0);
            }
            var bi = bG['pose'],
                bL = null !== bH ? bH : bf;
            bL['matrix']['copy'](bJ), bL['matrix']['decompose'](bL['position'], bL['quaternion'], bL['scale']), null !== bi['orientation'] && (bO['fromArray'](bi['orientation']), bL['quaternion']['multiply'](bO)), null !== bi['position'] && (bO['setFromRotationMatrix'](bJ), bP['fromArray'](bi['position']), bP['applyQuaternion'](bO), bL['position']['add'](bP)), bL['updateMatrixWorld'](), bQ['near'] = bf['near'], bR['near'] = bf['near'], bQ['far'] = bf['far'], bR['far'] = bf['far'], bQ['matrixWorldInverse']['fromArray'](bG['leftViewMatrix']), bR['matrixWorldInverse']['fromArray'](bG['rightViewMatrix']), bK['getInverse'](bJ), 'local-floor' === bM && (bQ['matrixWorldInverse']['multiply'](bK), bR['matrixWorldInverse']['multiply'](bK));
            var bU = bL['parent'];
            null !== bU && (bN['getInverse'](bU['matrixWorld']), bQ['matrixWorldInverse']['multiply'](bN), bR['matrixWorldInverse']['multiply'](bN)), bQ['matrixWorld']['getInverse'](bQ['matrixWorldInverse']), bR['matrixWorld']['getInverse'](bR['matrixWorldInverse']), bQ['projectionMatrix']['fromArray'](bG['leftProjectionMatrix']), bR['projectionMatrix']['fromArray'](bG['rightProjectionMatrix']), a6Q(bS, bQ, bR);
            var bV = bF['getLayers']();
            if (bV['length']) {
                var bW = bV[0x0];
                bZ(bQ['viewport'], bW['leftBounds']), bZ(bR['viewport'], bW['rightBounds']);
            }
            return function() {
                for (var bf = 0x0; bf < bI['length']; bf++) {
                    var bg = bI[bf],
                        bh = bY(bf);
                    if (void 0x0 !== bh && void 0x0 !== bh['pose']) {
                        if (null === bh['pose']) return;
                        var bi = bh['pose'];
                        !0x1 === bi['hasPosition'] && bg['position']['set'](0.2, -0.6, -0.05), null !== bi['position'] && bg['position']['fromArray'](bi['position']), null !== bi['orientation'] && bg['quaternion']['fromArray'](bi['orientation']), bg['matrix']['compose'](bg['position'], bg['quaternion'], bg['scale']), bg['matrix']['premultiply'](bJ), bg['matrix']['decompose'](bg['position'], bg['quaternion'], bg['scale']), bg['matrixWorldNeedsUpdate'] = !0x0, bg['visible'] = !0x0;
                        var bF = 'Daydream\x20Controller' === bh['id'] ? 0x0 : 0x1;
                        void 0x0 === bX[bf] && (bX[bf] = !0x1), bX[bf] !== bh['buttons'][bF]['pressed'] && (bX[bf] = bh['buttons'][bF]['pressed'], !0x0 === bX[bf] ? bg['dispatchEvent']({
                            'type': 'selectstart'
                        }) : (bg['dispatchEvent']({
                            'type': 'selectend'
                        }), bg['dispatchEvent']({
                            'type': 'select'
                        })));
                    } else bg['visible'] = !0x1;
                }
            }(), bS;
        }, this['getStandingMatrix'] = function() {
            return bJ;
        }, this['isPresenting'] = bT;
        var c0 = new xp();
        this['setAnimationLoop'] = function(bf) {
            c0['setAnimationLoop'](bf), bT() && c0['start']();
        }, this['submitFrame'] = function() {
            bT() && bF['submitFrame']();
        }, this['dispose'] = function() {
            'undefined' != typeof window && window['removeEventListener']('vrdisplaypresentchange', bW);
        }, this['setFrameOfReferenceType'] = function() {
            console['warn']('THREE.WebVRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
        };
    }

    function a87(bf) {
        var bg = bf['context'],
            bh = null,
            bi = null,
            bF = 'local-floor',
            bG = null,
            bH = [],
            bI = [];

        function bJ() {
            return null !== bh && null !== bi;
        }
        var bK = new a68();
        bK['layers']['enable'](0x1), bK['viewport'] = new m7();
        var bL = new a68();
        bL['layers']['enable'](0x2), bL['viewport'] = new m7();
        var bM = new a6d([bK, bL]);

        function bN(bf) {
            for (var bg = 0x0; bg < bH['length']; bg++) bI[bg] === bf['inputSource'] && bH[bg]['dispatchEvent']({
                'type': bf['type']
            });
        }

        function bO() {
            bf['setFramebuffer'](null), bf['setRenderTarget'](bf['getRenderTarget']()), bS['stop']();
        }

        function bP(bf) {
            bi = bf, bS['setContext'](bh), bS['start']();
        }

        function bQ(bf, bg) {
            null === bg ? bf['matrixWorld']['copy'](bf['matrix']) : bf['matrixWorld']['multiplyMatrices'](bg['matrixWorld'], bf['matrix']), bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
        }
        bM['layers']['enable'](0x1), bM['layers']['enable'](0x2), this['enabled'] = !0x1, this['getController'] = function(bf) {
            var bg = bH[bf];
            return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1, bg['visible'] = !0x1, bH[bf] = bg), bg;
        }, this['setFramebufferScaleFactor'] = function(bf) {}, this['setReferenceSpaceType'] = function(bf) {
            bF = bf;
        }, this['getSession'] = function() {
            return bh;
        }, this['setSession'] = function(bf) {
            null !== (bh = bf) && (bh['addEventListener']('select', bN), bh['addEventListener']('selectstart', bN), bh['addEventListener']('selectend', bN), bh['addEventListener']('end', bO), bh['updateRenderState']({
                'baseLayer': new XRWebGLLayer(bh, bg)
            }), bh['requestReferenceSpace'](bF)['then'](bP), bI = bh['inputSources'], bh['addEventListener']('inputsourceschange', function() {
                bI = bh['inputSources'], console['log'](bI);
                for (var bf = 0x0; bf < bH['length']; bf++) {
                    bH[bf]['userData']['inputSource'] = bI[bf];
                }
            }));
        }, this['getCamera'] = function(bf) {
            if (bJ()) {
                var bg = bf['parent'],
                    bh = bM['cameras'];
                bQ(bM, bg);
                for (var bi = 0x0; bi < bh['length']; bi++) bQ(bh[bi], bg);
                bf['matrixWorld']['copy'](bM['matrixWorld']);
                for (var bF = bf['children'], bG = (bi = 0x0, bF['length']); bi < bG; bi++) bF[bi]['updateMatrixWorld'](!0x0);
                return a6Q(bM, bK, bL), bM;
            }
            return bf;
        }, this['isPresenting'] = bJ;
        var bR = null;
        var bS = new xp();
        bS['setAnimationLoop'](function(bg, bF) {
            if (null !== (bG = bF['getViewerPose'](bi))) {
                var bJ = bG['views'],
                    bK = bh['renderState']['baseLayer'];
                bf['setFramebuffer'](bK['framebuffer']);
                for (var bL = 0x0; bL < bJ['length']; bL++) {
                    var bN = bJ[bL],
                        bO = bK['getViewport'](bN),
                        bP = bN['transform']['inverse']['matrix'],
                        bQ = bM['cameras'][bL];
                    bQ['matrix']['fromArray'](bP)['getInverse'](bQ['matrix']), bQ['projectionMatrix']['fromArray'](bN['projectionMatrix']), bQ['viewport']['set'](bO['x'], bO['y'], bO['width'], bO['height']), 0x0 === bL && bM['matrix']['copy'](bQ['matrix']);
                }
            }
            for (bL = 0x0; bL < bH['length']; bL++) {
                var bS = bH[bL],
                    bT = bI[bL];
                if (bT) {
                    var bU = bF['getPose'](bT['targetRaySpace'], bi);
                    if (null !== bU) {
                        bS['matrix']['fromArray'](bU['transform']['matrix']), bS['matrix']['decompose'](bS['position'], bS['rotation'], bS['scale']), bS['visible'] = !0x0;
                        continue;
                    }
                }
                bS['visible'] = !0x1;
            }
            bR && bR(bg);
        }), this['setAnimationLoop'] = function(bf) {
            bR = bf;
        }, this['dispose'] = function() {}, this['getStandingMatrix'] = function() {
            return console['warn']('THREE.WebXRManager:\x20getStandingMatrix()\x20is\x20no\x20longer\x20needed.'), new mR();
        }, this['getDevice'] = function() {
            console['warn']('THREE.WebXRManager:\x20getDevice()\x20has\x20been\x20deprecated.');
        }, this['setDevice'] = function() {
            console['warn']('THREE.WebXRManager:\x20setDevice()\x20has\x20been\x20deprecated.');
        }, this['setFrameOfReferenceType'] = function() {
            console['warn']('THREE.WebXRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
        }, this['submitFrame'] = function() {};
    }

    function a8U(bf) {
        console['log']('THREE.WebGLRenderer', bI);
        var bg = void 0x0 !== (bf = bf || {})['canvas'] ? bf['canvas'] : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas'),
            bh = void 0x0 !== bf['context'] ? bf['context'] : null,
            bi = void 0x0 !== bf['alpha'] && bf['alpha'],
            bF = void 0x0 === bf['depth'] || bf['depth'],
            bG = void 0x0 === bf['stencil'] || bf['stencil'],
            bH = void 0x0 !== bf['antialias'] && bf['antialias'],
            bJ = void 0x0 === bf['premultipliedAlpha'] || bf['premultipliedAlpha'],
            bK = void 0x0 !== bf['preserveDrawingBuffer'] && bf['preserveDrawingBuffer'],
            bL = void 0x0 !== bf['powerPreference'] ? bf['powerPreference'] : 'default',
            bM = void 0x0 !== bf['failIfMajorPerformanceCaveat'] && bf['failIfMajorPerformanceCaveat'],
            bN = null,
            bO = null;
        this['domElement'] = bg, this['context'] = null, this['debug'] = {
            'checkShaderErrors': !0x0
        }, this['autoClear'] = !0x0, this['autoClearColor'] = !0x0, this['autoClearDepth'] = !0x0, this['autoClearStencil'] = !0x0, this['sortObjects'] = !0x0, this['clippingPlanes'] = [], this['localClippingEnabled'] = !0x1, this['gammaFactor'] = 0x2, this['gammaInput'] = !0x1, this['gammaOutput'] = !0x1, this['physicallyCorrectLights'] = !0x1, this['toneMapping'] = cz, this['toneMappingExposure'] = 0x1, this['toneMappingWhitePoint'] = 0x1, this['maxMorphTargets'] = 0x8, this['maxMorphNormals'] = 0x4;
        var bP, bQ, bR, bS, bT, bV, bW, bX, bY, bZ, c0, c1, c2, c3, c4, c5, c6, c7, c8 = this,
            c9 = !0x1,
            ca = null,
            cb = 0x0,
            cc = 0x0,
            cd = null,
            ce = null,
            cf = -0x1,
            cg = {
                'geometry': null,
                'program': null,
                'wireframe': !0x1
            },
            ch = null,
            ci = null,
            cj = new m7(),
            ck = new m7(),
            cl = null,
            cm = bg['width'],
            cn = bg['height'],
            co = 0x1,
            cp = new m7(0x0, 0x0, cm, cn),
            cq = new m7(0x0, 0x0, cm, cn),
            cr = !0x1,
            cs = new mK(),
            ct = new M2(),
            cu = !0x1,
            cv = !0x1,
            cw = new mR(),
            cx = new eK();

        function cy() {
            return null === cd ? co : 0x1;
        }
        try {
            var cA = {
                'alpha': bi,
                'depth': bF,
                'stencil': bG,
                'antialias': bH,
                'premultipliedAlpha': bJ,
                'preserveDrawingBuffer': bK,
                'powerPreference': bL,
                'failIfMajorPerformanceCaveat': bM,
                'xrCompatible': !0x0
            };
            if (bg['addEventListener']('webglcontextlost', cE, !0x1), bg['addEventListener']('webglcontextrestored', cF, !0x1), null === (bP = bh || bg['getContext']('webgl', cA) || bg['getContext']('experimental-webgl', cA))) throw null !== bg['getContext']('webgl') ? new Error('Error\x20creating\x20WebGL\x20context\x20with\x20your\x20selected\x20attributes.') : new Error('Error\x20creating\x20WebGL\x20context.');
            void 0x0 === bP['getShaderPrecisionFormat'] && (bP['getShaderPrecisionFormat'] = function() {
                return {
                    'rangeMin': 0x1,
                    'rangeMax': 0x1,
                    'precision': 0x1
                };
            });
        } catch (a9S) {
            throw console['error']('THREE.WebGLRenderer:\x20' + a9S['message']), a9S;
        }

        function cB() {
            bQ = new MB(bP), (bR = new LG(bP, bQ, bf))['isWebGL2'] || (bQ['get']('WEBGL_depth_texture'), bQ['get']('OES_texture_float'), bQ['get']('OES_texture_half_float'), bQ['get']('OES_texture_half_float_linear'), bQ['get']('OES_standard_derivatives'), bQ['get']('OES_element_index_uint'), bQ['get']('ANGLE_instanced_arrays')), bQ['get']('OES_texture_float_linear'), c7 = new a60(bP, bQ, bR), (bS = new a1i(bP, bQ, c7, bR))['scissor'](ck['copy'](cq)['multiplyScalar'](co)), bS['viewport'](cj['copy'](cp)['multiplyScalar'](co)), bT = new Nv(bP), bV = new Yj(), bW = new a3q(bP, bQ, bS, bV, bR, c7, bT), bX = new xy(bP), bY = new MG(bP, bX, bT), bZ = new NV(bY, bT), c4 = new NE(bP), c0 = new XC(c8, bQ, bR, bW), c1 = new YZ(), c2 = new ZN(), c3 = new L1(c8, bS, bZ, bJ), c5 = new Lt(bP, bQ, bT, bR), c6 = new Nf(bP, bQ, bT, bR), bT['programs'] = c0['programs'], c8['context'] = bP, c8['capabilities'] = bR, c8['extensions'] = bQ, c8['properties'] = bV, c8['renderLists'] = c1, c8['state'] = bS, c8['info'] = bT;
        }
        cB();
        var cC = 'undefined' != typeof navigator && 'xr' in navigator && 'supportsSession' in navigator['xr'] ? new a87(c8) : new a7d(c8);
        this['vr'] = cC;
        var cD = new ZZ(c8, bZ, bR['maxTextureSize']);

        function cE(bf) {
            bf['preventDefault'](), console['log']('THREE.WebGLRenderer:\x20Context\x20Lost.'), c9 = !0x0;
        }

        function cF() {
            console['log']('THREE.WebGLRenderer:\x20Context\x20Restored.'), c9 = !0x1, cB();
        }

        function cG(bf) {
            var bg = bf['target'];
            bg['removeEventListener']('dispose', cG),
                function(bf) {
                    cH(bf), bV['remove'](bf);
                }(bg);
        }

        function cH(bf) {
            var bg = bV['get'](bf)['program'];
            bf['program'] = void 0x0, void 0x0 !== bg && c0['releaseProgram'](bg);
        }
        this['shadowMap'] = cD, this['getContext'] = function() {
            return bP;
        }, this['getContextAttributes'] = function() {
            return bP['getContextAttributes']();
        }, this['forceContextLoss'] = function() {
            var bf = bQ['get']('WEBGL_lose_context');
            bf && bf['loseContext']();
        }, this['forceContextRestore'] = function() {
            var bf = bQ['get']('WEBGL_lose_context');
            bf && bf['restoreContext']();
        }, this['getPixelRatio'] = function() {
            return co;
        }, this['setPixelRatio'] = function(bf) {
            void 0x0 !== bf && (co = bf, this['setSize'](cm, cn, !0x1));
        }, this['getSize'] = function(bf) {
            return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getsize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'), bf = new eC()), bf['set'](cm, cn);
        }, this['setSize'] = function(bf, bh, bi) {
            cC['isPresenting']() ? console['warn']('THREE.WebGLRenderer:\x20Can\x27t\x20change\x20size\x20while\x20VR\x20device\x20is\x20presenting.') : (cm = bf, cn = bh, bg['width'] = bf * co, bg['height'] = bh * co, !0x1 !== bi && (bg['style']['width'] = bf + 'px', bg['style']['height'] = bh + 'px'), this['setViewport'](0x0, 0x0, bf, bh));
        }, this['getDrawingBufferSize'] = function(bf) {
            return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getdrawingBufferSize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'), bf = new eC()), bf['set'](cm * co, cn * co);
        }, this['setDrawingBufferSize'] = function(bf, bh, bi) {
            cm = bf, cn = bh, co = bi, bg['width'] = bf * bi, bg['height'] = bh * bi, this['setViewport'](0x0, 0x0, bf, bh);
        }, this['getCurrentViewport'] = function(bf) {
            return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getCurrentViewport()\x20now\x20requires\x20a\x20Vector4\x20as\x20an\x20argument'), bf = new m7()), bf['copy'](cj);
        }, this['getViewport'] = function(bf) {
            return bf['copy'](cp);
        }, this['setViewport'] = function(bf, bg, bh, bi) {
            bf['isVector4'] ? cp['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cp['set'](bf, bg, bh, bi), bS['viewport'](cj['copy'](cp)['multiplyScalar'](co));
        }, this['getScissor'] = function(bf) {
            return bf['copy'](cq);
        }, this['setScissor'] = function(bf, bg, bh, bi) {
            bf['isVector4'] ? cq['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cq['set'](bf, bg, bh, bi), bS['scissor'](ck['copy'](cq)['multiplyScalar'](co));
        }, this['getScissorTest'] = function() {
            return cr;
        }, this['setScissorTest'] = function(bf) {
            bS['setScissorTest'](cr = bf);
        }, this['getClearColor'] = function() {
            return c3['getClearColor']();
        }, this['setClearColor'] = function() {
            c3['setClearColor']['apply'](c3, arguments);
        }, this['getClearAlpha'] = function() {
            return c3['getClearAlpha']();
        }, this['setClearAlpha'] = function() {
            c3['setClearAlpha']['apply'](c3, arguments);
        }, this['clear'] = function(bf, bg, bh) {
            var bi = 0x0;
            (void 0x0 === bf || bf) && (bi |= 0x4000), (void 0x0 === bg || bg) && (bi |= 0x100), (void 0x0 === bh || bh) && (bi |= 0x400), bP['clear'](bi);
        }, this['clearColor'] = function() {
            this['clear'](!0x0, !0x1, !0x1);
        }, this['clearDepth'] = function() {
            this['clear'](!0x1, !0x0, !0x1);
        }, this['clearStencil'] = function() {
            this['clear'](!0x1, !0x1, !0x0);
        }, this['dispose'] = function() {
            bg['removeEventListener']('webglcontextlost', cE, !0x1), bg['removeEventListener']('webglcontextrestored', cF, !0x1), c1['dispose'](), c2['dispose'](), bV['dispose'](), bZ['dispose'](), cC['dispose'](), cJ['stop']();
        }, this['renderBufferImmediate'] = function(bf, bg) {
            bS['initAttributes']();
            var bh = bV['get'](bf);
            bf['hasPositions'] && !bh['position'] && (bh['position'] = bP['createBuffer']()), bf['hasNormals'] && !bh['normal'] && (bh['normal'] = bP['createBuffer']()), bf['hasUvs'] && !bh['uv'] && (bh['uv'] = bP['createBuffer']()), bf['hasColors'] && !bh['color'] && (bh['color'] = bP['createBuffer']());
            var bi = bg['getAttributes']();
            bf['hasPositions'] && (bP['bindBuffer'](0x8892, bh['position']), bP['bufferData'](0x8892, bf['positionArray'], 0x88e8), bS['enableAttribute'](bi['position']), bP['vertexAttribPointer'](bi['position'], 0x3, 0x1406, !0x1, 0x0, 0x0)), bf['hasNormals'] && (bP['bindBuffer'](0x8892, bh['normal']), bP['bufferData'](0x8892, bf['normalArray'], 0x88e8), bS['enableAttribute'](bi['normal']), bP['vertexAttribPointer'](bi['normal'], 0x3, 0x1406, !0x1, 0x0, 0x0)), bf['hasUvs'] && (bP['bindBuffer'](0x8892, bh['uv']), bP['bufferData'](0x8892, bf['uvArray'], 0x88e8), bS['enableAttribute'](bi['uv']), bP['vertexAttribPointer'](bi['uv'], 0x2, 0x1406, !0x1, 0x0, 0x0)), bf['hasColors'] && (bP['bindBuffer'](0x8892, bh['color']), bP['bufferData'](0x8892, bf['colorArray'], 0x88e8), bS['enableAttribute'](bi['color']), bP['vertexAttribPointer'](bi['color'], 0x3, 0x1406, !0x1, 0x0, 0x0)), bS['disableUnusedAttributes'](), bP['drawArrays'](0x4, 0x0, bf['count']), bf['count'] = 0x0;
        }, this['renderBufferDirect'] = function(bf, bg, bh, bi, bF, bG) {
            var bH = bF['isMesh'] && bF['matrixWorld']['determinant']() < 0x0;
            bS['setMaterial'](bi, bH);
            var bI = cN(bf, bg, bi, bF),
                bJ = !0x1;
            cg['geometry'] === bh['id'] && cg['program'] === bI['id'] && cg['wireframe'] === (!0x0 === bi['wireframe']) || (cg['geometry'] = bh['id'], cg['program'] = bI['id'], cg['wireframe'] = !0x0 === bi['wireframe'], bJ = !0x0), bF['morphTargetInfluences'] && (c4['update'](bF, bh, bi, bI), bJ = !0x0);
            var bK, bL = bh['index'],
                bM = bh['attributes']['position'],
                bN = 0x1;
            !0x0 === bi['wireframe'] && (bL = bY['getWireframeAttribute'](bh), bN = 0x2);
            var bO = c5;
            null !== bL && (bK = bX['get'](bL), (bO = c6)['setIndex'](bK)), bJ && (! function(bf, bg, bh) {
                if (bh && bh['isInstancedBufferGeometry'] && !bR['isWebGL2'] && null === bQ['get']('ANGLE_instanced_arrays')) return void console['error']('THREE.WebGLRenderer.setupVertexAttributes:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
                bS['initAttributes']();
                var bi = bh['attributes'],
                    bF = bg['getAttributes'](),
                    bG = bf['defaultAttributeValues'];
                for (var bH in bF) {
                    var bI = bF[bH];
                    if (bI >= 0x0) {
                        var bJ = bi[bH];
                        if (void 0x0 !== bJ) {
                            var bK = bJ['normalized'],
                                bL = bJ['itemSize'],
                                bM = bX['get'](bJ);
                            if (void 0x0 === bM) continue;
                            var bN = bM['buffer'],
                                bO = bM['type'],
                                bT = bM['bytesPerElement'];
                            if (bJ['isInterleavedBufferAttribute']) {
                                var bU = bJ['data'],
                                    bV = bU['stride'],
                                    bW = bJ['offset'];
                                bU && bU['isInstancedInterleavedBuffer'] ? (bS['enableAttributeAndDivisor'](bI, bU['meshPerAttribute']), void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bU['meshPerAttribute'] * bU['count'])) : bS['enableAttribute'](bI), bP['bindBuffer'](0x8892, bN), bP['vertexAttribPointer'](bI, bL, bO, bK, bV * bT, bW * bT);
                            } else bJ['isInstancedBufferAttribute'] ? (bS['enableAttributeAndDivisor'](bI, bJ['meshPerAttribute']), void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bJ['meshPerAttribute'] * bJ['count'])) : bS['enableAttribute'](bI), bP['bindBuffer'](0x8892, bN), bP['vertexAttribPointer'](bI, bL, bO, bK, 0x0, 0x0);
                        } else if (void 0x0 !== bG) {
                            var bY = bG[bH];
                            if (void 0x0 !== bY) switch (bY['length']) {
                                case 0x2:
                                    bP['vertexAttrib2fv'](bI, bY);
                                    break;
                                case 0x3:
                                    bP['vertexAttrib3fv'](bI, bY);
                                    break;
                                case 0x4:
                                    bP['vertexAttrib4fv'](bI, bY);
                                    break;
                                default:
                                    bP['vertexAttrib1fv'](bI, bY);
                            }
                        }
                    }
                }
                bS['disableUnusedAttributes']();
            }(bi, bI, bh), null !== bL && bP['bindBuffer'](0x8893, bK['buffer']));
            var bT = 0x1 / 0x0;
            null !== bL ? bT = bL['count'] : void 0x0 !== bM && (bT = bM['count']);
            var bU = bh['drawRange']['start'] * bN,
                bV = bh['drawRange']['count'] * bN,
                bW = null !== bG ? bG['start'] * bN : 0x0,
                bZ = null !== bG ? bG['count'] * bN : 0x1 / 0x0,
                c0 = Math['max'](bU, bW),
                c1 = Math['min'](bT, bU + bV, bW + bZ) - 0x1,
                c2 = Math['max'](0x0, c1 - c0 + 0x1);
            if (0x0 !== c2) {
                if (bF['isMesh'])
                    if (!0x0 === bi['wireframe']) bS['setLineWidth'](bi['wireframeLinewidth'] * cy()), bO['setMode'](0x1);
                    else switch (bF['drawMode']) {
                        case dN:
                            bO['setMode'](0x4);
                            break;
                        case dO:
                            bO['setMode'](0x5);
                            break;
                        case dP:
                            bO['setMode'](0x6);
                    } else if (bF['isLine']) {
                        var c3 = bi['linewidth'];
                        void 0x0 === c3 && (c3 = 0x1), bS['setLineWidth'](c3 * cy()), bF['isLineSegments'] ? bO['setMode'](0x1) : bF['isLineLoop'] ? bO['setMode'](0x2) : bO['setMode'](0x3);
                    } else bF['isPoints'] ? bO['setMode'](0x0) : bF['isSprite'] && bO['setMode'](0x4);
                bh && bh['isInstancedBufferGeometry'] ? bh['maxInstancedCount'] > 0x0 && bO['renderInstances'](bh, c0, c2) : bO['render'](c0, c2);
            }
        }, this['compile'] = function(bf, bg) {
            (bO = c2['get'](bf, bg))['init'](), bf['traverse'](function(bf) {
                bf['isLight'] && (bO['pushLight'](bf), bf['castShadow'] && bO['pushShadow'](bf));
            }), bO['setupLights'](bg), bf['traverse'](function(bg) {
                if (bg['material'])
                    if (Array['isArray'](bg['material']))
                        for (var bh = 0x0; bh < bg['material']['length']; bh++) cM(bg['material'][bh], bf['fog'], bg);
                    else cM(bg['material'], bf['fog'], bg);
            });
        };
        var cI = null;
        var cJ = new xp();

        function cK(bf, bg, bh, bi) {
            for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                var bH = bf[bF],
                    bI = bH['object'],
                    bJ = bH['geometry'],
                    bK = void 0x0 === bi ? bH['material'] : bi,
                    bL = bH['group'];
                if (bh['isArrayCamera']) {
                    ci = bh;
                    for (var bM = bh['cameras'], bN = 0x0, bP = bM['length']; bN < bP; bN++) {
                        var bQ = bM[bN];
                        bI['layers']['test'](bQ['layers']) && (bS['viewport'](cj['copy'](bQ['viewport'])), bO['setupLights'](bQ), cL(bI, bg, bQ, bJ, bK, bL));
                    }
                } else ci = null, cL(bI, bg, bh, bJ, bK, bL);
            }
        }

        function cL(bf, bg, bh, bi, bF, bG) {
            if (bf['onBeforeRender'](c8, bg, bh, bi, bF, bG), bO = c2['get'](bg, ci || bh), bf['modelViewMatrix']['multiplyMatrices'](bh['matrixWorldInverse'], bf['matrixWorld']), bf['normalMatrix']['getNormalMatrix'](bf['modelViewMatrix']), bf['isImmediateRenderObject']) {
                bS['setMaterial'](bF);
                var bH = cN(bh, bg['fog'], bF, bf);
                cg['geometry'] = null, cg['program'] = null, cg['wireframe'] = !0x1,
                    function(bf, bg) {
                        bf['render'](function(bf) {
                            c8['renderBufferImmediate'](bf, bg);
                        });
                    }(bf, bH);
            } else c8['renderBufferDirect'](bh, bg['fog'], bi, bF, bf, bG);
            bf['onAfterRender'](c8, bg, bh, bi, bF, bG), bO = c2['get'](bg, ci || bh);
        }

        function cM(bf, bg, bh) {
            var bi = bV['get'](bf),
                bF = bO['state']['lights'],
                bG = bO['state']['shadowsArray'],
                bH = bi['lightsHash'],
                bI = bF['state']['hash'],
                bJ = c0['getParameters'](bf, bF['state'], bG, bg, ct['numPlanes'], ct['numIntersection'], bh),
                bK = c0['getProgramCode'](bf, bJ),
                bL = bi['program'],
                bM = !0x0;
            if (void 0x0 === bL) bf['addEventListener']('dispose', cG);
            else if (bL['code'] !== bK) cH(bf);
            else if (bH['stateID'] !== bI['stateID'] || bH['directionalLength'] !== bI['directionalLength'] || bH['pointLength'] !== bI['pointLength'] || bH['spotLength'] !== bI['spotLength'] || bH['rectAreaLength'] !== bI['rectAreaLength'] || bH['hemiLength'] !== bI['hemiLength'] || bH['shadowsLength'] !== bI['shadowsLength']) bH['stateID'] = bI['stateID'], bH['directionalLength'] = bI['directionalLength'], bH['pointLength'] = bI['pointLength'], bH['spotLength'] = bI['spotLength'], bH['rectAreaLength'] = bI['rectAreaLength'], bH['hemiLength'] = bI['hemiLength'], bH['shadowsLength'] = bI['shadowsLength'], bM = !0x1;
            else {
                if (void 0x0 !== bJ['shaderID']) return;
                bM = !0x1;
            }
            if (bM) {
                if (bJ['shaderID']) {
                    var bN = xo[bJ['shaderID']];
                    bi['shader'] = {
                        'name': bf['type'],
                        'uniforms': vQ(bN['uniforms']),
                        'vertexShader': bN['vertexShader'],
                        'fragmentShader': bN['fragmentShader']
                    };
                } else bi['shader'] = {
                    'name': bf['type'],
                    'uniforms': bf['uniforms'],
                    'vertexShader': bf['vertexShader'],
                    'fragmentShader': bf['fragmentShader']
                };
                bf['onBeforeCompile'](bi['shader'], c8), bK = c0['getProgramCode'](bf, bJ), bL = c0['acquireProgram'](bf, bi['shader'], bJ, bK), bi['program'] = bL, bf['program'] = bL;
            }
            var bP = bL['getAttributes']();
            if (bf['morphTargets']) {
                bf['numSupportedMorphTargets'] = 0x0;
                for (var bQ = 0x0; bQ < c8['maxMorphTargets']; bQ++) bP['morphTarget' + bQ] >= 0x0 && bf['numSupportedMorphTargets']++;
            }
            if (bf['morphNormals']) {
                bf['numSupportedMorphNormals'] = 0x0;
                for (bQ = 0x0; bQ < c8['maxMorphNormals']; bQ++) bP['morphNormal' + bQ] >= 0x0 && bf['numSupportedMorphNormals']++;
            }
            var bR = bi['shader']['uniforms'];
            (bf['isShaderMaterial'] || bf['isRawShaderMaterial']) && !0x0 !== bf['clipping'] || (bi['numClippingPlanes'] = ct['numPlanes'], bi['numIntersection'] = ct['numIntersection'], bR['clippingPlanes'] = ct['uniform']), bi['fog'] = bg, void 0x0 === bH && (bi['lightsHash'] = bH = {}), bH['stateID'] = bI['stateID'], bH['directionalLength'] = bI['directionalLength'], bH['pointLength'] = bI['pointLength'], bH['spotLength'] = bI['spotLength'], bH['rectAreaLength'] = bI['rectAreaLength'], bH['hemiLength'] = bI['hemiLength'], bH['shadowsLength'] = bI['shadowsLength'], bf['lights'] && (bR['ambientLightColor']['value'] = bF['state']['ambient'], bR['lightProbe']['value'] = bF['state']['probe'], bR['directionalLights']['value'] = bF['state']['directional'], bR['spotLights']['value'] = bF['state']['spot'], bR['rectAreaLights']['value'] = bF['state']['rectArea'], bR['pointLights']['value'] = bF['state']['point'], bR['hemisphereLights']['value'] = bF['state']['hemi'], bR['directionalShadowMap']['value'] = bF['state']['directionalShadowMap'], bR['directionalShadowMatrix']['value'] = bF['state']['directionalShadowMatrix'], bR['spotShadowMap']['value'] = bF['state']['spotShadowMap'], bR['spotShadowMatrix']['value'] = bF['state']['spotShadowMatrix'], bR['pointShadowMap']['value'] = bF['state']['pointShadowMap'], bR['pointShadowMatrix']['value'] = bF['state']['pointShadowMatrix']);
            var bS = bi['program']['getUniforms'](),
                bT = VF['seqWithValue'](bS['seq'], bR);
            bi['uniformsList'] = bT;
        }

        function cN(bf, bg, bh, bi) {
            bW['resetTextureUnits']();
            var bF = bV['get'](bh),
                bG = bO['state']['lights'],
                bH = bF['lightsHash'],
                bI = bG['state']['hash'];
            if (cu && (cv || bf !== ch)) {
                var bJ = bf === ch && bh['id'] === cf;
                ct['setState'](bh['clippingPlanes'], bh['clipIntersection'], bh['clipShadows'], bf, bF, bJ);
            }!0x1 === bh['needsUpdate'] && (void 0x0 === bF['program'] ? bh['needsUpdate'] = !0x0 : bh['fog'] && bF['fog'] !== bg ? bh['needsUpdate'] = !0x0 : (!bh['lights'] || bH['stateID'] === bI['stateID'] && bH['directionalLength'] === bI['directionalLength'] && bH['pointLength'] === bI['pointLength'] && bH['spotLength'] === bI['spotLength'] && bH['rectAreaLength'] === bI['rectAreaLength'] && bH['hemiLength'] === bI['hemiLength'] && bH['shadowsLength'] === bI['shadowsLength']) && (void 0x0 === bF['numClippingPlanes'] || bF['numClippingPlanes'] === ct['numPlanes'] && bF['numIntersection'] === ct['numIntersection']) || (bh['needsUpdate'] = !0x0)), bh['needsUpdate'] && (cM(bh, bg, bi), bh['needsUpdate'] = !0x1);
            var bK, bL, bM = !0x1,
                bN = !0x1,
                bQ = !0x1,
                bT = bF['program'],
                bX = bT['getUniforms'](),
                bY = bF['shader']['uniforms'];
            if (bS['useProgram'](bT['program']) && (bM = !0x0, bN = !0x0, bQ = !0x0), bh['id'] !== cf && (cf = bh['id'], bN = !0x0), bM || ch !== bf) {
                if (bX['setValue'](bP, 'projectionMatrix', bf['projectionMatrix']), bR['logarithmicDepthBuffer'] && bX['setValue'](bP, 'logDepthBufFC', 0x2 / (Math['log'](bf['far'] + 0x1) / Math['LN2'])), ch !== bf && (ch = bf, bN = !0x0, bQ = !0x0), bh['isShaderMaterial'] || bh['isMeshPhongMaterial'] || bh['isMeshStandardMaterial'] || bh['envMap']) {
                    var bZ = bX['map']['cameraPosition'];
                    void 0x0 !== bZ && bZ['setValue'](bP, cx['setFromMatrixPosition'](bf['matrixWorld']));
                }(bh['isMeshPhongMaterial'] || bh['isMeshLambertMaterial'] || bh['isMeshBasicMaterial'] || bh['isMeshStandardMaterial'] || bh['isShaderMaterial'] || bh['skinning']) && bX['setValue'](bP, 'viewMatrix', bf['matrixWorldInverse']);
            }
            if (bh['skinning']) {
                bX['setOptional'](bP, bi, 'bindMatrix'), bX['setOptional'](bP, bi, 'bindMatrixInverse');
                var c0 = bi['skeleton'];
                if (c0) {
                    var c1 = c0['bones'];
                    if (bR['floatVertexTextures']) {
                        if (void 0x0 === c0['boneTexture']) {
                            var c2 = Math['sqrt'](0x4 * c1['length']);
                            c2 = e2['ceilPowerOfTwo'](c2), c2 = Math['max'](c2, 0x4);
                            var c3 = new Float32Array(c2 * c2 * 0x4);
                            c3['set'](c0['boneMatrices']);
                            var c4 = new mo(c3, c2, c2, d9, d1);
                            c4['needsUpdate'] = !0x0, c0['boneMatrices'] = c3, c0['boneTexture'] = c4, c0['boneTextureSize'] = c2;
                        }
                        bX['setValue'](bP, 'boneTexture', c0['boneTexture'], bW), bX['setValue'](bP, 'boneTextureSize', c0['boneTextureSize']);
                    } else bX['setOptional'](bP, c0, 'boneMatrices');
                }
            }
            return bN && (bX['setValue'](bP, 'toneMappingExposure', c8['toneMappingExposure']), bX['setValue'](bP, 'toneMappingWhitePoint', c8['toneMappingWhitePoint']), bh['lights'] && (bL = bQ, (bK = bY)['ambientLightColor']['needsUpdate'] = bL, bK['lightProbe']['needsUpdate'] = bL, bK['directionalLights']['needsUpdate'] = bL, bK['pointLights']['needsUpdate'] = bL, bK['spotLights']['needsUpdate'] = bL, bK['rectAreaLights']['needsUpdate'] = bL, bK['hemisphereLights']['needsUpdate'] = bL), bg && bh['fog'] && function(bf, bg) {
                bf['fogColor']['value']['copy'](bg['color']), bg['isFog'] ? (bf['fogNear']['value'] = bg['near'], bf['fogFar']['value'] = bg['far']) : bg['isFogExp2'] && (bf['fogDensity']['value'] = bg['density']);
            }(bY, bg), bh['isMeshBasicMaterial'] ? cO(bY, bh) : bh['isMeshLambertMaterial'] ? (cO(bY, bh), function(bf, bg) {
                bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']);
            }(bY, bh)) : bh['isMeshPhongMaterial'] ? (cO(bY, bh), bh['isMeshToonMaterial'] ? function(bf, bg) {
                cP(bf, bg), bg['gradientMap'] && (bf['gradientMap']['value'] = bg['gradientMap']);
            }(bY, bh) : cP(bY, bh)) : bh['isMeshStandardMaterial'] ? (cO(bY, bh), bh['isMeshPhysicalMaterial'] ? function(bf, bg) {
                cQ(bf, bg), bf['reflectivity']['value'] = bg['reflectivity'], bf['clearCoat']['value'] = bg['clearCoat'], bf['clearCoatRoughness']['value'] = bg['clearCoatRoughness'];
            }(bY, bh) : cQ(bY, bh)) : bh['isMeshMatcapMaterial'] ? (cO(bY, bh), function(bf, bg) {
                bg['matcap'] && (bf['matcap']['value'] = bg['matcap']);
                bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
                bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']());
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
            }(bY, bh)) : bh['isMeshDepthMaterial'] ? (cO(bY, bh), function(bf, bg) {
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
            }(bY, bh)) : bh['isMeshDistanceMaterial'] ? (cO(bY, bh), function(bf, bg) {
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
                bf['referencePosition']['value']['copy'](bg['referencePosition']), bf['nearDistance']['value'] = bg['nearDistance'], bf['farDistance']['value'] = bg['farDistance'];
            }(bY, bh)) : bh['isMeshNormalMaterial'] ? (cO(bY, bh), function(bf, bg) {
                bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
                bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']());
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
            }(bY, bh)) : bh['isLineBasicMaterial'] ? (function(bf, bg) {
                bf['diffuse']['value']['copy'](bg['color']), bf['opacity']['value'] = bg['opacity'];
            }(bY, bh), bh['isLineDashedMaterial'] && function(bf, bg) {
                bf['dashSize']['value'] = bg['dashSize'], bf['totalSize']['value'] = bg['dashSize'] + bg['gapSize'], bf['scale']['value'] = bg['scale'];
            }(bY, bh)) : bh['isPointsMaterial'] ? function(bf, bg) {
                bf['diffuse']['value']['copy'](bg['color']), bf['opacity']['value'] = bg['opacity'], bf['size']['value'] = bg['size'] * co, bf['scale']['value'] = 0.5 * cn, bf['map']['value'] = bg['map'], null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](), bf['uvTransform']['value']['copy'](bg['map']['matrix']));
            }(bY, bh) : bh['isSpriteMaterial'] ? function(bf, bg) {
                bf['diffuse']['value']['copy'](bg['color']), bf['opacity']['value'] = bg['opacity'], bf['rotation']['value'] = bg['rotation'], bf['map']['value'] = bg['map'], null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](), bf['uvTransform']['value']['copy'](bg['map']['matrix']));
            }(bY, bh) : bh['isShadowMaterial'] && (bY['color']['value']['copy'](bh['color']), bY['opacity']['value'] = bh['opacity']), void 0x0 !== bY['ltc_1'] && (bY['ltc_1']['value'] = xn['LTC_1']), void 0x0 !== bY['ltc_2'] && (bY['ltc_2']['value'] = xn['LTC_2']), VF['upload'](bP, bF['uniformsList'], bY, bW)), bh['isShaderMaterial'] && !0x0 === bh['uniformsNeedUpdate'] && (VF['upload'](bP, bF['uniformsList'], bY, bW), bh['uniformsNeedUpdate'] = !0x1), bh['isSpriteMaterial'] && bX['setValue'](bP, 'center', bi['center']), bX['setValue'](bP, 'modelViewMatrix', bi['modelViewMatrix']), bX['setValue'](bP, 'normalMatrix', bi['normalMatrix']), bX['setValue'](bP, 'modelMatrix', bi['matrixWorld']), bT;
        }

        function cO(bf, bg) {
            var bh;
            bf['opacity']['value'] = bg['opacity'], bg['color'] && bf['diffuse']['value']['copy'](bg['color']), bg['emissive'] && bf['emissive']['value']['copy'](bg['emissive'])['multiplyScalar'](bg['emissiveIntensity']), bg['map'] && (bf['map']['value'] = bg['map']), bg['alphaMap'] && (bf['alphaMap']['value'] = bg['alphaMap']), bg['specularMap'] && (bf['specularMap']['value'] = bg['specularMap']), bg['envMap'] && (bf['envMap']['value'] = bg['envMap'], bf['flipEnvMap']['value'] = bg['envMap']['isCubeTexture'] ? -0x1 : 0x1, bf['reflectivity']['value'] = bg['reflectivity'], bf['refractionRatio']['value'] = bg['refractionRatio'], bf['maxMipLevel']['value'] = bV['get'](bg['envMap'])['__maxMipLevel']), bg['lightMap'] && (bf['lightMap']['value'] = bg['lightMap'], bf['lightMapIntensity']['value'] = bg['lightMapIntensity']), bg['aoMap'] && (bf['aoMap']['value'] = bg['aoMap'], bf['aoMapIntensity']['value'] = bg['aoMapIntensity']), bg['map'] ? bh = bg['map'] : bg['specularMap'] ? bh = bg['specularMap'] : bg['displacementMap'] ? bh = bg['displacementMap'] : bg['normalMap'] ? bh = bg['normalMap'] : bg['bumpMap'] ? bh = bg['bumpMap'] : bg['roughnessMap'] ? bh = bg['roughnessMap'] : bg['metalnessMap'] ? bh = bg['metalnessMap'] : bg['alphaMap'] ? bh = bg['alphaMap'] : bg['emissiveMap'] && (bh = bg['emissiveMap']), void 0x0 !== bh && (bh['isWebGLRenderTarget'] && (bh = bh['texture']), !0x0 === bh['matrixAutoUpdate'] && bh['updateMatrix'](), bf['uvTransform']['value']['copy'](bh['matrix']));
        }

        function cP(bf, bg) {
            bf['specular']['value']['copy'](bg['specular']), bf['shininess']['value'] = Math['max'](bg['shininess'], 0.0001), bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']), bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)), bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']()), bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
        }

        function cQ(bf, bg) {
            bf['roughness']['value'] = bg['roughness'], bf['metalness']['value'] = bg['metalness'], bg['roughnessMap'] && (bf['roughnessMap']['value'] = bg['roughnessMap']), bg['metalnessMap'] && (bf['metalnessMap']['value'] = bg['metalnessMap']), bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']), bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)), bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']()), bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']), bg['envMap'] && (bf['envMapIntensity']['value'] = bg['envMapIntensity']);
        }
        cJ['setAnimationLoop'](function(bf) {
            cC['isPresenting']() || cI && cI(bf);
        }), 'undefined' != typeof window && cJ['setContext'](window), this['setAnimationLoop'] = function(bf) {
            cI = bf, cC['setAnimationLoop'](bf), cJ['start']();
        }, this['render'] = function(bf, bg) {
            var bh, bi;
            if (void 0x0 !== arguments[0x2] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20renderTarget\x20argument\x20has\x20been\x20removed.\x20Use\x20.setRenderTarget()\x20instead.'), bh = arguments[0x2]), void 0x0 !== arguments[0x3] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20forceClear\x20argument\x20has\x20been\x20removed.\x20Use\x20.clear()\x20instead.'), bi = arguments[0x3]), bg && bg['isCamera']) {
                if (!c9) {
                    cg['geometry'] = null, cg['program'] = null, cg['wireframe'] = !0x1, cf = -0x1, ch = null, !0x0 === bf['autoUpdate'] && bf['updateMatrixWorld'](), null === bg['parent'] && bg['updateMatrixWorld'](), cC['enabled'] && (bg = cC['getCamera'](bg)), (bO = c2['get'](bf, bg))['init'](), bf['onBeforeRender'](c8, bf, bg, bh || cd), cw['multiplyMatrices'](bg['projectionMatrix'], bg['matrixWorldInverse']), cs['setFromMatrix'](cw), cv = this['localClippingEnabled'], cu = ct['init'](this['clippingPlanes'], cv, bg), (bN = c1['get'](bf, bg))['init'](),
                        function bf(bg, bh, bi, bF) {
                            if (!0x1 === bg['visible']) return;
                            var bG = bg['layers']['test'](bh['layers']);
                            if (bG)
                                if (bg['isGroup']) bi = bg['renderOrder'];
                                else if (bg['isLight']) bO['pushLight'](bg), bg['castShadow'] && bO['pushShadow'](bg);
                            else if (bg['isSprite']) {
                                if (!bg['frustumCulled'] || cs['intersectsSprite'](bg)) {
                                    bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                                    var bH = bZ['update'](bg),
                                        bI = bg['material'];
                                    bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
                                }
                            } else if (bg['isImmediateRenderObject']) bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw), bN['push'](bg, null, bg['material'], bi, cx['z'], null);
                            else if ((bg['isMesh'] || bg['isLine'] || bg['isPoints']) && (bg['isSkinnedMesh'] && bg['skeleton']['update'](), !bg['frustumCulled'] || cs['intersectsObject'](bg))) {
                                bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                                var bH = bZ['update'](bg),
                                    bI = bg['material'];
                                if (Array['isArray'](bI))
                                    for (var bJ = bH['groups'], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                                        var bM = bJ[bK],
                                            bP = bI[bM['materialIndex']];
                                        bP && bP['visible'] && bN['push'](bg, bH, bP, bi, cx['z'], bM);
                                    } else bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
                            }
                            var bQ = bg['children'];
                            for (var bK = 0x0, bL = bQ['length']; bK < bL; bK++) bf(bQ[bK], bh, bi, bF);
                        }(bf, bg, 0x0, c8['sortObjects']), !0x0 === c8['sortObjects'] && bN['sort'](), cu && ct['beginShadows']();
                    var bF = bO['state']['shadowsArray'];
                    cD['render'](bF, bf, bg), bO['setupLights'](bg), cu && ct['endShadows'](), this['info']['autoReset'] && this['info']['reset'](), void 0x0 !== bh && this['setRenderTarget'](bh), c3['render'](bN, bf, bg, bi);
                    var bG = bN['opaque'],
                        bH = bN['transparent'];
                    if (bf['overrideMaterial']) {
                        var bI = bf['overrideMaterial'];
                        bG['length'] && cK(bG, bf, bg, bI), bH['length'] && cK(bH, bf, bg, bI);
                    } else bG['length'] && cK(bG, bf, bg), bH['length'] && cK(bH, bf, bg);
                    bf['onAfterRender'](c8, bf, bg), null !== cd && (bW['updateRenderTargetMipmap'](cd), bW['updateMultisampleRenderTarget'](cd)), bS['buffers']['depth']['setTest'](!0x0), bS['buffers']['depth']['setMask'](!0x0), bS['buffers']['color']['setMask'](!0x0), bS['setPolygonOffset'](!0x1), cC['enabled'] && cC['submitFrame'](), bN = null, bO = null;
                }
            } else console['error']('THREE.WebGLRenderer.render:\x20camera\x20is\x20not\x20an\x20instance\x20of\x20THREE.Camera.');
        }, this['setFramebuffer'] = function(bf) {
            ca !== bf && bP['bindFramebuffer'](0x8d40, bf), ca = bf;
        }, this['getActiveCubeFace'] = function() {
            return cb;
        }, this['getActiveMipMapLevel'] = function() {
            return cc;
        }, this['getRenderTarget'] = function() {
            return cd;
        }, this['setRenderTarget'] = function(bf, bg, bh) {
            cd = bf, cb = bg, cc = bh, bf && void 0x0 === bV['get'](bf)['__webglFramebuffer'] && bW['setupRenderTarget'](bf);
            var bi = ca,
                bF = !0x1;
            if (bf) {
                var bG = bV['get'](bf)['__webglFramebuffer'];
                bf['isWebGLRenderTargetCube'] ? (bi = bG[bg || 0x0], bF = !0x0) : bi = bf['isWebGLMultisampleRenderTarget'] ? bV['get'](bf)['__webglMultisampledFramebuffer'] : bG, cj['copy'](bf['viewport']), ck['copy'](bf['scissor']), cl = bf['scissorTest'];
            } else cj['copy'](cp)['multiplyScalar'](co), ck['copy'](cq)['multiplyScalar'](co), cl = cr;
            if (ce !== bi && (bP['bindFramebuffer'](0x8d40, bi), ce = bi), bS['viewport'](cj), bS['scissor'](ck), bS['setScissorTest'](cl), bF) {
                var bH = bV['get'](bf['texture']);
                bP['framebufferTexture2D'](0x8d40, 0x8ce0, 0x8515 + (bg || 0x0), bH['__webglTexture'], bh || 0x0);
            }
        }, this['readRenderTargetPixels'] = function(bf, bg, bh, bi, bF, bG, bH) {
            if (bf && bf['isWebGLRenderTarget']) {
                var bI = bV['get'](bf)['__webglFramebuffer'];
                if (bf['isWebGLRenderTargetCube'] && void 0x0 !== bH && (bI = bI[bH]), bI) {
                    var bJ = !0x1;
                    bI !== ce && (bP['bindFramebuffer'](0x8d40, bI), bJ = !0x0);
                    try {
                        var bK = bf['texture'],
                            bL = bK['format'],
                            bM = bK['type'];
                        if (bL !== d9 && c7['convert'](bL) !== bP['getParameter'](0x8b9b)) return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20RGBA\x20or\x20implementation\x20defined\x20format.');
                        if (!(bM === cV || c7['convert'](bM) === bP['getParameter'](0x8b9a) || bM === d1 && (bR['isWebGL2'] || bQ['get']('OES_texture_float') || bQ['get']('WEBGL_color_buffer_float')) || bM === d2 && (bR['isWebGL2'] ? bQ['get']('EXT_color_buffer_float') : bQ['get']('EXT_color_buffer_half_float')))) return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20UnsignedByteType\x20or\x20implementation\x20defined\x20type.');
                        0x8cd5 === bP['checkFramebufferStatus'](0x8d40) ? bg >= 0x0 && bg <= bf['width'] - bi && bh >= 0x0 && bh <= bf['height'] - bF && bP['readPixels'](bg, bh, bi, bF, c7['convert'](bL), c7['convert'](bM), bG) : console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20readPixels\x20from\x20renderTarget\x20failed.\x20Framebuffer\x20not\x20complete.');
                    } finally {
                        bJ && bP['bindFramebuffer'](0x8d40, ce);
                    }
                }
            } else console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20THREE.WebGLRenderTarget.');
        }, this['copyFramebufferToTexture'] = function(bf, bg, bh) {
            var bi = bg['image']['width'],
                bF = bg['image']['height'],
                bG = c7['convert'](bg['format']);
            bW['setTexture2D'](bg, 0x0), bP['copyTexImage2D'](0xde1, bh || 0x0, bG, bf['x'], bf['y'], bi, bF, 0x0);
        }, this['copyTextureToTexture'] = function(bf, bg, bh, bi) {
            var bF = bg['image']['width'],
                bG = bg['image']['height'],
                bH = c7['convert'](bh['format']),
                bI = c7['convert'](bh['type']);
            bW['setTexture2D'](bh, 0x0), bg['isDataTexture'] ? bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bF, bG, bH, bI, bg['image']['data']) : bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bH, bI, bg['image']);
        };
    }

    function ae3(bf, bg) {
        this['name'] = '', this['color'] = new w7(bf), this['density'] = void 0x0 !== bg ? bg : 0.00025;
    }

    function ae6(bf, bg, bh) {
        this['name'] = '', this['color'] = new w7(bf), this['near'] = void 0x0 !== bg ? bg : 0x1, this['far'] = void 0x0 !== bh ? bh : 0x3e8;
    }

    function aea() {
        yT['call'](this), this['type'] = 'Scene', this['background'] = null, this['fog'] = null, this['overrideMaterial'] = null, this['autoUpdate'] = !0x0;
    }

    function aeb(bf, bg) {
        this['array'] = bf, this['stride'] = bg, this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0, this['dynamic'] = !0x1, this['updateRange'] = {
            'offset': 0x0,
            'count': -0x1
        }, this['version'] = 0x0;
    }

    function aee(bf, bg, bh, bi) {
        this['data'] = bf, this['itemSize'] = bg, this['offset'] = bh, this['normalized'] = !0x0 === bi;
    }

    function aej(bf) {
        Kf['call'](this), this['type'] = 'SpriteMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['rotation'] = 0x0, this['sizeAttenuation'] = !0x0, this['lights'] = !0x1, this['transparent'] = !0x0, this['setValues'](bf);
    }

    function ael(bf) {
        if (yT['call'](this), this['type'] = 'Sprite', void 0x0 === a6I) {
            a6I = new Gf();
            var bg = new aeb(new Float32Array([-0.5, -0.5, 0x0, 0x0, 0x0, 0.5, -0.5, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1, 0x1, -0.5, 0.5, 0x0, 0x0, 0x1]), 0x5);
            a6I['setIndex']([0x0, 0x1, 0x2, 0x0, 0x2, 0x3]), a6I['addAttribute']('position', new aee(bg, 0x3, 0x0, !0x1)), a6I['addAttribute']('uv', new aee(bg, 0x2, 0x3, !0x1));
        }
        this['geometry'] = a6I, this['material'] = void 0x0 !== bf ? bf : new aej(), this['center'] = new eC(0.5, 0.5);
    }

    function aeo() {
        yT['call'](this), this['type'] = 'LOD', Object['defineProperties'](this, {
            'levels': {
                'enumerable': !0x0,
                'value': []
            }
        });
    }

    function aep(bf, bg) {
        bf && bf['isGeometry'] && console['error']('THREE.SkinnedMesh\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.'), KY['call'](this, bf, bg), this['type'] = 'SkinnedMesh', this['bindMode'] = 'attached', this['bindMatrix'] = new mR(), this['bindMatrixInverse'] = new mR();
    }

    function aes(bf, bg) {
        if (bf = bf || [], this['bones'] = bf['slice'](0x0), this['boneMatrices'] = new Float32Array(0x10 * this['bones']['length']), void 0x0 === bg) this['calculateInverses']();
        else if (this['bones']['length'] === bg['length']) this['boneInverses'] = bg['slice'](0x0);
        else {
            console['warn']('THREE.Skeleton\x20boneInverses\x20is\x20the\x20wrong\x20length.'), this['boneInverses'] = [];
            for (var bh = 0x0, bi = this['bones']['length']; bh < bi; bh++) this['boneInverses']['push'](new mR());
        }
    }

    function aex() {
        yT['call'](this), this['type'] = 'Bone';
    }

    function aey(bf) {
        Kf['call'](this), this['type'] = 'LineBasicMaterial', this['color'] = new w7(0xffffff), this['linewidth'] = 0x1, this['linecap'] = 'round', this['linejoin'] = 'round', this['lights'] = !0x1, this['setValues'](bf);
    }

    function aeA(bf, bg, bh) {
        0x1 === bh && console['error']('THREE.Line:\x20parameter\x20THREE.LinePieces\x20no\x20longer\x20supported.\x20Use\x20THREE.LineSegments\x20instead.'), yT['call'](this), this['type'] = 'Line', this['geometry'] = void 0x0 !== bf ? bf : new Gf(), this['material'] = void 0x0 !== bg ? bg : new aey({
            'color': 0xffffff * Math['random']()
        });
    }

    function aeE(bf, bg) {
        aeA['call'](this, bf, bg), this['type'] = 'LineSegments';
    }

    function aeH(bf, bg) {
        aeA['call'](this, bf, bg), this['type'] = 'LineLoop';
    }

    function aeK(bf) {
        Kf['call'](this), this['type'] = 'PointsMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['size'] = 0x1, this['sizeAttenuation'] = !0x0, this['morphTargets'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
    }

    function aeM(bf, bg) {
        yT['call'](this), this['type'] = 'Points', this['geometry'] = void 0x0 !== bf ? bf : new Gf(), this['material'] = void 0x0 !== bg ? bg : new aeK({
            'color': 0xffffff * Math['random']()
        });
    }

    function aeP(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
        lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ), this['format'] = void 0x0 !== bH ? bH : d8, this['minFilter'] = void 0x0 !== bG ? bG : cS, this['magFilter'] = void 0x0 !== bF ? bF : cS, this['generateMipmaps'] = !0x1;
    }

    function aeZ(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
        lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM), this['image'] = {
            'width': bg,
            'height': bh
        }, this['mipmaps'] = bf, this['flipY'] = !0x1, this['generateMipmaps'] = !0x1;
    }

    function afc(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
        lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ), this['needsUpdate'] = !0x0;
    }

    function afm(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
        if ((bK = void 0x0 !== bK ? bK : dd) !== dd && bK !== de) throw new Error('DepthTexture\x20format\x20must\x20be\x20either\x20THREE.DepthFormat\x20or\x20THREE.DepthStencilFormat');
        void 0x0 === bh && bK === dd && (bh = cY), void 0x0 === bh && bK === de && (bh = d6), lW['call'](this, null, bi, bF, bG, bH, bI, bK, bh, bJ), this['image'] = {
            'width': bf,
            'height': bg
        }, this['magFilter'] = void 0x0 !== bH ? bH : cP, this['minFilter'] = void 0x0 !== bI ? bI : cP, this['flipY'] = !0x1, this['generateMipmaps'] = !0x1;
    }

    function afx(bf) {
        Gf['call'](this), this['type'] = 'WireframeGeometry';
        var bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM = [],
            bN = [0x0, 0x0],
            bO = {},
            bP = ['a', 'b', 'c'];
        if (bf && bf['isGeometry']) {
            var bQ = bf['faces'];
            for (bg = 0x0, bi = bQ['length']; bg < bi; bg++) {
                var bR = bQ[bg];
                for (bh = 0x0; bh < 0x3; bh++) bI = bR[bP[bh]], bJ = bR[bP[(bh + 0x1) % 0x3]], bN[0x0] = Math['min'](bI, bJ), bN[0x1] = Math['max'](bI, bJ), void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
                    'index1': bN[0x0],
                    'index2': bN[0x1]
                });
            }
            for (bK in bO) bH = bO[bK], bL = bf['vertices'][bH['index1']], bM['push'](bL['x'], bL['y'], bL['z']), bL = bf['vertices'][bH['index2']], bM['push'](bL['x'], bL['y'], bL['z']);
        } else if (bf && bf['isBufferGeometry']) {
            var bS, bT, bU, bV, bW, bX, bY;
            if (bL = new eK(), null !== bf['index']) {
                for (bS = bf['attributes']['position'], bT = bf['index'], 0x0 === (bU = bf['groups'])['length'] && (bU = [{
                        'start': 0x0,
                        'count': bT['count'],
                        'materialIndex': 0x0
                    }]), bF = 0x0, bG = bU['length']; bF < bG; ++bF)
                    for (bg = bW = (bV = bU[bF])['start'], bi = bW + bV['count']; bg < bi; bg += 0x3)
                        for (bh = 0x0; bh < 0x3; bh++) bI = bT['getX'](bg + bh), bJ = bT['getX'](bg + (bh + 0x1) % 0x3), bN[0x0] = Math['min'](bI, bJ), bN[0x1] = Math['max'](bI, bJ), void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
                            'index1': bN[0x0],
                            'index2': bN[0x1]
                        });
                for (bK in bO) bH = bO[bK], bL['fromBufferAttribute'](bS, bH['index1']), bM['push'](bL['x'], bL['y'], bL['z']), bL['fromBufferAttribute'](bS, bH['index2']), bM['push'](bL['x'], bL['y'], bL['z']);
            } else
                for (bg = 0x0, bi = (bS = bf['attributes']['position'])['count'] / 0x3; bg < bi; bg++)
                    for (bh = 0x0; bh < 0x3; bh++) bX = 0x3 * bg + bh, bL['fromBufferAttribute'](bS, bX), bM['push'](bL['x'], bL['y'], bL['z']), bY = 0x3 * bg + (bh + 0x1) % 0x3, bL['fromBufferAttribute'](bS, bY), bM['push'](bL['x'], bL['y'], bL['z']);
        }
        this['addAttribute']('position', new Be(bM, 0x3));
    }

    function afW(bf, bg, bh) {
        AH['call'](this), this['type'] = 'ParametricGeometry', this['parameters'] = {
            'func': bf,
            'slices': bg,
            'stacks': bh
        }, this['fromBufferGeometry'](new ag0(bf, bg, bh)), this['mergeVertices']();
    }

    function ag0(bf, bg, bh) {
        Gf['call'](this), this['type'] = 'ParametricBufferGeometry', this['parameters'] = {
            'func': bf,
            'slices': bg,
            'stacks': bh
        };
        var bi, bF, bG = [],
            bH = [],
            bI = [],
            bJ = [],
            bK = new eK(),
            bL = new eK(),
            bM = new eK(),
            bN = new eK(),
            bO = new eK();
        bf['length'] < 0x3 && console['error']('THREE.ParametricGeometry:\x20Function\x20must\x20now\x20modify\x20a\x20Vector3\x20as\x20third\x20parameter.');
        var bP = bg + 0x1;
        for (bi = 0x0; bi <= bh; bi++) {
            var bQ = bi / bh;
            for (bF = 0x0; bF <= bg; bF++) {
                var bR = bF / bg;
                bf(bR, bQ, bL), bH['push'](bL['x'], bL['y'], bL['z']), bR - 0.00001 >= 0x0 ? (bf(bR - 0.00001, bQ, bM), bN['subVectors'](bL, bM)) : (bf(bR + 0.00001, bQ, bM), bN['subVectors'](bM, bL)), bQ - 0.00001 >= 0x0 ? (bf(bR, bQ - 0.00001, bM), bO['subVectors'](bL, bM)) : (bf(bR, bQ + 0.00001, bM), bO['subVectors'](bM, bL)), bK['crossVectors'](bN, bO)['normalize'](), bI['push'](bK['x'], bK['y'], bK['z']), bJ['push'](bR, bQ);
            }
        }
        for (bi = 0x0; bi < bh; bi++)
            for (bF = 0x0; bF < bg; bF++) {
                var bS = bi * bP + bF,
                    bT = bi * bP + bF + 0x1,
                    bU = (bi + 0x1) * bP + bF + 0x1,
                    bV = (bi + 0x1) * bP + bF;
                bG['push'](bS, bT, bV), bG['push'](bT, bU, bV);
            }
        this['setIndex'](bG), this['addAttribute']('position', new Be(bH, 0x3)), this['addAttribute']('normal', new Be(bI, 0x3)), this['addAttribute']('uv', new Be(bJ, 0x2));
    }

    function agm(bf, bg, bh, bi) {
        AH['call'](this), this['type'] = 'PolyhedronGeometry', this['parameters'] = {
            'vertices': bf,
            'indices': bg,
            'radius': bh,
            'detail': bi
        }, this['fromBufferGeometry'](new agr(bf, bg, bh, bi)), this['mergeVertices']();
    }

    function agr(bf, bg, bh, bi) {
        Gf['call'](this), this['type'] = 'PolyhedronBufferGeometry', this['parameters'] = {
            'vertices': bf,
            'indices': bg,
            'radius': bh,
            'detail': bi
        }, bh = bh || 0x1;
        var bF = [],
            bG = [];

        function bH(bf, bg, bh, bi) {
            var bF, bG, bH = Math['pow'](0x2, bi),
                bJ = [];
            for (bF = 0x0; bF <= bH; bF++) {
                bJ[bF] = [];
                var bK = bf['clone']()['lerp'](bh, bF / bH),
                    bL = bg['clone']()['lerp'](bh, bF / bH),
                    bM = bH - bF;
                for (bG = 0x0; bG <= bM; bG++) bJ[bF][bG] = 0x0 === bG && bF === bH ? bK : bK['clone']()['lerp'](bL, bG / bM);
            }
            for (bF = 0x0; bF < bH; bF++)
                for (bG = 0x0; bG < 0x2 * (bH - bF) - 0x1; bG++) {
                    var bN = Math['floor'](bG / 0x2);
                    bG % 0x2 == 0x0 ? (bI(bJ[bF][bN + 0x1]), bI(bJ[bF + 0x1][bN]), bI(bJ[bF][bN])) : (bI(bJ[bF][bN + 0x1]), bI(bJ[bF + 0x1][bN + 0x1]), bI(bJ[bF + 0x1][bN]));
                }
        }

        function bI(bf) {
            bF['push'](bf['x'], bf['y'], bf['z']);
        }

        function bJ(bg, bh) {
            var bi = 0x3 * bg;
            bh['x'] = bf[bi + 0x0], bh['y'] = bf[bi + 0x1], bh['z'] = bf[bi + 0x2];
        }

        function bK(bf, bg, bh, bi) {
            bi < 0x0 && 0x1 === bf['x'] && (bG[bg] = bf['x'] - 0x1), 0x0 === bh['x'] && 0x0 === bh['z'] && (bG[bg] = bi / 0x2 / Math['PI'] + 0.5);
        }

        function bL(bf) {
            return Math['atan2'](bf['z'], -bf['x']);
        }! function(bf) {
            for (var bh = new eK(), bi = new eK(), bF = new eK(), bG = 0x0; bG < bg['length']; bG += 0x3) bJ(bg[bG + 0x0], bh), bJ(bg[bG + 0x1], bi), bJ(bg[bG + 0x2], bF), bH(bh, bi, bF, bf);
        }(bi = bi || 0x0),
        function(bf) {
            for (var bg = new eK(), bh = 0x0; bh < bF['length']; bh += 0x3) bg['x'] = bF[bh + 0x0], bg['y'] = bF[bh + 0x1], bg['z'] = bF[bh + 0x2], bg['normalize']()['multiplyScalar'](bf), bF[bh + 0x0] = bg['x'], bF[bh + 0x1] = bg['y'], bF[bh + 0x2] = bg['z'];
        }(bh),
        function() {
            for (var bf = new eK(), bg = 0x0; bg < bF['length']; bg += 0x3) {
                bf['x'] = bF[bg + 0x0], bf['y'] = bF[bg + 0x1], bf['z'] = bF[bg + 0x2];
                var bh = bL(bf) / 0x2 / Math['PI'] + 0.5,
                    bi = (bH = bf, Math['atan2'](-bH['y'], Math['sqrt'](bH['x'] * bH['x'] + bH['z'] * bH['z'])) / Math['PI'] + 0.5);
                bG['push'](bh, 0x1 - bi);
            }
            var bH;
            (function() {
                for (var bf = new eK(), bg = new eK(), bh = new eK(), bi = new eK(), bH = new eC(), bI = new eC(), bJ = new eC(), bM = 0x0, bN = 0x0; bM < bF['length']; bM += 0x9, bN += 0x6) {
                    bf['set'](bF[bM + 0x0], bF[bM + 0x1], bF[bM + 0x2]), bg['set'](bF[bM + 0x3], bF[bM + 0x4], bF[bM + 0x5]), bh['set'](bF[bM + 0x6], bF[bM + 0x7], bF[bM + 0x8]), bH['set'](bG[bN + 0x0], bG[bN + 0x1]), bI['set'](bG[bN + 0x2], bG[bN + 0x3]), bJ['set'](bG[bN + 0x4], bG[bN + 0x5]), bi['copy'](bf)['add'](bg)['add'](bh)['divideScalar'](0x3);
                    var bO = bL(bi);
                    bK(bH, bN + 0x0, bf, bO), bK(bI, bN + 0x2, bg, bO), bK(bJ, bN + 0x4, bh, bO);
                }
            }(), function() {
                for (var bf = 0x0; bf < bG['length']; bf += 0x6) {
                    var bg = bG[bf + 0x0],
                        bh = bG[bf + 0x2],
                        bi = bG[bf + 0x4],
                        bF = Math['max'](bg, bh, bi),
                        bH = Math['min'](bg, bh, bi);
                    bF > 0.9 && bH < 0.1 && (bg < 0.2 && (bG[bf + 0x0] += 0x1), bh < 0.2 && (bG[bf + 0x2] += 0x1), bi < 0.2 && (bG[bf + 0x4] += 0x1));
                }
            }());
        }(), this['addAttribute']('position', new Be(bF, 0x3)), this['addAttribute']('normal', new Be(bF['slice'](), 0x3)), this['addAttribute']('uv', new Be(bG, 0x2)), 0x0 === bi ? this['computeVertexNormals']() : this['normalizeNormals']();
    }

    function ahr(bf, bg) {
        AH['call'](this), this['type'] = 'TetrahedronGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        }, this['fromBufferGeometry'](new ahu(bf, bg)), this['mergeVertices']();
    }

    function ahu(bf, bg) {
        agr['call'](this, [0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1], [0x2, 0x1, 0x0, 0x0, 0x3, 0x2, 0x1, 0x3, 0x0, 0x2, 0x3, 0x1], bf, bg), this['type'] = 'TetrahedronBufferGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }

    function ahx(bf, bg) {
        AH['call'](this), this['type'] = 'OctahedronGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        }, this['fromBufferGeometry'](new ahA(bf, bg)), this['mergeVertices']();
    }

    function ahA(bf, bg) {
        agr['call'](this, [0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1], [0x0, 0x2, 0x4, 0x0, 0x4, 0x3, 0x0, 0x3, 0x5, 0x0, 0x5, 0x2, 0x1, 0x2, 0x5, 0x1, 0x5, 0x3, 0x1, 0x3, 0x4, 0x1, 0x4, 0x2], bf, bg), this['type'] = 'OctahedronBufferGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }

    function ahD(bf, bg) {
        AH['call'](this), this['type'] = 'IcosahedronGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        }, this['fromBufferGeometry'](new ahG(bf, bg)), this['mergeVertices']();
    }

    function ahG(bf, bg) {
        var bh = (0x1 + Math['sqrt'](0x5)) / 0x2,
            bi = [-0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, 0x0, 0x0, -0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, bh, 0x0, -0x1, bh, 0x0, 0x1, -bh, 0x0, -0x1, -bh, 0x0, 0x1];
        agr['call'](this, bi, [0x0, 0xb, 0x5, 0x0, 0x5, 0x1, 0x0, 0x1, 0x7, 0x0, 0x7, 0xa, 0x0, 0xa, 0xb, 0x1, 0x5, 0x9, 0x5, 0xb, 0x4, 0xb, 0xa, 0x2, 0xa, 0x7, 0x6, 0x7, 0x1, 0x8, 0x3, 0x9, 0x4, 0x3, 0x4, 0x2, 0x3, 0x2, 0x6, 0x3, 0x6, 0x8, 0x3, 0x8, 0x9, 0x4, 0x9, 0x5, 0x2, 0x4, 0xb, 0x6, 0x2, 0xa, 0x8, 0x6, 0x7, 0x9, 0x8, 0x1], bf, bg), this['type'] = 'IcosahedronBufferGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }

    function ahL(bf, bg) {
        AH['call'](this), this['type'] = 'DodecahedronGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        }, this['fromBufferGeometry'](new ahO(bf, bg)), this['mergeVertices']();
    }

    function ahO(bf, bg) {
        var bh = (0x1 + Math['sqrt'](0x5)) / 0x2,
            bi = 0x1 / bh,
            bF = [-0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x0, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, 0x0, -bh, 0x0, -bi, bh, 0x0, -bi, -bh, 0x0, bi, bh, 0x0, bi];
        agr['call'](this, bF, [0x3, 0xb, 0x7, 0x3, 0x7, 0xf, 0x3, 0xf, 0xd, 0x7, 0x13, 0x11, 0x7, 0x11, 0x6, 0x7, 0x6, 0xf, 0x11, 0x4, 0x8, 0x11, 0x8, 0xa, 0x11, 0xa, 0x6, 0x8, 0x0, 0x10, 0x8, 0x10, 0x2, 0x8, 0x2, 0xa, 0x0, 0xc, 0x1, 0x0, 0x1, 0x12, 0x0, 0x12, 0x10, 0x6, 0xa, 0x2, 0x6, 0x2, 0xd, 0x6, 0xd, 0xf, 0x2, 0x10, 0x12, 0x2, 0x12, 0x3, 0x2, 0x3, 0xd, 0x12, 0x1, 0x9, 0x12, 0x9, 0xb, 0x12, 0xb, 0x3, 0x4, 0xe, 0xc, 0x4, 0xc, 0x0, 0x4, 0x0, 0x8, 0xb, 0x9, 0x5, 0xb, 0x5, 0x13, 0xb, 0x13, 0x7, 0x13, 0x5, 0xe, 0x13, 0xe, 0x4, 0x13, 0x4, 0x11, 0x1, 0xc, 0xe, 0x1, 0xe, 0x5, 0x1, 0x5, 0x9], bf, bg), this['type'] = 'DodecahedronBufferGeometry', this['parameters'] = {
            'radius': bf,
            'detail': bg
        };
    }

    function ahU(bf, bg, bh, bi, bF, bG) {
        AH['call'](this), this['type'] = 'TubeGeometry', this['parameters'] = {
            'path': bf,
            'tubularSegments': bg,
            'radius': bh,
            'radialSegments': bi,
            'closed': bF
        }, void 0x0 !== bG && console['warn']('THREE.TubeGeometry:\x20taper\x20has\x20been\x20removed.');
        var bH = new ai2(bf, bg, bh, bi, bF);
        this['tangents'] = bH['tangents'], this['normals'] = bH['normals'], this['binormals'] = bH['binormals'], this['fromBufferGeometry'](bH), this['mergeVertices']();
    }

    function ai2(bf, bg, bh, bi, bF) {
        Gf['call'](this), this['type'] = 'TubeBufferGeometry', this['parameters'] = {
            'path': bf,
            'tubularSegments': bg,
            'radius': bh,
            'radialSegments': bi,
            'closed': bF
        }, bg = bg || 0x40, bh = bh || 0x1, bi = bi || 0x8, bF = bF || !0x1;
        var bG = bf['computeFrenetFrames'](bg, bF);
        this['tangents'] = bG['tangents'], this['normals'] = bG['normals'], this['binormals'] = bG['binormals'];
        var bH, bI, bJ = new eK(),
            bK = new eK(),
            bL = new eC(),
            bM = new eK(),
            bN = [],
            bO = [],
            bP = [],
            bQ = [];

        function bR(bF) {
            bM = bf['getPointAt'](bF / bg, bM);
            var bH = bG['normals'][bF],
                bL = bG['binormals'][bF];
            for (bI = 0x0; bI <= bi; bI++) {
                var bP = bI / bi * Math['PI'] * 0x2,
                    bQ = Math['sin'](bP),
                    bR = -Math['cos'](bP);
                bK['x'] = bR * bH['x'] + bQ * bL['x'], bK['y'] = bR * bH['y'] + bQ * bL['y'], bK['z'] = bR * bH['z'] + bQ * bL['z'], bK['normalize'](), bO['push'](bK['x'], bK['y'], bK['z']), bJ['x'] = bM['x'] + bh * bK['x'], bJ['y'] = bM['y'] + bh * bK['y'], bJ['z'] = bM['z'] + bh * bK['z'], bN['push'](bJ['x'], bJ['y'], bJ['z']);
            }
        }! function() {
            for (bH = 0x0; bH < bg; bH++) bR(bH);
            bR(!0x1 === bF ? bg : 0x0),
                function() {
                    for (bH = 0x0; bH <= bg; bH++)
                        for (bI = 0x0; bI <= bi; bI++) bL['x'] = bH / bg, bL['y'] = bI / bi, bP['push'](bL['x'], bL['y']);
                }(),
                function() {
                    for (bI = 0x1; bI <= bg; bI++)
                        for (bH = 0x1; bH <= bi; bH++) {
                            var bf = (bi + 0x1) * (bI - 0x1) + (bH - 0x1),
                                bh = (bi + 0x1) * bI + (bH - 0x1),
                                bF = (bi + 0x1) * bI + bH,
                                bG = (bi + 0x1) * (bI - 0x1) + bH;
                            bQ['push'](bf, bh, bG), bQ['push'](bh, bF, bG);
                        }
                }();
        }(), this['setIndex'](bQ), this['addAttribute']('position', new Be(bN, 0x3)), this['addAttribute']('normal', new Be(bO, 0x3)), this['addAttribute']('uv', new Be(bP, 0x2));
    }

    function aiu(bf, bg, bh, bi, bF, bG, bH) {
        AH['call'](this), this['type'] = 'TorusKnotGeometry', this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'tubularSegments': bh,
            'radialSegments': bi,
            'p': bF,
            'q': bG
        }, void 0x0 !== bH && console['warn']('THREE.TorusKnotGeometry:\x20heightScale\x20has\x20been\x20deprecated.\x20Use\x20.scale(\x20x,\x20y,\x20z\x20)\x20instead.'), this['fromBufferGeometry'](new aiC(bf, bg, bh, bi, bF, bG)), this['mergeVertices']();
    }

    function aiC(bf, bg, bh, bi, bF, bG) {
        Gf['call'](this), this['type'] = 'TorusKnotBufferGeometry', this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'tubularSegments': bh,
            'radialSegments': bi,
            'p': bF,
            'q': bG
        }, bf = bf || 0x1, bg = bg || 0.4, bh = Math['floor'](bh) || 0x40, bi = Math['floor'](bi) || 0x8, bF = bF || 0x2, bG = bG || 0x3;
        var bH, bI, bJ = [],
            bK = [],
            bL = [],
            bM = [],
            bN = new eK(),
            bO = new eK(),
            bP = new eK(),
            bQ = new eK(),
            bR = new eK(),
            bS = new eK(),
            bT = new eK();
        for (bH = 0x0; bH <= bh; ++bH) {
            var bU = bH / bh * bF * Math['PI'] * 0x2;
            for (c2(bU, bF, bG, bf, bP), c2(bU + 0.01, bF, bG, bf, bQ), bS['subVectors'](bQ, bP), bT['addVectors'](bQ, bP), bR['crossVectors'](bS, bT), bT['crossVectors'](bR, bS), bR['normalize'](), bT['normalize'](), bI = 0x0; bI <= bi; ++bI) {
                var bV = bI / bi * Math['PI'] * 0x2,
                    bW = -bg * Math['cos'](bV),
                    bX = bg * Math['sin'](bV);
                bN['x'] = bP['x'] + (bW * bT['x'] + bX * bR['x']), bN['y'] = bP['y'] + (bW * bT['y'] + bX * bR['y']), bN['z'] = bP['z'] + (bW * bT['z'] + bX * bR['z']), bK['push'](bN['x'], bN['y'], bN['z']), bO['subVectors'](bN, bP)['normalize'](), bL['push'](bO['x'], bO['y'], bO['z']), bM['push'](bH / bh), bM['push'](bI / bi);
            }
        }
        for (bI = 0x1; bI <= bh; bI++)
            for (bH = 0x1; bH <= bi; bH++) {
                var bY = (bi + 0x1) * (bI - 0x1) + (bH - 0x1),
                    bZ = (bi + 0x1) * bI + (bH - 0x1),
                    c0 = (bi + 0x1) * bI + bH,
                    c1 = (bi + 0x1) * (bI - 0x1) + bH;
                bJ['push'](bY, bZ, c1), bJ['push'](bZ, c0, c1);
            }

        function c2(bf, bg, bh, bi, bF) {
            var bG = Math['cos'](bf),
                bH = Math['sin'](bf),
                bI = bh / bg * bf,
                bJ = Math['cos'](bI);
            bF['x'] = bi * (0x2 + bJ) * 0.5 * bG, bF['y'] = bi * (0x2 + bJ) * bH * 0.5, bF['z'] = bi * Math['sin'](bI) * 0.5;
        }
        this['setIndex'](bJ), this['addAttribute']('position', new Be(bK, 0x3)), this['addAttribute']('normal', new Be(bL, 0x3)), this['addAttribute']('uv', new Be(bM, 0x2));
    }

    function aje(bf, bg, bh, bi, bF) {
        AH['call'](this), this['type'] = 'TorusGeometry', this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'radialSegments': bh,
            'tubularSegments': bi,
            'arc': bF
        }, this['fromBufferGeometry'](new ajk(bf, bg, bh, bi, bF)), this['mergeVertices']();
    }

    function ajk(bf, bg, bh, bi, bF) {
        Gf['call'](this), this['type'] = 'TorusBufferGeometry', this['parameters'] = {
            'radius': bf,
            'tube': bg,
            'radialSegments': bh,
            'tubularSegments': bi,
            'arc': bF
        }, bf = bf || 0x1, bg = bg || 0.4, bh = Math['floor'](bh) || 0x8, bi = Math['floor'](bi) || 0x6, bF = bF || 0x2 * Math['PI'];
        var bG, bH, bI = [],
            bJ = [],
            bK = [],
            bL = [],
            bM = new eK(),
            bN = new eK(),
            bO = new eK();
        for (bG = 0x0; bG <= bh; bG++)
            for (bH = 0x0; bH <= bi; bH++) {
                var bP = bH / bi * bF,
                    bQ = bG / bh * Math['PI'] * 0x2;
                bN['x'] = (bf + bg * Math['cos'](bQ)) * Math['cos'](bP), bN['y'] = (bf + bg * Math['cos'](bQ)) * Math['sin'](bP), bN['z'] = bg * Math['sin'](bQ), bJ['push'](bN['x'], bN['y'], bN['z']), bM['x'] = bf * Math['cos'](bP), bM['y'] = bf * Math['sin'](bP), bO['subVectors'](bN, bM)['normalize'](), bK['push'](bO['x'], bO['y'], bO['z']), bL['push'](bH / bi), bL['push'](bG / bh);
            }
        for (bG = 0x1; bG <= bh; bG++)
            for (bH = 0x1; bH <= bi; bH++) {
                var bR = (bi + 0x1) * bG + bH - 0x1,
                    bS = (bi + 0x1) * (bG - 0x1) + bH - 0x1,
                    bT = (bi + 0x1) * (bG - 0x1) + bH,
                    bU = (bi + 0x1) * bG + bH;
                bI['push'](bR, bS, bU), bI['push'](bS, bT, bU);
            }
        this['setIndex'](bI), this['addAttribute']('position', new Be(bJ, 0x3)), this['addAttribute']('normal', new Be(bK, 0x3)), this['addAttribute']('uv', new Be(bL, 0x2));
    }
    Object['assign'](ae3['prototype'], {
        'isFogExp2': !0x0,
        'clone': function() {
            return new ae3(this['color'], this['density']);
        },
        'toJSON': function() {
            return {
                'type': 'FogExp2',
                'color': this['color']['getHex'](),
                'density': this['density']
            };
        }
    }), Object['assign'](ae6['prototype'], {
        'isFog': !0x0,
        'clone': function() {
            return new ae6(this['color'], this['near'], this['far']);
        },
        'toJSON': function() {
            return {
                'type': 'Fog',
                'color': this['color']['getHex'](),
                'near': this['near'],
                'far': this['far']
            };
        }
    }), aea['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aea,
        'isScene': !0x0,
        'copy': function(bf, bg) {
            return yT['prototype']['copy']['call'](this, bf, bg), null !== bf['background'] && (this['background'] = bf['background']['clone']()), null !== bf['fog'] && (this['fog'] = bf['fog']['clone']()), null !== bf['overrideMaterial'] && (this['overrideMaterial'] = bf['overrideMaterial']['clone']()), this['autoUpdate'] = bf['autoUpdate'], this['matrixAutoUpdate'] = bf['matrixAutoUpdate'], this;
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return null !== this['background'] && (bg['object']['background'] = this['background']['toJSON'](bf)), null !== this['fog'] && (bg['object']['fog'] = this['fog']['toJSON']()), bg;
        },
        'dispose': function() {
            this['dispatchEvent']({
                'type': 'dispose'
            });
        }
    }), Object['defineProperty'](aeb['prototype'], 'needsUpdate', {
        'set': function(bf) {
            !0x0 === bf && this['version']++;
        }
    }), Object['assign'](aeb['prototype'], {
        'isInterleavedBuffer': !0x0,
        'onUploadCallback': function() {},
        'setArray': function(bf) {
            if (Array['isArray'](bf)) throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
            return this['count'] = void 0x0 !== bf ? bf['length'] / this['stride'] : 0x0, this['array'] = bf, this;
        },
        'setDynamic': function(bf) {
            return this['dynamic'] = bf, this;
        },
        'copy': function(bf) {
            return this['array'] = new bf['array']['constructor'](bf['array']), this['count'] = bf['count'], this['stride'] = bf['stride'], this['dynamic'] = bf['dynamic'], this;
        },
        'copyAt': function(bf, bg, bh) {
            bf *= this['stride'], bh *= bg['stride'];
            for (var bi = 0x0, bF = this['stride']; bi < bF; bi++) this['array'][bf + bi] = bg['array'][bh + bi];
            return this;
        },
        'set': function(bf, bg) {
            return void 0x0 === bg && (bg = 0x0), this['array']['set'](bf, bg), this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'onUpload': function(bf) {
            return this['onUploadCallback'] = bf, this;
        }
    }), Object['defineProperties'](aee['prototype'], {
        'count': {
            'get': function() {
                return this['data']['count'];
            }
        },
        'array': {
            'get': function() {
                return this['data']['array'];
            }
        }
    }), Object['assign'](aee['prototype'], {
        'isInterleavedBufferAttribute': !0x0,
        'setX': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset']] = bg, this;
        },
        'setY': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1] = bg, this;
        },
        'setZ': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2] = bg, this;
        },
        'setW': function(bf, bg) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3] = bg, this;
        },
        'getX': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset']];
        },
        'getY': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1];
        },
        'getZ': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2];
        },
        'getW': function(bf) {
            return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3];
        },
        'setXY': function(bf, bg, bh) {
            return bf = bf * this['data']['stride'] + this['offset'], this['data']['array'][bf + 0x0] = bg, this['data']['array'][bf + 0x1] = bh, this;
        },
        'setXYZ': function(bf, bg, bh, bi) {
            return bf = bf * this['data']['stride'] + this['offset'], this['data']['array'][bf + 0x0] = bg, this['data']['array'][bf + 0x1] = bh, this['data']['array'][bf + 0x2] = bi, this;
        },
        'setXYZW': function(bf, bg, bh, bi, bF) {
            return bf = bf * this['data']['stride'] + this['offset'], this['data']['array'][bf + 0x0] = bg, this['data']['array'][bf + 0x1] = bh, this['data']['array'][bf + 0x2] = bi, this['data']['array'][bf + 0x3] = bF, this;
        }
    }), aej['prototype'] = Object['create'](Kf['prototype']), aej['prototype']['constructor'] = aej, aej['prototype']['isSpriteMaterial'] = !0x0, aej['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['rotation'] = bf['rotation'], this['sizeAttenuation'] = bf['sizeAttenuation'], this;
    }, ael['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': ael,
        'isSprite': !0x0,
        'raycast': function() {
            var bf = new eK(),
                bg = new eK(),
                bh = new eK(),
                bi = new eC(),
                bF = new eC(),
                bG = new mR(),
                bH = new eK(),
                bI = new eK(),
                bJ = new eK(),
                bK = new eC(),
                bL = new eC(),
                bM = new eC();

            function bN(bf, bg, bh, bH, bI, bJ) {
                bi['subVectors'](bf, bh)['addScalar'](0.5)['multiply'](bH), void 0x0 !== bI ? (bF['x'] = bJ * bi['x'] - bI * bi['y'], bF['y'] = bI * bi['x'] + bJ * bi['y']) : bF['copy'](bi), bf['copy'](bg), bf['x'] += bF['x'], bf['y'] += bF['y'], bf['applyMatrix4'](bG);
            }
            return function(bi, bF) {
                bg['setFromMatrixScale'](this['matrixWorld']), bG['getInverse'](this['modelViewMatrix'])['premultiply'](this['matrixWorld']), bh['setFromMatrixPosition'](this['modelViewMatrix']);
                var bO, bP, bQ = this['material']['rotation'];
                0x0 !== bQ && (bP = Math['cos'](bQ), bO = Math['sin'](bQ));
                var bR = this['center'];
                bN(bH['set'](-0.5, -0.5, 0x0), bh, bR, bg, bO, bP), bN(bI['set'](0.5, -0.5, 0x0), bh, bR, bg, bO, bP), bN(bJ['set'](0.5, 0.5, 0x0), bh, bR, bg, bO, bP), bK['set'](0x0, 0x0), bL['set'](0x1, 0x0), bM['set'](0x1, 0x1);
                var bS = bi['ray']['intersectTriangle'](bH, bI, bJ, !0x1, bf);
                if (null !== bS || (bN(bI['set'](-0.5, 0.5, 0x0), bh, bR, bg, bO, bP), bL['set'](0x0, 0x1), null !== (bS = bi['ray']['intersectTriangle'](bH, bJ, bI, !0x1, bf)))) {
                    var bT = bi['ray']['origin']['distanceTo'](bf);
                    bT < bi['near'] || bT > bi['far'] || bF['push']({
                        'distance': bT,
                        'point': bf['clone'](),
                        'uv': KS['getUV'](bf, bH, bI, bJ, bK, bL, bM, new eC()),
                        'face': null,
                        'object': this
                    });
                }
            };
        }(),
        'clone': function() {
            return new this['constructor'](this['material'])['copy'](this);
        },
        'copy': function(bf) {
            return yT['prototype']['copy']['call'](this, bf), void 0x0 !== bf['center'] && this['center']['copy'](bf['center']), this;
        }
    }), aeo['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aeo,
        'isLOD': !0x0,
        'copy': function(bf) {
            yT['prototype']['copy']['call'](this, bf, !0x1);
            for (var bg = bf['levels'], bh = 0x0, bi = bg['length']; bh < bi; bh++) {
                var bF = bg[bh];
                this['addLevel'](bF['object']['clone'](), bF['distance']);
            }
            return this;
        },
        'addLevel': function(bf, bg) {
            void 0x0 === bg && (bg = 0x0), bg = Math['abs'](bg);
            for (var bh = this['levels'], bi = 0x0; bi < bh['length'] && !(bg < bh[bi]['distance']); bi++);
            return bh['splice'](bi, 0x0, {
                'distance': bg,
                'object': bf
            }), this['add'](bf), this;
        },
        'getObjectForDistance': function(bf) {
            for (var bg = this['levels'], bh = 0x1, bi = bg['length']; bh < bi && !(bf < bg[bh]['distance']); bh++);
            return bg[bh - 0x1]['object'];
        },
        'raycast': (a6J = new eK(), function(bf, bg) {
            a6J['setFromMatrixPosition'](this['matrixWorld']);
            var bh = bf['ray']['origin']['distanceTo'](a6J);
            this['getObjectForDistance'](bh)['raycast'](bf, bg);
        }),
        'update': function() {
            var bf = new eK(),
                bg = new eK();
            return function(bh) {
                var bi = this['levels'];
                if (bi['length'] > 0x1) {
                    bf['setFromMatrixPosition'](bh['matrixWorld']), bg['setFromMatrixPosition'](this['matrixWorld']);
                    var bF = bf['distanceTo'](bg);
                    bi[0x0]['object']['visible'] = !0x0;
                    for (var bG = 0x1, bH = bi['length']; bG < bH && bF >= bi[bG]['distance']; bG++) bi[bG - 0x1]['object']['visible'] = !0x1, bi[bG]['object']['visible'] = !0x0;
                    for (; bG < bH; bG++) bi[bG]['object']['visible'] = !0x1;
                }
            };
        }(),
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            bg['object']['levels'] = [];
            for (var bh = this['levels'], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                var bG = bh[bi];
                bg['object']['levels']['push']({
                    'object': bG['object']['uuid'],
                    'distance': bG['distance']
                });
            }
            return bg;
        }
    }), aep['prototype'] = Object['assign'](Object['create'](KY['prototype']), {
        'constructor': aep,
        'isSkinnedMesh': !0x0,
        'bind': function(bf, bg) {
            this['skeleton'] = bf, void 0x0 === bg && (this['updateMatrixWorld'](!0x0), this['skeleton']['calculateInverses'](), bg = this['matrixWorld']), this['bindMatrix']['copy'](bg), this['bindMatrixInverse']['getInverse'](bg);
        },
        'pose': function() {
            this['skeleton']['pose']();
        },
        'normalizeSkinWeights': function() {
            for (var bf = new m7(), bg = this['geometry']['attributes']['skinWeight'], bh = 0x0, bi = bg['count']; bh < bi; bh++) {
                bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['w'] = bg['getW'](bh);
                var bF = 0x1 / bf['manhattanLength']();
                bF !== 0x1 / 0x0 ? bf['multiplyScalar'](bF) : bf['set'](0x1, 0x0, 0x0, 0x0), bg['setXYZW'](bh, bf['x'], bf['y'], bf['z'], bf['w']);
            }
        },
        'updateMatrixWorld': function(bf) {
            KY['prototype']['updateMatrixWorld']['call'](this, bf), 'attached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['matrixWorld']) : 'detached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['bindMatrix']) : console['warn']('THREE.SkinnedMesh:\x20Unrecognized\x20bindMode:\x20' + this['bindMode']);
        },
        'clone': function() {
            return new this['constructor'](this['geometry'], this['material'])['copy'](this);
        }
    }), Object['assign'](aes['prototype'], {
        'calculateInverses': function() {
            this['boneInverses'] = [];
            for (var bf = 0x0, bg = this['bones']['length']; bf < bg; bf++) {
                var bh = new mR();
                this['bones'][bf] && bh['getInverse'](this['bones'][bf]['matrixWorld']), this['boneInverses']['push'](bh);
            }
        },
        'pose': function() {
            var bf, bg, bh;
            for (bg = 0x0, bh = this['bones']['length']; bg < bh; bg++)(bf = this['bones'][bg]) && bf['matrixWorld']['getInverse'](this['boneInverses'][bg]);
            for (bg = 0x0, bh = this['bones']['length']; bg < bh; bg++)(bf = this['bones'][bg]) && (bf['parent'] && bf['parent']['isBone'] ? (bf['matrix']['getInverse'](bf['parent']['matrixWorld']), bf['matrix']['multiply'](bf['matrixWorld'])) : bf['matrix']['copy'](bf['matrixWorld']), bf['matrix']['decompose'](bf['position'], bf['quaternion'], bf['scale']));
        },
        'update': (a6K = new mR(), a6L = new mR(), function() {
            for (var bf = this['bones'], bg = this['boneInverses'], bh = this['boneMatrices'], bi = this['boneTexture'], bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                var bH = bf[bF] ? bf[bF]['matrixWorld'] : a6L;
                a6K['multiplyMatrices'](bH, bg[bF]), a6K['toArray'](bh, 0x10 * bF);
            }
            void 0x0 !== bi && (bi['needsUpdate'] = !0x0);
        }),
        'clone': function() {
            return new aes(this['bones'], this['boneInverses']);
        },
        'getBoneByName': function(bf) {
            for (var bg = 0x0, bh = this['bones']['length']; bg < bh; bg++) {
                var bi = this['bones'][bg];
                if (bi['name'] === bf) return bi;
            }
        }
    }), aex['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aex,
        'isBone': !0x0
    }), aey['prototype'] = Object['create'](Kf['prototype']), aey['prototype']['constructor'] = aey, aey['prototype']['isLineBasicMaterial'] = !0x0, aey['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['linewidth'] = bf['linewidth'], this['linecap'] = bf['linecap'], this['linejoin'] = bf['linejoin'], this;
    }, aeA['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aeA,
        'isLine': !0x0,
        'computeLineDistances': (a6M = new eK(), a6N = new eK(), function() {
            var bf = this['geometry'];
            if (bf['isBufferGeometry'])
                if (null === bf['index']) {
                    for (var bg = bf['attributes']['position'], bh = [0x0], bi = 0x1, bF = bg['count']; bi < bF; bi++) a6M['fromBufferAttribute'](bg, bi - 0x1), a6N['fromBufferAttribute'](bg, bi), bh[bi] = bh[bi - 0x1], bh[bi] += a6M['distanceTo'](a6N);
                    bf['addAttribute']('lineDistance', new Be(bh, 0x1));
                } else console['warn']('THREE.Line.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
            else if (bf['isGeometry']) {
                var bG = bf['vertices'];
                for ((bh = bf['lineDistances'])[0x0] = 0x0, bi = 0x1, bF = bG['length']; bi < bF; bi++) bh[bi] = bh[bi - 0x1], bh[bi] += bG[bi - 0x1]['distanceTo'](bG[bi]);
            }
            return this;
        }),
        'raycast': function() {
            var bf = new mR(),
                bg = new KP(),
                bh = new mE();
            return function(bi, bF) {
                var bG = bi['linePrecision'],
                    bH = this['geometry'],
                    bI = this['matrixWorld'];
                if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](), bh['copy'](bH['boundingSphere']), bh['applyMatrix4'](bI), bh['radius'] += bG, !0x1 !== bi['ray']['intersectsSphere'](bh)) {
                    bf['getInverse'](bI), bg['copy'](bi['ray'])['applyMatrix4'](bf);
                    var bJ = bG / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3),
                        bK = bJ * bJ,
                        bL = new eK(),
                        bM = new eK(),
                        bN = new eK(),
                        bO = new eK(),
                        bP = this && this['isLineSegments'] ? 0x2 : 0x1;
                    if (bH['isBufferGeometry']) {
                        var bQ = bH['index'],
                            bR = bH['attributes']['position']['array'];
                        if (null !== bQ)
                            for (var bS = bQ['array'], bT = 0x0, bU = bS['length'] - 0x1; bT < bU; bT += bP) {
                                var bV = bS[bT],
                                    bW = bS[bT + 0x1];
                                if (bL['fromArray'](bR, 0x3 * bV), bM['fromArray'](bR, 0x3 * bW), !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK)) bO['applyMatrix4'](this['matrixWorld']), (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                    'distance': bZ,
                                    'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                    'index': bT,
                                    'face': null,
                                    'faceIndex': null,
                                    'object': this
                                });
                            } else
                                for (bT = 0x0, bU = bR['length'] / 0x3 - 0x1; bT < bU; bT += bP) {
                                    if (bL['fromArray'](bR, 0x3 * bT), bM['fromArray'](bR, 0x3 * bT + 0x3), !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK)) bO['applyMatrix4'](this['matrixWorld']), (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                        'distance': bZ,
                                        'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                        'index': bT,
                                        'face': null,
                                        'faceIndex': null,
                                        'object': this
                                    });
                                }
                    } else if (bH['isGeometry']) {
                        var bX = bH['vertices'],
                            bY = bX['length'];
                        for (bT = 0x0; bT < bY - 0x1; bT += bP) {
                            var bZ;
                            if (!(bg['distanceSqToSegment'](bX[bT], bX[bT + 0x1], bO, bN) > bK)) bO['applyMatrix4'](this['matrixWorld']), (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                'distance': bZ,
                                'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                'index': bT,
                                'face': null,
                                'faceIndex': null,
                                'object': this
                            });
                        }
                    }
                }
            };
        }(),
        'clone': function() {
            return new this['constructor'](this['geometry'], this['material'])['copy'](this);
        }
    }), aeE['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
        'constructor': aeE,
        'isLineSegments': !0x0,
        'computeLineDistances': function() {
            var bf = new eK(),
                bg = new eK();
            return function() {
                var bh = this['geometry'];
                if (bh['isBufferGeometry'])
                    if (null === bh['index']) {
                        for (var bi = bh['attributes']['position'], bF = [], bG = 0x0, bH = bi['count']; bG < bH; bG += 0x2) bf['fromBufferAttribute'](bi, bG), bg['fromBufferAttribute'](bi, bG + 0x1), bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1], bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
                        bh['addAttribute']('lineDistance', new Be(bF, 0x1));
                    } else console['warn']('THREE.LineSegments.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
                else if (bh['isGeometry']) {
                    var bI = bh['vertices'];
                    for (bF = bh['lineDistances'], bG = 0x0, bH = bI['length']; bG < bH; bG += 0x2) bf['copy'](bI[bG]), bg['copy'](bI[bG + 0x1]), bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1], bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
                }
                return this;
            };
        }()
    }), aeH['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
        'constructor': aeH,
        'isLineLoop': !0x0
    }), aeK['prototype'] = Object['create'](Kf['prototype']), aeK['prototype']['constructor'] = aeK, aeK['prototype']['isPointsMaterial'] = !0x0, aeK['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['size'] = bf['size'], this['sizeAttenuation'] = bf['sizeAttenuation'], this['morphTargets'] = bf['morphTargets'], this;
    }, aeM['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aeM,
        'isPoints': !0x0,
        'raycast': function() {
            var bf = new mR(),
                bg = new KP(),
                bh = new mE();
            return function(bi, bF) {
                var bG = this,
                    bH = this['geometry'],
                    bI = this['matrixWorld'],
                    bJ = bi['params']['Points']['threshold'];
                if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](), bh['copy'](bH['boundingSphere']), bh['applyMatrix4'](bI), bh['radius'] += bJ, !0x1 !== bi['ray']['intersectsSphere'](bh)) {
                    bf['getInverse'](bI), bg['copy'](bi['ray'])['applyMatrix4'](bf);
                    var bK = bJ / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3),
                        bL = bK * bK,
                        bM = new eK(),
                        bN = new eK();
                    if (bH['isBufferGeometry']) {
                        var bO = bH['index'],
                            bP = bH['attributes']['position']['array'];
                        if (null !== bO)
                            for (var bQ = bO['array'], bR = 0x0, bS = bQ['length']; bR < bS; bR++) {
                                var bT = bQ[bR];
                                bM['fromArray'](bP, 0x3 * bT), bW(bM, bT);
                            } else {
                                bR = 0x0;
                                for (var bU = bP['length'] / 0x3; bR < bU; bR++) bM['fromArray'](bP, 0x3 * bR), bW(bM, bR);
                            }
                    } else {
                        var bV = bH['vertices'];
                        for (bR = 0x0, bU = bV['length']; bR < bU; bR++) bW(bV[bR], bR);
                    }
                }

                function bW(bf, bh) {
                    var bH = bg['distanceSqToPoint'](bf);
                    if (bH < bL) {
                        bg['closestPointToPoint'](bf, bN), bN['applyMatrix4'](bI);
                        var bJ = bi['ray']['origin']['distanceTo'](bN);
                        if (bJ < bi['near'] || bJ > bi['far']) return;
                        bF['push']({
                            'distance': bJ,
                            'distanceToRay': Math['sqrt'](bH),
                            'point': bN['clone'](),
                            'index': bh,
                            'face': null,
                            'object': bG
                        });
                    }
                }
            };
        }(),
        'clone': function() {
            return new this['constructor'](this['geometry'], this['material'])['copy'](this);
        }
    }), aeP['prototype'] = Object['assign'](Object['create'](lW['prototype']), {
        'constructor': aeP,
        'isVideoTexture': !0x0,
        'update': function() {
            var bf = this['image'];
            bf['readyState'] >= bf['HAVE_CURRENT_DATA'] && (this['needsUpdate'] = !0x0);
        }
    }), aeZ['prototype'] = Object['create'](lW['prototype']), aeZ['prototype']['constructor'] = aeZ, aeZ['prototype']['isCompressedTexture'] = !0x0, afc['prototype'] = Object['create'](lW['prototype']), afc['prototype']['constructor'] = afc, afc['prototype']['isCanvasTexture'] = !0x0, afm['prototype'] = Object['create'](lW['prototype']), afm['prototype']['constructor'] = afm, afm['prototype']['isDepthTexture'] = !0x0, afx['prototype'] = Object['create'](Gf['prototype']), afx['prototype']['constructor'] = afx, afW['prototype'] = Object['create'](AH['prototype']), afW['prototype']['constructor'] = afW, ag0['prototype'] = Object['create'](Gf['prototype']), ag0['prototype']['constructor'] = ag0, agm['prototype'] = Object['create'](AH['prototype']), agm['prototype']['constructor'] = agm, agr['prototype'] = Object['create'](Gf['prototype']), agr['prototype']['constructor'] = agr, ahr['prototype'] = Object['create'](AH['prototype']), ahr['prototype']['constructor'] = ahr, ahu['prototype'] = Object['create'](agr['prototype']), ahu['prototype']['constructor'] = ahu, ahx['prototype'] = Object['create'](AH['prototype']), ahx['prototype']['constructor'] = ahx, ahA['prototype'] = Object['create'](agr['prototype']), ahA['prototype']['constructor'] = ahA, ahD['prototype'] = Object['create'](AH['prototype']), ahD['prototype']['constructor'] = ahD, ahG['prototype'] = Object['create'](agr['prototype']), ahG['prototype']['constructor'] = ahG, ahL['prototype'] = Object['create'](AH['prototype']), ahL['prototype']['constructor'] = ahL, ahO['prototype'] = Object['create'](agr['prototype']), ahO['prototype']['constructor'] = ahO, ahU['prototype'] = Object['create'](AH['prototype']), ahU['prototype']['constructor'] = ahU, ai2['prototype'] = Object['create'](Gf['prototype']), ai2['prototype']['constructor'] = ai2, ai2['prototype']['toJSON'] = function() {
        var bf = Gf['prototype']['toJSON']['call'](this);
        return bf['path'] = this['parameters']['path']['toJSON'](), bf;
    }, aiu['prototype'] = Object['create'](AH['prototype']), aiu['prototype']['constructor'] = aiu, aiC['prototype'] = Object['create'](Gf['prototype']), aiC['prototype']['constructor'] = aiC, aje['prototype'] = Object['create'](AH['prototype']), aje['prototype']['constructor'] = aje, ajk['prototype'] = Object['create'](Gf['prototype']), ajk['prototype']['constructor'] = ajk;
    var amL = function(bf, bg, bh) {
        bh = bh || 0x2;
        var bi, bF, bG, bH, bI, bJ, bK, bL = bg && bg['length'],
            bM = bL ? bg[0x0] * bh : bf['length'],
            bN = anb(bf, 0x0, bM, bh, !0x0),
            bO = [];
        if (!bN) return bO;
        if (bL && (bN = function(bf, bg, bh, bi) {
                var bF, bG, bH, bI, bJ, bK = [];
                for (bF = 0x0, bG = bg['length']; bF < bG; bF++) bH = bg[bF] * bi, bI = bF < bG - 0x1 ? bg[bF + 0x1] * bi : bf['length'], (bJ = anb(bf, bH, bI, bi, !0x1)) === bJ['next'] && (bJ['steiner'] = !0x0), bK['push'](aoX(bJ));
                for (bK['sort'](aox), bF = 0x0; bF < bK['length']; bF++) aoA(bK[bF], bh), bh = anq(bh, bh['next']);
                return bh;
            }(bf, bg, bN, bh)), bf['length'] > 0x50 * bh) {
            bi = bG = bf[0x0], bF = bH = bf[0x1];
            for (var bP = bh; bP < bM; bP += bh)(bI = bf[bP]) < bi && (bi = bI), (bJ = bf[bP + 0x1]) < bF && (bF = bJ), bI > bG && (bG = bI), bJ > bH && (bH = bJ);
            bK = 0x0 !== (bK = Math['max'](bG - bi, bH - bF)) ? 0x1 / bK : 0x0;
        }
        return anv(bN, bO, bh, bi, bF, bK), bO;
    };

    function anb(bf, bg, bh, bi, bF) {
        var bG, bH;
        if (bF === function(bf, bg, bh, bi) {
                for (var bF = 0x0, bG = bg, bH = bh - bi; bG < bh; bG += bi) bF += (bf[bH] - bf[bG]) * (bf[bG + 0x1] + bf[bH + 0x1]), bH = bG;
                return bF;
            }(bf, bg, bh, bi) > 0x0)
            for (bG = bg; bG < bh; bG += bi) bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
        else
            for (bG = bh - bi; bG >= bg; bG -= bi) bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
        return bH && apq(bH, bH['next']) && (apO(bH), bH = bH['next']), bH;
    }

    function anq(bf, bg) {
        if (!bf) return bf;
        bg || (bg = bf);
        var bh, bi = bf;
        do {
            if (bh = !0x1, bi['steiner'] || !apq(bi, bi['next']) && 0x0 !== apm(bi['prev'], bi, bi['next'])) bi = bi['next'];
            else {
                if (apO(bi), (bi = bg = bi['prev']) === bi['next']) break;
                bh = !0x0;
            }
        } while (bh || bi !== bg);
        return bg;
    }

    function anv(bf, bg, bh, bi, bF, bG, bH) {
        if (bf) {
            !bH && bG && function(bf, bg, bh, bi) {
                var bF = bf;
                do {
                    null === bF['z'] && (bF['z'] = aoR(bF['x'], bF['y'], bg, bh, bi)), bF['prevZ'] = bF['prev'], bF['nextZ'] = bF['next'], bF = bF['next'];
                } while (bF !== bf);
                bF['prevZ']['nextZ'] = null, bF['prevZ'] = null,
                    function(bf) {
                        var bg, bh, bi, bF, bG, bH, bI, bJ, bK = 0x1;
                        do {
                            for (bh = bf, bf = null, bG = null, bH = 0x0; bh;) {
                                for (bH++, bi = bh, bI = 0x0, bg = 0x0; bg < bK && (bI++, bi = bi['nextZ']); bg++);
                                for (bJ = bK; bI > 0x0 || bJ > 0x0 && bi;) 0x0 !== bI && (0x0 === bJ || !bi || bh['z'] <= bi['z']) ? (bF = bh, bh = bh['nextZ'], bI--) : (bF = bi, bi = bi['nextZ'], bJ--), bG ? bG['nextZ'] = bF : bf = bF, bF['prevZ'] = bG, bG = bF;
                                bh = bi;
                            }
                            bG['nextZ'] = null, bK *= 0x2;
                        } while (bH > 0x1);
                    }(bF);
            }(bf, bi, bF, bG);
            for (var bI, bJ, bK = bf; bf['prev'] !== bf['next'];)
                if (bI = bf['prev'], bJ = bf['next'], bG ? ao1(bf, bi, bF, bG) : anV(bf)) bg['push'](bI['i'] / bh), bg['push'](bf['i'] / bh), bg['push'](bJ['i'] / bh), apO(bf), bf = bJ['next'], bK = bJ['next'];
                else if ((bf = bJ) === bK) {
                bH ? 0x1 === bH ? anv(bf = aog(bf, bg, bh), bg, bh, bi, bF, bG, 0x2) : 0x2 === bH && aon(bf, bg, bh, bi, bF, bG) : anv(anq(bf), bg, bh, bi, bF, bG, 0x1);
                break;
            }
        }
    }

    function anV(bf) {
        var bg = bf['prev'],
            bh = bf,
            bi = bf['next'];
        if (apm(bg, bh, bi) >= 0x0) return !0x1;
        for (var bF = bf['next']['next']; bF !== bf['prev'];) {
            if (ap1(bg['x'], bg['y'], bh['x'], bh['y'], bi['x'], bi['y'], bF['x'], bF['y']) && apm(bF['prev'], bF, bF['next']) >= 0x0) return !0x1;
            bF = bF['next'];
        }
        return !0x0;
    }

    function ao1(bf, bg, bh, bi) {
        var bF = bf['prev'],
            bG = bf,
            bH = bf['next'];
        if (apm(bF, bG, bH) >= 0x0) return !0x1;
        for (var bI = bF['x'] < bG['x'] ? bF['x'] < bH['x'] ? bF['x'] : bH['x'] : bG['x'] < bH['x'] ? bG['x'] : bH['x'], bJ = bF['y'] < bG['y'] ? bF['y'] < bH['y'] ? bF['y'] : bH['y'] : bG['y'] < bH['y'] ? bG['y'] : bH['y'], bK = bF['x'] > bG['x'] ? bF['x'] > bH['x'] ? bF['x'] : bH['x'] : bG['x'] > bH['x'] ? bG['x'] : bH['x'], bL = bF['y'] > bG['y'] ? bF['y'] > bH['y'] ? bF['y'] : bH['y'] : bG['y'] > bH['y'] ? bG['y'] : bH['y'], bM = aoR(bI, bJ, bg, bh, bi), bN = aoR(bK, bL, bg, bh, bi), bO = bf['nextZ']; bO && bO['z'] <= bN;) {
            if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0) return !0x1;
            bO = bO['nextZ'];
        }
        for (bO = bf['prevZ']; bO && bO['z'] >= bM;) {
            if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0) return !0x1;
            bO = bO['prevZ'];
        }
        return !0x0;
    }

    function aog(bf, bg, bh) {
        var bi = bf;
        do {
            var bF = bi['prev'],
                bG = bi['next']['next'];
            !apq(bF, bG) && apt(bF, bi, bi['next'], bG) && apy(bF, bG) && apy(bG, bF) && (bg['push'](bF['i'] / bh), bg['push'](bi['i'] / bh), bg['push'](bG['i'] / bh), apO(bi), apO(bi['next']), bi = bf = bG), bi = bi['next'];
        } while (bi !== bf);
        return bi;
    }

    function aon(bf, bg, bh, bi, bF, bG) {
        var bH = bf;
        do {
            for (var bI = bH['next']['next']; bI !== bH['prev'];) {
                if (bH['i'] !== bI['i'] && apa(bH, bI)) {
                    var bJ = apB(bH, bI);
                    return bH = anq(bH, bH['next']), bJ = anq(bJ, bJ['next']), anv(bH, bg, bh, bi, bF, bG), void anv(bJ, bg, bh, bi, bF, bG);
                }
                bI = bI['next'];
            }
            bH = bH['next'];
        } while (bH !== bf);
    }

    function aox(bf, bg) {
        return bf['x'] - bg['x'];
    }

    function aoA(bf, bg) {
        if (bg = function(bf, bg) {
                var bh, bi = bg,
                    bF = bf['x'],
                    bG = bf['y'],
                    bH = -0x1 / 0x0;
                do {
                    if (bG <= bi['y'] && bG >= bi['next']['y'] && bi['next']['y'] !== bi['y']) {
                        var bI = bi['x'] + (bG - bi['y']) * (bi['next']['x'] - bi['x']) / (bi['next']['y'] - bi['y']);
                        if (bI <= bF && bI > bH) {
                            if (bH = bI, bI === bF) {
                                if (bG === bi['y']) return bi;
                                if (bG === bi['next']['y']) return bi['next'];
                            }
                            bh = bi['x'] < bi['next']['x'] ? bi : bi['next'];
                        }
                    }
                    bi = bi['next'];
                } while (bi !== bg);
                if (!bh) return null;
                if (bF === bH) return bh['prev'];
                var bJ, bK = bh,
                    bL = bh['x'],
                    bM = bh['y'],
                    bN = 0x1 / 0x0;
                bi = bh['next'];
                for (; bi !== bK;) bF >= bi['x'] && bi['x'] >= bL && bF !== bi['x'] && ap1(bG < bM ? bF : bH, bG, bL, bM, bG < bM ? bH : bF, bG, bi['x'], bi['y']) && ((bJ = Math['abs'](bG - bi['y']) / (bF - bi['x'])) < bN || bJ === bN && bi['x'] > bh['x']) && apy(bi, bf) && (bh = bi, bN = bJ), bi = bi['next'];
                return bh;
            }(bf, bg)) {
            var bh = apB(bg, bf);
            anq(bh, bh['next']);
        }
    }

    function aoR(bf, bg, bh, bi, bF) {
        return (bf = 0x55555555 & ((bf = 0x33333333 & ((bf = 0xf0f0f0f & ((bf = 0xff00ff & ((bf = 0x7fff * (bf - bh) * bF) | bf << 0x8)) | bf << 0x4)) | bf << 0x2)) | bf << 0x1)) | (bg = 0x55555555 & ((bg = 0x33333333 & ((bg = 0xf0f0f0f & ((bg = 0xff00ff & ((bg = 0x7fff * (bg - bi) * bF) | bg << 0x8)) | bg << 0x4)) | bg << 0x2)) | bg << 0x1)) << 0x1;
    }

    function aoX(bf) {
        var bg = bf,
            bh = bf;
        do {
            bg['x'] < bh['x'] && (bh = bg), bg = bg['next'];
        } while (bg !== bf);
        return bh;
    }

    function ap1(bf, bg, bh, bi, bF, bG, bH, bI) {
        return (bF - bH) * (bg - bI) - (bf - bH) * (bG - bI) >= 0x0 && (bf - bH) * (bi - bI) - (bh - bH) * (bg - bI) >= 0x0 && (bh - bH) * (bG - bI) - (bF - bH) * (bi - bI) >= 0x0;
    }

    function apa(bf, bg) {
        return bf['next']['i'] !== bg['i'] && bf['prev']['i'] !== bg['i'] && ! function(bf, bg) {
            var bh = bf;
            do {
                if (bh['i'] !== bf['i'] && bh['next']['i'] !== bf['i'] && bh['i'] !== bg['i'] && bh['next']['i'] !== bg['i'] && apt(bh, bh['next'], bf, bg)) return !0x0;
                bh = bh['next'];
            } while (bh !== bf);
            return !0x1;
        }(bf, bg) && apy(bf, bg) && apy(bg, bf) && function(bf, bg) {
            var bh = bf,
                bi = !0x1,
                bF = (bf['x'] + bg['x']) / 0x2,
                bG = (bf['y'] + bg['y']) / 0x2;
            do {
                bh['y'] > bG != bh['next']['y'] > bG && bh['next']['y'] !== bh['y'] && bF < (bh['next']['x'] - bh['x']) * (bG - bh['y']) / (bh['next']['y'] - bh['y']) + bh['x'] && (bi = !bi), bh = bh['next'];
            } while (bh !== bf);
            return bi;
        }(bf, bg);
    }

    function apm(bf, bg, bh) {
        return (bg['y'] - bf['y']) * (bh['x'] - bg['x']) - (bg['x'] - bf['x']) * (bh['y'] - bg['y']);
    }

    function apq(bf, bg) {
        return bf['x'] === bg['x'] && bf['y'] === bg['y'];
    }

    function apt(bf, bg, bh, bi) {
        return !!(apq(bf, bg) && apq(bh, bi) || apq(bf, bi) && apq(bh, bg)) || apm(bf, bg, bh) > 0x0 != apm(bf, bg, bi) > 0x0 && apm(bh, bi, bf) > 0x0 != apm(bh, bi, bg) > 0x0;
    }

    function apy(bf, bg) {
        return apm(bf['prev'], bf, bf['next']) < 0x0 ? apm(bf, bg, bf['next']) >= 0x0 && apm(bf, bf['prev'], bg) >= 0x0 : apm(bf, bg, bf['prev']) < 0x0 || apm(bf, bf['next'], bg) < 0x0;
    }

    function apB(bf, bg) {
        var bh = new apQ(bf['i'], bf['x'], bf['y']),
            bi = new apQ(bg['i'], bg['x'], bg['y']),
            bF = bf['next'],
            bG = bg['prev'];
        return bf['next'] = bg, bg['prev'] = bf, bh['next'] = bF, bF['prev'] = bh, bi['next'] = bh, bh['prev'] = bi, bG['next'] = bi, bi['prev'] = bG, bi;
    }

    function apI(bf, bg, bh, bi) {
        var bF = new apQ(bf, bg, bh);
        return bi ? (bF['next'] = bi['next'], bF['prev'] = bi, bi['next']['prev'] = bF, bi['next'] = bF) : (bF['prev'] = bF, bF['next'] = bF), bF;
    }

    function apO(bf) {
        bf['next']['prev'] = bf['prev'], bf['prev']['next'] = bf['next'], bf['prevZ'] && (bf['prevZ']['nextZ'] = bf['nextZ']), bf['nextZ'] && (bf['nextZ']['prevZ'] = bf['prevZ']);
    }

    function apQ(bf, bg, bh) {
        this['i'] = bf, this['x'] = bg, this['y'] = bh, this['prev'] = null, this['next'] = null, this['z'] = null, this['prevZ'] = null, this['nextZ'] = null, this['steiner'] = !0x1;
    }
    var apU = {
        'area': function(bf) {
            for (var bg = bf['length'], bh = 0x0, bi = bg - 0x1, bF = 0x0; bF < bg; bi = bF++) bh += bf[bi]['x'] * bf[bF]['y'] - bf[bF]['x'] * bf[bi]['y'];
            return 0.5 * bh;
        },
        'isClockWise': function(bf) {
            return apU['area'](bf) < 0x0;
        },
        'triangulateShape': function(bf, bg) {
            var bh = [],
                bi = [],
                bF = [];
            aq9(bf), aqc(bh, bf);
            var bG = bf['length'];
            bg['forEach'](aq9);
            for (var bH = 0x0; bH < bg['length']; bH++) bi['push'](bG), bG += bg[bH]['length'], aqc(bh, bg[bH]);
            var bI = amL(bh, bi);
            for (bH = 0x0; bH < bI['length']; bH += 0x3) bF['push'](bI['slice'](bH, bH + 0x3));
            return bF;
        }
    };

    function aq9(bf) {
        var bg = bf['length'];
        bg > 0x2 && bf[bg - 0x1]['equals'](bf[0x0]) && bf['pop']();
    }

    function aqc(bf, bg) {
        for (var bh = 0x0; bh < bg['length']; bh++) bf['push'](bg[bh]['x']), bf['push'](bg[bh]['y']);
    }

    function aqg(bf, bg) {
        AH['call'](this), this['type'] = 'ExtrudeGeometry', this['parameters'] = {
            'shapes': bf,
            'options': bg
        }, this['fromBufferGeometry'](new aqj(bf, bg)), this['mergeVertices']();
    }

    function aqj(bf, bg) {
        Gf['call'](this), this['type'] = 'ExtrudeBufferGeometry', this['parameters'] = {
            'shapes': bf,
            'options': bg
        }, bf = Array['isArray'](bf) ? bf : [bf];
        for (var bh = this, bi = [], bF = [], bG = 0x0, bH = bf['length']; bG < bH; bG++) {
            bI(bf[bG]);
        }

        function bI(bf) {
            var bG = [],
                bH = void 0x0 !== bg['curveSegments'] ? bg['curveSegments'] : 0xc,
                bI = void 0x0 !== bg['steps'] ? bg['steps'] : 0x1,
                bJ = void 0x0 !== bg['depth'] ? bg['depth'] : 0x64,
                bK = void 0x0 === bg['bevelEnabled'] || bg['bevelEnabled'],
                bL = void 0x0 !== bg['bevelThickness'] ? bg['bevelThickness'] : 0x6,
                bM = void 0x0 !== bg['bevelSize'] ? bg['bevelSize'] : bL - 0x2,
                bN = void 0x0 !== bg['bevelOffset'] ? bg['bevelOffset'] : 0x0,
                bO = void 0x0 !== bg['bevelSegments'] ? bg['bevelSegments'] : 0x3,
                bP = bg['extrudePath'],
                bQ = void 0x0 !== bg['UVGenerator'] ? bg['UVGenerator'] : as8;
            void 0x0 !== bg['amount'] && (console['warn']('THREE.ExtrudeBufferGeometry:\x20amount\x20has\x20been\x20renamed\x20to\x20depth.'), bJ = bg['amount']);
            var bR, bS, bT, bU, bV, bW, bX, bY, bZ = !0x1;
            bP && (bR = bP['getSpacedPoints'](bI), bZ = !0x0, bK = !0x1, bS = bP['computeFrenetFrames'](bI, !0x1), bT = new eK(), bU = new eK(), bV = new eK()), bK || (bO = 0x0, bL = 0x0, bM = 0x0, bN = 0x0);
            var c0 = bf['extractPoints'](bH),
                c1 = c0['shape'],
                c2 = c0['holes'];
            if (!apU['isClockWise'](c1))
                for (c1 = c1['reverse'](), bX = 0x0, bY = c2['length']; bX < bY; bX++) bW = c2[bX], apU['isClockWise'](bW) && (c2[bX] = bW['reverse']());
            var c3 = apU['triangulateShape'](c1, c2),
                c4 = c1;
            for (bX = 0x0, bY = c2['length']; bX < bY; bX++) bW = c2[bX], c1 = c1['concat'](bW);

            function c5(bf, bg, bh) {
                return bg || console['error']('THREE.ExtrudeGeometry:\x20vec\x20does\x20not\x20exist'), bg['clone']()['multiplyScalar'](bh)['add'](bf);
            }
            var c6, c7, c8, c9, ca, cb, cc = c1['length'],
                cd = c3['length'];

            function ce(bf, bg, bh) {
                var bi, bF, bG, bH = bf['x'] - bg['x'],
                    bI = bf['y'] - bg['y'],
                    bJ = bh['x'] - bf['x'],
                    bK = bh['y'] - bf['y'],
                    bL = bH * bH + bI * bI,
                    bM = bH * bK - bI * bJ;
                if (Math['abs'](bM) > Number['EPSILON']) {
                    var bN = Math['sqrt'](bL),
                        bO = Math['sqrt'](bJ * bJ + bK * bK),
                        bP = bg['x'] - bI / bN,
                        bQ = bg['y'] + bH / bN,
                        bR = ((bh['x'] - bK / bO - bP) * bK - (bh['y'] + bJ / bO - bQ) * bJ) / (bH * bK - bI * bJ),
                        bS = (bi = bP + bH * bR - bf['x']) * bi + (bF = bQ + bI * bR - bf['y']) * bF;
                    if (bS <= 0x2) return new eC(bi, bF);
                    bG = Math['sqrt'](bS / 0x2);
                } else {
                    var bT = !0x1;
                    bH > Number['EPSILON'] ? bJ > Number['EPSILON'] && (bT = !0x0) : bH < -Number['EPSILON'] ? bJ < -Number['EPSILON'] && (bT = !0x0) : Math['sign'](bI) === Math['sign'](bK) && (bT = !0x0), bT ? (bi = -bI, bF = bH, bG = Math['sqrt'](bL)) : (bi = bH, bF = bI, bG = Math['sqrt'](bL / 0x2));
                }
                return new eC(bi / bG, bF / bG);
            }
            for (var cf = [], cg = 0x0, ch = c4['length'], ci = ch - 0x1, cj = cg + 0x1; cg < ch; cg++, ci++, cj++) ci === ch && (ci = 0x0), cj === ch && (cj = 0x0), cf[cg] = ce(c4[cg], c4[ci], c4[cj]);
            var ck, cl, cm = [],
                cn = cf['concat']();
            for (bX = 0x0, bY = c2['length']; bX < bY; bX++) {
                for (bW = c2[bX], ck = [], cg = 0x0, ci = (ch = bW['length']) - 0x1, cj = cg + 0x1; cg < ch; cg++, ci++, cj++) ci === ch && (ci = 0x0), cj === ch && (cj = 0x0), ck[cg] = ce(bW[cg], bW[ci], bW[cj]);
                cm['push'](ck), cn = cn['concat'](ck);
            }
            for (c6 = 0x0; c6 < bO; c6++) {
                for (c8 = c6 / bO, c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2), c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN, cg = 0x0, ch = c4['length']; cg < ch; cg++) cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], -c9);
                for (bX = 0x0, bY = c2['length']; bX < bY; bX++)
                    for (bW = c2[bX], ck = cm[bX], cg = 0x0, ch = bW['length']; cg < ch; cg++) cp((ca = c5(bW[cg], ck[cg], c7))['x'], ca['y'], -c9);
            }
            for (c7 = bM + bN, cg = 0x0; cg < cc; cg++) ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg], bZ ? (bU['copy'](bS['normals'][0x0])['multiplyScalar'](ca['x']), bT['copy'](bS['binormals'][0x0])['multiplyScalar'](ca['y']), bV['copy'](bR[0x0])['add'](bU)['add'](bT), cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], 0x0);
            for (cl = 0x1; cl <= bI; cl++)
                for (cg = 0x0; cg < cc; cg++) ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg], bZ ? (bU['copy'](bS['normals'][cl])['multiplyScalar'](ca['x']), bT['copy'](bS['binormals'][cl])['multiplyScalar'](ca['y']), bV['copy'](bR[cl])['add'](bU)['add'](bT), cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], bJ / bI * cl);
            for (c6 = bO - 0x1; c6 >= 0x0; c6--) {
                for (c8 = c6 / bO, c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2), c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN, cg = 0x0, ch = c4['length']; cg < ch; cg++) cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], bJ + c9);
                for (bX = 0x0, bY = c2['length']; bX < bY; bX++)
                    for (bW = c2[bX], ck = cm[bX], cg = 0x0, ch = bW['length']; cg < ch; cg++) ca = c5(bW[cg], ck[cg], c7), bZ ? cp(ca['x'], ca['y'] + bR[bI - 0x1]['y'], bR[bI - 0x1]['x'] + c9) : cp(ca['x'], ca['y'], bJ + c9);
            }

            function co(bf, bg) {
                var bh, bi;
                for (cg = bf['length']; --cg >= 0x0;) {
                    bh = cg, (bi = cg - 0x1) < 0x0 && (bi = bf['length'] - 0x1);
                    var bF = 0x0,
                        bG = bI + 0x2 * bO;
                    for (bF = 0x0; bF < bG; bF++) {
                        var bH = cc * bF,
                            bJ = cc * (bF + 0x1);
                        cr(bg + bh + bH, bg + bi + bH, bg + bi + bJ, bg + bh + bJ);
                    }
                }
            }

            function cp(bf, bg, bh) {
                bG['push'](bf), bG['push'](bg), bG['push'](bh);
            }

            function cq(bf, bg, bF) {
                cs(bf), cs(bg), cs(bF);
                var bG = bi['length'] / 0x3,
                    bH = bQ['generateTopUV'](bh, bi, bG - 0x3, bG - 0x2, bG - 0x1);
                ct(bH[0x0]), ct(bH[0x1]), ct(bH[0x2]);
            }

            function cr(bf, bg, bF, bG) {
                cs(bf), cs(bg), cs(bG), cs(bg), cs(bF), cs(bG);
                var bH = bi['length'] / 0x3,
                    bI = bQ['generateSideWallUV'](bh, bi, bH - 0x6, bH - 0x3, bH - 0x2, bH - 0x1);
                ct(bI[0x0]), ct(bI[0x1]), ct(bI[0x3]), ct(bI[0x1]), ct(bI[0x2]), ct(bI[0x3]);
            }

            function cs(bf) {
                bi['push'](bG[0x3 * bf + 0x0]), bi['push'](bG[0x3 * bf + 0x1]), bi['push'](bG[0x3 * bf + 0x2]);
            }

            function ct(bf) {
                bF['push'](bf['x']), bF['push'](bf['y']);
            }! function() {
                var bf = bi['length'] / 0x3;
                if (bK) {
                    var bg = 0x0,
                        bF = cc * bg;
                    for (cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x2] + bF, cb[0x1] + bF, cb[0x0] + bF);
                    for (bF = cc * (bg = bI + 0x2 * bO), cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x0] + bF, cb[0x1] + bF, cb[0x2] + bF);
                } else {
                    for (cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x2], cb[0x1], cb[0x0]);
                    for (cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x0] + cc * bI, cb[0x1] + cc * bI, cb[0x2] + cc * bI);
                }
                bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x0);
            }(),
            function() {
                var bf = bi['length'] / 0x3,
                    bg = 0x0;
                for (co(c4, bg), bg += c4['length'], bX = 0x0, bY = c2['length']; bX < bY; bX++) co(bW = c2[bX], bg), bg += bW['length'];
                bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x1);
            }();
        }
        this['addAttribute']('position', new Be(bi, 0x3)), this['addAttribute']('uv', new Be(bF, 0x2)), this['computeVertexNormals']();
    }
    aqg['prototype'] = Object['create'](AH['prototype']), aqg['prototype']['constructor'] = aqg, aqg['prototype']['toJSON'] = function() {
        var bf = AH['prototype']['toJSON']['call'](this);
        return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
    }, aqj['prototype'] = Object['create'](Gf['prototype']), aqj['prototype']['constructor'] = aqj, aqj['prototype']['toJSON'] = function() {
        var bf = Gf['prototype']['toJSON']['call'](this);
        return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
    };
    var as8 = {
        'generateTopUV': function(bf, bg, bh, bi, bF) {
            var bG = bg[0x3 * bh],
                bH = bg[0x3 * bh + 0x1],
                bI = bg[0x3 * bi],
                bJ = bg[0x3 * bi + 0x1],
                bK = bg[0x3 * bF],
                bL = bg[0x3 * bF + 0x1];
            return [new eC(bG, bH), new eC(bI, bJ), new eC(bK, bL)];
        },
        'generateSideWallUV': function(bf, bg, bh, bi, bF, bG) {
            var bH = bg[0x3 * bh],
                bI = bg[0x3 * bh + 0x1],
                bJ = bg[0x3 * bh + 0x2],
                bK = bg[0x3 * bi],
                bL = bg[0x3 * bi + 0x1],
                bM = bg[0x3 * bi + 0x2],
                bN = bg[0x3 * bF],
                bO = bg[0x3 * bF + 0x1],
                bP = bg[0x3 * bF + 0x2],
                bQ = bg[0x3 * bG],
                bR = bg[0x3 * bG + 0x1],
                bS = bg[0x3 * bG + 0x2];
            return Math['abs'](bI - bL) < 0.01 ? [new eC(bH, 0x1 - bJ), new eC(bK, 0x1 - bM), new eC(bN, 0x1 - bP), new eC(bQ, 0x1 - bS)] : [new eC(bI, 0x1 - bJ), new eC(bL, 0x1 - bM), new eC(bO, 0x1 - bP), new eC(bR, 0x1 - bS)];
        }
    };

    function asC(bf, bg, bh) {
        if (bh['shapes'] = [], Array['isArray'](bf))
            for (var bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                var bG = bf[bi];
                bh['shapes']['push'](bG['uuid']);
            } else bh['shapes']['push'](bf['uuid']);
        return void 0x0 !== bg['extrudePath'] && (bh['options']['extrudePath'] = bg['extrudePath']['toJSON']()), bh;
    }

    function asJ(bf, bg) {
        AH['call'](this), this['type'] = 'TextGeometry', this['parameters'] = {
            'text': bf,
            'parameters': bg
        }, this['fromBufferGeometry'](new asM(bf, bg)), this['mergeVertices']();
    }

    function asM(bf, bg) {
        var bh = (bg = bg || {})['font'];
        if (!bh || !bh['isFont']) return console['error']('THREE.TextGeometry:\x20font\x20parameter\x20is\x20not\x20an\x20instance\x20of\x20THREE.Font.'), new AH();
        var bi = bh['generateShapes'](bf, bg['size']);
        bg['depth'] = void 0x0 !== bg['height'] ? bg['height'] : 0x32, void 0x0 === bg['bevelThickness'] && (bg['bevelThickness'] = 0xa), void 0x0 === bg['bevelSize'] && (bg['bevelSize'] = 0x8), void 0x0 === bg['bevelEnabled'] && (bg['bevelEnabled'] = !0x1), aqj['call'](this, bi, bg), this['type'] = 'TextBufferGeometry';
    }

    function asR(bf, bg, bh, bi, bF, bG, bH) {
        AH['call'](this), this['type'] = 'SphereGeometry', this['parameters'] = {
            'radius': bf,
            'widthSegments': bg,
            'heightSegments': bh,
            'phiStart': bi,
            'phiLength': bF,
            'thetaStart': bG,
            'thetaLength': bH
        }, this['fromBufferGeometry'](new asZ(bf, bg, bh, bi, bF, bG, bH)), this['mergeVertices']();
    }

    function asZ(bf, bg, bh, bi, bF, bG, bH) {
        Gf['call'](this), this['type'] = 'SphereBufferGeometry', this['parameters'] = {
            'radius': bf,
            'widthSegments': bg,
            'heightSegments': bh,
            'phiStart': bi,
            'phiLength': bF,
            'thetaStart': bG,
            'thetaLength': bH
        }, bf = bf || 0x1, bg = Math['max'](0x3, Math['floor'](bg) || 0x8), bh = Math['max'](0x2, Math['floor'](bh) || 0x6), bi = void 0x0 !== bi ? bi : 0x0, bF = void 0x0 !== bF ? bF : 0x2 * Math['PI'], bG = void 0x0 !== bG ? bG : 0x0, bH = void 0x0 !== bH ? bH : Math['PI'];
        var bI, bJ, bK = Math['min'](bG + bH, Math['PI']),
            bL = 0x0,
            bM = [],
            bN = new eK(),
            bO = new eK(),
            bP = [],
            bQ = [],
            bR = [],
            bS = [];
        for (bJ = 0x0; bJ <= bh; bJ++) {
            var bT = [],
                bU = bJ / bh,
                bV = 0x0;
            for (0x0 == bJ && 0x0 == bG ? bV = 0.5 / bg : bJ == bh && bK == Math['PI'] && (bV = -0.5 / bg), bI = 0x0; bI <= bg; bI++) {
                var bW = bI / bg;
                bN['x'] = -bf * Math['cos'](bi + bW * bF) * Math['sin'](bG + bU * bH), bN['y'] = bf * Math['cos'](bG + bU * bH), bN['z'] = bf * Math['sin'](bi + bW * bF) * Math['sin'](bG + bU * bH), bQ['push'](bN['x'], bN['y'], bN['z']), bO['copy'](bN)['normalize'](), bR['push'](bO['x'], bO['y'], bO['z']), bS['push'](bW + bV, 0x1 - bU), bT['push'](bL++);
            }
            bM['push'](bT);
        }
        for (bJ = 0x0; bJ < bh; bJ++)
            for (bI = 0x0; bI < bg; bI++) {
                var bX = bM[bJ][bI + 0x1],
                    bY = bM[bJ][bI],
                    bZ = bM[bJ + 0x1][bI],
                    c0 = bM[bJ + 0x1][bI + 0x1];
                (0x0 !== bJ || bG > 0x0) && bP['push'](bX, bY, c0), (bJ !== bh - 0x1 || bK < Math['PI']) && bP['push'](bY, bZ, c0);
            }
        this['setIndex'](bP), this['addAttribute']('position', new Be(bQ, 0x3)), this['addAttribute']('normal', new Be(bR, 0x3)), this['addAttribute']('uv', new Be(bS, 0x2));
    }

    function atq(bf, bg, bh, bi, bF, bG) {
        AH['call'](this), this['type'] = 'RingGeometry', this['parameters'] = {
            'innerRadius': bf,
            'outerRadius': bg,
            'thetaSegments': bh,
            'phiSegments': bi,
            'thetaStart': bF,
            'thetaLength': bG
        }, this['fromBufferGeometry'](new atx(bf, bg, bh, bi, bF, bG)), this['mergeVertices']();
    }

    function atx(bf, bg, bh, bi, bF, bG) {
        Gf['call'](this), this['type'] = 'RingBufferGeometry', this['parameters'] = {
            'innerRadius': bf,
            'outerRadius': bg,
            'thetaSegments': bh,
            'phiSegments': bi,
            'thetaStart': bF,
            'thetaLength': bG
        }, bf = bf || 0.5, bg = bg || 0x1, bF = void 0x0 !== bF ? bF : 0x0, bG = void 0x0 !== bG ? bG : 0x2 * Math['PI'], bh = void 0x0 !== bh ? Math['max'](0x3, bh) : 0x8;
        var bH, bI, bJ, bK = [],
            bL = [],
            bM = [],
            bN = [],
            bO = bf,
            bP = (bg - bf) / (bi = void 0x0 !== bi ? Math['max'](0x1, bi) : 0x1),
            bQ = new eK(),
            bR = new eC();
        for (bI = 0x0; bI <= bi; bI++) {
            for (bJ = 0x0; bJ <= bh; bJ++) bH = bF + bJ / bh * bG, bQ['x'] = bO * Math['cos'](bH), bQ['y'] = bO * Math['sin'](bH), bL['push'](bQ['x'], bQ['y'], bQ['z']), bM['push'](0x0, 0x0, 0x1), bR['x'] = (bQ['x'] / bg + 0x1) / 0x2, bR['y'] = (bQ['y'] / bg + 0x1) / 0x2, bN['push'](bR['x'], bR['y']);
            bO += bP;
        }
        for (bI = 0x0; bI < bi; bI++) {
            var bS = bI * (bh + 0x1);
            for (bJ = 0x0; bJ < bh; bJ++) {
                var bT = bH = bJ + bS,
                    bU = bH + bh + 0x1,
                    bV = bH + bh + 0x2,
                    bW = bH + 0x1;
                bK['push'](bT, bU, bW), bK['push'](bU, bV, bW);
            }
        }
        this['setIndex'](bK), this['addAttribute']('position', new Be(bL, 0x3)), this['addAttribute']('normal', new Be(bM, 0x3)), this['addAttribute']('uv', new Be(bN, 0x2));
    }

    function atU(bf, bg, bh, bi) {
        AH['call'](this), this['type'] = 'LatheGeometry', this['parameters'] = {
            'points': bf,
            'segments': bg,
            'phiStart': bh,
            'phiLength': bi
        }, this['fromBufferGeometry'](new atZ(bf, bg, bh, bi)), this['mergeVertices']();
    }

    function atZ(bf, bg, bh, bi) {
        Gf['call'](this), this['type'] = 'LatheBufferGeometry', this['parameters'] = {
            'points': bf,
            'segments': bg,
            'phiStart': bh,
            'phiLength': bi
        }, bg = Math['floor'](bg) || 0xc, bh = bh || 0x0, bi = bi || 0x2 * Math['PI'], bi = e2['clamp'](bi, 0x0, 0x2 * Math['PI']);
        var bF, bG, bH, bI = [],
            bJ = [],
            bK = [],
            bL = 0x1 / bg,
            bM = new eK(),
            bN = new eC();
        for (bG = 0x0; bG <= bg; bG++) {
            var bO = bh + bG * bL * bi,
                bP = Math['sin'](bO),
                bQ = Math['cos'](bO);
            for (bH = 0x0; bH <= bf['length'] - 0x1; bH++) bM['x'] = bf[bH]['x'] * bP, bM['y'] = bf[bH]['y'], bM['z'] = bf[bH]['x'] * bQ, bJ['push'](bM['x'], bM['y'], bM['z']), bN['x'] = bG / bg, bN['y'] = bH / (bf['length'] - 0x1), bK['push'](bN['x'], bN['y']);
        }
        for (bG = 0x0; bG < bg; bG++)
            for (bH = 0x0; bH < bf['length'] - 0x1; bH++) {
                var bR = bF = bH + bG * bf['length'],
                    bS = bF + bf['length'],
                    bT = bF + bf['length'] + 0x1,
                    bU = bF + 0x1;
                bI['push'](bR, bS, bU), bI['push'](bS, bT, bU);
            }
        if (this['setIndex'](bI), this['addAttribute']('position', new Be(bJ, 0x3)), this['addAttribute']('uv', new Be(bK, 0x2)), this['computeVertexNormals'](), bi === 0x2 * Math['PI']) {
            var bV = this['attributes']['normal']['array'],
                bW = new eK(),
                bX = new eK(),
                bY = new eK();
            for (bF = bg * bf['length'] * 0x3, bG = 0x0, bH = 0x0; bG < bf['length']; bG++, bH += 0x3) bW['x'] = bV[bH + 0x0], bW['y'] = bV[bH + 0x1], bW['z'] = bV[bH + 0x2], bX['x'] = bV[bF + bH + 0x0], bX['y'] = bV[bF + bH + 0x1], bX['z'] = bV[bF + bH + 0x2], bY['addVectors'](bW, bX)['normalize'](), bV[bH + 0x0] = bV[bF + bH + 0x0] = bY['x'], bV[bH + 0x1] = bV[bF + bH + 0x1] = bY['y'], bV[bH + 0x2] = bV[bF + bH + 0x2] = bY['z'];
        }
    }

    function auo(bf, bg) {
        AH['call'](this), this['type'] = 'ShapeGeometry', 'object' == typeof bg && (console['warn']('THREE.ShapeGeometry:\x20Options\x20parameter\x20has\x20been\x20removed.'), bg = bg['curveSegments']), this['parameters'] = {
            'shapes': bf,
            'curveSegments': bg
        }, this['fromBufferGeometry'](new aur(bf, bg)), this['mergeVertices']();
    }

    function aur(bf, bg) {
        Gf['call'](this), this['type'] = 'ShapeBufferGeometry', this['parameters'] = {
            'shapes': bf,
            'curveSegments': bg
        }, bg = bg || 0xc;
        var bh = [],
            bi = [],
            bF = [],
            bG = [],
            bH = 0x0,
            bI = 0x0;
        if (!0x1 === Array['isArray'](bf)) bK(bf);
        else
            for (var bJ = 0x0; bJ < bf['length']; bJ++) bK(bf[bJ]), this['addGroup'](bH, bI, bJ), bH += bI, bI = 0x0;

        function bK(bf) {
            var bH, bJ, bK, bL = bi['length'] / 0x3,
                bM = bf['extractPoints'](bg),
                bN = bM['shape'],
                bO = bM['holes'];
            for (!0x1 === apU['isClockWise'](bN) && (bN = bN['reverse']()), bH = 0x0, bJ = bO['length']; bH < bJ; bH++) bK = bO[bH], !0x0 === apU['isClockWise'](bK) && (bO[bH] = bK['reverse']());
            var bP = apU['triangulateShape'](bN, bO);
            for (bH = 0x0, bJ = bO['length']; bH < bJ; bH++) bK = bO[bH], bN = bN['concat'](bK);
            for (bH = 0x0, bJ = bN['length']; bH < bJ; bH++) {
                var bQ = bN[bH];
                bi['push'](bQ['x'], bQ['y'], 0x0), bF['push'](0x0, 0x0, 0x1), bG['push'](bQ['x'], bQ['y']);
            }
            for (bH = 0x0, bJ = bP['length']; bH < bJ; bH++) {
                var bR = bP[bH],
                    bS = bR[0x0] + bL,
                    bT = bR[0x1] + bL,
                    bU = bR[0x2] + bL;
                bh['push'](bS, bT, bU), bI += 0x3;
            }
        }
        this['setIndex'](bh), this['addAttribute']('position', new Be(bi, 0x3)), this['addAttribute']('normal', new Be(bF, 0x3)), this['addAttribute']('uv', new Be(bG, 0x2));
    }

    function auQ(bf, bg) {
        if (bg['shapes'] = [], Array['isArray'](bf))
            for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                var bF = bf[bh];
                bg['shapes']['push'](bF['uuid']);
            } else bg['shapes']['push'](bf['uuid']);
        return bg;
    }

    function auW(bf, bg) {
        Gf['call'](this), this['type'] = 'EdgesGeometry', this['parameters'] = {
            'thresholdAngle': bg
        }, bg = void 0x0 !== bg ? bg : 0x1;
        var bh, bi, bF, bG, bH = [],
            bI = Math['cos'](e2['DEG2RAD'] * bg),
            bJ = [0x0, 0x0],
            bK = {},
            bL = ['a', 'b', 'c'];
        bf['isBufferGeometry'] ? (bG = new AH())['fromBufferGeometry'](bf) : bG = bf['clone'](), bG['mergeVertices'](), bG['computeFaceNormals']();
        for (var bM = bG['vertices'], bN = bG['faces'], bO = 0x0, bP = bN['length']; bO < bP; bO++)
            for (var bQ = bN[bO], bR = 0x0; bR < 0x3; bR++) bh = bQ[bL[bR]], bi = bQ[bL[(bR + 0x1) % 0x3]], bJ[0x0] = Math['min'](bh, bi), bJ[0x1] = Math['max'](bh, bi), void 0x0 === bK[bF = bJ[0x0] + ',' + bJ[0x1]] ? bK[bF] = {
                'index1': bJ[0x0],
                'index2': bJ[0x1],
                'face1': bO,
                'face2': void 0x0
            } : bK[bF]['face2'] = bO;
        for (bF in bK) {
            var bS = bK[bF];
            if (void 0x0 === bS['face2'] || bN[bS['face1']]['normal']['dot'](bN[bS['face2']]['normal']) <= bI) {
                var bT = bM[bS['index1']];
                bH['push'](bT['x'], bT['y'], bT['z']), bT = bM[bS['index2']], bH['push'](bT['x'], bT['y'], bT['z']);
            }
        }
        this['addAttribute']('position', new Be(bH, 0x3));
    }

    function avg(bf, bg, bh, bi, bF, bG, bH, bI) {
        AH['call'](this), this['type'] = 'CylinderGeometry', this['parameters'] = {
            'radiusTop': bf,
            'radiusBottom': bg,
            'height': bh,
            'radialSegments': bi,
            'heightSegments': bF,
            'openEnded': bG,
            'thetaStart': bH,
            'thetaLength': bI
        }, this['fromBufferGeometry'](new avp(bf, bg, bh, bi, bF, bG, bH, bI)), this['mergeVertices']();
    }

    function avp(bf, bg, bh, bi, bF, bG, bH, bI) {
        Gf['call'](this), this['type'] = 'CylinderBufferGeometry', this['parameters'] = {
            'radiusTop': bf,
            'radiusBottom': bg,
            'height': bh,
            'radialSegments': bi,
            'heightSegments': bF,
            'openEnded': bG,
            'thetaStart': bH,
            'thetaLength': bI
        };
        var bJ = this;
        bf = void 0x0 !== bf ? bf : 0x1, bg = void 0x0 !== bg ? bg : 0x1, bh = bh || 0x1, bi = Math['floor'](bi) || 0x8, bF = Math['floor'](bF) || 0x1, bG = void 0x0 !== bG && bG, bH = void 0x0 !== bH ? bH : 0x0, bI = void 0x0 !== bI ? bI : 0x2 * Math['PI'];
        var bK = [],
            bL = [],
            bM = [],
            bN = [],
            bO = 0x0,
            bP = [],
            bQ = bh / 0x2,
            bR = 0x0;

        function bS(bh) {
            var bF, bG, bP, bS = new eC(),
                bT = new eK(),
                bU = 0x0,
                bV = !0x0 === bh ? bf : bg,
                bW = !0x0 === bh ? 0x1 : -0x1;
            for (bG = bO, bF = 0x1; bF <= bi; bF++) bL['push'](0x0, bQ * bW, 0x0), bM['push'](0x0, bW, 0x0), bN['push'](0.5, 0.5), bO++;
            for (bP = bO, bF = 0x0; bF <= bi; bF++) {
                var bX = bF / bi * bI + bH,
                    bY = Math['cos'](bX),
                    bZ = Math['sin'](bX);
                bT['x'] = bV * bZ, bT['y'] = bQ * bW, bT['z'] = bV * bY, bL['push'](bT['x'], bT['y'], bT['z']), bM['push'](0x0, bW, 0x0), bS['x'] = 0.5 * bY + 0.5, bS['y'] = 0.5 * bZ * bW + 0.5, bN['push'](bS['x'], bS['y']), bO++;
            }
            for (bF = 0x0; bF < bi; bF++) {
                var c0 = bG + bF,
                    c1 = bP + bF;
                !0x0 === bh ? bK['push'](c1, c1 + 0x1, c0) : bK['push'](c1 + 0x1, c1, c0), bU += 0x3;
            }
            bJ['addGroup'](bR, bU, !0x0 === bh ? 0x1 : 0x2), bR += bU;
        }! function() {
            var bG, bS, bT = new eK(),
                bU = new eK(),
                bV = 0x0,
                bW = (bg - bf) / bh;
            for (bS = 0x0; bS <= bF; bS++) {
                var bX = [],
                    bY = bS / bF,
                    bZ = bY * (bg - bf) + bf;
                for (bG = 0x0; bG <= bi; bG++) {
                    var c0 = bG / bi,
                        c1 = c0 * bI + bH,
                        c2 = Math['sin'](c1),
                        c3 = Math['cos'](c1);
                    bU['x'] = bZ * c2, bU['y'] = -bY * bh + bQ, bU['z'] = bZ * c3, bL['push'](bU['x'], bU['y'], bU['z']), bT['set'](c2, bW, c3)['normalize'](), bM['push'](bT['x'], bT['y'], bT['z']), bN['push'](c0, 0x1 - bY), bX['push'](bO++);
                }
                bP['push'](bX);
            }
            for (bG = 0x0; bG < bi; bG++)
                for (bS = 0x0; bS < bF; bS++) {
                    var c4 = bP[bS][bG],
                        c5 = bP[bS + 0x1][bG],
                        c6 = bP[bS + 0x1][bG + 0x1],
                        c7 = bP[bS][bG + 0x1];
                    bK['push'](c4, c5, c7), bK['push'](c5, c6, c7), bV += 0x6;
                }
            bJ['addGroup'](bR, bV, 0x0), bR += bV;
        }(), !0x1 === bG && (bf > 0x0 && bS(!0x0), bg > 0x0 && bS(!0x1)), this['setIndex'](bK), this['addAttribute']('position', new Be(bL, 0x3)), this['addAttribute']('normal', new Be(bM, 0x3)), this['addAttribute']('uv', new Be(bN, 0x2));
    }

    function awd(bf, bg, bh, bi, bF, bG, bH) {
        avg['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH), this['type'] = 'ConeGeometry', this['parameters'] = {
            'radius': bf,
            'height': bg,
            'radialSegments': bh,
            'heightSegments': bi,
            'openEnded': bF,
            'thetaStart': bG,
            'thetaLength': bH
        };
    }

    function awl(bf, bg, bh, bi, bF, bG, bH) {
        avp['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH), this['type'] = 'ConeBufferGeometry', this['parameters'] = {
            'radius': bf,
            'height': bg,
            'radialSegments': bh,
            'heightSegments': bi,
            'openEnded': bF,
            'thetaStart': bG,
            'thetaLength': bH
        };
    }

    function awt(bf, bg, bh, bi) {
        AH['call'](this), this['type'] = 'CircleGeometry', this['parameters'] = {
            'radius': bf,
            'segments': bg,
            'thetaStart': bh,
            'thetaLength': bi
        }, this['fromBufferGeometry'](new awy(bf, bg, bh, bi)), this['mergeVertices']();
    }

    function awy(bf, bg, bh, bi) {
        Gf['call'](this), this['type'] = 'CircleBufferGeometry', this['parameters'] = {
            'radius': bf,
            'segments': bg,
            'thetaStart': bh,
            'thetaLength': bi
        }, bf = bf || 0x1, bg = void 0x0 !== bg ? Math['max'](0x3, bg) : 0x8, bh = void 0x0 !== bh ? bh : 0x0, bi = void 0x0 !== bi ? bi : 0x2 * Math['PI'];
        var bF, bG, bH = [],
            bI = [],
            bJ = [],
            bK = [],
            bL = new eK(),
            bM = new eC();
        for (bI['push'](0x0, 0x0, 0x0), bJ['push'](0x0, 0x0, 0x1), bK['push'](0.5, 0.5), bG = 0x0, bF = 0x3; bG <= bg; bG++, bF += 0x3) {
            var bN = bh + bG / bg * bi;
            bL['x'] = bf * Math['cos'](bN), bL['y'] = bf * Math['sin'](bN), bI['push'](bL['x'], bL['y'], bL['z']), bJ['push'](0x0, 0x0, 0x1), bM['x'] = (bI[bF] / bf + 0x1) / 0x2, bM['y'] = (bI[bF + 0x1] / bf + 0x1) / 0x2, bK['push'](bM['x'], bM['y']);
        }
        for (bF = 0x1; bF <= bg; bF++) bH['push'](bF, bF + 0x1, 0x0);
        this['setIndex'](bH), this['addAttribute']('position', new Be(bI, 0x3)), this['addAttribute']('normal', new Be(bJ, 0x3)), this['addAttribute']('uv', new Be(bK, 0x2));
    }
    asJ['prototype'] = Object['create'](AH['prototype']), asJ['prototype']['constructor'] = asJ, asM['prototype'] = Object['create'](aqj['prototype']), asM['prototype']['constructor'] = asM, asR['prototype'] = Object['create'](AH['prototype']), asR['prototype']['constructor'] = asR, asZ['prototype'] = Object['create'](Gf['prototype']), asZ['prototype']['constructor'] = asZ, atq['prototype'] = Object['create'](AH['prototype']), atq['prototype']['constructor'] = atq, atx['prototype'] = Object['create'](Gf['prototype']), atx['prototype']['constructor'] = atx, atU['prototype'] = Object['create'](AH['prototype']), atU['prototype']['constructor'] = atU, atZ['prototype'] = Object['create'](Gf['prototype']), atZ['prototype']['constructor'] = atZ, auo['prototype'] = Object['create'](AH['prototype']), auo['prototype']['constructor'] = auo, auo['prototype']['toJSON'] = function() {
        var bf = AH['prototype']['toJSON']['call'](this);
        return auQ(this['parameters']['shapes'], bf);
    }, aur['prototype'] = Object['create'](Gf['prototype']), aur['prototype']['constructor'] = aur, aur['prototype']['toJSON'] = function() {
        var bf = Gf['prototype']['toJSON']['call'](this);
        return auQ(this['parameters']['shapes'], bf);
    }, auW['prototype'] = Object['create'](Gf['prototype']), auW['prototype']['constructor'] = auW, avg['prototype'] = Object['create'](AH['prototype']), avg['prototype']['constructor'] = avg, avp['prototype'] = Object['create'](Gf['prototype']), avp['prototype']['constructor'] = avp, awd['prototype'] = Object['create'](avg['prototype']), awd['prototype']['constructor'] = awd, awl['prototype'] = Object['create'](avp['prototype']), awl['prototype']['constructor'] = awl, awt['prototype'] = Object['create'](AH['prototype']), awt['prototype']['constructor'] = awt, awy['prototype'] = Object['create'](Gf['prototype']), awy['prototype']['constructor'] = awy;
    var awO = Object['freeze']({
        'WireframeGeometry': afx,
        'ParametricGeometry': afW,
        'ParametricBufferGeometry': ag0,
        'TetrahedronGeometry': ahr,
        'TetrahedronBufferGeometry': ahu,
        'OctahedronGeometry': ahx,
        'OctahedronBufferGeometry': ahA,
        'IcosahedronGeometry': ahD,
        'IcosahedronBufferGeometry': ahG,
        'DodecahedronGeometry': ahL,
        'DodecahedronBufferGeometry': ahO,
        'PolyhedronGeometry': agm,
        'PolyhedronBufferGeometry': agr,
        'TubeGeometry': ahU,
        'TubeBufferGeometry': ai2,
        'TorusKnotGeometry': aiu,
        'TorusKnotBufferGeometry': aiC,
        'TorusGeometry': aje,
        'TorusBufferGeometry': ajk,
        'TextGeometry': asJ,
        'TextBufferGeometry': asM,
        'SphereGeometry': asR,
        'SphereBufferGeometry': asZ,
        'RingGeometry': atq,
        'RingBufferGeometry': atx,
        'PlaneGeometry': H5,
        'PlaneBufferGeometry': Ha,
        'LatheGeometry': atU,
        'LatheBufferGeometry': atZ,
        'ShapeGeometry': auo,
        'ShapeBufferGeometry': aur,
        'ExtrudeGeometry': aqg,
        'ExtrudeBufferGeometry': aqj,
        'EdgesGeometry': auW,
        'ConeGeometry': awd,
        'ConeBufferGeometry': awl,
        'CylinderGeometry': avg,
        'CylinderBufferGeometry': avp,
        'CircleGeometry': awt,
        'CircleBufferGeometry': awy,
        'BoxGeometry': Gg,
        'BoxBufferGeometry': Gn
    });

    function awP(bf) {
        Kf['call'](this), this['type'] = 'ShadowMaterial', this['color'] = new w7(0x0), this['transparent'] = !0x0, this['setValues'](bf);
    }

    function awR(bf) {
        KN['call'](this, bf), this['type'] = 'RawShaderMaterial';
    }

    function awT(bf) {
        Kf['call'](this), this['defines'] = {
            'STANDARD': ''
        }, this['type'] = 'MeshStandardMaterial', this['color'] = new w7(0xffffff), this['roughness'] = 0.5, this['metalness'] = 0.5, this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['emissive'] = new w7(0x0), this['emissiveIntensity'] = 0x1, this['emissiveMap'] = null, this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['roughnessMap'] = null, this['metalnessMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['envMapIntensity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
    }

    function awV(bf) {
        awT['call'](this), this['defines'] = {
            'PHYSICAL': ''
        }, this['type'] = 'MeshPhysicalMaterial', this['reflectivity'] = 0.5, this['clearCoat'] = 0x0, this['clearCoatRoughness'] = 0x0, this['setValues'](bf);
    }

    function awX(bf) {
        Kf['call'](this), this['type'] = 'MeshPhongMaterial', this['color'] = new w7(0xffffff), this['specular'] = new w7(0x111111), this['shininess'] = 0x1e, this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['emissive'] = new w7(0x0), this['emissiveIntensity'] = 0x1, this['emissiveMap'] = null, this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['specularMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['combine'] = cv, this['reflectivity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
    }

    function awZ(bf) {
        awX['call'](this), this['defines'] = {
            'TOON': ''
        }, this['type'] = 'MeshToonMaterial', this['gradientMap'] = null, this['setValues'](bf);
    }

    function ax1(bf) {
        Kf['call'](this), this['type'] = 'MeshNormalMaterial', this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['fog'] = !0x1, this['lights'] = !0x1, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
    }

    function ax3(bf) {
        Kf['call'](this), this['type'] = 'MeshLambertMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['emissive'] = new w7(0x0), this['emissiveIntensity'] = 0x1, this['emissiveMap'] = null, this['specularMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['combine'] = cv, this['reflectivity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
    }

    function ax5(bf) {
        Kf['call'](this), this['defines'] = {
            'MATCAP': ''
        }, this['type'] = 'MeshMatcapMaterial', this['color'] = new w7(0xffffff), this['matcap'] = null, this['map'] = null, this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['alphaMap'] = null, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
    }

    function ax7(bf) {
        aey['call'](this), this['type'] = 'LineDashedMaterial', this['scale'] = 0x1, this['dashSize'] = 0x3, this['gapSize'] = 0x1, this['setValues'](bf);
    }
    awP['prototype'] = Object['create'](Kf['prototype']), awP['prototype']['constructor'] = awP, awP['prototype']['isShadowMaterial'] = !0x0, awP['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this;
    }, awR['prototype'] = Object['create'](KN['prototype']), awR['prototype']['constructor'] = awR, awR['prototype']['isRawShaderMaterial'] = !0x0, awT['prototype'] = Object['create'](Kf['prototype']), awT['prototype']['constructor'] = awT, awT['prototype']['isMeshStandardMaterial'] = !0x0, awT['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['defines'] = {
            'STANDARD': ''
        }, this['color']['copy'](bf['color']), this['roughness'] = bf['roughness'], this['metalness'] = bf['metalness'], this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['emissive']['copy'](bf['emissive']), this['emissiveMap'] = bf['emissiveMap'], this['emissiveIntensity'] = bf['emissiveIntensity'], this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['roughnessMap'] = bf['roughnessMap'], this['metalnessMap'] = bf['metalnessMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['envMapIntensity'] = bf['envMapIntensity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
    }, awV['prototype'] = Object['create'](awT['prototype']), awV['prototype']['constructor'] = awV, awV['prototype']['isMeshPhysicalMaterial'] = !0x0, awV['prototype']['copy'] = function(bf) {
        return awT['prototype']['copy']['call'](this, bf), this['defines'] = {
            'PHYSICAL': ''
        }, this['reflectivity'] = bf['reflectivity'], this['clearCoat'] = bf['clearCoat'], this['clearCoatRoughness'] = bf['clearCoatRoughness'], this;
    }, awX['prototype'] = Object['create'](Kf['prototype']), awX['prototype']['constructor'] = awX, awX['prototype']['isMeshPhongMaterial'] = !0x0, awX['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['specular']['copy'](bf['specular']), this['shininess'] = bf['shininess'], this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['emissive']['copy'](bf['emissive']), this['emissiveMap'] = bf['emissiveMap'], this['emissiveIntensity'] = bf['emissiveIntensity'], this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['specularMap'] = bf['specularMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['combine'] = bf['combine'], this['reflectivity'] = bf['reflectivity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
    }, awZ['prototype'] = Object['create'](awX['prototype']), awZ['prototype']['constructor'] = awZ, awZ['prototype']['isMeshToonMaterial'] = !0x0, awZ['prototype']['copy'] = function(bf) {
        return awX['prototype']['copy']['call'](this, bf), this['gradientMap'] = bf['gradientMap'], this;
    }, ax1['prototype'] = Object['create'](Kf['prototype']), ax1['prototype']['constructor'] = ax1, ax1['prototype']['isMeshNormalMaterial'] = !0x0, ax1['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
    }, ax3['prototype'] = Object['create'](Kf['prototype']), ax3['prototype']['constructor'] = ax3, ax3['prototype']['isMeshLambertMaterial'] = !0x0, ax3['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['emissive']['copy'](bf['emissive']), this['emissiveMap'] = bf['emissiveMap'], this['emissiveIntensity'] = bf['emissiveIntensity'], this['specularMap'] = bf['specularMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['combine'] = bf['combine'], this['reflectivity'] = bf['reflectivity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
    }, ax5['prototype'] = Object['create'](Kf['prototype']), ax5['prototype']['constructor'] = ax5, ax5['prototype']['isMeshMatcapMaterial'] = !0x0, ax5['prototype']['copy'] = function(bf) {
        return Kf['prototype']['copy']['call'](this, bf), this['defines'] = {
            'MATCAP': ''
        }, this['color']['copy'](bf['color']), this['matcap'] = bf['matcap'], this['map'] = bf['map'], this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['alphaMap'] = bf['alphaMap'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
    }, ax7['prototype'] = Object['create'](aey['prototype']), ax7['prototype']['constructor'] = ax7, ax7['prototype']['isLineDashedMaterial'] = !0x0, ax7['prototype']['copy'] = function(bf) {
        return aey['prototype']['copy']['call'](this, bf), this['scale'] = bf['scale'], this['dashSize'] = bf['dashSize'], this['gapSize'] = bf['gapSize'], this;
    };
    var axi = Object['freeze']({
            'ShadowMaterial': awP,
            'SpriteMaterial': aej,
            'RawShaderMaterial': awR,
            'ShaderMaterial': KN,
            'PointsMaterial': aeK,
            'MeshPhysicalMaterial': awV,
            'MeshStandardMaterial': awT,
            'MeshPhongMaterial': awX,
            'MeshToonMaterial': awZ,
            'MeshNormalMaterial': ax1,
            'MeshLambertMaterial': ax3,
            'MeshDepthMaterial': ZV,
            'MeshDistanceMaterial': ZX,
            'MeshBasicMaterial': KW,
            'MeshMatcapMaterial': ax5,
            'LineDashedMaterial': ax7,
            'LineBasicMaterial': aey,
            'Material': Kf
        }),
        axj = {
            'arraySlice': function(bf, bg, bh) {
                return axj['isTypedArray'](bf) ? new bf['constructor'](bf['subarray'](bg, void 0x0 !== bh ? bh : bf['length'])) : bf['slice'](bg, bh);
            },
            'convertArray': function(bf, bg, bh) {
                return !bf || !bh && bf['constructor'] === bg ? bf : 'number' == typeof bg['BYTES_PER_ELEMENT'] ? new bg(bf) : Array['prototype']['slice']['call'](bf);
            },
            'isTypedArray': function(bf) {
                return ArrayBuffer['isView'](bf) && !(bf instanceof DataView);
            },
            'getKeyframeOrder': function(bf) {
                for (var bg = bf['length'], bh = new Array(bg), bi = 0x0; bi !== bg; ++bi) bh[bi] = bi;
                return bh['sort'](function(bg, bh) {
                    return bf[bg] - bf[bh];
                }), bh;
            },
            'sortedArray': function(bf, bg, bh) {
                for (var bi = bf['length'], bF = new bf['constructor'](bi), bG = 0x0, bH = 0x0; bH !== bi; ++bG)
                    for (var bI = bh[bG] * bg, bJ = 0x0; bJ !== bg; ++bJ) bF[bH++] = bf[bI + bJ];
                return bF;
            },
            'flattenJSON': function(bf, bg, bh, bi) {
                for (var bF = 0x1, bG = bf[0x0]; void 0x0 !== bG && void 0x0 === bG[bi];) bG = bf[bF++];
                if (void 0x0 !== bG) {
                    var bH = bG[bi];
                    if (void 0x0 !== bH)
                        if (Array['isArray'](bH))
                            do {
                                void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']), bh['push']['apply'](bh, bH)), bG = bf[bF++];
                            } while (void 0x0 !== bG);
                        else if (void 0x0 !== bH['toArray'])
                        do {
                            void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']), bH['toArray'](bh, bh['length'])), bG = bf[bF++];
                        } while (void 0x0 !== bG);
                    else
                        do {
                            void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']), bh['push'](bH)), bG = bf[bF++];
                        } while (void 0x0 !== bG);
                }
            }
        };

    function axN(bf, bg, bh, bi) {
        this['parameterPositions'] = bf, this['_cachedIndex'] = 0x0, this['resultBuffer'] = void 0x0 !== bi ? bi : new bg['constructor'](bh), this['sampleValues'] = bg, this['valueSize'] = bh;
    }

    function axS(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi), this['_weightPrev'] = -0x0, this['_offsetPrev'] = -0x0, this['_weightNext'] = -0x0, this['_offsetNext'] = -0x0;
    }

    function axX(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi);
    }

    function ay2(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi);
    }

    function ay7(bf, bg, bh, bi) {
        if (void 0x0 === bf) throw new Error('THREE.KeyframeTrack:\x20track\x20name\x20is\x20undefined');
        if (void 0x0 === bg || 0x0 === bg['length']) throw new Error('THREE.KeyframeTrack:\x20no\x20keyframes\x20in\x20track\x20named\x20' + bf);
        this['name'] = bf, this['times'] = axj['convertArray'](bg, this['TimeBufferType']), this['values'] = axj['convertArray'](bh, this['ValueBufferType']), this['setInterpolation'](bi || this['DefaultInterpolation']);
    }

    function ayc(bf, bg, bh) {
        ay7['call'](this, bf, bg, bh);
    }

    function ayg(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }

    function ayl(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }

    function ayq(bf, bg, bh, bi) {
        axN['call'](this, bf, bg, bh, bi);
    }

    function ayv(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }

    function ayA(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }

    function ayF(bf, bg, bh, bi) {
        ay7['call'](this, bf, bg, bh, bi);
    }

    function ayK(bf, bg, bh) {
        this['name'] = bf, this['tracks'] = bh, this['duration'] = void 0x0 !== bg ? bg : -0x1, this['uuid'] = e2['generateUUID'](), this['duration'] < 0x0 && this['resetDuration']();
    }

    function ayO(bf) {
        if (void 0x0 === bf['type']) throw new Error('THREE.KeyframeTrack:\x20track\x20type\x20undefined,\x20can\x20not\x20parse');
        var bg = function(bf) {
            switch (bf['toLowerCase']()) {
                case 'scalar':
                case 'double':
                case 'float':
                case 'number':
                case 'integer':
                    return ayl;
                case 'vector':
                case 'vector2':
                case 'vector3':
                case 'vector4':
                    return ayF;
                case 'color':
                    return ayg;
                case 'quaternion':
                    return ayv;
                case 'bool':
                case 'boolean':
                    return ayc;
                case 'string':
                    return ayA;
            }
            throw new Error('THREE.KeyframeTrack:\x20Unsupported\x20typeName:\x20' + bf);
        }(bf['type']);
        if (void 0x0 === bf['times']) {
            var bh = [],
                bi = [];
            axj['flattenJSON'](bf['keys'], bh, bi, 'value'), bf['times'] = bh, bf['values'] = bi;
        }
        return void 0x0 !== bg['parse'] ? bg['parse'](bf) : new bg(bf['name'], bf['times'], bf['values'], bf['interpolation']);
    }
    Object['assign'](axN['prototype'], {
        'evaluate': function(bf) {
            var bg = this['parameterPositions'],
                bh = this['_cachedIndex'],
                bi = bg[bh],
                bF = bg[bh - 0x1];
            ayZ: {
                az0: {
                    var bG;az2: {
                        az3: if (!(bf < bi)) {
                            for (var bH = bh + 0x2;;) {
                                if (void 0x0 === bi) {
                                    if (bf < bF) break az3;
                                    return bh = bg['length'], this['_cachedIndex'] = bh, this['afterEnd_'](bh - 0x1, bf, bF);
                                }
                                if (bh === bH) break;
                                if (bF = bi, bf < (bi = bg[++bh])) break az0;
                            }
                            bG = bg['length'];
                            break az2;
                        }if (bf >= bF) break ayZ;
                        var bI = bg[0x1];bf < bI && (bh = 0x2, bF = bI);
                        for (bH = bh - 0x2;;) {
                            if (void 0x0 === bF) return this['_cachedIndex'] = 0x0, this['beforeStart_'](0x0, bf, bi);
                            if (bh === bH) break;
                            if (bi = bF, bf >= (bF = bg[--bh - 0x1])) break az0;
                        }
                        bG = bh,
                        bh = 0x0;
                    }
                    for (; bh < bG;) {
                        var bJ = bh + bG >>> 0x1;
                        bf < bg[bJ] ? bG = bJ : bh = bJ + 0x1;
                    }
                    if (bi = bg[bh], void 0x0 === (bF = bg[bh - 0x1])) return this['_cachedIndex'] = 0x0, this['beforeStart_'](0x0, bf, bi);
                    if (void 0x0 === bi) return bh = bg['length'], this['_cachedIndex'] = bh, this['afterEnd_'](bh - 0x1, bF, bf);
                }
                this['_cachedIndex'] = bh,
                this['intervalChanged_'](bh, bF, bi);
            }
            return this['interpolate_'](bh, bF, bf, bi);
        },
        'settings': null,
        'DefaultSettings_': {},
        'getSettings_': function() {
            return this['settings'] || this['DefaultSettings_'];
        },
        'copySampleValue_': function(bf) {
            for (var bg = this['resultBuffer'], bh = this['sampleValues'], bi = this['valueSize'], bF = bf * bi, bG = 0x0; bG !== bi; ++bG) bg[bG] = bh[bF + bG];
            return bg;
        },
        'interpolate_': function() {
            throw new Error('call\x20to\x20abstract\x20method');
        },
        'intervalChanged_': function() {}
    }), Object['assign'](axN['prototype'], {
        'beforeStart_': axN['prototype']['copySampleValue_'],
        'afterEnd_': axN['prototype']['copySampleValue_']
    }), axS['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': axS,
        'DefaultSettings_': {
            'endingStart': dK,
            'endingEnd': dK
        },
        'intervalChanged_': function(bf, bg, bh) {
            var bi = this['parameterPositions'],
                bF = bf - 0x2,
                bG = bf + 0x1,
                bH = bi[bF],
                bI = bi[bG];
            if (void 0x0 === bH) switch (this['getSettings_']()['endingStart']) {
                case dL:
                    bF = bf, bH = 0x2 * bg - bh;
                    break;
                case dM:
                    bH = bg + bi[bF = bi['length'] - 0x2] - bi[bF + 0x1];
                    break;
                default:
                    bF = bf, bH = bh;
            }
            if (void 0x0 === bI) switch (this['getSettings_']()['endingEnd']) {
                case dL:
                    bG = bf, bI = 0x2 * bh - bg;
                    break;
                case dM:
                    bG = 0x1, bI = bh + bi[0x1] - bi[0x0];
                    break;
                default:
                    bG = bf - 0x1, bI = bg;
            }
            var bJ = 0.5 * (bh - bg),
                bK = this['valueSize'];
            this['_weightPrev'] = bJ / (bg - bH), this['_weightNext'] = bJ / (bI - bh), this['_offsetPrev'] = bF * bK, this['_offsetNext'] = bG * bK;
        },
        'interpolate_': function(bf, bg, bh, bi) {
            for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = this['_offsetPrev'], bL = this['_offsetNext'], bM = this['_weightPrev'], bN = this['_weightNext'], bO = (bh - bg) / (bi - bg), bP = bO * bO, bQ = bP * bO, bR = -bM * bQ + 0x2 * bM * bP - bM * bO, bS = (0x1 + bM) * bQ + (-1.5 - 0x2 * bM) * bP + (-0.5 + bM) * bO + 0x1, bT = (-0x1 - bN) * bQ + (1.5 + bN) * bP + 0.5 * bO, bU = bN * bQ - bN * bP, bV = 0x0; bV !== bH; ++bV) bF[bV] = bR * bG[bK + bV] + bS * bG[bJ + bV] + bT * bG[bI + bV] + bU * bG[bL + bV];
            return bF;
        }
    }), axX['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': axX,
        'interpolate_': function(bf, bg, bh, bi) {
            for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = (bh - bg) / (bi - bg), bL = 0x1 - bK, bM = 0x0; bM !== bH; ++bM) bF[bM] = bG[bJ + bM] * bL + bG[bI + bM] * bK;
            return bF;
        }
    }), ay2['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': ay2,
        'interpolate_': function(bf) {
            return this['copySampleValue_'](bf - 0x1);
        }
    }), Object['assign'](ay7, {
        'toJSON': function(bf) {
            var bg, bh = bf['constructor'];
            if (void 0x0 !== bh['toJSON']) bg = bh['toJSON'](bf);
            else {
                bg = {
                    'name': bf['name'],
                    'times': axj['convertArray'](bf['times'], Array),
                    'values': axj['convertArray'](bf['values'], Array)
                };
                var bi = bf['getInterpolation']();
                bi !== bf['DefaultInterpolation'] && (bg['interpolation'] = bi);
            }
            return bg['type'] = bf['ValueTypeName'], bg;
        }
    }), Object['assign'](ay7['prototype'], {
        'constructor': ay7,
        'TimeBufferType': Float32Array,
        'ValueBufferType': Float32Array,
        'DefaultInterpolation': dI,
        'InterpolantFactoryMethodDiscrete': function(bf) {
            return new ay2(this['times'], this['values'], this['getValueSize'](), bf);
        },
        'InterpolantFactoryMethodLinear': function(bf) {
            return new axX(this['times'], this['values'], this['getValueSize'](), bf);
        },
        'InterpolantFactoryMethodSmooth': function(bf) {
            return new axS(this['times'], this['values'], this['getValueSize'](), bf);
        },
        'setInterpolation': function(bf) {
            var bg;
            switch (bf) {
                case dH:
                    bg = this['InterpolantFactoryMethodDiscrete'];
                    break;
                case dI:
                    bg = this['InterpolantFactoryMethodLinear'];
                    break;
                case dJ:
                    bg = this['InterpolantFactoryMethodSmooth'];
            }
            if (void 0x0 === bg) {
                var bh = 'unsupported\x20interpolation\x20for\x20' + this['ValueTypeName'] + '\x20keyframe\x20track\x20named\x20' + this['name'];
                if (void 0x0 === this['createInterpolant']) {
                    if (bf === this['DefaultInterpolation']) throw new Error(bh);
                    this['setInterpolation'](this['DefaultInterpolation']);
                }
                return console['warn']('THREE.KeyframeTrack:', bh), this;
            }
            return this['createInterpolant'] = bg, this;
        },
        'getInterpolation': function() {
            switch (this['createInterpolant']) {
                case this['InterpolantFactoryMethodDiscrete']:
                    return dH;
                case this['InterpolantFactoryMethodLinear']:
                    return dI;
                case this['InterpolantFactoryMethodSmooth']:
                    return dJ;
            }
        },
        'getValueSize': function() {
            return this['values']['length'] / this['times']['length'];
        },
        'shift': function(bf) {
            if (0x0 !== bf)
                for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) bg[bh] += bf;
            return this;
        },
        'scale': function(bf) {
            if (0x1 !== bf)
                for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) bg[bh] *= bf;
            return this;
        },
        'trim': function(bf, bg) {
            for (var bh = this['times'], bi = bh['length'], bF = 0x0, bG = bi - 0x1; bF !== bi && bh[bF] < bf;) ++bF;
            for (; - 0x1 !== bG && bh[bG] > bg;) --bG;
            if (++bG, 0x0 !== bF || bG !== bi) {
                bF >= bG && (bF = (bG = Math['max'](bG, 0x1)) - 0x1);
                var bH = this['getValueSize']();
                this['times'] = axj['arraySlice'](bh, bF, bG), this['values'] = axj['arraySlice'](this['values'], bF * bH, bG * bH);
            }
            return this;
        },
        'validate': function() {
            var bf = !0x0,
                bg = this['getValueSize']();
            bg - Math['floor'](bg) != 0x0 && (console['error']('THREE.KeyframeTrack:\x20Invalid\x20value\x20size\x20in\x20track.', this), bf = !0x1);
            var bh = this['times'],
                bi = this['values'],
                bF = bh['length'];
            0x0 === bF && (console['error']('THREE.KeyframeTrack:\x20Track\x20is\x20empty.', this), bf = !0x1);
            for (var bG = null, bH = 0x0; bH !== bF; bH++) {
                var bI = bh[bH];
                if ('number' == typeof bI && isNaN(bI)) {
                    console['error']('THREE.KeyframeTrack:\x20Time\x20is\x20not\x20a\x20valid\x20number.', this, bH, bI), bf = !0x1;
                    break;
                }
                if (null !== bG && bG > bI) {
                    console['error']('THREE.KeyframeTrack:\x20Out\x20of\x20order\x20keys.', this, bH, bI, bG), bf = !0x1;
                    break;
                }
                bG = bI;
            }
            if (void 0x0 !== bi && axj['isTypedArray'](bi)) {
                bH = 0x0;
                for (var bJ = bi['length']; bH !== bJ; ++bH) {
                    var bK = bi[bH];
                    if (isNaN(bK)) {
                        console['error']('THREE.KeyframeTrack:\x20Value\x20is\x20not\x20a\x20valid\x20number.', this, bH, bK), bf = !0x1;
                        break;
                    }
                }
            }
            return bf;
        },
        'optimize': function() {
            for (var bf = this['times'], bg = this['values'], bh = this['getValueSize'](), bi = this['getInterpolation']() === dJ, bF = 0x1, bG = bf['length'] - 0x1, bH = 0x1; bH < bG; ++bH) {
                var bI = !0x1,
                    bJ = bf[bH];
                if (bJ !== bf[bH + 0x1] && (0x1 !== bH || bJ !== bJ[0x0]))
                    if (bi) bI = !0x0;
                    else
                        for (var bK = bH * bh, bL = bK - bh, bM = bK + bh, bN = 0x0; bN !== bh; ++bN) {
                            var bO = bg[bK + bN];
                            if (bO !== bg[bL + bN] || bO !== bg[bM + bN]) {
                                bI = !0x0;
                                break;
                            }
                        }
                if (bI) {
                    if (bH !== bF) {
                        bf[bF] = bf[bH];
                        var bP = bH * bh,
                            bQ = bF * bh;
                        for (bN = 0x0; bN !== bh; ++bN) bg[bQ + bN] = bg[bP + bN];
                    }++bF;
                }
            }
            if (bG > 0x0) {
                bf[bF] = bf[bG];
                for (bP = bG * bh, bQ = bF * bh, bN = 0x0; bN !== bh; ++bN) bg[bQ + bN] = bg[bP + bN];
                ++bF;
            }
            return bF !== bf['length'] && (this['times'] = axj['arraySlice'](bf, 0x0, bF), this['values'] = axj['arraySlice'](bg, 0x0, bF * bh)), this;
        },
        'clone': function() {
            var bf = axj['arraySlice'](this['times'], 0x0),
                bg = axj['arraySlice'](this['values'], 0x0),
                bh = new(0x0, this['constructor'])(this['name'], bf, bg);
            return bh['createInterpolant'] = this['createInterpolant'], bh;
        }
    }), ayc['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayc,
        'ValueTypeName': 'bool',
        'ValueBufferType': Array,
        'DefaultInterpolation': dH,
        'InterpolantFactoryMethodLinear': void 0x0,
        'InterpolantFactoryMethodSmooth': void 0x0
    }), ayg['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayg,
        'ValueTypeName': 'color'
    }), ayl['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayl,
        'ValueTypeName': 'number'
    }), ayq['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
        'constructor': ayq,
        'interpolate_': function(bf, bg, bh, bi) {
            for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = (bh - bg) / (bi - bg), bK = bI + bH; bI !== bK; bI += 0x4) eF['slerpFlat'](bF, 0x0, bG, bI - bH, bG, bI, bJ);
            return bF;
        }
    }), ayv['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayv,
        'ValueTypeName': 'quaternion',
        'DefaultInterpolation': dI,
        'InterpolantFactoryMethodLinear': function(bf) {
            return new ayq(this['times'], this['values'], this['getValueSize'](), bf);
        },
        'InterpolantFactoryMethodSmooth': void 0x0
    }), ayA['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayA,
        'ValueTypeName': 'string',
        'ValueBufferType': Array,
        'DefaultInterpolation': dH,
        'InterpolantFactoryMethodLinear': void 0x0,
        'InterpolantFactoryMethodSmooth': void 0x0
    }), ayF['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
        'constructor': ayF,
        'ValueTypeName': 'vector'
    }), Object['assign'](ayK, {
        'parse': function(bf) {
            for (var bg = [], bh = bf['tracks'], bi = 0x1 / (bf['fps'] || 0x1), bF = 0x0, bG = bh['length']; bF !== bG; ++bF) bg['push'](ayO(bh[bF])['scale'](bi));
            return new ayK(bf['name'], bf['duration'], bg);
        },
        'toJSON': function(bf) {
            for (var bg = [], bh = bf['tracks'], bi = {
                    'name': bf['name'],
                    'duration': bf['duration'],
                    'tracks': bg,
                    'uuid': bf['uuid']
                }, bF = 0x0, bG = bh['length']; bF !== bG; ++bF) bg['push'](ay7['toJSON'](bh[bF]));
            return bi;
        },
        'CreateFromMorphTargetSequence': function(bf, bg, bh, bi) {
            for (var bF = bg['length'], bG = [], bH = 0x0; bH < bF; bH++) {
                var bI = [],
                    bJ = [];
                bI['push']((bH + bF - 0x1) % bF, bH, (bH + 0x1) % bF), bJ['push'](0x0, 0x1, 0x0);
                var bK = axj['getKeyframeOrder'](bI);
                bI = axj['sortedArray'](bI, 0x1, bK), bJ = axj['sortedArray'](bJ, 0x1, bK), bi || 0x0 !== bI[0x0] || (bI['push'](bF), bJ['push'](bJ[0x0])), bG['push'](new ayl('.morphTargetInfluences[' + bg[bH]['name'] + ']', bI, bJ)['scale'](0x1 / bh));
            }
            return new ayK(bf, -0x1, bG);
        },
        'findByName': function(bf, bg) {
            var bh = bf;
            if (!Array['isArray'](bf)) {
                var bi = bf;
                bh = bi['geometry'] && bi['geometry']['animations'] || bi['animations'];
            }
            for (var bF = 0x0; bF < bh['length']; bF++)
                if (bh[bF]['name'] === bg) return bh[bF];
            return null;
        },
        'CreateClipsFromMorphTargetSequences': function(bf, bg, bh) {
            for (var bi = {}, bF = /^([\w-]*?)([\d]+)$/, bG = 0x0, bH = bf['length']; bG < bH; bG++) {
                var bI = bf[bG],
                    bJ = bI['name']['match'](bF);
                if (bJ && bJ['length'] > 0x1) {
                    var bK = bi[bM = bJ[0x1]];
                    bK || (bi[bM] = bK = []), bK['push'](bI);
                }
            }
            var bL = [];
            for (var bM in bi) bL['push'](ayK['CreateFromMorphTargetSequence'](bM, bi[bM], bg, bh));
            return bL;
        },
        'parseAnimation': function(bf, bg) {
            if (!bf) return console['error']('THREE.AnimationClip:\x20No\x20animation\x20in\x20JSONLoader\x20data.'), null;
            for (var bh = function(bf, bg, bh, bi, bF) {
                    if (0x0 !== bh['length']) {
                        var bG = [],
                            bH = [];
                        axj['flattenJSON'](bh, bG, bH, bi), 0x0 !== bG['length'] && bF['push'](new bf(bg, bG, bH));
                    }
                }, bi = [], bF = bf['name'] || 'default', bG = bf['length'] || -0x1, bH = bf['fps'] || 0x1e, bI = bf['hierarchy'] || [], bJ = 0x0; bJ < bI['length']; bJ++) {
                var bK = bI[bJ]['keys'];
                if (bK && 0x0 !== bK['length'])
                    if (bK[0x0]['morphTargets']) {
                        for (var bL = {}, bM = 0x0; bM < bK['length']; bM++)
                            if (bK[bM]['morphTargets'])
                                for (var bN = 0x0; bN < bK[bM]['morphTargets']['length']; bN++) bL[bK[bM]['morphTargets'][bN]] = -0x1;
                        for (var bO in bL) {
                            var bP = [],
                                bQ = [];
                            for (bN = 0x0; bN !== bK[bM]['morphTargets']['length']; ++bN) {
                                var bR = bK[bM];
                                bP['push'](bR['time']), bQ['push'](bR['morphTarget'] === bO ? 0x1 : 0x0);
                            }
                            bi['push'](new ayl('.morphTargetInfluence[' + bO + ']', bP, bQ));
                        }
                        bG = bL['length'] * (bH || 0x1);
                    } else {
                        var bS = '.bones[' + bg[bJ]['name'] + ']';
                        bh(ayF, bS + '.position', bK, 'pos', bi), bh(ayv, bS + '.quaternion', bK, 'rot', bi), bh(ayF, bS + '.scale', bK, 'scl', bi);
                    }
            }
            return 0x0 === bi['length'] ? null : new ayK(bF, bG, bi);
        }
    }), Object['assign'](ayK['prototype'], {
        'resetDuration': function() {
            for (var bf = 0x0, bg = 0x0, bh = this['tracks']['length']; bg !== bh; ++bg) {
                var bi = this['tracks'][bg];
                bf = Math['max'](bf, bi['times'][bi['times']['length'] - 0x1]);
            }
            return this['duration'] = bf, this;
        },
        'trim': function() {
            for (var bf = 0x0; bf < this['tracks']['length']; bf++) this['tracks'][bf]['trim'](0x0, this['duration']);
            return this;
        },
        'validate': function() {
            for (var bf = !0x0, bg = 0x0; bg < this['tracks']['length']; bg++) bf = bf && this['tracks'][bg]['validate']();
            return bf;
        },
        'optimize': function() {
            for (var bf = 0x0; bf < this['tracks']['length']; bf++) this['tracks'][bf]['optimize']();
            return this;
        },
        'clone': function() {
            for (var bf = [], bg = 0x0; bg < this['tracks']['length']; bg++) bf['push'](this['tracks'][bg]['clone']());
            return new ayK(this['name'], this['duration'], bf);
        }
    });
    var aCa = {
        'enabled': !0x1,
        'files': {},
        'add': function(bf, bg) {
            !0x1 !== this['enabled'] && (this['files'][bf] = bg);
        },
        'get': function(bf) {
            if (!0x1 !== this['enabled']) return this['files'][bf];
        },
        'remove': function(bf) {
            delete this['files'][bf];
        },
        'clear': function() {
            this['files'] = {};
        }
    };

    function aCf(bf, bg, bh) {
        var bi = this,
            bF = !0x1,
            bG = 0x0,
            bH = 0x0,
            bI = void 0x0;
        this['onStart'] = void 0x0, this['onLoad'] = bf, this['onProgress'] = bg, this['onError'] = bh, this['itemStart'] = function(bf) {
            bH++, !0x1 === bF && void 0x0 !== bi['onStart'] && bi['onStart'](bf, bG, bH), bF = !0x0;
        }, this['itemEnd'] = function(bf) {
            bG++, void 0x0 !== bi['onProgress'] && bi['onProgress'](bf, bG, bH), bG === bH && (bF = !0x1, void 0x0 !== bi['onLoad'] && bi['onLoad']());
        }, this['itemError'] = function(bf) {
            void 0x0 !== bi['onError'] && bi['onError'](bf);
        }, this['resolveURL'] = function(bf) {
            return bI ? bI(bf) : bf;
        }, this['setURLModifier'] = function(bf) {
            return bI = bf, this;
        };
    }
    var aCt = new aCf(),
        aCu = {};

    function aCv(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }

    function aCx(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }

    function aCz(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt, this['_parser'] = null;
    }

    function aCB(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt, this['_parser'] = null;
    }

    function aCD(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }

    function aCF(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }

    function aCH(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }

    function aCJ() {
        this['type'] = 'Curve', this['arcLengthDivisions'] = 0xc8;
    }

    function aCK(bf, bg, bh, bi, bF, bG, bH, bI) {
        aCJ['call'](this), this['type'] = 'EllipseCurve', this['aX'] = bf || 0x0, this['aY'] = bg || 0x0, this['xRadius'] = bh || 0x1, this['yRadius'] = bi || 0x1, this['aStartAngle'] = bF || 0x0, this['aEndAngle'] = bG || 0x2 * Math['PI'], this['aClockwise'] = bH || !0x1, this['aRotation'] = bI || 0x0;
    }

    function aCT(bf, bg, bh, bi, bF, bG) {
        aCK['call'](this, bf, bg, bh, bh, bi, bF, bG), this['type'] = 'ArcCurve';
    }

    function aD0() {
        var bf = 0x0,
            bg = 0x0,
            bh = 0x0,
            bi = 0x0;

        function bF(bF, bG, bH, bI) {
            bf = bF, bg = bH, bh = -0x3 * bF + 0x3 * bG - 0x2 * bH - bI, bi = 0x2 * bF - 0x2 * bG + bH + bI;
        }
        return {
            'initCatmullRom': function(bf, bg, bh, bi, bG) {
                bF(bg, bh, bG * (bh - bf), bG * (bi - bg));
            },
            'initNonuniformCatmullRom': function(bf, bg, bh, bi, bG, bH, bI) {
                var bJ = (bg - bf) / bG - (bh - bf) / (bG + bH) + (bh - bg) / bH,
                    bK = (bh - bg) / bH - (bi - bg) / (bH + bI) + (bi - bh) / bI;
                bF(bg, bh, bJ *= bH, bK *= bH);
            },
            'calc': function(bF) {
                var bG = bF * bF;
                return bf + bg * bF + bh * bG + bi * (bG * bF);
            }
        };
    }
    Object['assign'](aCv['prototype'], {
        'load': function(bf, bg, bh, bi) {
            void 0x0 === bf && (bf = ''), void 0x0 !== this['path'] && (bf = this['path'] + bf), bf = this['manager']['resolveURL'](bf);
            var bF = this,
                bG = aCa['get'](bf);
            if (void 0x0 !== bG) return bF['manager']['itemStart'](bf), setTimeout(function() {
                bg && bg(bG), bF['manager']['itemEnd'](bf);
            }, 0x0), bG;
            if (void 0x0 === aCu[bf]) {
                var bH = bf['match'](/^data:(.*?)(;base64)?,(.*)$/);
                if (bH) {
                    var bI = bH[0x1],
                        bJ = !!bH[0x2],
                        bK = bH[0x3];
                    bK = decodeURIComponent(bK), bJ && (bK = atob(bK));
                    try {
                        var bL, bM = (this['responseType'] || '')['toLowerCase']();
                        switch (bM) {
                            case 'arraybuffer':
                            case 'blob':
                                for (var bN = new Uint8Array(bK['length']), bO = 0x0; bO < bK['length']; bO++) bN[bO] = bK['charCodeAt'](bO);
                                bL = 'blob' === bM ? new Blob([bN['buffer']], {
                                    'type': bI
                                }) : bN['buffer'];
                                break;
                            case 'document':
                                var bP = new DOMParser();
                                bL = bP['parseFromString'](bK, bI);
                                break;
                            case 'json':
                                bL = JSON['parse'](bK);
                                break;
                            default:
                                bL = bK;
                        }
                        setTimeout(function() {
                            bg && bg(bL), bF['manager']['itemEnd'](bf);
                        }, 0x0);
                    } catch (aDF) {
                        setTimeout(function() {
                            bi && bi(aDF), bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
                        }, 0x0);
                    }
                } else {
                    aCu[bf] = [], aCu[bf]['push']({
                        'onLoad': bg,
                        'onProgress': bh,
                        'onError': bi
                    });
                    var bQ = new XMLHttpRequest();
                    for (var bR in bQ['open']('GET', bf, !0x0), bQ['addEventListener']('load', function(bg) {
                            var bh = this['response'];
                            aCa['add'](bf, bh);
                            var bi = aCu[bf];
                            if (delete aCu[bf], 0xc8 === this['status'] || 0x0 === this['status']) {
                                0x0 === this['status'] && console['warn']('THREE.FileLoader:\x20HTTP\x20Status\x200\x20received.');
                                for (var bG = 0x0, bH = bi['length']; bG < bH; bG++) {
                                    (bI = bi[bG])['onLoad'] && bI['onLoad'](bh);
                                }
                                bF['manager']['itemEnd'](bf);
                            } else {
                                for (bG = 0x0, bH = bi['length']; bG < bH; bG++) {
                                    var bI;
                                    (bI = bi[bG])['onError'] && bI['onError'](bg);
                                }
                                bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
                            }
                        }, !0x1), bQ['addEventListener']('progress', function(bg) {
                            for (var bh = aCu[bf], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                                var bG = bh[bi];
                                bG['onProgress'] && bG['onProgress'](bg);
                            }
                        }, !0x1), bQ['addEventListener']('error', function(bg) {
                            var bh = aCu[bf];
                            delete aCu[bf];
                            for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                                var bH = bh[bi];
                                bH['onError'] && bH['onError'](bg);
                            }
                            bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
                        }, !0x1), bQ['addEventListener']('abort', function(bg) {
                            var bh = aCu[bf];
                            delete aCu[bf];
                            for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                                var bH = bh[bi];
                                bH['onError'] && bH['onError'](bg);
                            }
                            bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
                        }, !0x1), void 0x0 !== this['responseType'] && (bQ['responseType'] = this['responseType']), void 0x0 !== this['withCredentials'] && (bQ['withCredentials'] = this['withCredentials']), bQ['overrideMimeType'] && bQ['overrideMimeType'](void 0x0 !== this['mimeType'] ? this['mimeType'] : 'text/plain'), this['requestHeader']) bQ['setRequestHeader'](bR, this['requestHeader'][bR]);
                    bQ['send'](null);
                }
                return bF['manager']['itemStart'](bf), bQ;
            }
            aCu[bf]['push']({
                'onLoad': bg,
                'onProgress': bh,
                'onError': bi
            });
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        },
        'setResponseType': function(bf) {
            return this['responseType'] = bf, this;
        },
        'setWithCredentials': function(bf) {
            return this['withCredentials'] = bf, this;
        },
        'setMimeType': function(bf) {
            return this['mimeType'] = bf, this;
        },
        'setRequestHeader': function(bf) {
            return this['requestHeader'] = bf, this;
        }
    }), Object['assign'](aCx['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this,
                bG = new aCv(bF['manager']);
            bG['setPath'](bF['path']), bG['load'](bf, function(bf) {
                bg(bF['parse'](JSON['parse'](bf)));
            }, bh, bi);
        },
        'parse': function(bf) {
            for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
                var bi = ayK['parse'](bf[bh]);
                bg['push'](bi);
            }
            return bg;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), Object['assign'](aCz['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this,
                bG = [],
                bH = new aeZ();
            bH['image'] = bG;
            var bI = new aCv(this['manager']);

            function bJ(bJ) {
                bI['load'](bf[bJ], function(bf) {
                    var bh = bF['_parser'](bf, !0x0);
                    bG[bJ] = {
                        'width': bh['width'],
                        'height': bh['height'],
                        'format': bh['format'],
                        'mipmaps': bh['mipmaps']
                    }, 0x6 === (bK += 0x1) && (0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS), bH['format'] = bh['format'], bH['needsUpdate'] = !0x0, bg && bg(bH));
                }, bh, bi);
            }
            if (bI['setPath'](this['path']), bI['setResponseType']('arraybuffer'), Array['isArray'](bf))
                for (var bK = 0x0, bL = 0x0, bM = bf['length']; bL < bM; ++bL) bJ(bL);
            else bI['load'](bf, function(bf) {
                var bh = bF['_parser'](bf, !0x0);
                if (bh['isCubemap'])
                    for (var bi = bh['mipmaps']['length'] / bh['mipmapCount'], bI = 0x0; bI < bi; bI++) {
                        bG[bI] = {
                            'mipmaps': []
                        };
                        for (var bJ = 0x0; bJ < bh['mipmapCount']; bJ++) bG[bI]['mipmaps']['push'](bh['mipmaps'][bI * bh['mipmapCount'] + bJ]), bG[bI]['format'] = bh['format'], bG[bI]['width'] = bh['width'], bG[bI]['height'] = bh['height'];
                    } else bH['image']['width'] = bh['width'], bH['image']['height'] = bh['height'], bH['mipmaps'] = bh['mipmaps'];
                0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS), bH['format'] = bh['format'], bH['needsUpdate'] = !0x0, bg && bg(bH);
            }, bh, bi);
            return bH;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), Object['assign'](aCB['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this,
                bG = new mo(),
                bH = new aCv(this['manager']);
            return bH['setResponseType']('arraybuffer'), bH['setPath'](this['path']), bH['load'](bf, function(bf) {
                var bh = bF['_parser'](bf);
                bh && (void 0x0 !== bh['image'] ? bG['image'] = bh['image'] : void 0x0 !== bh['data'] && (bG['image']['width'] = bh['width'], bG['image']['height'] = bh['height'], bG['image']['data'] = bh['data']), bG['wrapS'] = void 0x0 !== bh['wrapS'] ? bh['wrapS'] : cN, bG['wrapT'] = void 0x0 !== bh['wrapT'] ? bh['wrapT'] : cN, bG['magFilter'] = void 0x0 !== bh['magFilter'] ? bh['magFilter'] : cS, bG['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cU, bG['anisotropy'] = void 0x0 !== bh['anisotropy'] ? bh['anisotropy'] : 0x1, void 0x0 !== bh['format'] && (bG['format'] = bh['format']), void 0x0 !== bh['type'] && (bG['type'] = bh['type']), void 0x0 !== bh['mipmaps'] && (bG['mipmaps'] = bh['mipmaps']), 0x1 === bh['mipmapCount'] && (bG['minFilter'] = cS), bG['needsUpdate'] = !0x0, bg && bg(bG, bh));
            }, bh, bi), bG;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), Object['assign'](aCD['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            void 0x0 === bf && (bf = ''), void 0x0 !== this['path'] && (bf = this['path'] + bf), bf = this['manager']['resolveURL'](bf);
            var bF = this,
                bG = aCa['get'](bf);
            if (void 0x0 !== bG) return bF['manager']['itemStart'](bf), setTimeout(function() {
                bg && bg(bG), bF['manager']['itemEnd'](bf);
            }, 0x0), bG;
            var bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'img');

            function bI() {
                bH['removeEventListener']('load', bI, !0x1), bH['removeEventListener']('error', bJ, !0x1), aCa['add'](bf, this), bg && bg(this), bF['manager']['itemEnd'](bf);
            }

            function bJ(bg) {
                bH['removeEventListener']('load', bI, !0x1), bH['removeEventListener']('error', bJ, !0x1), bi && bi(bg), bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
            }
            return bH['addEventListener']('load', bI, !0x1), bH['addEventListener']('error', bJ, !0x1), 'data:' !== bf['substr'](0x0, 0x5) && void 0x0 !== this['crossOrigin'] && (bH['crossOrigin'] = this['crossOrigin']), bF['manager']['itemStart'](bf), bH['src'] = bf, bH;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf, this;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), Object['assign'](aCF['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            var bF = new O3(),
                bG = new aCD(this['manager']);
            bG['setCrossOrigin'](this['crossOrigin']), bG['setPath'](this['path']);
            var bH = 0x0;

            function bI(bh) {
                bG['load'](bf[bh], function(bf) {
                    bF['images'][bh] = bf, 0x6 === ++bH && (bF['needsUpdate'] = !0x0, bg && bg(bF));
                }, void 0x0, bi);
            }
            for (var bJ = 0x0; bJ < bf['length']; ++bJ) bI(bJ);
            return bF;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf, this;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), Object['assign'](aCH['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            var bF = new lW(),
                bG = new aCD(this['manager']);
            return bG['setCrossOrigin'](this['crossOrigin']), bG['setPath'](this['path']), bG['load'](bf, function(bh) {
                bF['image'] = bh;
                var bi = bf['search'](/\.jpe?g($|\?)/i) > 0x0 || 0x0 === bf['search'](/^data\:image\/jpeg/);
                bF['format'] = bi ? d8 : d9, bF['needsUpdate'] = !0x0, void 0x0 !== bg && bg(bF);
            }, bh, bi), bF;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf, this;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), Object['assign'](aCJ['prototype'], {
        'getPoint': function() {
            return console['warn']('THREE.Curve:\x20.getPoint()\x20not\x20implemented.'), null;
        },
        'getPointAt': function(bf, bg) {
            var bh = this['getUtoTmapping'](bf);
            return this['getPoint'](bh, bg);
        },
        'getPoints': function(bf) {
            void 0x0 === bf && (bf = 0x5);
            for (var bg = [], bh = 0x0; bh <= bf; bh++) bg['push'](this['getPoint'](bh / bf));
            return bg;
        },
        'getSpacedPoints': function(bf) {
            void 0x0 === bf && (bf = 0x5);
            for (var bg = [], bh = 0x0; bh <= bf; bh++) bg['push'](this['getPointAt'](bh / bf));
            return bg;
        },
        'getLength': function() {
            var bf = this['getLengths']();
            return bf[bf['length'] - 0x1];
        },
        'getLengths': function(bf) {
            if (void 0x0 === bf && (bf = this['arcLengthDivisions']), this['cacheArcLengths'] && this['cacheArcLengths']['length'] === bf + 0x1 && !this['needsUpdate']) return this['cacheArcLengths'];
            this['needsUpdate'] = !0x1;
            var bg, bh, bi = [],
                bF = this['getPoint'](0x0),
                bG = 0x0;
            for (bi['push'](0x0), bh = 0x1; bh <= bf; bh++) bG += (bg = this['getPoint'](bh / bf))['distanceTo'](bF), bi['push'](bG), bF = bg;
            return this['cacheArcLengths'] = bi, bi;
        },
        'updateArcLengths': function() {
            this['needsUpdate'] = !0x0, this['getLengths']();
        },
        'getUtoTmapping': function(bf, bg) {
            var bh, bi = this['getLengths'](),
                bF = 0x0,
                bG = bi['length'];
            bh = bg || bf * bi[bG - 0x1];
            for (var bH, bI = 0x0, bJ = bG - 0x1; bI <= bJ;)
                if ((bH = bi[bF = Math['floor'](bI + (bJ - bI) / 0x2)] - bh) < 0x0) bI = bF + 0x1;
                else {
                    if (!(bH > 0x0)) {
                        bJ = bF;
                        break;
                    }
                    bJ = bF - 0x1;
                }
            if (bi[bF = bJ] === bh) return bF / (bG - 0x1);
            var bK = bi[bF];
            return (bF + (bh - bK) / (bi[bF + 0x1] - bK)) / (bG - 0x1);
        },
        'getTangent': function(bf) {
            var bg = bf - 0.0001,
                bh = bf + 0.0001;
            bg < 0x0 && (bg = 0x0), bh > 0x1 && (bh = 0x1);
            var bi = this['getPoint'](bg);
            return this['getPoint'](bh)['clone']()['sub'](bi)['normalize']();
        },
        'getTangentAt': function(bf) {
            var bg = this['getUtoTmapping'](bf);
            return this['getTangent'](bg);
        },
        'computeFrenetFrames': function(bf, bg) {
            var bh, bi, bF, bG = new eK(),
                bH = [],
                bI = [],
                bJ = [],
                bK = new eK(),
                bL = new mR();
            for (bh = 0x0; bh <= bf; bh++) bi = bh / bf, bH[bh] = this['getTangentAt'](bi), bH[bh]['normalize']();
            bI[0x0] = new eK(), bJ[0x0] = new eK();
            var bM = Number['MAX_VALUE'],
                bN = Math['abs'](bH[0x0]['x']),
                bO = Math['abs'](bH[0x0]['y']),
                bP = Math['abs'](bH[0x0]['z']);
            for (bN <= bM && (bM = bN, bG['set'](0x1, 0x0, 0x0)), bO <= bM && (bM = bO, bG['set'](0x0, 0x1, 0x0)), bP <= bM && bG['set'](0x0, 0x0, 0x1), bK['crossVectors'](bH[0x0], bG)['normalize'](), bI[0x0]['crossVectors'](bH[0x0], bK), bJ[0x0]['crossVectors'](bH[0x0], bI[0x0]), bh = 0x1; bh <= bf; bh++) bI[bh] = bI[bh - 0x1]['clone'](), bJ[bh] = bJ[bh - 0x1]['clone'](), bK['crossVectors'](bH[bh - 0x1], bH[bh]), bK['length']() > Number['EPSILON'] && (bK['normalize'](), bF = Math['acos'](e2['clamp'](bH[bh - 0x1]['dot'](bH[bh]), -0x1, 0x1)), bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bK, bF))), bJ[bh]['crossVectors'](bH[bh], bI[bh]);
            if (!0x0 === bg)
                for (bF = Math['acos'](e2['clamp'](bI[0x0]['dot'](bI[bf]), -0x1, 0x1)), bF /= bf, bH[0x0]['dot'](bK['crossVectors'](bI[0x0], bI[bf])) > 0x0 && (bF = -bF), bh = 0x1; bh <= bf; bh++) bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bH[bh], bF * bh)), bJ[bh]['crossVectors'](bH[bh], bI[bh]);
            return {
                'tangents': bH,
                'normals': bI,
                'binormals': bJ
            };
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['arcLengthDivisions'] = bf['arcLengthDivisions'], this;
        },
        'toJSON': function() {
            var bf = {
                'metadata': {
                    'version': 4.5,
                    'type': 'Curve',
                    'generator': 'Curve.toJSON'
                }
            };
            return bf['arcLengthDivisions'] = this['arcLengthDivisions'], bf['type'] = this['type'], bf;
        },
        'fromJSON': function(bf) {
            return this['arcLengthDivisions'] = bf['arcLengthDivisions'], this;
        }
    }), aCK['prototype'] = Object['create'](aCJ['prototype']), aCK['prototype']['constructor'] = aCK, aCK['prototype']['isEllipseCurve'] = !0x0, aCK['prototype']['getPoint'] = function(bf, bg) {
        for (var bh = bg || new eC(), bi = 0x2 * Math['PI'], bF = this['aEndAngle'] - this['aStartAngle'], bG = Math['abs'](bF) < Number['EPSILON']; bF < 0x0;) bF += bi;
        for (; bF > bi;) bF -= bi;
        bF < Number['EPSILON'] && (bF = bG ? 0x0 : bi), !0x0 !== this['aClockwise'] || bG || (bF === bi ? bF = -bi : bF -= bi);
        var bH = this['aStartAngle'] + bf * bF,
            bI = this['aX'] + this['xRadius'] * Math['cos'](bH),
            bJ = this['aY'] + this['yRadius'] * Math['sin'](bH);
        if (0x0 !== this['aRotation']) {
            var bK = Math['cos'](this['aRotation']),
                bL = Math['sin'](this['aRotation']),
                bM = bI - this['aX'],
                bN = bJ - this['aY'];
            bI = bM * bK - bN * bL + this['aX'], bJ = bM * bL + bN * bK + this['aY'];
        }
        return bh['set'](bI, bJ);
    }, aCK['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf), this['aX'] = bf['aX'], this['aY'] = bf['aY'], this['xRadius'] = bf['xRadius'], this['yRadius'] = bf['yRadius'], this['aStartAngle'] = bf['aStartAngle'], this['aEndAngle'] = bf['aEndAngle'], this['aClockwise'] = bf['aClockwise'], this['aRotation'] = bf['aRotation'], this;
    }, aCK['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['aX'] = this['aX'], bf['aY'] = this['aY'], bf['xRadius'] = this['xRadius'], bf['yRadius'] = this['yRadius'], bf['aStartAngle'] = this['aStartAngle'], bf['aEndAngle'] = this['aEndAngle'], bf['aClockwise'] = this['aClockwise'], bf['aRotation'] = this['aRotation'], bf;
    }, aCK['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf), this['aX'] = bf['aX'], this['aY'] = bf['aY'], this['xRadius'] = bf['xRadius'], this['yRadius'] = bf['yRadius'], this['aStartAngle'] = bf['aStartAngle'], this['aEndAngle'] = bf['aEndAngle'], this['aClockwise'] = bf['aClockwise'], this['aRotation'] = bf['aRotation'], this;
    }, aCT['prototype'] = Object['create'](aCK['prototype']), aCT['prototype']['constructor'] = aCT, aCT['prototype']['isArcCurve'] = !0x0;
    var aGs = new eK(),
        aGt = new aD0(),
        aGu = new aD0(),
        aGv = new aD0();

    function aGw(bf, bg, bh, bi) {
        aCJ['call'](this), this['type'] = 'CatmullRomCurve3', this['points'] = bf || [], this['closed'] = bg || !0x1, this['curveType'] = bh || 'centripetal', this['tension'] = bi || 0.5;
    }

    function aGB(bf, bg, bh, bi, bF) {
        var bG = 0.5 * (bi - bg),
            bH = 0.5 * (bF - bh),
            bI = bf * bf;
        return (0x2 * bh - 0x2 * bi + bG + bH) * (bf * bI) + (-0x3 * bh + 0x3 * bi - 0x2 * bG - bH) * bI + bG * bf + bh;
    }

    function aGK(bf, bg, bh, bi) {
        return function(bf, bg) {
            var bh = 0x1 - bf;
            return bh * bh * bg;
        }(bf, bg) + function(bf, bg) {
            return 0x2 * (0x1 - bf) * bf * bg;
        }(bf, bh) + function(bf, bg) {
            return bf * bf * bg;
        }(bf, bi);
    }

    function aGW(bf, bg, bh, bi, bF) {
        return function(bf, bg) {
            var bh = 0x1 - bf;
            return bh * bh * bh * bg;
        }(bf, bg) + function(bf, bg) {
            var bh = 0x1 - bf;
            return 0x3 * bh * bh * bf * bg;
        }(bf, bh) + function(bf, bg) {
            return 0x3 * (0x1 - bf) * bf * bf * bg;
        }(bf, bi) + function(bf, bg) {
            return bf * bf * bf * bg;
        }(bf, bF);
    }

    function aHc(bf, bg, bh, bi) {
        aCJ['call'](this), this['type'] = 'CubicBezierCurve', this['v0'] = bf || new eC(), this['v1'] = bg || new eC(), this['v2'] = bh || new eC(), this['v3'] = bi || new eC();
    }

    function aHh(bf, bg, bh, bi) {
        aCJ['call'](this), this['type'] = 'CubicBezierCurve3', this['v0'] = bf || new eK(), this['v1'] = bg || new eK(), this['v2'] = bh || new eK(), this['v3'] = bi || new eK();
    }

    function aHm(bf, bg) {
        aCJ['call'](this), this['type'] = 'LineCurve', this['v1'] = bf || new eC(), this['v2'] = bg || new eC();
    }

    function aHp(bf, bg) {
        aCJ['call'](this), this['type'] = 'LineCurve3', this['v1'] = bf || new eK(), this['v2'] = bg || new eK();
    }

    function aHs(bf, bg, bh) {
        aCJ['call'](this), this['type'] = 'QuadraticBezierCurve', this['v0'] = bf || new eC(), this['v1'] = bg || new eC(), this['v2'] = bh || new eC();
    }

    function aHw(bf, bg, bh) {
        aCJ['call'](this), this['type'] = 'QuadraticBezierCurve3', this['v0'] = bf || new eK(), this['v1'] = bg || new eK(), this['v2'] = bh || new eK();
    }

    function aHA(bf) {
        aCJ['call'](this), this['type'] = 'SplineCurve', this['points'] = bf || [];
    }
    aGw['prototype'] = Object['create'](aCJ['prototype']), aGw['prototype']['constructor'] = aGw, aGw['prototype']['isCatmullRomCurve3'] = !0x0, aGw['prototype']['getPoint'] = function(bf, bg) {
        var bh, bi, bF, bG, bH = bg || new eK(),
            bI = this['points'],
            bJ = bI['length'],
            bK = (bJ - (this['closed'] ? 0x0 : 0x1)) * bf,
            bL = Math['floor'](bK),
            bM = bK - bL;
        if (this['closed'] ? bL += bL > 0x0 ? 0x0 : (Math['floor'](Math['abs'](bL) / bJ) + 0x1) * bJ : 0x0 === bM && bL === bJ - 0x1 && (bL = bJ - 0x2, bM = 0x1), this['closed'] || bL > 0x0 ? bh = bI[(bL - 0x1) % bJ] : (aGs['subVectors'](bI[0x0], bI[0x1])['add'](bI[0x0]), bh = aGs), bi = bI[bL % bJ], bF = bI[(bL + 0x1) % bJ], this['closed'] || bL + 0x2 < bJ ? bG = bI[(bL + 0x2) % bJ] : (aGs['subVectors'](bI[bJ - 0x1], bI[bJ - 0x2])['add'](bI[bJ - 0x1]), bG = aGs), 'centripetal' === this['curveType'] || 'chordal' === this['curveType']) {
            var bN = 'chordal' === this['curveType'] ? 0.5 : 0.25,
                bO = Math['pow'](bh['distanceToSquared'](bi), bN),
                bP = Math['pow'](bi['distanceToSquared'](bF), bN),
                bQ = Math['pow'](bF['distanceToSquared'](bG), bN);
            bP < 0.0001 && (bP = 0x1), bO < 0.0001 && (bO = bP), bQ < 0.0001 && (bQ = bP), aGt['initNonuniformCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], bO, bP, bQ), aGu['initNonuniformCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], bO, bP, bQ), aGv['initNonuniformCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], bO, bP, bQ);
        } else 'catmullrom' === this['curveType'] && (aGt['initCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], this['tension']), aGu['initCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], this['tension']), aGv['initCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], this['tension']));
        return bH['set'](aGt['calc'](bM), aGu['calc'](bM), aGv['calc'](bM)), bH;
    }, aGw['prototype']['copy'] = function(bf) {
        aCJ['prototype']['copy']['call'](this, bf), this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](bi['clone']());
        }
        return this['closed'] = bf['closed'], this['curveType'] = bf['curveType'], this['tension'] = bf['tension'], this;
    }, aGw['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        bf['points'] = [];
        for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
            var bi = this['points'][bg];
            bf['points']['push'](bi['toArray']());
        }
        return bf['closed'] = this['closed'], bf['curveType'] = this['curveType'], bf['tension'] = this['tension'], bf;
    }, aGw['prototype']['fromJSON'] = function(bf) {
        aCJ['prototype']['fromJSON']['call'](this, bf), this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](new eK()['fromArray'](bi));
        }
        return this['closed'] = bf['closed'], this['curveType'] = bf['curveType'], this['tension'] = bf['tension'], this;
    }, aHc['prototype'] = Object['create'](aCJ['prototype']), aHc['prototype']['constructor'] = aHc, aHc['prototype']['isCubicBezierCurve'] = !0x0, aHc['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC(),
            bi = this['v0'],
            bF = this['v1'],
            bG = this['v2'],
            bH = this['v3'];
        return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y'])), bh;
    }, aHc['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this['v3']['copy'](bf['v3']), this;
    }, aHc['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf['v3'] = this['v3']['toArray'](), bf;
    }, aHc['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this['v3']['fromArray'](bf['v3']), this;
    }, aHh['prototype'] = Object['create'](aCJ['prototype']), aHh['prototype']['constructor'] = aHh, aHh['prototype']['isCubicBezierCurve3'] = !0x0, aHh['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eK(),
            bi = this['v0'],
            bF = this['v1'],
            bG = this['v2'],
            bH = this['v3'];
        return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y']), aGW(bf, bi['z'], bF['z'], bG['z'], bH['z'])), bh;
    }, aHh['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this['v3']['copy'](bf['v3']), this;
    }, aHh['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf['v3'] = this['v3']['toArray'](), bf;
    }, aHh['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this['v3']['fromArray'](bf['v3']), this;
    }, aHm['prototype'] = Object['create'](aCJ['prototype']), aHm['prototype']['constructor'] = aHm, aHm['prototype']['isLineCurve'] = !0x0, aHm['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC();
        return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']), bh['multiplyScalar'](bf)['add'](this['v1'])), bh;
    }, aHm['prototype']['getPointAt'] = function(bf, bg) {
        return this['getPoint'](bf, bg);
    }, aHm['prototype']['getTangent'] = function() {
        return this['v2']['clone']()['sub'](this['v1'])['normalize']();
    }, aHm['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
    }, aHm['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
    }, aHm['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
    }, aHp['prototype'] = Object['create'](aCJ['prototype']), aHp['prototype']['constructor'] = aHp, aHp['prototype']['isLineCurve3'] = !0x0, aHp['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eK();
        return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']), bh['multiplyScalar'](bf)['add'](this['v1'])), bh;
    }, aHp['prototype']['getPointAt'] = function(bf, bg) {
        return this['getPoint'](bf, bg);
    }, aHp['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
    }, aHp['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
    }, aHp['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
    }, aHs['prototype'] = Object['create'](aCJ['prototype']), aHs['prototype']['constructor'] = aHs, aHs['prototype']['isQuadraticBezierCurve'] = !0x0, aHs['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC(),
            bi = this['v0'],
            bF = this['v1'],
            bG = this['v2'];
        return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y'])), bh;
    }, aHs['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
    }, aHs['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
    }, aHs['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
    }, aHw['prototype'] = Object['create'](aCJ['prototype']), aHw['prototype']['constructor'] = aHw, aHw['prototype']['isQuadraticBezierCurve3'] = !0x0, aHw['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eK(),
            bi = this['v0'],
            bF = this['v1'],
            bG = this['v2'];
        return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y']), aGK(bf, bi['z'], bF['z'], bG['z'])), bh;
    }, aHw['prototype']['copy'] = function(bf) {
        return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
    }, aHw['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
    }, aHw['prototype']['fromJSON'] = function(bf) {
        return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
    }, aHA['prototype'] = Object['create'](aCJ['prototype']), aHA['prototype']['constructor'] = aHA, aHA['prototype']['isSplineCurve'] = !0x0, aHA['prototype']['getPoint'] = function(bf, bg) {
        var bh = bg || new eC(),
            bi = this['points'],
            bF = (bi['length'] - 0x1) * bf,
            bG = Math['floor'](bF),
            bH = bF - bG,
            bI = bi[0x0 === bG ? bG : bG - 0x1],
            bJ = bi[bG],
            bK = bi[bG > bi['length'] - 0x2 ? bi['length'] - 0x1 : bG + 0x1],
            bL = bi[bG > bi['length'] - 0x3 ? bi['length'] - 0x1 : bG + 0x2];
        return bh['set'](aGB(bH, bI['x'], bJ['x'], bK['x'], bL['x']), aGB(bH, bI['y'], bJ['y'], bK['y'], bL['y'])), bh;
    }, aHA['prototype']['copy'] = function(bf) {
        aCJ['prototype']['copy']['call'](this, bf), this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](bi['clone']());
        }
        return this;
    }, aHA['prototype']['toJSON'] = function() {
        var bf = aCJ['prototype']['toJSON']['call'](this);
        bf['points'] = [];
        for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
            var bi = this['points'][bg];
            bf['points']['push'](bi['toArray']());
        }
        return bf;
    }, aHA['prototype']['fromJSON'] = function(bf) {
        aCJ['prototype']['fromJSON']['call'](this, bf), this['points'] = [];
        for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
            var bi = bf['points'][bg];
            this['points']['push'](new eC()['fromArray'](bi));
        }
        return this;
    };
    var aJj = Object['freeze']({
        'ArcCurve': aCT,
        'CatmullRomCurve3': aGw,
        'CubicBezierCurve': aHc,
        'CubicBezierCurve3': aHh,
        'EllipseCurve': aCK,
        'LineCurve': aHm,
        'LineCurve3': aHp,
        'QuadraticBezierCurve': aHs,
        'QuadraticBezierCurve3': aHw,
        'SplineCurve': aHA
    });

    function aJk() {
        aCJ['call'](this), this['type'] = 'CurvePath', this['curves'] = [], this['autoClose'] = !0x1;
    }

    function aJl(bf) {
        aJk['call'](this), this['type'] = 'Path', this['currentPoint'] = new eC(), bf && this['setFromPoints'](bf);
    }

    function aJn(bf) {
        aJl['call'](this, bf), this['uuid'] = e2['generateUUID'](), this['type'] = 'Shape', this['holes'] = [];
    }

    function aJp(bf, bg) {
        yT['call'](this), this['type'] = 'Light', this['color'] = new w7(bf), this['intensity'] = void 0x0 !== bg ? bg : 0x1, this['receiveShadow'] = void 0x0;
    }

    function aJs(bf, bg, bh) {
        aJp['call'](this, bf, bh), this['type'] = 'HemisphereLight', this['castShadow'] = void 0x0, this['position']['copy'](yT['DefaultUp']), this['updateMatrix'](), this['groundColor'] = new w7(bg);
    }

    function aJw(bf) {
        this['camera'] = bf, this['bias'] = 0x0, this['radius'] = 0x1, this['mapSize'] = new eC(0x200, 0x200), this['map'] = null, this['matrix'] = new mR();
    }

    function aJy() {
        aJw['call'](this, new a68(0x32, 0x1, 0.5, 0x1f4));
    }

    function aJz(bf, bg, bh, bi, bF, bG) {
        aJp['call'](this, bf, bg), this['type'] = 'SpotLight', this['position']['copy'](yT['DefaultUp']), this['updateMatrix'](), this['target'] = new yT(), Object['defineProperty'](this, 'power', {
            'get': function() {
                return this['intensity'] * Math['PI'];
            },
            'set': function(bf) {
                this['intensity'] = bf / Math['PI'];
            }
        }), this['distance'] = void 0x0 !== bh ? bh : 0x0, this['angle'] = void 0x0 !== bi ? bi : Math['PI'] / 0x3, this['penumbra'] = void 0x0 !== bF ? bF : 0x0, this['decay'] = void 0x0 !== bG ? bG : 0x1, this['shadow'] = new aJy();
    }

    function aJH(bf, bg, bh, bi) {
        aJp['call'](this, bf, bg), this['type'] = 'PointLight', Object['defineProperty'](this, 'power', {
            'get': function() {
                return 0x4 * this['intensity'] * Math['PI'];
            },
            'set': function(bf) {
                this['intensity'] = bf / (0x4 * Math['PI']);
            }
        }), this['distance'] = void 0x0 !== bh ? bh : 0x0, this['decay'] = void 0x0 !== bi ? bi : 0x1, this['shadow'] = new aJw(new a68(0x5a, 0x1, 0.5, 0x1f4));
    }

    function aJN(bf, bg, bh, bi, bF, bG) {
        a67['call'](this), this['type'] = 'OrthographicCamera', this['zoom'] = 0x1, this['view'] = null, this['left'] = void 0x0 !== bf ? bf : -0x1, this['right'] = void 0x0 !== bg ? bg : 0x1, this['top'] = void 0x0 !== bh ? bh : 0x1, this['bottom'] = void 0x0 !== bi ? bi : -0x1, this['near'] = void 0x0 !== bF ? bF : 0.1, this['far'] = void 0x0 !== bG ? bG : 0x7d0, this['updateProjectionMatrix']();
    }

    function aJU() {
        aJw['call'](this, new aJN(-0x5, 0x5, 0x5, -0x5, 0.5, 0x1f4));
    }

    function aJV(bf, bg) {
        aJp['call'](this, bf, bg), this['type'] = 'DirectionalLight', this['position']['copy'](yT['DefaultUp']), this['updateMatrix'](), this['target'] = new yT(), this['shadow'] = new aJU();
    }

    function aJY(bf, bg) {
        aJp['call'](this, bf, bg), this['type'] = 'AmbientLight', this['castShadow'] = void 0x0;
    }

    function aK1(bf, bg, bh, bi) {
        aJp['call'](this, bf, bg), this['type'] = 'RectAreaLight', this['width'] = void 0x0 !== bh ? bh : 0xa, this['height'] = void 0x0 !== bi ? bi : 0xa;
    }

    function aK6(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt, this['textures'] = {};
    }
    aJk['prototype'] = Object['assign'](Object['create'](aCJ['prototype']), {
        'constructor': aJk,
        'add': function(bf) {
            this['curves']['push'](bf);
        },
        'closePath': function() {
            var bf = this['curves'][0x0]['getPoint'](0x0),
                bg = this['curves'][this['curves']['length'] - 0x1]['getPoint'](0x1);
            bf['equals'](bg) || this['curves']['push'](new aHm(bg, bf));
        },
        'getPoint': function(bf) {
            for (var bg = bf * this['getLength'](), bh = this['getCurveLengths'](), bi = 0x0; bi < bh['length'];) {
                if (bh[bi] >= bg) {
                    var bF = bh[bi] - bg,
                        bG = this['curves'][bi],
                        bH = bG['getLength'](),
                        bI = 0x0 === bH ? 0x0 : 0x1 - bF / bH;
                    return bG['getPointAt'](bI);
                }
                bi++;
            }
            return null;
        },
        'getLength': function() {
            var bf = this['getCurveLengths']();
            return bf[bf['length'] - 0x1];
        },
        'updateArcLengths': function() {
            this['needsUpdate'] = !0x0, this['cacheLengths'] = null, this['getCurveLengths']();
        },
        'getCurveLengths': function() {
            if (this['cacheLengths'] && this['cacheLengths']['length'] === this['curves']['length']) return this['cacheLengths'];
            for (var bf = [], bg = 0x0, bh = 0x0, bi = this['curves']['length']; bh < bi; bh++) bg += this['curves'][bh]['getLength'](), bf['push'](bg);
            return this['cacheLengths'] = bf, bf;
        },
        'getSpacedPoints': function(bf) {
            void 0x0 === bf && (bf = 0x28);
            for (var bg = [], bh = 0x0; bh <= bf; bh++) bg['push'](this['getPoint'](bh / bf));
            return this['autoClose'] && bg['push'](bg[0x0]), bg;
        },
        'getPoints': function(bf) {
            bf = bf || 0xc;
            for (var bg, bh = [], bi = 0x0, bF = this['curves']; bi < bF['length']; bi++)
                for (var bG = bF[bi], bH = bG && bG['isEllipseCurve'] ? 0x2 * bf : bG && (bG['isLineCurve'] || bG['isLineCurve3']) ? 0x1 : bG && bG['isSplineCurve'] ? bf * bG['points']['length'] : bf, bI = bG['getPoints'](bH), bJ = 0x0; bJ < bI['length']; bJ++) {
                    var bK = bI[bJ];
                    bg && bg['equals'](bK) || (bh['push'](bK), bg = bK);
                }
            return this['autoClose'] && bh['length'] > 0x1 && !bh[bh['length'] - 0x1]['equals'](bh[0x0]) && bh['push'](bh[0x0]), bh;
        },
        'copy': function(bf) {
            aCJ['prototype']['copy']['call'](this, bf), this['curves'] = [];
            for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
                var bi = bf['curves'][bg];
                this['curves']['push'](bi['clone']());
            }
            return this['autoClose'] = bf['autoClose'], this;
        },
        'toJSON': function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            bf['autoClose'] = this['autoClose'], bf['curves'] = [];
            for (var bg = 0x0, bh = this['curves']['length']; bg < bh; bg++) {
                var bi = this['curves'][bg];
                bf['curves']['push'](bi['toJSON']());
            }
            return bf;
        },
        'fromJSON': function(bf) {
            aCJ['prototype']['fromJSON']['call'](this, bf), this['autoClose'] = bf['autoClose'], this['curves'] = [];
            for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
                var bi = bf['curves'][bg];
                this['curves']['push'](new aJj[bi['type']]()['fromJSON'](bi));
            }
            return this;
        }
    }), aJl['prototype'] = Object['assign'](Object['create'](aJk['prototype']), {
        'constructor': aJl,
        'setFromPoints': function(bf) {
            this['moveTo'](bf[0x0]['x'], bf[0x0]['y']);
            for (var bg = 0x1, bh = bf['length']; bg < bh; bg++) this['lineTo'](bf[bg]['x'], bf[bg]['y']);
        },
        'moveTo': function(bf, bg) {
            this['currentPoint']['set'](bf, bg);
        },
        'lineTo': function(bf, bg) {
            var bh = new aHm(this['currentPoint']['clone'](), new eC(bf, bg));
            this['curves']['push'](bh), this['currentPoint']['set'](bf, bg);
        },
        'quadraticCurveTo': function(bf, bg, bh, bi) {
            var bF = new aHs(this['currentPoint']['clone'](), new eC(bf, bg), new eC(bh, bi));
            this['curves']['push'](bF), this['currentPoint']['set'](bh, bi);
        },
        'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
            var bH = new aHc(this['currentPoint']['clone'](), new eC(bf, bg), new eC(bh, bi), new eC(bF, bG));
            this['curves']['push'](bH), this['currentPoint']['set'](bF, bG);
        },
        'splineThru': function(bf) {
            var bg = new aHA([this['currentPoint']['clone']()]['concat'](bf));
            this['curves']['push'](bg), this['currentPoint']['copy'](bf[bf['length'] - 0x1]);
        },
        'arc': function(bf, bg, bh, bi, bF, bG) {
            var bH = this['currentPoint']['x'],
                bI = this['currentPoint']['y'];
            this['absarc'](bf + bH, bg + bI, bh, bi, bF, bG);
        },
        'absarc': function(bf, bg, bh, bi, bF, bG) {
            this['absellipse'](bf, bg, bh, bh, bi, bF, bG);
        },
        'ellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
            var bJ = this['currentPoint']['x'],
                bK = this['currentPoint']['y'];
            this['absellipse'](bf + bJ, bg + bK, bh, bi, bF, bG, bH, bI);
        },
        'absellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
            var bJ = new aCK(bf, bg, bh, bi, bF, bG, bH, bI);
            if (this['curves']['length'] > 0x0) {
                var bK = bJ['getPoint'](0x0);
                bK['equals'](this['currentPoint']) || this['lineTo'](bK['x'], bK['y']);
            }
            this['curves']['push'](bJ);
            var bL = bJ['getPoint'](0x1);
            this['currentPoint']['copy'](bL);
        },
        'copy': function(bf) {
            return aJk['prototype']['copy']['call'](this, bf), this['currentPoint']['copy'](bf['currentPoint']), this;
        },
        'toJSON': function() {
            var bf = aJk['prototype']['toJSON']['call'](this);
            return bf['currentPoint'] = this['currentPoint']['toArray'](), bf;
        },
        'fromJSON': function(bf) {
            return aJk['prototype']['fromJSON']['call'](this, bf), this['currentPoint']['fromArray'](bf['currentPoint']), this;
        }
    }), aJn['prototype'] = Object['assign'](Object['create'](aJl['prototype']), {
        'constructor': aJn,
        'getPointsHoles': function(bf) {
            for (var bg = [], bh = 0x0, bi = this['holes']['length']; bh < bi; bh++) bg[bh] = this['holes'][bh]['getPoints'](bf);
            return bg;
        },
        'extractPoints': function(bf) {
            return {
                'shape': this['getPoints'](bf),
                'holes': this['getPointsHoles'](bf)
            };
        },
        'copy': function(bf) {
            aJl['prototype']['copy']['call'](this, bf), this['holes'] = [];
            for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
                var bi = bf['holes'][bg];
                this['holes']['push'](bi['clone']());
            }
            return this;
        },
        'toJSON': function() {
            var bf = aJl['prototype']['toJSON']['call'](this);
            bf['uuid'] = this['uuid'], bf['holes'] = [];
            for (var bg = 0x0, bh = this['holes']['length']; bg < bh; bg++) {
                var bi = this['holes'][bg];
                bf['holes']['push'](bi['toJSON']());
            }
            return bf;
        },
        'fromJSON': function(bf) {
            aJl['prototype']['fromJSON']['call'](this, bf), this['uuid'] = bf['uuid'], this['holes'] = [];
            for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
                var bi = bf['holes'][bg];
                this['holes']['push'](new aJl()['fromJSON'](bi));
            }
            return this;
        }
    }), aJp['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aJp,
        'isLight': !0x0,
        'copy': function(bf) {
            return yT['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['intensity'] = bf['intensity'], this;
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return bg['object']['color'] = this['color']['getHex'](), bg['object']['intensity'] = this['intensity'], void 0x0 !== this['groundColor'] && (bg['object']['groundColor'] = this['groundColor']['getHex']()), void 0x0 !== this['distance'] && (bg['object']['distance'] = this['distance']), void 0x0 !== this['angle'] && (bg['object']['angle'] = this['angle']), void 0x0 !== this['decay'] && (bg['object']['decay'] = this['decay']), void 0x0 !== this['penumbra'] && (bg['object']['penumbra'] = this['penumbra']), void 0x0 !== this['shadow'] && (bg['object']['shadow'] = this['shadow']['toJSON']()), bg;
        }
    }), aJs['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJs,
        'isHemisphereLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf), this['groundColor']['copy'](bf['groundColor']), this;
        }
    }), Object['assign'](aJw['prototype'], {
        'copy': function(bf) {
            return this['camera'] = bf['camera']['clone'](), this['bias'] = bf['bias'], this['radius'] = bf['radius'], this['mapSize']['copy'](bf['mapSize']), this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'toJSON': function() {
            var bf = {};
            return 0x0 !== this['bias'] && (bf['bias'] = this['bias']), 0x1 !== this['radius'] && (bf['radius'] = this['radius']), 0x200 === this['mapSize']['x'] && 0x200 === this['mapSize']['y'] || (bf['mapSize'] = this['mapSize']['toArray']()), bf['camera'] = this['camera']['toJSON'](!0x1)['object'], delete bf['camera']['matrix'], bf;
        }
    }), aJy['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
        'constructor': aJy,
        'isSpotLightShadow': !0x0,
        'update': function(bf) {
            var bg = this['camera'],
                bh = 0x2 * e2['RAD2DEG'] * bf['angle'],
                bi = this['mapSize']['width'] / this['mapSize']['height'],
                bF = bf['distance'] || bg['far'];
            bh === bg['fov'] && bi === bg['aspect'] && bF === bg['far'] || (bg['fov'] = bh, bg['aspect'] = bi, bg['far'] = bF, bg['updateProjectionMatrix']());
        }
    }), aJz['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJz,
        'isSpotLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf), this['distance'] = bf['distance'], this['angle'] = bf['angle'], this['penumbra'] = bf['penumbra'], this['decay'] = bf['decay'], this['target'] = bf['target']['clone'](), this['shadow'] = bf['shadow']['clone'](), this;
        }
    }), aJH['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJH,
        'isPointLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf), this['distance'] = bf['distance'], this['decay'] = bf['decay'], this['shadow'] = bf['shadow']['clone'](), this;
        }
    }), aJN['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
        'constructor': aJN,
        'isOrthographicCamera': !0x0,
        'copy': function(bf, bg) {
            return a67['prototype']['copy']['call'](this, bf, bg), this['left'] = bf['left'], this['right'] = bf['right'], this['top'] = bf['top'], this['bottom'] = bf['bottom'], this['near'] = bf['near'], this['far'] = bf['far'], this['zoom'] = bf['zoom'], this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']), this;
        },
        'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
            null === this['view'] && (this['view'] = {
                'enabled': !0x0,
                'fullWidth': 0x1,
                'fullHeight': 0x1,
                'offsetX': 0x0,
                'offsetY': 0x0,
                'width': 0x1,
                'height': 0x1
            }), this['view']['enabled'] = !0x0, this['view']['fullWidth'] = bf, this['view']['fullHeight'] = bg, this['view']['offsetX'] = bh, this['view']['offsetY'] = bi, this['view']['width'] = bF, this['view']['height'] = bG, this['updateProjectionMatrix']();
        },
        'clearViewOffset': function() {
            null !== this['view'] && (this['view']['enabled'] = !0x1), this['updateProjectionMatrix']();
        },
        'updateProjectionMatrix': function() {
            var bf = (this['right'] - this['left']) / (0x2 * this['zoom']),
                bg = (this['top'] - this['bottom']) / (0x2 * this['zoom']),
                bh = (this['right'] + this['left']) / 0x2,
                bi = (this['top'] + this['bottom']) / 0x2,
                bF = bh - bf,
                bG = bh + bf,
                bH = bi + bg,
                bI = bi - bg;
            if (null !== this['view'] && this['view']['enabled']) {
                var bJ = this['zoom'] / (this['view']['width'] / this['view']['fullWidth']),
                    bK = this['zoom'] / (this['view']['height'] / this['view']['fullHeight']),
                    bL = (this['right'] - this['left']) / this['view']['width'],
                    bM = (this['top'] - this['bottom']) / this['view']['height'];
                bG = (bF += bL * (this['view']['offsetX'] / bJ)) + bL * (this['view']['width'] / bJ), bI = (bH -= bM * (this['view']['offsetY'] / bK)) - bM * (this['view']['height'] / bK);
            }
            this['projectionMatrix']['makeOrthographic'](bF, bG, bH, bI, this['near'], this['far']), this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
        },
        'toJSON': function(bf) {
            var bg = yT['prototype']['toJSON']['call'](this, bf);
            return bg['object']['zoom'] = this['zoom'], bg['object']['left'] = this['left'], bg['object']['right'] = this['right'], bg['object']['top'] = this['top'], bg['object']['bottom'] = this['bottom'], bg['object']['near'] = this['near'], bg['object']['far'] = this['far'], null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])), bg;
        }
    }), aJU['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
        'constructor': aJU
    }), aJV['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJV,
        'isDirectionalLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf), this['target'] = bf['target']['clone'](), this['shadow'] = bf['shadow']['clone'](), this;
        }
    }), aJY['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aJY,
        'isAmbientLight': !0x0
    }), aK1['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aK1,
        'isRectAreaLight': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf), this['width'] = bf['width'], this['height'] = bf['height'], this;
        },
        'toJSON': function(bf) {
            var bg = aJp['prototype']['toJSON']['call'](this, bf);
            return bg['object']['width'] = this['width'], bg['object']['height'] = this['height'], bg;
        }
    }), Object['assign'](aK6['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this,
                bG = new aCv(bF['manager']);
            bG['setPath'](bF['path']), bG['load'](bf, function(bf) {
                bg(bF['parse'](JSON['parse'](bf)));
            }, bh, bi);
        },
        'parse': function(bf) {
            var bg = this['textures'];

            function bh(bf) {
                return void 0x0 === bg[bf] && console['warn']('THREE.MaterialLoader:\x20Undefined\x20texture', bf), bg[bf];
            }
            var bi = new axi[bf['type']]();
            if (void 0x0 !== bf['uuid'] && (bi['uuid'] = bf['uuid']), void 0x0 !== bf['name'] && (bi['name'] = bf['name']), void 0x0 !== bf['color'] && bi['color']['setHex'](bf['color']), void 0x0 !== bf['roughness'] && (bi['roughness'] = bf['roughness']), void 0x0 !== bf['metalness'] && (bi['metalness'] = bf['metalness']), void 0x0 !== bf['emissive'] && bi['emissive']['setHex'](bf['emissive']), void 0x0 !== bf['specular'] && bi['specular']['setHex'](bf['specular']), void 0x0 !== bf['shininess'] && (bi['shininess'] = bf['shininess']), void 0x0 !== bf['clearCoat'] && (bi['clearCoat'] = bf['clearCoat']), void 0x0 !== bf['clearCoatRoughness'] && (bi['clearCoatRoughness'] = bf['clearCoatRoughness']), void 0x0 !== bf['vertexColors'] && (bi['vertexColors'] = bf['vertexColors']), void 0x0 !== bf['fog'] && (bi['fog'] = bf['fog']), void 0x0 !== bf['flatShading'] && (bi['flatShading'] = bf['flatShading']), void 0x0 !== bf['blending'] && (bi['blending'] = bf['blending']), void 0x0 !== bf['combine'] && (bi['combine'] = bf['combine']), void 0x0 !== bf['side'] && (bi['side'] = bf['side']), void 0x0 !== bf['opacity'] && (bi['opacity'] = bf['opacity']), void 0x0 !== bf['transparent'] && (bi['transparent'] = bf['transparent']), void 0x0 !== bf['alphaTest'] && (bi['alphaTest'] = bf['alphaTest']), void 0x0 !== bf['depthTest'] && (bi['depthTest'] = bf['depthTest']), void 0x0 !== bf['depthWrite'] && (bi['depthWrite'] = bf['depthWrite']), void 0x0 !== bf['colorWrite'] && (bi['colorWrite'] = bf['colorWrite']), void 0x0 !== bf['wireframe'] && (bi['wireframe'] = bf['wireframe']), void 0x0 !== bf['wireframeLinewidth'] && (bi['wireframeLinewidth'] = bf['wireframeLinewidth']), void 0x0 !== bf['wireframeLinecap'] && (bi['wireframeLinecap'] = bf['wireframeLinecap']), void 0x0 !== bf['wireframeLinejoin'] && (bi['wireframeLinejoin'] = bf['wireframeLinejoin']), void 0x0 !== bf['rotation'] && (bi['rotation'] = bf['rotation']), 0x1 !== bf['linewidth'] && (bi['linewidth'] = bf['linewidth']), void 0x0 !== bf['dashSize'] && (bi['dashSize'] = bf['dashSize']), void 0x0 !== bf['gapSize'] && (bi['gapSize'] = bf['gapSize']), void 0x0 !== bf['scale'] && (bi['scale'] = bf['scale']), void 0x0 !== bf['polygonOffset'] && (bi['polygonOffset'] = bf['polygonOffset']), void 0x0 !== bf['polygonOffsetFactor'] && (bi['polygonOffsetFactor'] = bf['polygonOffsetFactor']), void 0x0 !== bf['polygonOffsetUnits'] && (bi['polygonOffsetUnits'] = bf['polygonOffsetUnits']), void 0x0 !== bf['skinning'] && (bi['skinning'] = bf['skinning']), void 0x0 !== bf['morphTargets'] && (bi['morphTargets'] = bf['morphTargets']), void 0x0 !== bf['dithering'] && (bi['dithering'] = bf['dithering']), void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']), void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']), void 0x0 !== bf['uniforms'])
                for (var bF in bf['uniforms']) {
                    var bG = bf['uniforms'][bF];
                    switch (bi['uniforms'][bF] = {}, bG['type']) {
                        case 't':
                            bi['uniforms'][bF]['value'] = bh(bG['value']);
                            break;
                        case 'c':
                            bi['uniforms'][bF]['value'] = new w7()['setHex'](bG['value']);
                            break;
                        case 'v2':
                            bi['uniforms'][bF]['value'] = new eC()['fromArray'](bG['value']);
                            break;
                        case 'v3':
                            bi['uniforms'][bF]['value'] = new eK()['fromArray'](bG['value']);
                            break;
                        case 'v4':
                            bi['uniforms'][bF]['value'] = new m7()['fromArray'](bG['value']);
                            break;
                        case 'm3':
                            bi['uniforms'][bF]['value'] = new eO()['fromArray'](bG['value']);
                        case 'm4':
                            bi['uniforms'][bF]['value'] = new mR()['fromArray'](bG['value']);
                            break;
                        default:
                            bi['uniforms'][bF]['value'] = bG['value'];
                    }
                }
            if (void 0x0 !== bf['defines'] && (bi['defines'] = bf['defines']), void 0x0 !== bf['vertexShader'] && (bi['vertexShader'] = bf['vertexShader']), void 0x0 !== bf['fragmentShader'] && (bi['fragmentShader'] = bf['fragmentShader']), void 0x0 !== bf['extensions'])
                for (var bH in bf['extensions']) bi['extensions'][bH] = bf['extensions'][bH];
            if (void 0x0 !== bf['shading'] && (bi['flatShading'] = 0x1 === bf['shading']), void 0x0 !== bf['size'] && (bi['size'] = bf['size']), void 0x0 !== bf['sizeAttenuation'] && (bi['sizeAttenuation'] = bf['sizeAttenuation']), void 0x0 !== bf['map'] && (bi['map'] = bh(bf['map'])), void 0x0 !== bf['matcap'] && (bi['matcap'] = bh(bf['matcap'])), void 0x0 !== bf['alphaMap'] && (bi['alphaMap'] = bh(bf['alphaMap']), bi['transparent'] = !0x0), void 0x0 !== bf['bumpMap'] && (bi['bumpMap'] = bh(bf['bumpMap'])), void 0x0 !== bf['bumpScale'] && (bi['bumpScale'] = bf['bumpScale']), void 0x0 !== bf['normalMap'] && (bi['normalMap'] = bh(bf['normalMap'])), void 0x0 !== bf['normalMapType'] && (bi['normalMapType'] = bf['normalMapType']), void 0x0 !== bf['normalScale']) {
                var bI = bf['normalScale'];
                !0x1 === Array['isArray'](bI) && (bI = [bI, bI]), bi['normalScale'] = new eC()['fromArray'](bI);
            }
            return void 0x0 !== bf['displacementMap'] && (bi['displacementMap'] = bh(bf['displacementMap'])), void 0x0 !== bf['displacementScale'] && (bi['displacementScale'] = bf['displacementScale']), void 0x0 !== bf['displacementBias'] && (bi['displacementBias'] = bf['displacementBias']), void 0x0 !== bf['roughnessMap'] && (bi['roughnessMap'] = bh(bf['roughnessMap'])), void 0x0 !== bf['metalnessMap'] && (bi['metalnessMap'] = bh(bf['metalnessMap'])), void 0x0 !== bf['emissiveMap'] && (bi['emissiveMap'] = bh(bf['emissiveMap'])), void 0x0 !== bf['emissiveIntensity'] && (bi['emissiveIntensity'] = bf['emissiveIntensity']), void 0x0 !== bf['specularMap'] && (bi['specularMap'] = bh(bf['specularMap'])), void 0x0 !== bf['envMap'] && (bi['envMap'] = bh(bf['envMap'])), void 0x0 !== bf['envMapIntensity'] && (bi['envMapIntensity'] = bf['envMapIntensity']), void 0x0 !== bf['reflectivity'] && (bi['reflectivity'] = bf['reflectivity']), void 0x0 !== bf['lightMap'] && (bi['lightMap'] = bh(bf['lightMap'])), void 0x0 !== bf['lightMapIntensity'] && (bi['lightMapIntensity'] = bf['lightMapIntensity']), void 0x0 !== bf['aoMap'] && (bi['aoMap'] = bh(bf['aoMap'])), void 0x0 !== bf['aoMapIntensity'] && (bi['aoMapIntensity'] = bf['aoMapIntensity']), void 0x0 !== bf['gradientMap'] && (bi['gradientMap'] = bh(bf['gradientMap'])), bi;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        },
        'setTextures': function(bf) {
            return this['textures'] = bf, this;
        }
    });
    var aMX = {
        'decodeText': function(bf) {
            if ('undefined' != typeof TextDecoder) return new TextDecoder()['decode'](bf);
            for (var bg = '', bh = 0x0, bi = bf['length']; bh < bi; bh++) bg += String['fromCharCode'](bf[bh]);
            try {
                return decodeURIComponent(escape(bg));
            } catch (aN2) {
                return bg;
            }
        },
        'extractUrlBase': function(bf) {
            var bg = bf['lastIndexOf']('/');
            return -0x1 === bg ? './' : bf['substr'](0x0, bg + 0x1);
        }
    };

    function aN5() {
        Gf['call'](this), this['type'] = 'InstancedBufferGeometry', this['maxInstancedCount'] = void 0x0;
    }

    function aN6(bf, bg, bh, bi) {
        'number' == typeof bh && (bi = bh, bh = !0x1, console['error']('THREE.InstancedBufferAttribute:\x20The\x20constructor\x20now\x20expects\x20normalized\x20as\x20the\x20third\x20argument.')), AI['call'](this, bf, bg, bh), this['meshPerAttribute'] = bi || 0x1;
    }

    function aNb(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }
    aN5['prototype'] = Object['assign'](Object['create'](Gf['prototype']), {
        'constructor': aN5,
        'isInstancedBufferGeometry': !0x0,
        'copy': function(bf) {
            return Gf['prototype']['copy']['call'](this, bf), this['maxInstancedCount'] = bf['maxInstancedCount'], this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'toJSON': function() {
            var bf = Gf['prototype']['toJSON']['call'](this);
            return bf['maxInstancedCount'] = this['maxInstancedCount'], bf['isInstancedBufferGeometry'] = !0x0, bf;
        }
    }), aN6['prototype'] = Object['assign'](Object['create'](AI['prototype']), {
        'constructor': aN6,
        'isInstancedBufferAttribute': !0x0,
        'copy': function(bf) {
            return AI['prototype']['copy']['call'](this, bf), this['meshPerAttribute'] = bf['meshPerAttribute'], this;
        },
        'toJSON': function() {
            var bf = AI['prototype']['toJSON']['call'](this);
            return bf['meshPerAttribute'] = this['meshPerAttribute'], bf['isInstancedBufferAttribute'] = !0x0, bf;
        }
    }), Object['assign'](aNb['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this,
                bG = new aCv(bF['manager']);
            bG['setPath'](bF['path']), bG['load'](bf, function(bf) {
                bg(bF['parse'](JSON['parse'](bf)));
            }, bh, bi);
        },
        'parse': function(bf) {
            var bg = bf['isInstancedBufferGeometry'] ? new aN5() : new Gf(),
                bh = bf['data']['index'];
            if (void 0x0 !== bh) {
                var bi = new aNI[bh['type']](bh['array']);
                bg['setIndex'](new AI(bi, 0x1));
            }
            var bF = bf['data']['attributes'];
            for (var bG in bF) {
                var bH = bF[bG],
                    bI = (bi = new aNI[bH['type']](bH['array']), new(bH['isInstancedBufferAttribute'] ? aN6 : AI)(bi, bH['itemSize'], bH['normalized']));
                void 0x0 !== bH['name'] && (bI['name'] = bH['name']), bg['addAttribute'](bG, bI);
            }
            var bJ = bf['data']['morphAttributes'];
            if (bJ)
                for (var bG in bJ) {
                    for (var bK = bJ[bG], bL = [], bM = 0x0, bN = bK['length']; bM < bN; bM++) {
                        bH = bK[bM], bI = new AI(bi = new aNI[bH['type']](bH['array']), bH['itemSize'], bH['normalized']);
                        void 0x0 !== bH['name'] && (bI['name'] = bH['name']), bL['push'](bI);
                    }
                    bg['morphAttributes'][bG] = bL;
                }
            var bO = bf['data']['groups'] || bf['data']['drawcalls'] || bf['data']['offsets'];
            if (void 0x0 !== bO) {
                bM = 0x0;
                for (var bP = bO['length']; bM !== bP; ++bM) {
                    var bQ = bO[bM];
                    bg['addGroup'](bQ['start'], bQ['count'], bQ['materialIndex']);
                }
            }
            var bR = bf['data']['boundingSphere'];
            if (void 0x0 !== bR) {
                var bS = new eK();
                void 0x0 !== bR['center'] && bS['fromArray'](bR['center']), bg['boundingSphere'] = new mE(bS, bR['radius']);
            }
            return bf['name'] && (bg['name'] = bf['name']), bf['userData'] && (bg['userData'] = bf['userData']), bg;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    });
    var aNI = {
        'Int8Array': Int8Array,
        'Uint8Array': Uint8Array,
        'Uint8ClampedArray': 'undefined' != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        'Int16Array': Int16Array,
        'Uint16Array': Uint16Array,
        'Int32Array': Int32Array,
        'Uint32Array': Uint32Array,
        'Float32Array': Float32Array,
        'Float64Array': Float64Array
    };

    function aNJ(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt, this['resourcePath'] = '';
    }
    Object['assign'](aNJ['prototype'], {
        'crossOrigin': 'anonymous',
        'load': function(bf, bg, bh, bi) {
            var bF = this,
                bG = void 0x0 === this['path'] ? aMX['extractUrlBase'](bf) : this['path'];
            this['resourcePath'] = this['resourcePath'] || bG;
            var bH = new aCv(bF['manager']);
            bH['setPath'](this['path']), bH['load'](bf, function(bh) {
                var bG = null;
                try {
                    bG = JSON['parse'](bh);
                } catch (aNU) {
                    return void 0x0 !== bi && bi(aNU), void console['error']('THREE:ObjectLoader:\x20Can\x27t\x20parse\x20' + bf + '.', aNU['message']);
                }
                var bH = bG['metadata'];
                void 0x0 !== bH && void 0x0 !== bH['type'] && 'geometry' !== bH['type']['toLowerCase']() ? bF['parse'](bG, bg) : console['error']('THREE.ObjectLoader:\x20Can\x27t\x20load\x20' + bf);
            }, bh, bi);
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        },
        'setResourcePath': function(bf) {
            return this['resourcePath'] = bf, this;
        },
        'setCrossOrigin': function(bf) {
            return this['crossOrigin'] = bf, this;
        },
        'parse': function(bf, bg) {
            var bh = this['parseShape'](bf['shapes']),
                bi = this['parseGeometries'](bf['geometries'], bh),
                bF = this['parseImages'](bf['images'], function() {
                    void 0x0 !== bg && bg(bI);
                }),
                bG = this['parseTextures'](bf['textures'], bF),
                bH = this['parseMaterials'](bf['materials'], bG),
                bI = this['parseObject'](bf['object'], bi, bH);
            return bf['animations'] && (bI['animations'] = this['parseAnimations'](bf['animations'])), void 0x0 !== bf['images'] && 0x0 !== bf['images']['length'] || void 0x0 !== bg && bg(bI), bI;
        },
        'parseShape': function(bf) {
            var bg = {};
            if (void 0x0 !== bf)
                for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                    var bF = new aJn()['fromJSON'](bf[bh]);
                    bg[bF['uuid']] = bF;
                }
            return bg;
        },
        'parseGeometries': function(bf, bg) {
            var bh = {};
            if (void 0x0 !== bf)
                for (var bi = new aNb(), bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                    var bH, bI = bf[bF];
                    switch (bI['type']) {
                        case 'PlaneGeometry':
                        case 'PlaneBufferGeometry':
                            bH = new awO[bI['type']](bI['width'], bI['height'], bI['widthSegments'], bI['heightSegments']);
                            break;
                        case 'BoxGeometry':
                        case 'BoxBufferGeometry':
                        case 'CubeGeometry':
                            bH = new awO[bI['type']](bI['width'], bI['height'], bI['depth'], bI['widthSegments'], bI['heightSegments'], bI['depthSegments']);
                            break;
                        case 'CircleGeometry':
                        case 'CircleBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'], bI['segments'], bI['thetaStart'], bI['thetaLength']);
                            break;
                        case 'CylinderGeometry':
                        case 'CylinderBufferGeometry':
                            bH = new awO[bI['type']](bI['radiusTop'], bI['radiusBottom'], bI['height'], bI['radialSegments'], bI['heightSegments'], bI['openEnded'], bI['thetaStart'], bI['thetaLength']);
                            break;
                        case 'ConeGeometry':
                        case 'ConeBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'], bI['height'], bI['radialSegments'], bI['heightSegments'], bI['openEnded'], bI['thetaStart'], bI['thetaLength']);
                            break;
                        case 'SphereGeometry':
                        case 'SphereBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'], bI['widthSegments'], bI['heightSegments'], bI['phiStart'], bI['phiLength'], bI['thetaStart'], bI['thetaLength']);
                            break;
                        case 'DodecahedronGeometry':
                        case 'DodecahedronBufferGeometry':
                        case 'IcosahedronGeometry':
                        case 'IcosahedronBufferGeometry':
                        case 'OctahedronGeometry':
                        case 'OctahedronBufferGeometry':
                        case 'TetrahedronGeometry':
                        case 'TetrahedronBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'], bI['detail']);
                            break;
                        case 'RingGeometry':
                        case 'RingBufferGeometry':
                            bH = new awO[bI['type']](bI['innerRadius'], bI['outerRadius'], bI['thetaSegments'], bI['phiSegments'], bI['thetaStart'], bI['thetaLength']);
                            break;
                        case 'TorusGeometry':
                        case 'TorusBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'], bI['tube'], bI['radialSegments'], bI['tubularSegments'], bI['arc']);
                            break;
                        case 'TorusKnotGeometry':
                        case 'TorusKnotBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'], bI['tube'], bI['tubularSegments'], bI['radialSegments'], bI['p'], bI['q']);
                            break;
                        case 'TubeGeometry':
                        case 'TubeBufferGeometry':
                            bH = new awO[bI['type']](new aJj[bI['path']['type']]()['fromJSON'](bI['path']), bI['tubularSegments'], bI['radius'], bI['radialSegments'], bI['closed']);
                            break;
                        case 'LatheGeometry':
                        case 'LatheBufferGeometry':
                            bH = new awO[bI['type']](bI['points'], bI['segments'], bI['phiStart'], bI['phiLength']);
                            break;
                        case 'PolyhedronGeometry':
                        case 'PolyhedronBufferGeometry':
                            bH = new awO[bI['type']](bI['vertices'], bI['indices'], bI['radius'], bI['details']);
                            break;
                        case 'ShapeGeometry':
                        case 'ShapeBufferGeometry':
                            for (var bJ = [], bK = 0x0, bL = bI['shapes']['length']; bK < bL; bK++) {
                                var bM = bg[bI['shapes'][bK]];
                                bJ['push'](bM);
                            }
                            bH = new awO[bI['type']](bJ, bI['curveSegments']);
                            break;
                        case 'ExtrudeGeometry':
                        case 'ExtrudeBufferGeometry':
                            for (bJ = [], bK = 0x0, bL = bI['shapes']['length']; bK < bL; bK++) {
                                bM = bg[bI['shapes'][bK]];
                                bJ['push'](bM);
                            }
                            var bN = bI['options']['extrudePath'];
                            void 0x0 !== bN && (bI['options']['extrudePath'] = new aJj[bN['type']]()['fromJSON'](bN)), bH = new awO[bI['type']](bJ, bI['options']);
                            break;
                        case 'BufferGeometry':
                        case 'InstancedBufferGeometry':
                            bH = bi['parse'](bI);
                            break;
                        case 'Geometry':
                            if ('THREE' in window && 'LegacyJSONLoader' in THREE) bH = new THREE['LegacyJSONLoader']()['parse'](bI, this['resourcePath'])['geometry'];
                            else console['error']('THREE.ObjectLoader:\x20You\x20have\x20to\x20import\x20LegacyJSONLoader\x20in\x20order\x20load\x20geometry\x20data\x20of\x20type\x20\x22Geometry\x22.');
                            break;
                        default:
                            console['warn']('THREE.ObjectLoader:\x20Unsupported\x20geometry\x20type\x20\x22' + bI['type'] + '\x22');
                            continue;
                    }
                    bH['uuid'] = bI['uuid'], void 0x0 !== bI['name'] && (bH['name'] = bI['name']), !0x0 === bH['isBufferGeometry'] && void 0x0 !== bI['userData'] && (bH['userData'] = bI['userData']), bh[bI['uuid']] = bH;
                }
            return bh;
        },
        'parseMaterials': function(bf, bg) {
            var bh = {},
                bi = {};
            if (void 0x0 !== bf) {
                var bF = new aK6();
                bF['setTextures'](bg);
                for (var bG = 0x0, bH = bf['length']; bG < bH; bG++) {
                    var bI = bf[bG];
                    if ('MultiMaterial' === bI['type']) {
                        for (var bJ = [], bK = 0x0; bK < bI['materials']['length']; bK++) {
                            var bL = bI['materials'][bK];
                            void 0x0 === bh[bL['uuid']] && (bh[bL['uuid']] = bF['parse'](bL)), bJ['push'](bh[bL['uuid']]);
                        }
                        bi[bI['uuid']] = bJ;
                    } else void 0x0 === bh[bI['uuid']] && (bh[bI['uuid']] = bF['parse'](bI)), bi[bI['uuid']] = bh[bI['uuid']];
                }
            }
            return bi;
        },
        'parseAnimations': function(bf) {
            for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
                var bi = bf[bh],
                    bF = ayK['parse'](bi);
                void 0x0 !== bi['uuid'] && (bF['uuid'] = bi['uuid']), bg['push'](bF);
            }
            return bg;
        },
        'parseImages': function(bf, bg) {
            var bh = this,
                bi = {};

            function bF(bf) {
                return bh['manager']['itemStart'](bf), bG['load'](bf, function() {
                    bh['manager']['itemEnd'](bf);
                }, void 0x0, function() {
                    bh['manager']['itemError'](bf), bh['manager']['itemEnd'](bf);
                });
            }
            if (void 0x0 !== bf && bf['length'] > 0x0) {
                var bG = new aCD(new aCf(bg));
                bG['setCrossOrigin'](this['crossOrigin']);
                for (var bH = 0x0, bI = bf['length']; bH < bI; bH++) {
                    var bJ = bf[bH],
                        bK = bJ['url'];
                    if (Array['isArray'](bK)) {
                        bi[bJ['uuid']] = [];
                        for (var bL = 0x0, bM = bK['length']; bL < bM; bL++) {
                            var bN = bK[bL],
                                bO = /^(\/\/)|([a-z]+:(\/\/)?)/i ['test'](bN) ? bN : bh['resourcePath'] + bN;
                            bi[bJ['uuid']]['push'](bF(bO));
                        }
                    } else {
                        bO = /^(\/\/)|([a-z]+:(\/\/)?)/i ['test'](bJ['url']) ? bJ['url'] : bh['resourcePath'] + bJ['url'];
                        bi[bJ['uuid']] = bF(bO);
                    }
                }
            }
            return bi;
        },
        'parseTextures': function(bf, bg) {
            function bh(bf, bg) {
                return 'number' == typeof bf ? bf : (console['warn']('THREE.ObjectLoader.parseTexture:\x20Constant\x20should\x20be\x20in\x20numeric\x20form.', bf), bg[bf]);
            }
            var bi = {};
            if (void 0x0 !== bf)
                for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                    var bH, bI = bf[bF];
                    void 0x0 === bI['image'] && console['warn']('THREE.ObjectLoader:\x20No\x20\x22image\x22\x20specified\x20for', bI['uuid']), void 0x0 === bg[bI['image']] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20image', bI['image']), (bH = Array['isArray'](bg[bI['image']]) ? new O3(bg[bI['image']]) : new lW(bg[bI['image']]))['needsUpdate'] = !0x0, bH['uuid'] = bI['uuid'], void 0x0 !== bI['name'] && (bH['name'] = bI['name']), void 0x0 !== bI['mapping'] && (bH['mapping'] = bh(bI['mapping'], aPt)), void 0x0 !== bI['offset'] && bH['offset']['fromArray'](bI['offset']), void 0x0 !== bI['repeat'] && bH['repeat']['fromArray'](bI['repeat']), void 0x0 !== bI['center'] && bH['center']['fromArray'](bI['center']), void 0x0 !== bI['rotation'] && (bH['rotation'] = bI['rotation']), void 0x0 !== bI['wrap'] && (bH['wrapS'] = bh(bI['wrap'][0x0], aPu), bH['wrapT'] = bh(bI['wrap'][0x1], aPu)), void 0x0 !== bI['format'] && (bH['format'] = bI['format']), void 0x0 !== bI['type'] && (bH['type'] = bI['type']), void 0x0 !== bI['encoding'] && (bH['encoding'] = bI['encoding']), void 0x0 !== bI['minFilter'] && (bH['minFilter'] = bh(bI['minFilter'], aPv)), void 0x0 !== bI['magFilter'] && (bH['magFilter'] = bh(bI['magFilter'], aPv)), void 0x0 !== bI['anisotropy'] && (bH['anisotropy'] = bI['anisotropy']), void 0x0 !== bI['flipY'] && (bH['flipY'] = bI['flipY']), void 0x0 !== bI['premultiplyAlpha'] && (bH['premultiplyAlpha'] = bI['premultiplyAlpha']), void 0x0 !== bI['unpackAlignment'] && (bH['unpackAlignment'] = bI['unpackAlignment']), bi[bI['uuid']] = bH;
                }
            return bi;
        },
        'parseObject': function(bf, bg, bh) {
            var bi;

            function bF(bf) {
                return void 0x0 === bg[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20geometry', bf), bg[bf];
            }

            function bG(bf) {
                if (void 0x0 !== bf) {
                    if (Array['isArray'](bf)) {
                        for (var bg = [], bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                            var bG = bf[bi];
                            void 0x0 === bh[bG] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bG), bg['push'](bh[bG]);
                        }
                        return bg;
                    }
                    return void 0x0 === bh[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bf), bh[bf];
                }
            }
            switch (bf['type']) {
                case 'Scene':
                    bi = new aea(), void 0x0 !== bf['background'] && Number['isInteger'](bf['background']) && (bi['background'] = new w7(bf['background'])), void 0x0 !== bf['fog'] && ('Fog' === bf['fog']['type'] ? bi['fog'] = new ae6(bf['fog']['color'], bf['fog']['near'], bf['fog']['far']) : 'FogExp2' === bf['fog']['type'] && (bi['fog'] = new ae3(bf['fog']['color'], bf['fog']['density'])));
                    break;
                case 'PerspectiveCamera':
                    bi = new a68(bf['fov'], bf['aspect'], bf['near'], bf['far']), void 0x0 !== bf['focus'] && (bi['focus'] = bf['focus']), void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']), void 0x0 !== bf['filmGauge'] && (bi['filmGauge'] = bf['filmGauge']), void 0x0 !== bf['filmOffset'] && (bi['filmOffset'] = bf['filmOffset']), void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
                    break;
                case 'OrthographicCamera':
                    bi = new aJN(bf['left'], bf['right'], bf['top'], bf['bottom'], bf['near'], bf['far']), void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']), void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
                    break;
                case 'AmbientLight':
                    bi = new aJY(bf['color'], bf['intensity']);
                    break;
                case 'DirectionalLight':
                    bi = new aJV(bf['color'], bf['intensity']);
                    break;
                case 'PointLight':
                    bi = new aJH(bf['color'], bf['intensity'], bf['distance'], bf['decay']);
                    break;
                case 'RectAreaLight':
                    bi = new aK1(bf['color'], bf['intensity'], bf['width'], bf['height']);
                    break;
                case 'SpotLight':
                    bi = new aJz(bf['color'], bf['intensity'], bf['distance'], bf['angle'], bf['penumbra'], bf['decay']);
                    break;
                case 'HemisphereLight':
                    bi = new aJs(bf['color'], bf['groundColor'], bf['intensity']);
                    break;
                case 'SkinnedMesh':
                    console['warn']('THREE.ObjectLoader.parseObject()\x20does\x20not\x20support\x20SkinnedMesh\x20yet.');
                case 'Mesh':
                    var bH = bF(bf['geometry']),
                        bI = bG(bf['material']);
                    bi = bH['bones'] && bH['bones']['length'] > 0x0 ? new aep(bH, bI) : new KY(bH, bI), void 0x0 !== bf['drawMode'] && bi['setDrawMode'](bf['drawMode']);
                    break;
                case 'LOD':
                    bi = new aeo();
                    break;
                case 'Line':
                    bi = new aeA(bF(bf['geometry']), bG(bf['material']), bf['mode']);
                    break;
                case 'LineLoop':
                    bi = new aeH(bF(bf['geometry']), bG(bf['material']));
                    break;
                case 'LineSegments':
                    bi = new aeE(bF(bf['geometry']), bG(bf['material']));
                    break;
                case 'PointCloud':
                case 'Points':
                    bi = new aeM(bF(bf['geometry']), bG(bf['material']));
                    break;
                case 'Sprite':
                    bi = new ael(bG(bf['material']));
                    break;
                case 'Group':
                    bi = new a66();
                    break;
                default:
                    bi = new yT();
            }
            if (bi['uuid'] = bf['uuid'], void 0x0 !== bf['name'] && (bi['name'] = bf['name']), void 0x0 !== bf['matrix'] ? (bi['matrix']['fromArray'](bf['matrix']), void 0x0 !== bf['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = bf['matrixAutoUpdate']), bi['matrixAutoUpdate'] && bi['matrix']['decompose'](bi['position'], bi['quaternion'], bi['scale'])) : (void 0x0 !== bf['position'] && bi['position']['fromArray'](bf['position']), void 0x0 !== bf['rotation'] && bi['rotation']['fromArray'](bf['rotation']), void 0x0 !== bf['quaternion'] && bi['quaternion']['fromArray'](bf['quaternion']), void 0x0 !== bf['scale'] && bi['scale']['fromArray'](bf['scale'])), void 0x0 !== bf['castShadow'] && (bi['castShadow'] = bf['castShadow']), void 0x0 !== bf['receiveShadow'] && (bi['receiveShadow'] = bf['receiveShadow']), bf['shadow'] && (void 0x0 !== bf['shadow']['bias'] && (bi['shadow']['bias'] = bf['shadow']['bias']), void 0x0 !== bf['shadow']['radius'] && (bi['shadow']['radius'] = bf['shadow']['radius']), void 0x0 !== bf['shadow']['mapSize'] && bi['shadow']['mapSize']['fromArray'](bf['shadow']['mapSize']), void 0x0 !== bf['shadow']['camera'] && (bi['shadow']['camera'] = this['parseObject'](bf['shadow']['camera']))), void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']), void 0x0 !== bf['frustumCulled'] && (bi['frustumCulled'] = bf['frustumCulled']), void 0x0 !== bf['renderOrder'] && (bi['renderOrder'] = bf['renderOrder']), void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']), void 0x0 !== bf['layers'] && (bi['layers']['mask'] = bf['layers']), void 0x0 !== bf['children'])
                for (var bJ = bf['children'], bK = 0x0; bK < bJ['length']; bK++) bi['add'](this['parseObject'](bJ[bK], bg, bh));
            if ('LOD' === bf['type'])
                for (var bL = bf['levels'], bM = 0x0; bM < bL['length']; bM++) {
                    var bN = bL[bM],
                        bO = bi['getObjectByProperty']('uuid', bN['object']);
                    void 0x0 !== bO && bi['addLevel'](bO, bN['distance']);
                }
            return bi;
        }
    });
    var aPo, aPp, aPq, aPr, aPs, aPt = {
            'UVMapping': cE,
            'CubeReflectionMapping': cF,
            'CubeRefractionMapping': cG,
            'EquirectangularReflectionMapping': cH,
            'EquirectangularRefractionMapping': cI,
            'SphericalReflectionMapping': cJ,
            'CubeUVReflectionMapping': cK,
            'CubeUVRefractionMapping': cL
        },
        aPu = {
            'RepeatWrapping': cM,
            'ClampToEdgeWrapping': cN,
            'MirroredRepeatWrapping': cO
        },
        aPv = {
            'NearestFilter': cP,
            'NearestMipMapNearestFilter': cQ,
            'NearestMipMapLinearFilter': cR,
            'LinearFilter': cS,
            'LinearMipMapNearestFilter': cT,
            'LinearMipMapLinearFilter': cU
        };

    function aPw(bf) {
        'undefined' == typeof createImageBitmap && console['warn']('THREE.ImageBitmapLoader:\x20createImageBitmap()\x20not\x20supported.'), 'undefined' == typeof fetch && console['warn']('THREE.ImageBitmapLoader:\x20fetch()\x20not\x20supported.'), this['manager'] = void 0x0 !== bf ? bf : aCt, this['options'] = void 0x0;
    }

    function aPy() {
        this['type'] = 'ShapePath', this['color'] = new w7(), this['subPaths'] = [], this['currentPath'] = null;
    }

    function aPz(bf) {
        this['type'] = 'Font', this['data'] = bf;
    }

    function aPB(bf, bg, bh, bi, bF) {
        var bG = bF['glyphs'][bf] || bF['glyphs']['?'];
        if (bG) {
            var bH, bI, bJ, bK, bL, bM, bN, bO, bP = new aPy();
            if (bG['o'])
                for (var bQ = bG['_cachedOutline'] || (bG['_cachedOutline'] = bG['o']['split']('\x20')), bR = 0x0, bS = bQ['length']; bR < bS;) {
                    switch (bQ[bR++]) {
                        case 'm':
                            bH = bQ[bR++] * bg + bh, bI = bQ[bR++] * bg + bi, bP['moveTo'](bH, bI);
                            break;
                        case 'l':
                            bH = bQ[bR++] * bg + bh, bI = bQ[bR++] * bg + bi, bP['lineTo'](bH, bI);
                            break;
                        case 'q':
                            bJ = bQ[bR++] * bg + bh, bK = bQ[bR++] * bg + bi, bL = bQ[bR++] * bg + bh, bM = bQ[bR++] * bg + bi, bP['quadraticCurveTo'](bL, bM, bJ, bK);
                            break;
                        case 'b':
                            bJ = bQ[bR++] * bg + bh, bK = bQ[bR++] * bg + bi, bL = bQ[bR++] * bg + bh, bM = bQ[bR++] * bg + bi, bN = bQ[bR++] * bg + bh, bO = bQ[bR++] * bg + bi, bP['bezierCurveTo'](bL, bM, bN, bO, bJ, bK);
                    }
                }
            return {
                'offsetX': bG['ha'] * bg,
                'path': bP
            };
        }
    }

    function aPU(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }

    function aPW() {}
    aPw['prototype'] = {
        'constructor': aPw,
        'setOptions': function(bf) {
            return this['options'] = bf, this;
        },
        'load': function(bf, bg, bh, bi) {
            void 0x0 === bf && (bf = ''), void 0x0 !== this['path'] && (bf = this['path'] + bf), bf = this['manager']['resolveURL'](bf);
            var bF = this,
                bG = aCa['get'](bf);
            if (void 0x0 !== bG) return bF['manager']['itemStart'](bf), setTimeout(function() {
                bg && bg(bG), bF['manager']['itemEnd'](bf);
            }, 0x0), bG;
            fetch(bf)['then'](function(bf) {
                return bf['blob']();
            })['then'](function(bf) {
                return void 0x0 === bF['options'] ? createImageBitmap(bf) : createImageBitmap(bf, bF['options']);
            })['then'](function(bh) {
                aCa['add'](bf, bh), bg && bg(bh), bF['manager']['itemEnd'](bf);
            })['catch'](function(bg) {
                bi && bi(bg), bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
            }), bF['manager']['itemStart'](bf);
        },
        'setCrossOrigin': function() {
            return this;
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }, Object['assign'](aPy['prototype'], {
        'moveTo': function(bf, bg) {
            this['currentPath'] = new aJl(), this['subPaths']['push'](this['currentPath']), this['currentPath']['moveTo'](bf, bg);
        },
        'lineTo': function(bf, bg) {
            this['currentPath']['lineTo'](bf, bg);
        },
        'quadraticCurveTo': function(bf, bg, bh, bi) {
            this['currentPath']['quadraticCurveTo'](bf, bg, bh, bi);
        },
        'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
            this['currentPath']['bezierCurveTo'](bf, bg, bh, bi, bF, bG);
        },
        'splineThru': function(bf) {
            this['currentPath']['splineThru'](bf);
        },
        'toShapes': function(bf, bg) {
            function bh(bf) {
                for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                    var bF = bf[bh],
                        bG = new aJn();
                    bG['curves'] = bF['curves'], bg['push'](bG);
                }
                return bg;
            }

            function bi(bf, bg) {
                for (var bh = bg['length'], bi = !0x1, bF = bh - 0x1, bG = 0x0; bG < bh; bF = bG++) {
                    var bH = bg[bF],
                        bI = bg[bG],
                        bJ = bI['x'] - bH['x'],
                        bK = bI['y'] - bH['y'];
                    if (Math['abs'](bK) > Number['EPSILON']) {
                        if (bK < 0x0 && (bH = bg[bG], bJ = -bJ, bI = bg[bF], bK = -bK), bf['y'] < bH['y'] || bf['y'] > bI['y']) continue;
                        if (bf['y'] === bH['y']) {
                            if (bf['x'] === bH['x']) return !0x0;
                        } else {
                            var bL = bK * (bf['x'] - bH['x']) - bJ * (bf['y'] - bH['y']);
                            if (0x0 === bL) return !0x0;
                            if (bL < 0x0) continue;
                            bi = !bi;
                        }
                    } else {
                        if (bf['y'] !== bH['y']) continue;
                        if (bI['x'] <= bf['x'] && bf['x'] <= bH['x'] || bH['x'] <= bf['x'] && bf['x'] <= bI['x']) return !0x0;
                    }
                }
                return bi;
            }
            var bF = apU['isClockWise'],
                bG = this['subPaths'];
            if (0x0 === bG['length']) return [];
            if (!0x0 === bg) return bh(bG);
            var bH, bI, bJ, bK = [];
            if (0x1 === bG['length']) return bI = bG[0x0], (bJ = new aJn())['curves'] = bI['curves'], bK['push'](bJ), bK;
            var bL = !bF(bG[0x0]['getPoints']());
            bL = bf ? !bL : bL;
            var bM, bN, bO = [],
                bP = [],
                bQ = [],
                bR = 0x0;
            bP[bR] = void 0x0, bQ[bR] = [];
            for (var bS = 0x0, bT = bG['length']; bS < bT; bS++) bH = bF(bM = (bI = bG[bS])['getPoints']()), (bH = bf ? !bH : bH) ? (!bL && bP[bR] && bR++, bP[bR] = {
                's': new aJn(),
                'p': bM
            }, bP[bR]['s']['curves'] = bI['curves'], bL && bR++, bQ[bR] = []) : bQ[bR]['push']({
                'h': bI,
                'p': bM[0x0]
            });
            if (!bP[0x0]) return bh(bG);
            if (bP['length'] > 0x1) {
                for (var bU = !0x1, bV = [], bW = 0x0, bX = bP['length']; bW < bX; bW++) bO[bW] = [];
                for (bW = 0x0, bX = bP['length']; bW < bX; bW++)
                    for (var bY = bQ[bW], bZ = 0x0; bZ < bY['length']; bZ++) {
                        for (var c0 = bY[bZ], c1 = !0x0, c2 = 0x0; c2 < bP['length']; c2++) bi(c0['p'], bP[c2]['p']) && (bW !== c2 && bV['push']({
                            'froms': bW,
                            'tos': c2,
                            'hole': bZ
                        }), c1 ? (c1 = !0x1, bO[c2]['push'](c0)) : bU = !0x0);
                        c1 && bO[bW]['push'](c0);
                    }
                bV['length'] > 0x0 && (bU || (bQ = bO));
            }
            bS = 0x0;
            for (var c3 = bP['length']; bS < c3; bS++) {
                bJ = bP[bS]['s'], bK['push'](bJ);
                for (var c4 = 0x0, c5 = (bN = bQ[bS])['length']; c4 < c5; c4++) bJ['holes']['push'](bN[c4]['h']);
            }
            return bK;
        }
    }), Object['assign'](aPz['prototype'], {
        'isFont': !0x0,
        'generateShapes': function(bf, bg) {
            void 0x0 === bg && (bg = 0x64);
            for (var bh = [], bi = function(bf, bg, bh) {
                    for (var bi = Array['from'] ? Array['from'](bf) : String(bf)['split'](''), bF = bg / bh['resolution'], bG = (bh['boundingBox']['yMax'] - bh['boundingBox']['yMin'] + bh['underlineThickness']) * bF, bH = [], bI = 0x0, bJ = 0x0, bK = 0x0; bK < bi['length']; bK++) {
                        var bL = bi[bK];
                        if ('\x0a' === bL) bI = 0x0, bJ -= bG;
                        else {
                            var bM = aPB(bL, bF, bI, bJ, bh);
                            bI += bM['offsetX'], bH['push'](bM['path']);
                        }
                    }
                    return bH;
                }(bf, bg, this['data']), bF = 0x0, bG = bi['length']; bF < bG; bF++) Array['prototype']['push']['apply'](bh, bi[bF]['toShapes']());
            return bh;
        }
    }), Object['assign'](aPU['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = this,
                bG = new aCv(this['manager']);
            bG['setPath'](this['path']), bG['load'](bf, function(bf) {
                var bh;
                try {
                    bh = JSON['parse'](bf);
                } catch (aRA) {
                    console['warn']('THREE.FontLoader:\x20typeface.js\x20support\x20is\x20being\x20deprecated.\x20Use\x20typeface.json\x20instead.'), bh = JSON['parse'](bf['substring'](0x41, bf['length'] - 0x2));
                }
                var bi = bF['parse'](bh);
                bg && bg(bi);
            }, bh, bi);
        },
        'parse': function(bf) {
            return new aPz(bf);
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), aPW['Handlers'] = {
        'handlers': [],
        'add': function(bf, bg) {
            this['handlers']['push'](bf, bg);
        },
        'get': function(bf) {
            for (var bg = this['handlers'], bh = 0x0, bi = bg['length']; bh < bi; bh += 0x2) {
                var bF = bg[bh],
                    bG = bg[bh + 0x1];
                if (bF['test'](bf)) return bG;
            }
            return null;
        }
    }, Object['assign'](aPW['prototype'], {
        'crossOrigin': 'anonymous',
        'onLoadStart': function() {},
        'onLoadProgress': function() {},
        'onLoadComplete': function() {},
        'initMaterials': function(bf, bg, bh) {
            for (var bi = [], bF = 0x0; bF < bf['length']; ++bF) bi[bF] = this['createMaterial'](bf[bF], bg, bh);
            return bi;
        },
        'createMaterial': (aPo = {
            'NoBlending': c1,
            'NormalBlending': c2,
            'AdditiveBlending': c3,
            'SubtractiveBlending': c4,
            'MultiplyBlending': c5,
            'CustomBlending': c6
        }, aPp = new w7(), aPq = new aCH(), aPr = new aK6(), function(bf, bg, bh) {
            var bi = {};

            function bF(bf, bF, bG, bH, bI) {
                var bJ, bK = bg + bf,
                    bL = aPW['Handlers']['get'](bK);
                null !== bL ? bJ = bL['load'](bK) : (aPq['setCrossOrigin'](bh), bJ = aPq['load'](bK)), void 0x0 !== bF && (bJ['repeat']['fromArray'](bF), 0x1 !== bF[0x0] && (bJ['wrapS'] = cM), 0x1 !== bF[0x1] && (bJ['wrapT'] = cM)), void 0x0 !== bG && bJ['offset']['fromArray'](bG), void 0x0 !== bH && ('repeat' === bH[0x0] && (bJ['wrapS'] = cM), 'mirror' === bH[0x0] && (bJ['wrapS'] = cO), 'repeat' === bH[0x1] && (bJ['wrapT'] = cM), 'mirror' === bH[0x1] && (bJ['wrapT'] = cO)), void 0x0 !== bI && (bJ['anisotropy'] = bI);
                var bM = e2['generateUUID']();
                return bi[bM] = bJ, bM;
            }
            var bG = {
                'uuid': e2['generateUUID'](),
                'type': 'MeshLambertMaterial'
            };
            for (var bH in bf) {
                var bI = bf[bH];
                switch (bH) {
                    case 'DbgColor':
                    case 'DbgIndex':
                    case 'opticalDensity':
                    case 'illumination':
                        break;
                    case 'DbgName':
                        bG['name'] = bI;
                        break;
                    case 'blending':
                        bG['blending'] = aPo[bI];
                        break;
                    case 'colorAmbient':
                    case 'mapAmbient':
                        console['warn']('THREE.Loader.createMaterial:', bH, 'is\x20no\x20longer\x20supported.');
                        break;
                    case 'colorDiffuse':
                        bG['color'] = aPp['fromArray'](bI)['getHex']();
                        break;
                    case 'colorSpecular':
                        bG['specular'] = aPp['fromArray'](bI)['getHex']();
                        break;
                    case 'colorEmissive':
                        bG['emissive'] = aPp['fromArray'](bI)['getHex']();
                        break;
                    case 'specularCoef':
                        bG['shininess'] = bI;
                        break;
                    case 'shading':
                        'basic' === bI['toLowerCase']() && (bG['type'] = 'MeshBasicMaterial'), 'phong' === bI['toLowerCase']() && (bG['type'] = 'MeshPhongMaterial'), 'standard' === bI['toLowerCase']() && (bG['type'] = 'MeshStandardMaterial');
                        break;
                    case 'mapDiffuse':
                        bG['map'] = bF(bI, bf['mapDiffuseRepeat'], bf['mapDiffuseOffset'], bf['mapDiffuseWrap'], bf['mapDiffuseAnisotropy']);
                        break;
                    case 'mapDiffuseRepeat':
                    case 'mapDiffuseOffset':
                    case 'mapDiffuseWrap':
                    case 'mapDiffuseAnisotropy':
                        break;
                    case 'mapEmissive':
                        bG['emissiveMap'] = bF(bI, bf['mapEmissiveRepeat'], bf['mapEmissiveOffset'], bf['mapEmissiveWrap'], bf['mapEmissiveAnisotropy']);
                        break;
                    case 'mapEmissiveRepeat':
                    case 'mapEmissiveOffset':
                    case 'mapEmissiveWrap':
                    case 'mapEmissiveAnisotropy':
                        break;
                    case 'mapLight':
                        bG['lightMap'] = bF(bI, bf['mapLightRepeat'], bf['mapLightOffset'], bf['mapLightWrap'], bf['mapLightAnisotropy']);
                        break;
                    case 'mapLightRepeat':
                    case 'mapLightOffset':
                    case 'mapLightWrap':
                    case 'mapLightAnisotropy':
                        break;
                    case 'mapAO':
                        bG['aoMap'] = bF(bI, bf['mapAORepeat'], bf['mapAOOffset'], bf['mapAOWrap'], bf['mapAOAnisotropy']);
                        break;
                    case 'mapAORepeat':
                    case 'mapAOOffset':
                    case 'mapAOWrap':
                    case 'mapAOAnisotropy':
                        break;
                    case 'mapBump':
                        bG['bumpMap'] = bF(bI, bf['mapBumpRepeat'], bf['mapBumpOffset'], bf['mapBumpWrap'], bf['mapBumpAnisotropy']);
                        break;
                    case 'mapBumpScale':
                        bG['bumpScale'] = bI;
                        break;
                    case 'mapBumpRepeat':
                    case 'mapBumpOffset':
                    case 'mapBumpWrap':
                    case 'mapBumpAnisotropy':
                        break;
                    case 'mapNormal':
                        bG['normalMap'] = bF(bI, bf['mapNormalRepeat'], bf['mapNormalOffset'], bf['mapNormalWrap'], bf['mapNormalAnisotropy']);
                        break;
                    case 'mapNormalFactor':
                        bG['normalScale'] = bI;
                        break;
                    case 'mapNormalRepeat':
                    case 'mapNormalOffset':
                    case 'mapNormalWrap':
                    case 'mapNormalAnisotropy':
                        break;
                    case 'mapSpecular':
                        bG['specularMap'] = bF(bI, bf['mapSpecularRepeat'], bf['mapSpecularOffset'], bf['mapSpecularWrap'], bf['mapSpecularAnisotropy']);
                        break;
                    case 'mapSpecularRepeat':
                    case 'mapSpecularOffset':
                    case 'mapSpecularWrap':
                    case 'mapSpecularAnisotropy':
                        break;
                    case 'mapMetalness':
                        bG['metalnessMap'] = bF(bI, bf['mapMetalnessRepeat'], bf['mapMetalnessOffset'], bf['mapMetalnessWrap'], bf['mapMetalnessAnisotropy']);
                        break;
                    case 'mapMetalnessRepeat':
                    case 'mapMetalnessOffset':
                    case 'mapMetalnessWrap':
                    case 'mapMetalnessAnisotropy':
                        break;
                    case 'mapRoughness':
                        bG['roughnessMap'] = bF(bI, bf['mapRoughnessRepeat'], bf['mapRoughnessOffset'], bf['mapRoughnessWrap'], bf['mapRoughnessAnisotropy']);
                        break;
                    case 'mapRoughnessRepeat':
                    case 'mapRoughnessOffset':
                    case 'mapRoughnessWrap':
                    case 'mapRoughnessAnisotropy':
                        break;
                    case 'mapAlpha':
                        bG['alphaMap'] = bF(bI, bf['mapAlphaRepeat'], bf['mapAlphaOffset'], bf['mapAlphaWrap'], bf['mapAlphaAnisotropy']);
                        break;
                    case 'mapAlphaRepeat':
                    case 'mapAlphaOffset':
                    case 'mapAlphaWrap':
                    case 'mapAlphaAnisotropy':
                        break;
                    case 'flipSided':
                        bG['side'] = bU;
                        break;
                    case 'doubleSided':
                        bG['side'] = bV;
                        break;
                    case 'transparency':
                        console['warn']('THREE.Loader.createMaterial:\x20transparency\x20has\x20been\x20renamed\x20to\x20opacity'), bG['opacity'] = bI;
                        break;
                    case 'depthTest':
                    case 'depthWrite':
                    case 'colorWrite':
                    case 'opacity':
                    case 'reflectivity':
                    case 'transparent':
                    case 'visible':
                    case 'wireframe':
                        bG[bH] = bI;
                        break;
                    case 'vertexColors':
                        !0x0 === bI && (bG['vertexColors'] = c0), 'face' === bI && (bG['vertexColors'] = bZ);
                        break;
                    default:
                        console['error']('THREE.Loader.createMaterial:\x20Unsupported', bH, bI);
                }
            }
            return 'MeshBasicMaterial' === bG['type'] && delete bG['emissive'], 'MeshPhongMaterial' !== bG['type'] && delete bG['specular'], bG['opacity'] < 0x1 && (bG['transparent'] = !0x0), aPr['setTextures'](bi), aPr['parse'](bG);
        })
    });
    var aS8 = {
        'getContext': function() {
            return void 0x0 === aPs && (aPs = new(window['AudioContext'] || window['webkitAudioContext'])()), aPs;
        },
        'setContext': function(bf) {
            aPs = bf;
        }
    };

    function aSa(bf) {
        this['manager'] = void 0x0 !== bf ? bf : aCt;
    }

    function aSc() {
        this['coefficients'] = [];
        for (var bf = 0x0; bf < 0x9; bf++) this['coefficients']['push'](new eK());
    }

    function aSe(bf, bg) {
        aJp['call'](this, void 0x0, bg), this['sh'] = void 0x0 !== bf ? bf : new aSc();
    }

    function aSh(bf, bg, bh) {
        aSe['call'](this, void 0x0, bh);
        var bi = new w7()['set'](bf),
            bF = new w7()['set'](bg),
            bG = new eK(bi['r'], bi['g'], bi['b']),
            bH = new eK(bF['r'], bF['g'], bF['b']),
            bI = Math['sqrt'](Math['PI']),
            bJ = bI * Math['sqrt'](0.75);
        this['sh']['coefficients'][0x0]['copy'](bG)['add'](bH)['multiplyScalar'](bI), this['sh']['coefficients'][0x1]['copy'](bG)['sub'](bH)['multiplyScalar'](bJ);
    }

    function aSr(bf, bg) {
        aSe['call'](this, void 0x0, bg);
        var bh = new w7()['set'](bf);
        this['sh']['coefficients'][0x0]['set'](bh['r'], bh['g'], bh['b'])['multiplyScalar'](0x2 * Math['sqrt'](Math['PI']));
    }

    function aSv() {
        this['type'] = 'StereoCamera', this['aspect'] = 0x1, this['eyeSep'] = 0.064, this['cameraL'] = new a68(), this['cameraL']['layers']['enable'](0x1), this['cameraL']['matrixAutoUpdate'] = !0x1, this['cameraR'] = new a68(), this['cameraR']['layers']['enable'](0x2), this['cameraR']['matrixAutoUpdate'] = !0x1;
    }
    Object['assign'](aSa['prototype'], {
        'load': function(bf, bg, bh, bi) {
            var bF = new aCv(this['manager']);
            bF['setResponseType']('arraybuffer'), bF['setPath'](this['path']), bF['load'](bf, function(bf) {
                var bh = bf['slice'](0x0);
                aS8['getContext']()['decodeAudioData'](bh, function(bf) {
                    bg(bf);
                });
            }, bh, bi);
        },
        'setPath': function(bf) {
            return this['path'] = bf, this;
        }
    }), Object['assign'](aSc['prototype'], {
        'isSphericalHarmonics3': !0x0,
        'set': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++) this['coefficients'][bg]['copy'](bf[bg]);
            return this;
        },
        'zero': function() {
            for (var bf = 0x0; bf < 0x9; bf++) this['coefficients'][bf]['set'](0x0, 0x0, 0x0);
            return this;
        },
        'getAt': function(bf, bg) {
            var bh = bf['x'],
                bi = bf['y'],
                bF = bf['z'],
                bG = this['coefficients'];
            return bg = 0.282095 * bG[0x0], bg += 0.488603 * bG[0x1] * bi, bg += 0.488603 * bG[0x2] * bF, bg += 0.488603 * bG[0x3] * bh, bg += 1.092548 * bG[0x4] * (bh * bi), bg += 1.092548 * bG[0x5] * (bi * bF), bg += 0.315392 * bG[0x6] * (0x3 * bF * bF - 0x1), bg += 1.092548 * bG[0x7] * (bh * bF), bg += 0.546274 * bG[0x8] * (bh * bh - bi * bi);
        },
        'getIrradianceAt': function(bf, bg) {
            var bh = bf['x'],
                bi = bf['y'],
                bF = bf['z'],
                bG = this['coefficients'];
            return bg = 0.886227 * bG[0x0], bg += 0x2 * bG[0x1] * 0.511664 * bi, bg += 0x2 * bG[0x2] * 0.511664 * bF, bg += 0x2 * bG[0x3] * 0.511664 * bh, bg += 0x2 * bG[0x4] * 0.429043 * bh * bi, bg += 0x2 * bG[0x5] * 0.429043 * bi * bF, bg += bG[0x6] * (0.743125 * bF * bF - 0.247708), bg += 0x2 * bG[0x7] * 0.429043 * bh * bF, bg += 0.429043 * bG[0x8] * (bh * bh - bi * bi);
        },
        'add': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++) this['coefficients'][bg]['add'](bf['coefficients'][bg]);
            return this;
        },
        'scale': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++) this['coefficients'][bg]['multiplyScalar'](bf);
            return this;
        },
        'lerp': function(bf, bg) {
            for (var bh = 0x0; bh < 0x9; bh++) this['coefficients'][bh]['lerp'](bf['coefficients'][bh], bg);
            return this;
        },
        'equals': function(bf) {
            for (var bg = 0x0; bg < 0x9; bg++)
                if (!this['coefficients'][bg]['equals'](bf['coefficients'][bg])) return !0x1;
            return !0x0;
        },
        'copy': function(bf) {
            return this['set'](bf['coefficients']);
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'fromArray': function(bf) {
            for (var bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++) bg[bh]['fromArray'](bf, 0x3 * bh);
            return this;
        },
        'toArray': function() {
            for (var bf = [], bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++) bg[bh]['toArray'](bf, 0x3 * bh);
            return bf;
        }
    }), Object['assign'](aSc, {
        'getBasisAt': function(bf, bg) {
            var bh = bf['x'],
                bi = bf['y'],
                bF = bf['z'];
            bg[0x0] = 0.282095, bg[0x1] = 0.488603 * bi, bg[0x2] = 0.488603 * bF, bg[0x3] = 0.488603 * bh, bg[0x4] = 1.092548 * bh * bi, bg[0x5] = 1.092548 * bi * bF, bg[0x6] = 0.315392 * (0x3 * bF * bF - 0x1), bg[0x7] = 1.092548 * bh * bF, bg[0x8] = 0.546274 * (bh * bh - bi * bi);
        }
    }), aSe['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
        'constructor': aSe,
        'isLightProbe': !0x0,
        'copy': function(bf) {
            return aJp['prototype']['copy']['call'](this, bf), this['sh']['copy'](bf['sh']), this['intensity'] = bf['intensity'], this;
        },
        'toJSON': function(bf) {
            return aJp['prototype']['toJSON']['call'](this, bf);
        }
    }), aSh['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
        'constructor': aSh,
        'isHemisphereLightProbe': !0x0,
        'copy': function(bf) {
            return aSe['prototype']['copy']['call'](this, bf), this;
        },
        'toJSON': function(bf) {
            return aSe['prototype']['toJSON']['call'](this, bf);
        }
    }), aSr['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
        'constructor': aSr,
        'isAmbientLightProbe': !0x0,
        'copy': function(bf) {
            return aSe['prototype']['copy']['call'](this, bf), this;
        },
        'toJSON': function(bf) {
            return aSe['prototype']['toJSON']['call'](this, bf);
        }
    }), Object['assign'](aSv['prototype'], {
        'update': function() {
            var bf, bg, bh, bi, bF, bG, bH, bI, bJ = new mR(),
                bK = new mR();
            return function(bL) {
                if (bf !== this || bg !== bL['focus'] || bh !== bL['fov'] || bi !== bL['aspect'] * this['aspect'] || bF !== bL['near'] || bG !== bL['far'] || bH !== bL['zoom'] || bI !== this['eyeSep']) {
                    bf = this, bg = bL['focus'], bh = bL['fov'], bi = bL['aspect'] * this['aspect'], bF = bL['near'], bG = bL['far'], bH = bL['zoom'];
                    var bM, bN, bO = bL['projectionMatrix']['clone'](),
                        bP = (bI = this['eyeSep'] / 0x2) * bF / bg,
                        bQ = bF * Math['tan'](e2['DEG2RAD'] * bh * 0.5) / bH;
                    bK['elements'][0xc] = -bI, bJ['elements'][0xc] = bI, bM = -bQ * bi + bP, bN = bQ * bi + bP, bO['elements'][0x0] = 0x2 * bF / (bN - bM), bO['elements'][0x8] = (bN + bM) / (bN - bM), this['cameraL']['projectionMatrix']['copy'](bO), bM = -bQ * bi - bP, bN = bQ * bi - bP, bO['elements'][0x0] = 0x2 * bF / (bN - bM), bO['elements'][0x8] = (bN + bM) / (bN - bM), this['cameraR']['projectionMatrix']['copy'](bO);
                }
                this['cameraL']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bK), this['cameraR']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bJ);
            };
        }()
    });
    var aTB = 0x5a,
        aTC = 0x1;

    function aTD(bf, bg, bh, bi) {
        yT['call'](this), this['type'] = 'CubeCamera';
        var bF = new a68(aTB, aTC, bf, bg);
        bF['up']['set'](0x0, -0x1, 0x0), bF['lookAt'](new eK(0x1, 0x0, 0x0)), this['add'](bF);
        var bG = new a68(aTB, aTC, bf, bg);
        bG['up']['set'](0x0, -0x1, 0x0), bG['lookAt'](new eK(-0x1, 0x0, 0x0)), this['add'](bG);
        var bH = new a68(aTB, aTC, bf, bg);
        bH['up']['set'](0x0, 0x0, 0x1), bH['lookAt'](new eK(0x0, 0x1, 0x0)), this['add'](bH);
        var bI = new a68(aTB, aTC, bf, bg);
        bI['up']['set'](0x0, 0x0, -0x1), bI['lookAt'](new eK(0x0, -0x1, 0x0)), this['add'](bI);
        var bJ = new a68(aTB, aTC, bf, bg);
        bJ['up']['set'](0x0, -0x1, 0x0), bJ['lookAt'](new eK(0x0, 0x0, 0x1)), this['add'](bJ);
        var bK = new a68(aTB, aTC, bf, bg);
        bK['up']['set'](0x0, -0x1, 0x0), bK['lookAt'](new eK(0x0, 0x0, -0x1)), this['add'](bK), bi = bi || {
            'format': d8,
            'magFilter': cS,
            'minFilter': cS
        }, this['renderTarget'] = new mk(bh, bh, bi), this['renderTarget']['texture']['name'] = 'CubeCamera', this['update'] = function(bf, bg) {
            null === this['parent'] && this['updateMatrixWorld']();
            var bh = bf['getRenderTarget'](),
                bi = this['renderTarget'],
                bL = bi['texture']['generateMipmaps'];
            bi['texture']['generateMipmaps'] = !0x1, bf['setRenderTarget'](bi, 0x0), bf['render'](bg, bF), bf['setRenderTarget'](bi, 0x1), bf['render'](bg, bG), bf['setRenderTarget'](bi, 0x2), bf['render'](bg, bH), bf['setRenderTarget'](bi, 0x3), bf['render'](bg, bI), bf['setRenderTarget'](bi, 0x4), bf['render'](bg, bJ), bi['texture']['generateMipmaps'] = bL, bf['setRenderTarget'](bi, 0x5), bf['render'](bg, bK), bf['setRenderTarget'](bh);
        }, this['clear'] = function(bf, bg, bh, bi) {
            for (var bF = bf['getRenderTarget'](), bG = this['renderTarget'], bH = 0x0; bH < 0x6; bH++) bf['setRenderTarget'](bG, bH), bf['clear'](bg, bh, bi);
            bf['setRenderTarget'](bF);
        };
    }

    function aU0(bf) {
        this['autoStart'] = void 0x0 === bf || bf, this['startTime'] = 0x0, this['oldTime'] = 0x0, this['elapsedTime'] = 0x0, this['running'] = !0x1;
    }

    function aU2() {
        yT['call'](this), this['type'] = 'AudioListener', this['context'] = aS8['getContext'](), this['gain'] = this['context']['createGain'](), this['gain']['connect'](this['context']['destination']), this['filter'] = null, this['timeDelta'] = 0x0;
    }

    function aU3(bf) {
        yT['call'](this), this['type'] = 'Audio', this['listener'] = bf, this['context'] = bf['context'], this['gain'] = this['context']['createGain'](), this['gain']['connect'](bf['getInput']()), this['autoplay'] = !0x1, this['buffer'] = null, this['detune'] = 0x0, this['loop'] = !0x1, this['startTime'] = 0x0, this['offset'] = 0x0, this['playbackRate'] = 0x1, this['isPlaying'] = !0x1, this['hasPlaybackControl'] = !0x0, this['sourceType'] = 'empty', this['filters'] = [];
    }

    function aU5(bf) {
        aU3['call'](this, bf), this['panner'] = this['context']['createPanner'](), this['panner']['panningModel'] = 'HRTF', this['panner']['connect'](this['gain']);
    }

    function aU7(bf, bg) {
        this['analyser'] = bf['context']['createAnalyser'](), this['analyser']['fftSize'] = void 0x0 !== bg ? bg : 0x800, this['data'] = new Uint8Array(this['analyser']['frequencyBinCount']), bf['getOutput']()['connect'](this['analyser']);
    }

    function aUa(bf, bg, bh) {
        this['binding'] = bf, this['valueSize'] = bh;
        var bi, bF = Float64Array;
        switch (bg) {
            case 'quaternion':
                bi = this['_slerp'];
                break;
            case 'string':
            case 'bool':
                bF = Array, bi = this['_select'];
                break;
            default:
                bi = this['_lerp'];
        }
        this['buffer'] = new bF(0x4 * bh), this['_mixBufferRegion'] = bi, this['cumulativeWeight'] = 0x0, this['useCount'] = 0x0, this['referenceCount'] = 0x0;
    }
    aTD['prototype'] = Object['create'](yT['prototype']), aTD['prototype']['constructor'] = aTD, Object['assign'](aU0['prototype'], {
        'start': function() {
            this['startTime'] = ('undefined' == typeof performance ? Date : performance)['now'](), this['oldTime'] = this['startTime'], this['elapsedTime'] = 0x0, this['running'] = !0x0;
        },
        'stop': function() {
            this['getElapsedTime'](), this['running'] = !0x1, this['autoStart'] = !0x1;
        },
        'getElapsedTime': function() {
            return this['getDelta'](), this['elapsedTime'];
        },
        'getDelta': function() {
            var bf = 0x0;
            if (this['autoStart'] && !this['running']) return this['start'](), 0x0;
            if (this['running']) {
                var bg = ('undefined' == typeof performance ? Date : performance)['now']();
                bf = (bg - this['oldTime']) / 0x3e8, this['oldTime'] = bg, this['elapsedTime'] += bf;
            }
            return bf;
        }
    }), aU2['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aU2,
        'getInput': function() {
            return this['gain'];
        },
        'removeFilter': function() {
            return null !== this['filter'] && (this['gain']['disconnect'](this['filter']), this['filter']['disconnect'](this['context']['destination']), this['gain']['connect'](this['context']['destination']), this['filter'] = null), this;
        },
        'getFilter': function() {
            return this['filter'];
        },
        'setFilter': function(bf) {
            return null !== this['filter'] ? (this['gain']['disconnect'](this['filter']), this['filter']['disconnect'](this['context']['destination'])) : this['gain']['disconnect'](this['context']['destination']), this['filter'] = bf, this['gain']['connect'](this['filter']), this['filter']['connect'](this['context']['destination']), this;
        },
        'getMasterVolume': function() {
            return this['gain']['gain']['value'];
        },
        'setMasterVolume': function(bf) {
            return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01), this;
        },
        'updateMatrixWorld': function() {
            var bf = new eK(),
                bg = new eF(),
                bh = new eK(),
                bi = new eK(),
                bF = new aU0();
            return function(bG) {
                yT['prototype']['updateMatrixWorld']['call'](this, bG);
                var bH = this['context']['listener'],
                    bI = this['up'];
                if (this['timeDelta'] = bF['getDelta'](), this['matrixWorld']['decompose'](bf, bg, bh), bi['set'](0x0, 0x0, -0x1)['applyQuaternion'](bg), bH['positionX']) {
                    var bJ = this['context']['currentTime'] + this['timeDelta'];
                    bH['positionX']['linearRampToValueAtTime'](bf['x'], bJ), bH['positionY']['linearRampToValueAtTime'](bf['y'], bJ), bH['positionZ']['linearRampToValueAtTime'](bf['z'], bJ), bH['forwardX']['linearRampToValueAtTime'](bi['x'], bJ), bH['forwardY']['linearRampToValueAtTime'](bi['y'], bJ), bH['forwardZ']['linearRampToValueAtTime'](bi['z'], bJ), bH['upX']['linearRampToValueAtTime'](bI['x'], bJ), bH['upY']['linearRampToValueAtTime'](bI['y'], bJ), bH['upZ']['linearRampToValueAtTime'](bI['z'], bJ);
                } else bH['setPosition'](bf['x'], bf['y'], bf['z']), bH['setOrientation'](bi['x'], bi['y'], bi['z'], bI['x'], bI['y'], bI['z']);
            };
        }()
    }), aU3['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
        'constructor': aU3,
        'getOutput': function() {
            return this['gain'];
        },
        'setNodeSource': function(bf) {
            return this['hasPlaybackControl'] = !0x1, this['sourceType'] = 'audioNode', this['source'] = bf, this['connect'](), this;
        },
        'setMediaElementSource': function(bf) {
            return this['hasPlaybackControl'] = !0x1, this['sourceType'] = 'mediaNode', this['source'] = this['context']['createMediaElementSource'](bf), this['connect'](), this;
        },
        'setBuffer': function(bf) {
            return this['buffer'] = bf, this['sourceType'] = 'buffer', this['autoplay'] && this['play'](), this;
        },
        'play': function() {
            if (!0x0 !== this['isPlaying']) {
                if (!0x1 !== this['hasPlaybackControl']) {
                    var bf = this['context']['createBufferSource']();
                    return bf['buffer'] = this['buffer'], bf['loop'] = this['loop'], bf['onended'] = this['onEnded']['bind'](this), this['startTime'] = this['context']['currentTime'], bf['start'](this['startTime'], this['offset']), this['isPlaying'] = !0x0, this['source'] = bf, this['setDetune'](this['detune']), this['setPlaybackRate'](this['playbackRate']), this['connect']();
                }
                console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
            } else console['warn']('THREE.Audio:\x20Audio\x20is\x20already\x20playing.');
        },
        'pause': function() {
            if (!0x1 !== this['hasPlaybackControl']) return !0x0 === this['isPlaying'] && (this['source']['stop'](), this['source']['onended'] = null, this['offset'] += (this['context']['currentTime'] - this['startTime']) * this['playbackRate'], this['isPlaying'] = !0x1), this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'stop': function() {
            if (!0x1 !== this['hasPlaybackControl']) return this['source']['stop'](), this['source']['onended'] = null, this['offset'] = 0x0, this['isPlaying'] = !0x1, this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'connect': function() {
            if (this['filters']['length'] > 0x0) {
                this['source']['connect'](this['filters'][0x0]);
                for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++) this['filters'][bf - 0x1]['connect'](this['filters'][bf]);
                this['filters'][this['filters']['length'] - 0x1]['connect'](this['getOutput']());
            } else this['source']['connect'](this['getOutput']());
            return this;
        },
        'disconnect': function() {
            if (this['filters']['length'] > 0x0) {
                this['source']['disconnect'](this['filters'][0x0]);
                for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++) this['filters'][bf - 0x1]['disconnect'](this['filters'][bf]);
                this['filters'][this['filters']['length'] - 0x1]['disconnect'](this['getOutput']());
            } else this['source']['disconnect'](this['getOutput']());
            return this;
        },
        'getFilters': function() {
            return this['filters'];
        },
        'setFilters': function(bf) {
            return bf || (bf = []), !0x0 === this['isPlaying'] ? (this['disconnect'](), this['filters'] = bf, this['connect']()) : this['filters'] = bf, this;
        },
        'setDetune': function(bf) {
            if (this['detune'] = bf, void 0x0 !== this['source']['detune']) return !0x0 === this['isPlaying'] && this['source']['detune']['setTargetAtTime'](this['detune'], this['context']['currentTime'], 0.01), this;
        },
        'getDetune': function() {
            return this['detune'];
        },
        'getFilter': function() {
            return this['getFilters']()[0x0];
        },
        'setFilter': function(bf) {
            return this['setFilters'](bf ? [bf] : []);
        },
        'setPlaybackRate': function(bf) {
            if (!0x1 !== this['hasPlaybackControl']) return this['playbackRate'] = bf, !0x0 === this['isPlaying'] && this['source']['playbackRate']['setTargetAtTime'](this['playbackRate'], this['context']['currentTime'], 0.01), this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'getPlaybackRate': function() {
            return this['playbackRate'];
        },
        'onEnded': function() {
            this['isPlaying'] = !0x1;
        },
        'getLoop': function() {
            return !0x1 === this['hasPlaybackControl'] ? (console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.'), !0x1) : this['loop'];
        },
        'setLoop': function(bf) {
            if (!0x1 !== this['hasPlaybackControl']) return this['loop'] = bf, !0x0 === this['isPlaying'] && (this['source']['loop'] = this['loop']), this;
            console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
        },
        'getVolume': function() {
            return this['gain']['gain']['value'];
        },
        'setVolume': function(bf) {
            return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01), this;
        }
    }), aU5['prototype'] = Object['assign'](Object['create'](aU3['prototype']), {
        'constructor': aU5,
        'getOutput': function() {
            return this['panner'];
        },
        'getRefDistance': function() {
            return this['panner']['refDistance'];
        },
        'setRefDistance': function(bf) {
            return this['panner']['refDistance'] = bf, this;
        },
        'getRolloffFactor': function() {
            return this['panner']['rolloffFactor'];
        },
        'setRolloffFactor': function(bf) {
            return this['panner']['rolloffFactor'] = bf, this;
        },
        'getDistanceModel': function() {
            return this['panner']['distanceModel'];
        },
        'setDistanceModel': function(bf) {
            return this['panner']['distanceModel'] = bf, this;
        },
        'getMaxDistance': function() {
            return this['panner']['maxDistance'];
        },
        'setMaxDistance': function(bf) {
            return this['panner']['maxDistance'] = bf, this;
        },
        'setDirectionalCone': function(bf, bg, bh) {
            return this['panner']['coneInnerAngle'] = bf, this['panner']['coneOuterAngle'] = bg, this['panner']['coneOuterGain'] = bh, this;
        },
        'updateMatrixWorld': function() {
            var bf = new eK(),
                bg = new eF(),
                bh = new eK(),
                bi = new eK();
            return function(bF) {
                if (yT['prototype']['updateMatrixWorld']['call'](this, bF), !0x0 !== this['hasPlaybackControl'] || !0x1 !== this['isPlaying']) {
                    this['matrixWorld']['decompose'](bf, bg, bh), bi['set'](0x0, 0x0, 0x1)['applyQuaternion'](bg);
                    var bG = this['panner'];
                    if (bG['positionX']) {
                        var bH = this['context']['currentTime'] + this['listener']['timeDelta'];
                        bG['positionX']['linearRampToValueAtTime'](bf['x'], bH), bG['positionY']['linearRampToValueAtTime'](bf['y'], bH), bG['positionZ']['linearRampToValueAtTime'](bf['z'], bH), bG['orientationX']['linearRampToValueAtTime'](bi['x'], bH), bG['orientationY']['linearRampToValueAtTime'](bi['y'], bH), bG['orientationZ']['linearRampToValueAtTime'](bi['z'], bH);
                    } else bG['setPosition'](bf['x'], bf['y'], bf['z']), bG['setOrientation'](bi['x'], bi['y'], bi['z']);
                }
            };
        }()
    }), Object['assign'](aU7['prototype'], {
        'getFrequencyData': function() {
            return this['analyser']['getByteFrequencyData'](this['data']), this['data'];
        },
        'getAverageFrequency': function() {
            for (var bf = 0x0, bg = this['getFrequencyData'](), bh = 0x0; bh < bg['length']; bh++) bf += bg[bh];
            return bf / bg['length'];
        }
    }), Object['assign'](aUa['prototype'], {
        'accumulate': function(bf, bg) {
            var bh = this['buffer'],
                bi = this['valueSize'],
                bF = bf * bi + bi,
                bG = this['cumulativeWeight'];
            if (0x0 === bG) {
                for (var bH = 0x0; bH !== bi; ++bH) bh[bF + bH] = bh[bH];
                bG = bg;
            } else {
                var bI = bg / (bG += bg);
                this['_mixBufferRegion'](bh, bF, 0x0, bI, bi);
            }
            this['cumulativeWeight'] = bG;
        },
        'apply': function(bf) {
            var bg = this['valueSize'],
                bh = this['buffer'],
                bi = bf * bg + bg,
                bF = this['cumulativeWeight'],
                bG = this['binding'];
            if (this['cumulativeWeight'] = 0x0, bF < 0x1) {
                var bH = 0x3 * bg;
                this['_mixBufferRegion'](bh, bi, bH, 0x1 - bF, bg);
            }
            for (var bI = bg, bJ = bg + bg; bI !== bJ; ++bI)
                if (bh[bI] !== bh[bI + bg]) {
                    bG['setValue'](bh, bi);
                    break;
                }
        },
        'saveOriginalState': function() {
            var bf = this['binding'],
                bg = this['buffer'],
                bh = this['valueSize'],
                bi = 0x3 * bh;
            bf['getValue'](bg, bi);
            for (var bF = bh, bG = bi; bF !== bG; ++bF) bg[bF] = bg[bi + bF % bh];
            this['cumulativeWeight'] = 0x0;
        },
        'restoreOriginalState': function() {
            var bf = 0x3 * this['valueSize'];
            this['binding']['setValue'](this['buffer'], bf);
        },
        '_select': function(bf, bg, bh, bi, bF) {
            if (bi >= 0.5)
                for (var bG = 0x0; bG !== bF; ++bG) bf[bg + bG] = bf[bh + bG];
        },
        '_slerp': function(bf, bg, bh, bi) {
            eF['slerpFlat'](bf, bg, bf, bg, bf, bh, bi);
        },
        '_lerp': function(bf, bg, bh, bi, bF) {
            for (var bG = 0x1 - bi, bH = 0x0; bH !== bF; ++bH) {
                var bI = bg + bH;
                bf[bI] = bf[bI] * bG + bf[bh + bH] * bi;
            }
        }
    });
    var aVE, aVF, aVG, aVH, aVI, aVJ, aVK, aVL, aVM, aVN, aVO, aVP, aVQ, aVR, aVS;

    function aVT(bf, bg, bh) {
        var bi = bh || aVY['parseTrackName'](bg);
        this['_targetGroup'] = bf, this['_bindings'] = bf['subscribe_'](bg, bi);
    }

    function aVY(bf, bg, bh) {
        this['path'] = bg, this['parsedPath'] = bh || aVY['parseTrackName'](bg), this['node'] = aVY['findNode'](bf, this['parsedPath']['nodeName']) || bf, this['rootNode'] = bf;
    }

    function aW2() {
        this['uuid'] = e2['generateUUID'](), this['_objects'] = Array['prototype']['slice']['call'](arguments), this['nCachedObjects_'] = 0x0;
        var bf = {};
        this['_indicesByUUID'] = bf;
        for (var bg = 0x0, bh = arguments['length']; bg !== bh; ++bg) bf[arguments[bg]['uuid']] = bg;
        this['_paths'] = [], this['_parsedPaths'] = [], this['_bindings'] = [], this['_bindingsIndicesByPath'] = {};
        var bi = this;
        this['stats'] = {
            'objects': {
                get 'total' () {
                    return bi['_objects']['length'];
                },
                get 'inUse' () {
                    return this['total'] - bi['nCachedObjects_'];
                }
            },
            get 'bindingsPerObject' () {
                return bi['_bindings']['length'];
            }
        };
    }

    function aW7(bf, bg, bh) {
        this['_mixer'] = bf, this['_clip'] = bg, this['_localRoot'] = bh || null;
        for (var bi = bg['tracks'], bF = bi['length'], bG = new Array(bF), bH = {
                'endingStart': dK,
                'endingEnd': dK
            }, bI = 0x0; bI !== bF; ++bI) {
            var bJ = bi[bI]['createInterpolant'](null);
            bG[bI] = bJ, bJ['settings'] = bH;
        }
        this['_interpolantSettings'] = bH, this['_interpolants'] = bG, this['_propertyBindings'] = new Array(bF), this['_cacheIndex'] = null, this['_byClipCacheIndex'] = null, this['_timeScaleInterpolant'] = null, this['_weightInterpolant'] = null, this['loop'] = dF, this['_loopCount'] = -0x1, this['_startTime'] = null, this['time'] = 0x0, this['timeScale'] = 0x1, this['_effectiveTimeScale'] = 0x1, this['weight'] = 0x1, this['_effectiveWeight'] = 0x1, this['repetitions'] = 0x1 / 0x0, this['paused'] = !0x1, this['enabled'] = !0x0, this['clampWhenFinished'] = !0x1, this['zeroSlopeAtStart'] = !0x0, this['zeroSlopeAtEnd'] = !0x0;
    }

    function aWh(bf) {
        this['_root'] = bf, this['_initMemoryManager'](), this['_accuIndex'] = 0x0, this['time'] = 0x0, this['timeScale'] = 0x1;
    }

    function aWj(bf) {
        'string' == typeof bf && (console['warn']('THREE.Uniform:\x20Type\x20parameter\x20is\x20no\x20longer\x20needed.'), bf = arguments[0x1]), this['value'] = bf;
    }

    function aWl(bf, bg, bh) {
        aeb['call'](this, bf, bg), this['meshPerAttribute'] = bh || 0x1;
    }

    function aWp(bf, bg, bh, bi) {
        this['ray'] = new KP(bf, bg), this['near'] = bh || 0x0, this['far'] = bi || 0x1 / 0x0, this['params'] = {
            'Mesh': {},
            'Line': {},
            'LOD': {},
            'Points': {
                'threshold': 0x1
            },
            'Sprite': {}
        }, Object['defineProperties'](this['params'], {
            'PointCloud': {
                'get': function() {
                    return console['warn']('THREE.Raycaster:\x20params.PointCloud\x20has\x20been\x20renamed\x20to\x20params.Points.'), this['Points'];
                }
            }
        });
    }

    function aWu(bf, bg) {
        return bf['distance'] - bg['distance'];
    }

    function aWx(bf, bg, bh, bi) {
        if (!0x1 !== bf['visible'] && (bf['raycast'](bg, bh), !0x0 === bi))
            for (var bF = bf['children'], bG = 0x0, bH = bF['length']; bG < bH; bG++) aWx(bF[bG], bg, bh, !0x0);
    }

    function aWF(bf, bg, bh) {
        return this['radius'] = void 0x0 !== bf ? bf : 0x1, this['phi'] = void 0x0 !== bg ? bg : 0x0, this['theta'] = void 0x0 !== bh ? bh : 0x0, this;
    }

    function aWJ(bf, bg, bh) {
        return this['radius'] = void 0x0 !== bf ? bf : 0x1, this['theta'] = void 0x0 !== bg ? bg : 0x0, this['y'] = void 0x0 !== bh ? bh : 0x0, this;
    }

    function aWN(bf, bg) {
        this['min'] = void 0x0 !== bf ? bf : new eC(0x1 / 0x0, 0x1 / 0x0), this['max'] = void 0x0 !== bg ? bg : new eC(-0x1 / 0x0, -0x1 / 0x0);
    }

    function aWQ(bf, bg) {
        this['start'] = void 0x0 !== bf ? bf : new eK(), this['end'] = void 0x0 !== bg ? bg : new eK();
    }

    function aWT(bf) {
        yT['call'](this), this['material'] = bf, this['render'] = function() {};
    }

    function aWV(bf, bg, bh, bi) {
        this['object'] = bf, this['size'] = void 0x0 !== bg ? bg : 0x1;
        var bF = void 0x0 !== bh ? bh : 0xff0000,
            bG = void 0x0 !== bi ? bi : 0x1,
            bH = 0x0,
            bI = this['object']['geometry'];
        bI && bI['isGeometry'] ? bH = 0x3 * bI['faces']['length'] : bI && bI['isBufferGeometry'] && (bH = bI['attributes']['normal']['count']);
        var bJ = new Gf(),
            bK = new Be(0x2 * bH * 0x3, 0x3);
        bJ['addAttribute']('position', bK), aeE['call'](this, bJ, new aey({
            'color': bF,
            'linewidth': bG
        })), this['matrixAutoUpdate'] = !0x1, this['update']();
    }

    function aX6(bf, bg) {
        yT['call'](this), this['light'] = bf, this['light']['updateMatrixWorld'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['color'] = bg;
        for (var bh = new Gf(), bi = [0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, -0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x1], bF = 0x0, bG = 0x1; bF < 0x20; bF++, bG++) {
            var bH = bF / 0x20 * Math['PI'] * 0x2,
                bI = bG / 0x20 * Math['PI'] * 0x2;
            bi['push'](Math['cos'](bH), Math['sin'](bH), 0x1, Math['cos'](bI), Math['sin'](bI), 0x1);
        }
        bh['addAttribute']('position', new Be(bi, 0x3));
        var bJ = new aey({
            'fog': !0x1
        });
        this['cone'] = new aeE(bh, bJ), this['add'](this['cone']), this['update']();
    }

    function aXg(bf) {
        for (var bg = function bf(bg) {
                var bh = [];
                bg && bg['isBone'] && bh['push'](bg);
                for (var bi = 0x0; bi < bg['children']['length']; bi++) bh['push']['apply'](bh, bf(bg['children'][bi]));
                return bh;
            }(bf), bh = new Gf(), bi = [], bF = [], bG = new w7(0x0, 0x0, 0x1), bH = new w7(0x0, 0x1, 0x0), bI = 0x0; bI < bg['length']; bI++) {
            var bJ = bg[bI];
            bJ['parent'] && bJ['parent']['isBone'] && (bi['push'](0x0, 0x0, 0x0), bi['push'](0x0, 0x0, 0x0), bF['push'](bG['r'], bG['g'], bG['b']), bF['push'](bH['r'], bH['g'], bH['b']));
        }
        bh['addAttribute']('position', new Be(bi, 0x3)), bh['addAttribute']('color', new Be(bF, 0x3));
        var bK = new aey({
            'vertexColors': c0,
            'depthTest': !0x1,
            'depthWrite': !0x1,
            'transparent': !0x0
        });
        aeE['call'](this, bh, bK), this['root'] = bf, this['bones'] = bg, this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1;
    }

    function aXu(bf, bg, bh) {
        this['light'] = bf, this['light']['updateMatrixWorld'](), this['color'] = bh;
        var bi = new asZ(bg, 0x4, 0x2),
            bF = new KW({
                'wireframe': !0x0,
                'fog': !0x1
            });
        KY['call'](this, bi, bF), this['matrix'] = this['light']['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['update']();
    }

    function aXA(bf, bg) {
        this['type'] = 'RectAreaLightHelper', this['light'] = bf, this['color'] = bg;
        var bh = new Gf();
        bh['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0], 0x3)), bh['computeBoundingSphere']();
        var bi = new aey({
            'fog': !0x1
        });
        aeA['call'](this, bh, bi);
        var bF = new Gf();
        bF['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0], 0x3)), bF['computeBoundingSphere'](), this['add'](new KY(bF, new KW({
            'side': bU,
            'fog': !0x1
        }))), this['update']();
    }

    function aXG(bf, bg, bh) {
        yT['call'](this), this['light'] = bf, this['light']['updateMatrixWorld'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['color'] = bh;
        var bi = new ahA(bg);
        bi['rotateY'](0.5 * Math['PI']), this['material'] = new KW({
            'wireframe': !0x0,
            'fog': !0x1
        }), void 0x0 === this['color'] && (this['material']['vertexColors'] = c0);
        var bF = bi['getAttribute']('position'),
            bG = new Float32Array(0x3 * bF['count']);
        bi['addAttribute']('color', new AI(bG, 0x3)), this['add'](new KY(bi, this['material'])), this['update']();
    }

    function aXN(bf, bg) {
        this['lightProbe'] = bf, this['size'] = bg;
        var bh = {
                'GAMMA_OUTPUT': ''
            },
            bi = new KN({
                'defines': bh,
                'uniforms': {
                    'sh': {
                        'value': this['lightProbe']['sh']['coefficients']
                    },
                    'intensity': {
                        'value': this['lightProbe']['intensity']
                    }
                },
                'vertexShader': ['varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vNormal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);', '\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);', '}']['join']('\x0a'),
                'fragmentShader': ['#define\x20RECIPROCAL_PI\x200.318309886', 'vec3\x20inverseTransformDirection(\x20in\x20vec3\x20normal,\x20in\x20mat4\x20matrix\x20)\x20{', '\x09//\x20matrix\x20is\x20assumed\x20to\x20be\x20orthogonal', '\x09return\x20normalize(\x20(\x20vec4(\x20normal,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);', '}', 'vec3\x20linearToOutput(\x20in\x20vec3\x20a\x20)\x20{', '\x09#ifdef\x20GAMMA_OUTPUT', '\x09\x09return\x20pow(\x20a,\x20vec3(\x201.0\x20/\x20float(\x20GAMMA_FACTOR\x20)\x20)\x20);', '\x09#else', '\x09\x09return\x20a;', '\x09#endif', '}', '//\x20source:\x20https://graphics.stanford.edu/papers/envmap/envmap.pdf', 'vec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{', '\x09//\x20normal\x20is\x20assumed\x20to\x20have\x20unit\x20length', '\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;', '\x09//\x20band\x200', '\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;', '\x09//\x20band\x201', '\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;', '\x09//\x20band\x202', '\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);', '\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);', '\x09return\x20result;', '}', 'uniform\x20vec3\x20sh[\x209\x20];\x20//\x20sh\x20coefficients', 'uniform\x20float\x20intensity;\x20//\x20light\x20probe\x20intensity', 'varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);', '\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);', '\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20sh\x20);', '\x09vec3\x20outgoingLight\x20=\x20RECIPROCAL_PI\x20*\x20irradiance\x20*\x20intensity;', '\x09outgoingLight\x20=\x20linearToOutput(\x20outgoingLight\x20);', '\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x201.0\x20);', '}']['join']('\x0a')
            }),
            bF = new asZ(0x1, 0x20, 0x10);
        KY['call'](this, bF, bi), this['onBeforeRender']();
    }

    function aXT(bf, bg, bh, bi) {
        bf = bf || 0xa, bg = bg || 0xa, bh = new w7(void 0x0 !== bh ? bh : 0x444444), bi = new w7(void 0x0 !== bi ? bi : 0x888888);
        for (var bF = bg / 0x2, bG = bf / bg, bH = bf / 0x2, bI = [], bJ = [], bK = 0x0, bL = 0x0, bM = -bH; bK <= bg; bK++, bM += bG) {
            bI['push'](-bH, 0x0, bM, bH, 0x0, bM), bI['push'](bM, 0x0, -bH, bM, 0x0, bH);
            var bN = bK === bF ? bh : bi;
            bN['toArray'](bJ, bL), bL += 0x3, bN['toArray'](bJ, bL), bL += 0x3, bN['toArray'](bJ, bL), bL += 0x3, bN['toArray'](bJ, bL), bL += 0x3;
        }
        var bO = new Gf();
        bO['addAttribute']('position', new Be(bI, 0x3)), bO['addAttribute']('color', new Be(bJ, 0x3));
        var bP = new aey({
            'vertexColors': c0
        });
        aeE['call'](this, bO, bP);
    }

    function aY9(bf, bg, bh, bi, bF, bG) {
        bf = bf || 0xa, bg = bg || 0x10, bh = bh || 0x8, bi = bi || 0x40, bF = new w7(void 0x0 !== bF ? bF : 0x444444), bG = new w7(void 0x0 !== bG ? bG : 0x888888);
        var bH, bI, bJ, bK, bL, bM, bN, bO = [],
            bP = [];
        for (bK = 0x0; bK <= bg; bK++) bJ = bK / bg * (0x2 * Math['PI']), bH = Math['sin'](bJ) * bf, bI = Math['cos'](bJ) * bf, bO['push'](0x0, 0x0, 0x0), bO['push'](bH, 0x0, bI), bN = 0x1 & bK ? bF : bG, bP['push'](bN['r'], bN['g'], bN['b']), bP['push'](bN['r'], bN['g'], bN['b']);
        for (bK = 0x0; bK <= bh; bK++)
            for (bN = 0x1 & bK ? bF : bG, bM = bf - bf / bh * bK, bL = 0x0; bL < bi; bL++) bJ = bL / bi * (0x2 * Math['PI']), bH = Math['sin'](bJ) * bM, bI = Math['cos'](bJ) * bM, bO['push'](bH, 0x0, bI), bP['push'](bN['r'], bN['g'], bN['b']), bJ = (bL + 0x1) / bi * (0x2 * Math['PI']), bH = Math['sin'](bJ) * bM, bI = Math['cos'](bJ) * bM, bO['push'](bH, 0x0, bI), bP['push'](bN['r'], bN['g'], bN['b']);
        var bQ = new Gf();
        bQ['addAttribute']('position', new Be(bO, 0x3)), bQ['addAttribute']('color', new Be(bP, 0x3));
        var bR = new aey({
            'vertexColors': c0
        });
        aeE['call'](this, bQ, bR);
    }

    function aYr(bf, bg, bh, bi) {
        this['audio'] = bf, this['range'] = bg || 0x1, this['divisionsInnerAngle'] = bh || 0x10, this['divisionsOuterAngle'] = bi || 0x2;
        var bF = new Gf(),
            bG = this['divisionsInnerAngle'] + 0x2 * this['divisionsOuterAngle'],
            bH = new Float32Array(0x3 * (0x3 * bG + 0x3));
        bF['addAttribute']('position', new AI(bH, 0x3));
        var bI = new aey({
                'color': 0xff00
            }),
            bJ = new aey({
                'color': 0xffff00
            });
        aeA['call'](this, bF, [bJ, bI]), this['update']();
    }

    function aYB(bf, bg, bh, bi) {
        this['object'] = bf, this['size'] = void 0x0 !== bg ? bg : 0x1;
        var bF = void 0x0 !== bh ? bh : 0xffff00,
            bG = void 0x0 !== bi ? bi : 0x1,
            bH = 0x0,
            bI = this['object']['geometry'];
        bI && bI['isGeometry'] ? bH = bI['faces']['length'] : console['warn']('THREE.FaceNormalsHelper:\x20only\x20THREE.Geometry\x20is\x20supported.\x20Use\x20THREE.VertexNormalsHelper,\x20instead.');
        var bJ = new Gf(),
            bK = new Be(0x2 * bH * 0x3, 0x3);
        bJ['addAttribute']('position', bK), aeE['call'](this, bJ, new aey({
            'color': bF,
            'linewidth': bG
        })), this['matrixAutoUpdate'] = !0x1, this['update']();
    }

    function aYM(bf, bg, bh) {
        yT['call'](this), this['light'] = bf, this['light']['updateMatrixWorld'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['color'] = bh, void 0x0 === bg && (bg = 0x1);
        var bi = new Gf();
        bi['addAttribute']('position', new Be([-bg, bg, 0x0, bg, bg, 0x0, bg, -bg, 0x0, -bg, -bg, 0x0, -bg, bg, 0x0], 0x3));
        var bF = new aey({
            'fog': !0x1
        });
        this['lightPlane'] = new aeA(bi, bF), this['add'](this['lightPlane']), (bi = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x0, 0x1], 0x3)), this['targetLine'] = new aeA(bi, bF), this['add'](this['targetLine']), this['update']();
    }

    function aYS(bf) {
        var bg = new Gf(),
            bh = new aey({
                'color': 0xffffff,
                'vertexColors': bZ
            }),
            bi = [],
            bF = [],
            bG = {},
            bH = new w7(0xffaa00),
            bI = new w7(0xff0000),
            bJ = new w7(0xaaff),
            bK = new w7(0xffffff),
            bL = new w7(0x333333);

        function bM(bf, bg, bh) {
            bN(bf, bh), bN(bg, bh);
        }

        function bN(bf, bg) {
            bi['push'](0x0, 0x0, 0x0), bF['push'](bg['r'], bg['g'], bg['b']), void 0x0 === bG[bf] && (bG[bf] = []), bG[bf]['push'](bi['length'] / 0x3 - 0x1);
        }
        bM('n1', 'n2', bH), bM('n2', 'n4', bH), bM('n4', 'n3', bH), bM('n3', 'n1', bH), bM('f1', 'f2', bH), bM('f2', 'f4', bH), bM('f4', 'f3', bH), bM('f3', 'f1', bH), bM('n1', 'f1', bH), bM('n2', 'f2', bH), bM('n3', 'f3', bH), bM('n4', 'f4', bH), bM('p', 'n1', bI), bM('p', 'n2', bI), bM('p', 'n3', bI), bM('p', 'n4', bI), bM('u1', 'u2', bJ), bM('u2', 'u3', bJ), bM('u3', 'u1', bJ), bM('c', 't', bK), bM('p', 'c', bL), bM('cn1', 'cn2', bL), bM('cn3', 'cn4', bL), bM('cf1', 'cf2', bL), bM('cf3', 'cf4', bL), bg['addAttribute']('position', new Be(bi, 0x3)), bg['addAttribute']('color', new Be(bF, 0x3)), aeE['call'](this, bg, bh), this['camera'] = bf, this['camera']['updateProjectionMatrix'] && this['camera']['updateProjectionMatrix'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['pointMap'] = bG, this['update']();
    }

    function aZb(bf, bg) {
        this['object'] = bf, void 0x0 === bg && (bg = 0xffff00);
        var bh = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7]),
            bi = new Float32Array(0x18),
            bF = new Gf();
        bF['setIndex'](new AI(bh, 0x1)), bF['addAttribute']('position', new AI(bi, 0x3)), aeE['call'](this, bF, new aey({
            'color': bg
        })), this['matrixAutoUpdate'] = !0x1, this['update']();
    }

    function aZh(bf, bg) {
        this['type'] = 'Box3Helper', this['box'] = bf;
        var bh = void 0x0 !== bg ? bg : 0xffff00,
            bi = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7]),
            bF = new Gf();
        bF['setIndex'](new AI(bi, 0x1)), bF['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, -0x1], 0x3)), aeE['call'](this, bF, new aey({
            'color': bh
        })), this['geometry']['computeBoundingSphere']();
    }

    function aZn(bf, bg, bh) {
        this['type'] = 'PlaneHelper', this['plane'] = bf, this['size'] = void 0x0 === bg ? 0x1 : bg;
        var bi = void 0x0 !== bh ? bh : 0xffff00,
            bF = new Gf();
        bF['addAttribute']('position', new Be([0x1, -0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0], 0x3)), bF['computeBoundingSphere'](), aeA['call'](this, bF, new aey({
            'color': bi
        }));
        var bG = new Gf();
        bG['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1], 0x3)), bG['computeBoundingSphere'](), this['add'](new KY(bG, new KW({
            'color': bi,
            'opacity': 0.2,
            'transparent': !0x0,
            'depthWrite': !0x1
        })));
    }

    function aZu(bf, bg, bh, bi, bF, bG) {
        yT['call'](this), void 0x0 === bf && (bf = new eK(0x0, 0x0, 0x1)), void 0x0 === bg && (bg = new eK(0x0, 0x0, 0x0)), void 0x0 === bh && (bh = 0x1), void 0x0 === bi && (bi = 0xffff00), void 0x0 === bF && (bF = 0.2 * bh), void 0x0 === bG && (bG = 0.2 * bF), void 0x0 === aVP && ((aVP = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x1, 0x0], 0x3)), (aVQ = new avp(0x0, 0.5, 0x1, 0x5, 0x1))['translate'](0x0, -0.5, 0x0)), this['position']['copy'](bg), this['line'] = new aeA(aVP, new aey({
            'color': bi
        })), this['line']['matrixAutoUpdate'] = !0x1, this['add'](this['line']), this['cone'] = new KY(aVQ, new KW({
            'color': bi
        })), this['cone']['matrixAutoUpdate'] = !0x1, this['add'](this['cone']), this['setDirection'](bf), this['setLength'](bh, bF, bG);
    }

    function aZB(bf) {
        var bg = [0x0, 0x0, 0x0, bf = bf || 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf],
            bh = new Gf();
        bh['addAttribute']('position', new Be(bg, 0x3)), bh['addAttribute']('color', new Be([0x1, 0x0, 0x0, 0x1, 0.6, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1], 0x3));
        var bi = new aey({
            'vertexColors': c0
        });
        aeE['call'](this, bh, bi);
    }

    function aZG(bf, bg, bh, bi, bF, bG, bH) {
        return console['warn']('THREE.Face4\x20has\x20been\x20removed.\x20A\x20THREE.Face3\x20will\x20be\x20created\x20instead.'), new xS(bf, bg, bh, bF, bG, bH);
    }
    Object['assign'](aVT['prototype'], {
        'getValue': function(bf, bg) {
            this['bind']();
            var bh = this['_targetGroup']['nCachedObjects_'],
                bi = this['_bindings'][bh];
            void 0x0 !== bi && bi['getValue'](bf, bg);
        },
        'setValue': function(bf, bg) {
            for (var bh = this['_bindings'], bi = this['_targetGroup']['nCachedObjects_'], bF = bh['length']; bi !== bF; ++bi) bh[bi]['setValue'](bf, bg);
        },
        'bind': function() {
            for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg) bf[bg]['bind']();
        },
        'unbind': function() {
            for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg) bf[bg]['unbind']();
        }
    }), Object['assign'](aVY, {
        'Composite': aVT,
        'create': function(bf, bg, bh) {
            return bf && bf['isAnimationObjectGroup'] ? new aVY['Composite'](bf, bg, bh) : new aVY(bf, bg, bh);
        },
        'sanitizeNodeName': (aVM = new RegExp('[\x5c[\x5c]\x5c.:\x5c/]', 'g'), function(bf) {
            return bf['replace'](/\s/g, '_')['replace'](aVM, '');
        }),
        'parseTrackName': (aVE = '[^\x5c[\x5c]\x5c.:\x5c/]', aVF = '[^' + '\x5c[\x5c]\x5c.:\x5c/' ['replace']('\x5c.', '') + ']', aVG = /((?:WC+[\/:])*)/ ['source']['replace']('WC', aVE), aVH = /(WCOD+)?/ ['source']['replace']('WCOD', aVF), aVI = /(?:\.(WC+)(?:\[(.+)\])?)?/ ['source']['replace']('WC', aVE), aVJ = /\.(WC+)(?:\[(.+)\])?/ ['source']['replace']('WC', aVE), aVK = new RegExp('^' + aVG + aVH + aVI + aVJ + '$'), aVL = ['material', 'materials', 'bones'], function(bf) {
            var bg = aVK['exec'](bf);
            if (!bg) throw new Error('PropertyBinding:\x20Cannot\x20parse\x20trackName:\x20' + bf);
            var bh = {
                    'nodeName': bg[0x2],
                    'objectName': bg[0x3],
                    'objectIndex': bg[0x4],
                    'propertyName': bg[0x5],
                    'propertyIndex': bg[0x6]
                },
                bi = bh['nodeName'] && bh['nodeName']['lastIndexOf']('.');
            if (void 0x0 !== bi && -0x1 !== bi) {
                var bF = bh['nodeName']['substring'](bi + 0x1); - 0x1 !== aVL['indexOf'](bF) && (bh['nodeName'] = bh['nodeName']['substring'](0x0, bi), bh['objectName'] = bF);
            }
            if (null === bh['propertyName'] || 0x0 === bh['propertyName']['length']) throw new Error('PropertyBinding:\x20can\x20not\x20parse\x20propertyName\x20from\x20trackName:\x20' + bf);
            return bh;
        }),
        'findNode': function(bf, bg) {
            if (!bg || '' === bg || 'root' === bg || '.' === bg || -0x1 === bg || bg === bf['name'] || bg === bf['uuid']) return bf;
            if (bf['skeleton']) {
                var bh = bf['skeleton']['getBoneByName'](bg);
                if (void 0x0 !== bh) return bh;
            }
            if (bf['children']) {
                var bi = function(bf) {
                        for (var bh = 0x0; bh < bf['length']; bh++) {
                            var bF = bf[bh];
                            if (bF['name'] === bg || bF['uuid'] === bg) return bF;
                            var bG = bi(bF['children']);
                            if (bG) return bG;
                        }
                        return null;
                    },
                    bF = bi(bf['children']);
                if (bF) return bF;
            }
            return null;
        }
    }), Object['assign'](aVY['prototype'], {
        '_getValue_unavailable': function() {},
        '_setValue_unavailable': function() {},
        'BindingType': {
            'Direct': 0x0,
            'EntireArray': 0x1,
            'ArrayElement': 0x2,
            'HasFromToArray': 0x3
        },
        'Versioning': {
            'None': 0x0,
            'NeedsUpdate': 0x1,
            'MatrixWorldNeedsUpdate': 0x2
        },
        'GetterByBindingType': [function(bf, bg) {
            bf[bg] = this['node'][this['propertyName']];
        }, function(bf, bg) {
            for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bf[bg++] = bh[bi];
        }, function(bf, bg) {
            bf[bg] = this['resolvedProperty'][this['propertyIndex']];
        }, function(bf, bg) {
            this['resolvedProperty']['toArray'](bf, bg);
        }],
        'SetterByBindingTypeAndVersioning': [
            [function(bf, bg) {
                this['targetObject'][this['propertyName']] = bf[bg];
            }, function(bf, bg) {
                this['targetObject'][this['propertyName']] = bf[bg], this['targetObject']['needsUpdate'] = !0x0;
            }, function(bf, bg) {
                this['targetObject'][this['propertyName']] = bf[bg], this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }],
            [function(bf, bg) {
                for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bh[bi] = bf[bg++];
            }, function(bf, bg) {
                for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bh[bi] = bf[bg++];
                this['targetObject']['needsUpdate'] = !0x0;
            }, function(bf, bg) {
                for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bh[bi] = bf[bg++];
                this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }],
            [function(bf, bg) {
                this['resolvedProperty'][this['propertyIndex']] = bf[bg];
            }, function(bf, bg) {
                this['resolvedProperty'][this['propertyIndex']] = bf[bg], this['targetObject']['needsUpdate'] = !0x0;
            }, function(bf, bg) {
                this['resolvedProperty'][this['propertyIndex']] = bf[bg], this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }],
            [function(bf, bg) {
                this['resolvedProperty']['fromArray'](bf, bg);
            }, function(bf, bg) {
                this['resolvedProperty']['fromArray'](bf, bg), this['targetObject']['needsUpdate'] = !0x0;
            }, function(bf, bg) {
                this['resolvedProperty']['fromArray'](bf, bg), this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }]
        ],
        'getValue': function(bf, bg) {
            this['bind'](), this['getValue'](bf, bg);
        },
        'setValue': function(bf, bg) {
            this['bind'](), this['setValue'](bf, bg);
        },
        'bind': function() {
            var bf = this['node'],
                bg = this['parsedPath'],
                bh = bg['objectName'],
                bi = bg['propertyName'],
                bF = bg['propertyIndex'];
            if (bf || (bf = aVY['findNode'](this['rootNode'], bg['nodeName']) || this['rootNode'], this['node'] = bf), this['getValue'] = this['_getValue_unavailable'], this['setValue'] = this['_setValue_unavailable'], bf) {
                if (bh) {
                    var bG = bg['objectIndex'];
                    switch (bh) {
                        case 'materials':
                            if (!bf['material']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material\x20as\x20node\x20does\x20not\x20have\x20a\x20material.', this);
                            if (!bf['material']['materials']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material.materials\x20as\x20node.material\x20does\x20not\x20have\x20a\x20materials\x20array.', this);
                            bf = bf['material']['materials'];
                            break;
                        case 'bones':
                            if (!bf['skeleton']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20bones\x20as\x20node\x20does\x20not\x20have\x20a\x20skeleton.', this);
                            bf = bf['skeleton']['bones'];
                            for (var bH = 0x0; bH < bf['length']; bH++)
                                if (bf[bH]['name'] === bG) {
                                    bG = bH;
                                    break;
                                }
                            break;
                        default:
                            if (void 0x0 === bf[bh]) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20objectName\x20of\x20node\x20undefined.', this);
                            bf = bf[bh];
                    }
                    if (void 0x0 !== bG) {
                        if (void 0x0 === bf[bG]) return void console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20bind\x20to\x20objectIndex\x20of\x20objectName,\x20but\x20is\x20undefined.', this, bf);
                        bf = bf[bG];
                    }
                }
                var bI = bf[bi];
                if (void 0x0 !== bI) {
                    var bJ = this['Versioning']['None'];
                    this['targetObject'] = bf, void 0x0 !== bf['needsUpdate'] ? bJ = this['Versioning']['NeedsUpdate'] : void 0x0 !== bf['matrixWorldNeedsUpdate'] && (bJ = this['Versioning']['MatrixWorldNeedsUpdate']);
                    var bK = this['BindingType']['Direct'];
                    if (void 0x0 !== bF) {
                        if ('morphTargetInfluences' === bi) {
                            if (!bf['geometry']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.', this);
                            if (bf['geometry']['isBufferGeometry']) {
                                if (!bf['geometry']['morphAttributes']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphAttributes.', this);
                                for (bH = 0x0; bH < this['node']['geometry']['morphAttributes']['position']['length']; bH++)
                                    if (bf['geometry']['morphAttributes']['position'][bH]['name'] === bF) {
                                        bF = bH;
                                        break;
                                    }
                            } else {
                                if (!bf['geometry']['morphTargets']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphTargets.', this);
                                for (bH = 0x0; bH < this['node']['geometry']['morphTargets']['length']; bH++)
                                    if (bf['geometry']['morphTargets'][bH]['name'] === bF) {
                                        bF = bH;
                                        break;
                                    }
                            }
                        }
                        bK = this['BindingType']['ArrayElement'], this['resolvedProperty'] = bI, this['propertyIndex'] = bF;
                    } else void 0x0 !== bI['fromArray'] && void 0x0 !== bI['toArray'] ? (bK = this['BindingType']['HasFromToArray'], this['resolvedProperty'] = bI) : Array['isArray'](bI) ? (bK = this['BindingType']['EntireArray'], this['resolvedProperty'] = bI) : this['propertyName'] = bi;
                    this['getValue'] = this['GetterByBindingType'][bK], this['setValue'] = this['SetterByBindingTypeAndVersioning'][bK][bJ];
                } else {
                    var bL = bg['nodeName'];
                    console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20property\x20for\x20track:\x20' + bL + '.' + bi + '\x20but\x20it\x20wasn\x27t\x20found.', bf);
                }
            } else console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20node\x20for\x20track:\x20' + this['path'] + '\x20but\x20it\x20wasn\x27t\x20found.');
        },
        'unbind': function() {
            this['node'] = null, this['getValue'] = this['_getValue_unbound'], this['setValue'] = this['_setValue_unbound'];
        }
    }), Object['assign'](aVY['prototype'], {
        '_getValue_unbound': aVY['prototype']['getValue'],
        '_setValue_unbound': aVY['prototype']['setValue']
    }), Object['assign'](aW2['prototype'], {
        'isAnimationObjectGroup': !0x0,
        'add': function() {
            for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_paths'], bG = this['_parsedPaths'], bH = this['_bindings'], bI = bH['length'], bJ = void 0x0, bK = 0x0, bL = arguments['length']; bK !== bL; ++bK) {
                var bM = arguments[bK],
                    bN = bM['uuid'],
                    bO = bi[bN];
                if (void 0x0 === bO) {
                    bO = bg++, bi[bN] = bO, bf['push'](bM);
                    for (var bP = 0x0, bQ = bI; bP !== bQ; ++bP) bH[bP]['push'](new aVY(bM, bF[bP], bG[bP]));
                } else if (bO < bh) {
                    bJ = bf[bO];
                    var bR = --bh,
                        bS = bf[bR];
                    bi[bS['uuid']] = bO, bf[bO] = bS, bi[bN] = bR, bf[bR] = bM;
                    for (bP = 0x0, bQ = bI; bP !== bQ; ++bP) {
                        var bT = bH[bP],
                            bU = bT[bR],
                            bV = bT[bO];
                        bT[bO] = bU, void 0x0 === bV && (bV = new aVY(bM, bF[bP], bG[bP])), bT[bR] = bV;
                    }
                } else bf[bO] !== bJ && console['error']('THREE.AnimationObjectGroup:\x20Different\x20objects\x20with\x20the\x20same\x20UUID\x20detected.\x20Clean\x20the\x20caches\x20or\x20recreate\x20your\x20infrastructure\x20when\x20reloading\x20scenes.');
            }
            this['nCachedObjects_'] = bh;
        },
        'remove': function() {
            for (var bf = this['_objects'], bg = this['nCachedObjects_'], bh = this['_indicesByUUID'], bi = this['_bindings'], bF = bi['length'], bG = 0x0, bH = arguments['length']; bG !== bH; ++bG) {
                var bI = arguments[bG],
                    bJ = bI['uuid'],
                    bK = bh[bJ];
                if (void 0x0 !== bK && bK >= bg) {
                    var bL = bg++,
                        bM = bf[bL];
                    bh[bM['uuid']] = bK, bf[bK] = bM, bh[bJ] = bL, bf[bL] = bI;
                    for (var bN = 0x0, bO = bF; bN !== bO; ++bN) {
                        var bP = bi[bN],
                            bQ = bP[bL],
                            bR = bP[bK];
                        bP[bK] = bQ, bP[bL] = bR;
                    }
                }
            }
            this['nCachedObjects_'] = bg;
        },
        'uncache': function() {
            for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_bindings'], bG = bF['length'], bH = 0x0, bI = arguments['length']; bH !== bI; ++bH) {
                var bJ = arguments[bH]['uuid'],
                    bK = bi[bJ];
                if (void 0x0 !== bK)
                    if (delete bi[bJ], bK < bh) {
                        var bL = --bh,
                            bM = bf[bL],
                            bN = bf[bS = --bg];
                        bi[bM['uuid']] = bK, bf[bK] = bM, bi[bN['uuid']] = bL, bf[bL] = bN, bf['pop']();
                        for (var bO = 0x0, bP = bG; bO !== bP; ++bO) {
                            var bQ = (bT = bF[bO])[bL],
                                bR = bT[bS];
                            bT[bK] = bQ, bT[bL] = bR, bT['pop']();
                        }
                    } else {
                        var bS;
                        bi[(bN = bf[bS = --bg])['uuid']] = bK, bf[bK] = bN, bf['pop']();
                        for (bO = 0x0, bP = bG; bO !== bP; ++bO) {
                            var bT;
                            (bT = bF[bO])[bK] = bT[bS], bT['pop']();
                        }
                    }
            }
            this['nCachedObjects_'] = bh;
        },
        'subscribe_': function(bf, bg) {
            var bh = this['_bindingsIndicesByPath'],
                bi = bh[bf],
                bF = this['_bindings'];
            if (void 0x0 !== bi) return bF[bi];
            var bG = this['_paths'],
                bH = this['_parsedPaths'],
                bI = this['_objects'],
                bJ = bI['length'],
                bK = this['nCachedObjects_'],
                bL = new Array(bJ);
            bi = bF['length'], bh[bf] = bi, bG['push'](bf), bH['push'](bg), bF['push'](bL);
            for (var bM = bK, bN = bI['length']; bM !== bN; ++bM) {
                var bO = bI[bM];
                bL[bM] = new aVY(bO, bf, bg);
            }
            return bL;
        },
        'unsubscribe_': function(bf) {
            var bg = this['_bindingsIndicesByPath'],
                bh = bg[bf];
            if (void 0x0 !== bh) {
                var bi = this['_paths'],
                    bF = this['_parsedPaths'],
                    bG = this['_bindings'],
                    bH = bG['length'] - 0x1,
                    bI = bG[bH];
                bg[bf[bH]] = bh, bG[bh] = bI, bG['pop'](), bF[bh] = bF[bH], bF['pop'](), bi[bh] = bi[bH], bi['pop']();
            }
        }
    }), Object['assign'](aW7['prototype'], {
        'play': function() {
            return this['_mixer']['_activateAction'](this), this;
        },
        'stop': function() {
            return this['_mixer']['_deactivateAction'](this), this['reset']();
        },
        'reset': function() {
            return this['paused'] = !0x1, this['enabled'] = !0x0, this['time'] = 0x0, this['_loopCount'] = -0x1, this['_startTime'] = null, this['stopFading']()['stopWarping']();
        },
        'isRunning': function() {
            return this['enabled'] && !this['paused'] && 0x0 !== this['timeScale'] && null === this['_startTime'] && this['_mixer']['_isActiveAction'](this);
        },
        'isScheduled': function() {
            return this['_mixer']['_isActiveAction'](this);
        },
        'startAt': function(bf) {
            return this['_startTime'] = bf, this;
        },
        'setLoop': function(bf, bg) {
            return this['loop'] = bf, this['repetitions'] = bg, this;
        },
        'setEffectiveWeight': function(bf) {
            return this['weight'] = bf, this['_effectiveWeight'] = this['enabled'] ? bf : 0x0, this['stopFading']();
        },
        'getEffectiveWeight': function() {
            return this['_effectiveWeight'];
        },
        'fadeIn': function(bf) {
            return this['_scheduleFading'](bf, 0x0, 0x1);
        },
        'fadeOut': function(bf) {
            return this['_scheduleFading'](bf, 0x1, 0x0);
        },
        'crossFadeFrom': function(bf, bg, bh) {
            if (bf['fadeOut'](bg), this['fadeIn'](bg), bh) {
                var bi = this['_clip']['duration'],
                    bF = bf['_clip']['duration'],
                    bG = bF / bi,
                    bH = bi / bF;
                bf['warp'](0x1, bG, bg), this['warp'](bH, 0x1, bg);
            }
            return this;
        },
        'crossFadeTo': function(bf, bg, bh) {
            return bf['crossFadeFrom'](this, bg, bh);
        },
        'stopFading': function() {
            var bf = this['_weightInterpolant'];
            return null !== bf && (this['_weightInterpolant'] = null, this['_mixer']['_takeBackControlInterpolant'](bf)), this;
        },
        'setEffectiveTimeScale': function(bf) {
            return this['timeScale'] = bf, this['_effectiveTimeScale'] = this['paused'] ? 0x0 : bf, this['stopWarping']();
        },
        'getEffectiveTimeScale': function() {
            return this['_effectiveTimeScale'];
        },
        'setDuration': function(bf) {
            return this['timeScale'] = this['_clip']['duration'] / bf, this['stopWarping']();
        },
        'syncWith': function(bf) {
            return this['time'] = bf['time'], this['timeScale'] = bf['timeScale'], this['stopWarping']();
        },
        'halt': function(bf) {
            return this['warp'](this['_effectiveTimeScale'], 0x0, bf);
        },
        'warp': function(bf, bg, bh) {
            var bi = this['_mixer'],
                bF = bi['time'],
                bG = this['_timeScaleInterpolant'],
                bH = this['timeScale'];
            null === bG && (bG = bi['_lendControlInterpolant'](), this['_timeScaleInterpolant'] = bG);
            var bI = bG['parameterPositions'],
                bJ = bG['sampleValues'];
            return bI[0x0] = bF, bI[0x1] = bF + bh, bJ[0x0] = bf / bH, bJ[0x1] = bg / bH, this;
        },
        'stopWarping': function() {
            var bf = this['_timeScaleInterpolant'];
            return null !== bf && (this['_timeScaleInterpolant'] = null, this['_mixer']['_takeBackControlInterpolant'](bf)), this;
        },
        'getMixer': function() {
            return this['_mixer'];
        },
        'getClip': function() {
            return this['_clip'];
        },
        'getRoot': function() {
            return this['_localRoot'] || this['_mixer']['_root'];
        },
        '_update': function(bf, bg, bh, bi) {
            if (this['enabled']) {
                var bF = this['_startTime'];
                if (null !== bF) {
                    var bG = (bf - bF) * bh;
                    if (bG < 0x0 || 0x0 === bh) return;
                    this['_startTime'] = null, bg = bh * bG;
                }
                bg *= this['_updateTimeScale'](bf);
                var bH = this['_updateTime'](bg),
                    bI = this['_updateWeight'](bf);
                if (bI > 0x0)
                    for (var bJ = this['_interpolants'], bK = this['_propertyBindings'], bL = 0x0, bM = bJ['length']; bL !== bM; ++bL) bJ[bL]['evaluate'](bH), bK[bL]['accumulate'](bi, bI);
            } else this['_updateWeight'](bf);
        },
        '_updateWeight': function(bf) {
            var bg = 0x0;
            if (this['enabled']) {
                bg = this['weight'];
                var bh = this['_weightInterpolant'];
                if (null !== bh) {
                    var bi = bh['evaluate'](bf)[0x0];
                    bg *= bi, bf > bh['parameterPositions'][0x1] && (this['stopFading'](), 0x0 === bi && (this['enabled'] = !0x1));
                }
            }
            return this['_effectiveWeight'] = bg, bg;
        },
        '_updateTimeScale': function(bf) {
            var bg = 0x0;
            if (!this['paused']) {
                bg = this['timeScale'];
                var bh = this['_timeScaleInterpolant'];
                if (null !== bh) bg *= bh['evaluate'](bf)[0x0], bf > bh['parameterPositions'][0x1] && (this['stopWarping'](), 0x0 === bg ? this['paused'] = !0x0 : this['timeScale'] = bg);
            }
            return this['_effectiveTimeScale'] = bg, bg;
        },
        '_updateTime': function(bf) {
            var bg = this['time'] + bf,
                bh = this['_clip']['duration'],
                bi = this['loop'],
                bF = this['_loopCount'],
                bG = bi === dG;
            if (0x0 === bf) return -0x1 === bF ? bg : bG && 0x1 == (0x1 & bF) ? bh - bg : bg;
            if (bi === dE) {
                -0x1 === bF && (this['_loopCount'] = 0x0, this['_setEndings'](!0x0, !0x0, !0x1));
                b3t: {
                    if (bg >= bh) bg = bh;
                    else {
                        if (!(bg < 0x0)) {
                            this['time'] = bg;
                            break b3t;
                        }
                        bg = 0x0;
                    }
                    this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1,
                    this['time'] = bg,
                    this['_mixer']['dispatchEvent']({
                        'type': 'finished',
                        'action': this,
                        'direction': bf < 0x0 ? -0x1 : 0x1
                    });
                }
            } else {
                if (-0x1 === bF && (bf >= 0x0 ? (bF = 0x0, this['_setEndings'](!0x0, 0x0 === this['repetitions'], bG)) : this['_setEndings'](0x0 === this['repetitions'], !0x0, bG)), bg >= bh || bg < 0x0) {
                    var bH = Math['floor'](bg / bh);
                    bg -= bh * bH, bF += Math['abs'](bH);
                    var bI = this['repetitions'] - bF;
                    if (bI <= 0x0) this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1, bg = bf > 0x0 ? bh : 0x0, this['time'] = bg, this['_mixer']['dispatchEvent']({
                        'type': 'finished',
                        'action': this,
                        'direction': bf > 0x0 ? 0x1 : -0x1
                    });
                    else {
                        if (0x1 === bI) {
                            var bJ = bf < 0x0;
                            this['_setEndings'](bJ, !bJ, bG);
                        } else this['_setEndings'](!0x1, !0x1, bG);
                        this['_loopCount'] = bF, this['time'] = bg, this['_mixer']['dispatchEvent']({
                            'type': 'loop',
                            'action': this,
                            'loopDelta': bH
                        });
                    }
                } else this['time'] = bg;
                if (bG && 0x1 == (0x1 & bF)) return bh - bg;
            }
            return bg;
        },
        '_setEndings': function(bf, bg, bh) {
            var bi = this['_interpolantSettings'];
            bh ? (bi['endingStart'] = dL, bi['endingEnd'] = dL) : (bi['endingStart'] = bf ? this['zeroSlopeAtStart'] ? dL : dK : dM, bi['endingEnd'] = bg ? this['zeroSlopeAtEnd'] ? dL : dK : dM);
        },
        '_scheduleFading': function(bf, bg, bh) {
            var bi = this['_mixer'],
                bF = bi['time'],
                bG = this['_weightInterpolant'];
            null === bG && (bG = bi['_lendControlInterpolant'](), this['_weightInterpolant'] = bG);
            var bH = bG['parameterPositions'],
                bI = bG['sampleValues'];
            return bH[0x0] = bF, bI[0x0] = bg, bH[0x1] = bF + bf, bI[0x1] = bh, this;
        }
    }), aWh['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
        'constructor': aWh,
        '_bindAction': function(bf, bg) {
            var bh = bf['_localRoot'] || this['_root'],
                bi = bf['_clip']['tracks'],
                bF = bi['length'],
                bG = bf['_propertyBindings'],
                bH = bf['_interpolants'],
                bI = bh['uuid'],
                bJ = this['_bindingsByRootAndName'],
                bK = bJ[bI];
            void 0x0 === bK && (bK = {}, bJ[bI] = bK);
            for (var bL = 0x0; bL !== bF; ++bL) {
                var bM = bi[bL],
                    bN = bM['name'],
                    bO = bK[bN];
                if (void 0x0 !== bO) bG[bL] = bO;
                else {
                    if (void 0x0 !== (bO = bG[bL])) {
                        null === bO['_cacheIndex'] && (++bO['referenceCount'], this['_addInactiveBinding'](bO, bI, bN));
                        continue;
                    }
                    var bP = bg && bg['_propertyBindings'][bL]['binding']['parsedPath'];
                    ++(bO = new aUa(aVY['create'](bh, bN, bP), bM['ValueTypeName'], bM['getValueSize']()))['referenceCount'], this['_addInactiveBinding'](bO, bI, bN), bG[bL] = bO;
                }
                bH[bL]['resultBuffer'] = bO['buffer'];
            }
        },
        '_activateAction': function(bf) {
            if (!this['_isActiveAction'](bf)) {
                if (null === bf['_cacheIndex']) {
                    var bg = (bf['_localRoot'] || this['_root'])['uuid'],
                        bh = bf['_clip']['uuid'],
                        bi = this['_actionsByClip'][bh];
                    this['_bindAction'](bf, bi && bi['knownActions'][0x0]), this['_addInactiveAction'](bf, bh, bg);
                }
                for (var bF = bf['_propertyBindings'], bG = 0x0, bH = bF['length']; bG !== bH; ++bG) {
                    var bI = bF[bG];
                    0x0 == bI['useCount']++ && (this['_lendBinding'](bI), bI['saveOriginalState']());
                }
                this['_lendAction'](bf);
            }
        },
        '_deactivateAction': function(bf) {
            if (this['_isActiveAction'](bf)) {
                for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
                    var bF = bg[bh];
                    0x0 == --bF['useCount'] && (bF['restoreOriginalState'](), this['_takeBackBinding'](bF));
                }
                this['_takeBackAction'](bf);
            }
        },
        '_initMemoryManager': function() {
            this['_actions'] = [], this['_nActiveActions'] = 0x0, this['_actionsByClip'] = {}, this['_bindings'] = [], this['_nActiveBindings'] = 0x0, this['_bindingsByRootAndName'] = {}, this['_controlInterpolants'] = [], this['_nActiveControlInterpolants'] = 0x0;
            var bf = this;
            this['stats'] = {
                'actions': {
                    get 'total' () {
                        return bf['_actions']['length'];
                    },
                    get 'inUse' () {
                        return bf['_nActiveActions'];
                    }
                },
                'bindings': {
                    get 'total' () {
                        return bf['_bindings']['length'];
                    },
                    get 'inUse' () {
                        return bf['_nActiveBindings'];
                    }
                },
                'controlInterpolants': {
                    get 'total' () {
                        return bf['_controlInterpolants']['length'];
                    },
                    get 'inUse' () {
                        return bf['_nActiveControlInterpolants'];
                    }
                }
            };
        },
        '_isActiveAction': function(bf) {
            var bg = bf['_cacheIndex'];
            return null !== bg && bg < this['_nActiveActions'];
        },
        '_addInactiveAction': function(bf, bg, bh) {
            var bi = this['_actions'],
                bF = this['_actionsByClip'],
                bG = bF[bg];
            if (void 0x0 === bG) bG = {
                'knownActions': [bf],
                'actionByRoot': {}
            }, bf['_byClipCacheIndex'] = 0x0, bF[bg] = bG;
            else {
                var bH = bG['knownActions'];
                bf['_byClipCacheIndex'] = bH['length'], bH['push'](bf);
            }
            bf['_cacheIndex'] = bi['length'], bi['push'](bf), bG['actionByRoot'][bh] = bf;
        },
        '_removeInactiveAction': function(bf) {
            var bg = this['_actions'],
                bh = bg[bg['length'] - 0x1],
                bi = bf['_cacheIndex'];
            bh['_cacheIndex'] = bi, bg[bi] = bh, bg['pop'](), bf['_cacheIndex'] = null;
            var bF = bf['_clip']['uuid'],
                bG = this['_actionsByClip'],
                bH = bG[bF],
                bI = bH['knownActions'],
                bJ = bI[bI['length'] - 0x1],
                bK = bf['_byClipCacheIndex'];
            bJ['_byClipCacheIndex'] = bK, bI[bK] = bJ, bI['pop'](), bf['_byClipCacheIndex'] = null, delete bH['actionByRoot'][(bf['_localRoot'] || this['_root'])['uuid']], 0x0 === bI['length'] && delete bG[bF], this['_removeInactiveBindingsForAction'](bf);
        },
        '_removeInactiveBindingsForAction': function(bf) {
            for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
                var bF = bg[bh];
                0x0 == --bF['referenceCount'] && this['_removeInactiveBinding'](bF);
            }
        },
        '_lendAction': function(bf) {
            var bg = this['_actions'],
                bh = bf['_cacheIndex'],
                bi = this['_nActiveActions']++,
                bF = bg[bi];
            bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
        },
        '_takeBackAction': function(bf) {
            var bg = this['_actions'],
                bh = bf['_cacheIndex'],
                bi = --this['_nActiveActions'],
                bF = bg[bi];
            bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
        },
        '_addInactiveBinding': function(bf, bg, bh) {
            var bi = this['_bindingsByRootAndName'],
                bF = bi[bg],
                bG = this['_bindings'];
            void 0x0 === bF && (bF = {}, bi[bg] = bF), bF[bh] = bf, bf['_cacheIndex'] = bG['length'], bG['push'](bf);
        },
        '_removeInactiveBinding': function(bf) {
            var bg = this['_bindings'],
                bh = bf['binding'],
                bi = bh['rootNode']['uuid'],
                bF = bh['path'],
                bG = this['_bindingsByRootAndName'],
                bH = bG[bi],
                bI = bg[bg['length'] - 0x1],
                bJ = bf['_cacheIndex'];
            bI['_cacheIndex'] = bJ, bg[bJ] = bI, bg['pop'](), delete bH[bF];
            b4Z: {
                for (var bK in bH) break b4Z;delete bG[bi];
            }
        },
        '_lendBinding': function(bf) {
            var bg = this['_bindings'],
                bh = bf['_cacheIndex'],
                bi = this['_nActiveBindings']++,
                bF = bg[bi];
            bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
        },
        '_takeBackBinding': function(bf) {
            var bg = this['_bindings'],
                bh = bf['_cacheIndex'],
                bi = --this['_nActiveBindings'],
                bF = bg[bi];
            bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
        },
        '_lendControlInterpolant': function() {
            var bf = this['_controlInterpolants'],
                bg = this['_nActiveControlInterpolants']++,
                bh = bf[bg];
            return void 0x0 === bh && ((bh = new axX(new Float32Array(0x2), new Float32Array(0x2), 0x1, this['_controlInterpolantsResultBuffer']))['__cacheIndex'] = bg, bf[bg] = bh), bh;
        },
        '_takeBackControlInterpolant': function(bf) {
            var bg = this['_controlInterpolants'],
                bh = bf['__cacheIndex'],
                bi = --this['_nActiveControlInterpolants'],
                bF = bg[bi];
            bf['__cacheIndex'] = bi, bg[bi] = bf, bF['__cacheIndex'] = bh, bg[bh] = bF;
        },
        '_controlInterpolantsResultBuffer': new Float32Array(0x1),
        'clipAction': function(bf, bg) {
            var bh = bg || this['_root'],
                bi = bh['uuid'],
                bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf,
                bG = null !== bF ? bF['uuid'] : bf,
                bH = this['_actionsByClip'][bG],
                bI = null;
            if (void 0x0 !== bH) {
                var bJ = bH['actionByRoot'][bi];
                if (void 0x0 !== bJ) return bJ;
                bI = bH['knownActions'][0x0], null === bF && (bF = bI['_clip']);
            }
            if (null === bF) return null;
            var bK = new aW7(this, bF, bg);
            return this['_bindAction'](bK, bI), this['_addInactiveAction'](bK, bG, bi), bK;
        },
        'existingAction': function(bf, bg) {
            var bh = bg || this['_root'],
                bi = bh['uuid'],
                bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf,
                bG = bF ? bF['uuid'] : bf,
                bH = this['_actionsByClip'][bG];
            return void 0x0 !== bH && bH['actionByRoot'][bi] || null;
        },
        'stopAllAction': function() {
            var bf = this['_actions'],
                bg = this['_nActiveActions'],
                bh = this['_bindings'],
                bi = this['_nActiveBindings'];
            this['_nActiveActions'] = 0x0, this['_nActiveBindings'] = 0x0;
            for (var bF = 0x0; bF !== bg; ++bF) bf[bF]['reset']();
            for (bF = 0x0; bF !== bi; ++bF) bh[bF]['useCount'] = 0x0;
            return this;
        },
        'update': function(bf) {
            bf *= this['timeScale'];
            for (var bg = this['_actions'], bh = this['_nActiveActions'], bi = this['time'] += bf, bF = Math['sign'](bf), bG = this['_accuIndex'] ^= 0x1, bH = 0x0; bH !== bh; ++bH) {
                bg[bH]['_update'](bi, bf, bF, bG);
            }
            var bI = this['_bindings'],
                bJ = this['_nActiveBindings'];
            for (bH = 0x0; bH !== bJ; ++bH) bI[bH]['apply'](bG);
            return this;
        },
        'getRoot': function() {
            return this['_root'];
        },
        'uncacheClip': function(bf) {
            var bg = this['_actions'],
                bh = bf['uuid'],
                bi = this['_actionsByClip'],
                bF = bi[bh];
            if (void 0x0 !== bF) {
                for (var bG = bF['knownActions'], bH = 0x0, bI = bG['length']; bH !== bI; ++bH) {
                    var bJ = bG[bH];
                    this['_deactivateAction'](bJ);
                    var bK = bJ['_cacheIndex'],
                        bL = bg[bg['length'] - 0x1];
                    bJ['_cacheIndex'] = null, bJ['_byClipCacheIndex'] = null, bL['_cacheIndex'] = bK, bg[bK] = bL, bg['pop'](), this['_removeInactiveBindingsForAction'](bJ);
                }
                delete bi[bh];
            }
        },
        'uncacheRoot': function(bf) {
            var bg = bf['uuid'],
                bh = this['_actionsByClip'];
            for (var bi in bh) {
                var bF = bh[bi]['actionByRoot'][bg];
                void 0x0 !== bF && (this['_deactivateAction'](bF), this['_removeInactiveAction'](bF));
            }
            var bG = this['_bindingsByRootAndName'][bg];
            if (void 0x0 !== bG)
                for (var bH in bG) {
                    var bI = bG[bH];
                    bI['restoreOriginalState'](), this['_removeInactiveBinding'](bI);
                }
        },
        'uncacheAction': function(bf, bg) {
            var bh = this['existingAction'](bf, bg);
            null !== bh && (this['_deactivateAction'](bh), this['_removeInactiveAction'](bh));
        }
    }), aWj['prototype']['clone'] = function() {
        return new aWj(void 0x0 === this['value']['clone'] ? this['value'] : this['value']['clone']());
    }, aWl['prototype'] = Object['assign'](Object['create'](aeb['prototype']), {
        'constructor': aWl,
        'isInstancedInterleavedBuffer': !0x0,
        'copy': function(bf) {
            return aeb['prototype']['copy']['call'](this, bf), this['meshPerAttribute'] = bf['meshPerAttribute'], this;
        }
    }), Object['assign'](aWp['prototype'], {
        'linePrecision': 0x1,
        'set': function(bf, bg) {
            this['ray']['set'](bf, bg);
        },
        'setFromCamera': function(bf, bg) {
            bg && bg['isPerspectiveCamera'] ? (this['ray']['origin']['setFromMatrixPosition'](bg['matrixWorld']), this['ray']['direction']['set'](bf['x'], bf['y'], 0.5)['unproject'](bg)['sub'](this['ray']['origin'])['normalize']()) : bg && bg['isOrthographicCamera'] ? (this['ray']['origin']['set'](bf['x'], bf['y'], (bg['near'] + bg['far']) / (bg['near'] - bg['far']))['unproject'](bg), this['ray']['direction']['set'](0x0, 0x0, -0x1)['transformDirection'](bg['matrixWorld'])) : console['error']('THREE.Raycaster:\x20Unsupported\x20camera\x20type.');
        },
        'intersectObject': function(bf, bg, bh) {
            var bi = bh || [];
            return aWx(bf, this, bi, bg), bi['sort'](aWu), bi;
        },
        'intersectObjects': function(bf, bg, bh) {
            var bi = bh || [];
            if (!0x1 === Array['isArray'](bf)) return console['warn']('THREE.Raycaster.intersectObjects:\x20objects\x20is\x20not\x20an\x20Array.'), bi;
            for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) aWx(bf[bF], this, bi, bg);
            return bi['sort'](aWu), bi;
        }
    }), Object['assign'](aWF['prototype'], {
        'set': function(bf, bg, bh) {
            return this['radius'] = bf, this['phi'] = bg, this['theta'] = bh, this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['radius'] = bf['radius'], this['phi'] = bf['phi'], this['theta'] = bf['theta'], this;
        },
        'makeSafe': function() {
            return this['phi'] = Math['max'](0.000001, Math['min'](Math['PI'] - 0.000001, this['phi'])), this;
        },
        'setFromVector3': function(bf) {
            return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
        },
        'setFromCartesianCoords': function(bf, bg, bh) {
            return this['radius'] = Math['sqrt'](bf * bf + bg * bg + bh * bh), 0x0 === this['radius'] ? (this['theta'] = 0x0, this['phi'] = 0x0) : (this['theta'] = Math['atan2'](bf, bh), this['phi'] = Math['acos'](e2['clamp'](bg / this['radius'], -0x1, 0x1))), this;
        }
    }), Object['assign'](aWJ['prototype'], {
        'set': function(bf, bg, bh) {
            return this['radius'] = bf, this['theta'] = bg, this['y'] = bh, this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['radius'] = bf['radius'], this['theta'] = bf['theta'], this['y'] = bf['y'], this;
        },
        'setFromVector3': function(bf) {
            return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
        },
        'setFromCartesianCoords': function(bf, bg, bh) {
            return this['radius'] = Math['sqrt'](bf * bf + bh * bh), this['theta'] = Math['atan2'](bf, bh), this['y'] = bg, this;
        }
    }), Object['assign'](aWN['prototype'], {
        'set': function(bf, bg) {
            return this['min']['copy'](bf), this['max']['copy'](bg), this;
        },
        'setFromPoints': function(bf) {
            this['makeEmpty']();
            for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) this['expandByPoint'](bf[bg]);
            return this;
        },
        'setFromCenterAndSize': function() {
            var bf = new eC();
            return function(bg, bh) {
                var bi = bf['copy'](bh)['multiplyScalar'](0.5);
                return this['min']['copy'](bg)['sub'](bi), this['max']['copy'](bg)['add'](bi), this;
            };
        }(),
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['min']['copy'](bf['min']), this['max']['copy'](bf['max']), this;
        },
        'makeEmpty': function() {
            return this['min']['x'] = this['min']['y'] = 0x1 / 0x0, this['max']['x'] = this['max']['y'] = -0x1 / 0x0, this;
        },
        'isEmpty': function() {
            return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'];
        },
        'getCenter': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getCenter()\x20target\x20is\x20now\x20required'), bf = new eC()), this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
        },
        'getSize': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getSize()\x20target\x20is\x20now\x20required'), bf = new eC()), this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
        },
        'expandByPoint': function(bf) {
            return this['min']['min'](bf), this['max']['max'](bf), this;
        },
        'expandByVector': function(bf) {
            return this['min']['sub'](bf), this['max']['add'](bf), this;
        },
        'expandByScalar': function(bf) {
            return this['min']['addScalar'](-bf), this['max']['addScalar'](bf), this;
        },
        'containsPoint': function(bf) {
            return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y']);
        },
        'containsBox': function(bf) {
            return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'];
        },
        'getParameter': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.getParameter()\x20target\x20is\x20now\x20required'), bg = new eC()), bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']));
        },
        'intersectsBox': function(bf) {
            return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y']);
        },
        'clampPoint': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.clampPoint()\x20target\x20is\x20now\x20required'), bg = new eC()), bg['copy'](bf)['clamp'](this['min'], this['max']);
        },
        'distanceToPoint': function() {
            var bf = new eC();
            return function(bg) {
                return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
            };
        }(),
        'intersect': function(bf) {
            return this['min']['max'](bf['min']), this['max']['min'](bf['max']), this;
        },
        'union': function(bf) {
            return this['min']['min'](bf['min']), this['max']['max'](bf['max']), this;
        },
        'translate': function(bf) {
            return this['min']['add'](bf), this['max']['add'](bf), this;
        },
        'equals': function(bf) {
            return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
        }
    }), Object['assign'](aWQ['prototype'], {
        'set': function(bf, bg) {
            return this['start']['copy'](bf), this['end']['copy'](bg), this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        },
        'copy': function(bf) {
            return this['start']['copy'](bf['start']), this['end']['copy'](bf['end']), this;
        },
        'getCenter': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.getCenter()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['addVectors'](this['start'], this['end'])['multiplyScalar'](0.5);
        },
        'delta': function(bf) {
            return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.delta()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['subVectors'](this['end'], this['start']);
        },
        'distanceSq': function() {
            return this['start']['distanceToSquared'](this['end']);
        },
        'distance': function() {
            return this['start']['distanceTo'](this['end']);
        },
        'at': function(bf, bg) {
            return void 0x0 === bg && (console['warn']('THREE.Line3:\x20.at()\x20target\x20is\x20now\x20required'), bg = new eK()), this['delta'](bg)['multiplyScalar'](bf)['add'](this['start']);
        },
        'closestPointToPointParameter': (aVN = new eK(), aVO = new eK(), function(bf, bg) {
            aVN['subVectors'](bf, this['start']), aVO['subVectors'](this['end'], this['start']);
            var bh = aVO['dot'](aVO),
                bi = aVO['dot'](aVN) / bh;
            return bg && (bi = e2['clamp'](bi, 0x0, 0x1)), bi;
        }),
        'closestPointToPoint': function(bf, bg, bh) {
            var bi = this['closestPointToPointParameter'](bf, bg);
            return void 0x0 === bh && (console['warn']('THREE.Line3:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'), bh = new eK()), this['delta'](bh)['multiplyScalar'](bi)['add'](this['start']);
        },
        'applyMatrix4': function(bf) {
            return this['start']['applyMatrix4'](bf), this['end']['applyMatrix4'](bf), this;
        },
        'equals': function(bf) {
            return bf['start']['equals'](this['start']) && bf['end']['equals'](this['end']);
        }
    }), aWT['prototype'] = Object['create'](yT['prototype']), aWT['prototype']['constructor'] = aWT, aWT['prototype']['isImmediateRenderObject'] = !0x0, aWV['prototype'] = Object['create'](aeE['prototype']), aWV['prototype']['constructor'] = aWV, aWV['prototype']['update'] = function() {
        var bf = new eK(),
            bg = new eK(),
            bh = new eO();
        return function() {
            var bi = ['a', 'b', 'c'];
            this['object']['updateMatrixWorld'](!0x0), bh['getNormalMatrix'](this['object']['matrixWorld']);
            var bF = this['object']['matrixWorld'],
                bG = this['geometry']['attributes']['position'],
                bH = this['object']['geometry'];
            if (bH && bH['isGeometry'])
                for (var bI = bH['vertices'], bJ = bH['faces'], bK = 0x0, bL = 0x0, bM = bJ['length']; bL < bM; bL++)
                    for (var bN = bJ[bL], bO = 0x0, bP = bN['vertexNormals']['length']; bO < bP; bO++) {
                        var bQ = bI[bN[bi[bO]]],
                            bR = bN['vertexNormals'][bO];
                        bf['copy'](bQ)['applyMatrix4'](bF), bg['copy'](bR)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf), bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']), bK += 0x1, bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']), bK += 0x1;
                    } else if (bH && bH['isBufferGeometry']) {
                        var bS = bH['attributes']['position'],
                            bT = bH['attributes']['normal'];
                        for (bK = 0x0, bO = 0x0, bP = bS['count']; bO < bP; bO++) bf['set'](bS['getX'](bO), bS['getY'](bO), bS['getZ'](bO))['applyMatrix4'](bF), bg['set'](bT['getX'](bO), bT['getY'](bO), bT['getZ'](bO)), bg['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf), bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']), bK += 0x1, bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']), bK += 0x1;
                    }
            bG['needsUpdate'] = !0x0;
        };
    }(), aX6['prototype'] = Object['create'](yT['prototype']), aX6['prototype']['constructor'] = aX6, aX6['prototype']['dispose'] = function() {
        this['cone']['geometry']['dispose'](), this['cone']['material']['dispose']();
    }, aX6['prototype']['update'] = function() {
        var bf = new eK();
        return function() {
            this['light']['updateMatrixWorld']();
            var bg = this['light']['distance'] ? this['light']['distance'] : 0x3e8,
                bh = bg * Math['tan'](this['light']['angle']);
            this['cone']['scale']['set'](bh, bh, bg), bf['setFromMatrixPosition'](this['light']['target']['matrixWorld']), this['cone']['lookAt'](bf), void 0x0 !== this['color'] ? this['cone']['material']['color']['set'](this['color']) : this['cone']['material']['color']['copy'](this['light']['color']);
        };
    }(), aXg['prototype'] = Object['create'](aeE['prototype']), aXg['prototype']['constructor'] = aXg, aXg['prototype']['updateMatrixWorld'] = function() {
        var bf = new eK(),
            bg = new mR(),
            bh = new mR();
        return function(bi) {
            var bF = this['bones'],
                bG = this['geometry'],
                bH = bG['getAttribute']('position');
            bh['getInverse'](this['root']['matrixWorld']);
            for (var bI = 0x0, bJ = 0x0; bI < bF['length']; bI++) {
                var bK = bF[bI];
                bK['parent'] && bK['parent']['isBone'] && (bg['multiplyMatrices'](bh, bK['matrixWorld']), bf['setFromMatrixPosition'](bg), bH['setXYZ'](bJ, bf['x'], bf['y'], bf['z']), bg['multiplyMatrices'](bh, bK['parent']['matrixWorld']), bf['setFromMatrixPosition'](bg), bH['setXYZ'](bJ + 0x1, bf['x'], bf['y'], bf['z']), bJ += 0x2);
            }
            bG['getAttribute']('position')['needsUpdate'] = !0x0, yT['prototype']['updateMatrixWorld']['call'](this, bi);
        };
    }(), aXu['prototype'] = Object['create'](KY['prototype']), aXu['prototype']['constructor'] = aXu, aXu['prototype']['dispose'] = function() {
        this['geometry']['dispose'](), this['material']['dispose']();
    }, aXu['prototype']['update'] = function() {
        void 0x0 !== this['color'] ? this['material']['color']['set'](this['color']) : this['material']['color']['copy'](this['light']['color']);
    }, aXA['prototype'] = Object['create'](aeA['prototype']), aXA['prototype']['constructor'] = aXA, aXA['prototype']['update'] = function() {
        if (this['scale']['set'](0.5 * this['light']['width'], 0.5 * this['light']['height'], 0x1), void 0x0 !== this['color']) this['material']['color']['set'](this['color']), this['children'][0x0]['material']['color']['set'](this['color']);
        else {
            this['material']['color']['copy'](this['light']['color'])['multiplyScalar'](this['light']['intensity']);
            var bf = this['material']['color'],
                bg = Math['max'](bf['r'], bf['g'], bf['b']);
            bg > 0x1 && bf['multiplyScalar'](0x1 / bg), this['children'][0x0]['material']['color']['copy'](this['material']['color']);
        }
    }, aXA['prototype']['dispose'] = function() {
        this['geometry']['dispose'](), this['material']['dispose'](), this['children'][0x0]['geometry']['dispose'](), this['children'][0x0]['material']['dispose']();
    }, aXG['prototype'] = Object['create'](yT['prototype']), aXG['prototype']['constructor'] = aXG, aXG['prototype']['dispose'] = function() {
        this['children'][0x0]['geometry']['dispose'](), this['children'][0x0]['material']['dispose']();
    }, aXG['prototype']['update'] = function() {
        var bf = new eK(),
            bg = new w7(),
            bh = new w7();
        return function() {
            var bi = this['children'][0x0];
            if (void 0x0 !== this['color']) this['material']['color']['set'](this['color']);
            else {
                var bF = bi['geometry']['getAttribute']('color');
                bg['copy'](this['light']['color']), bh['copy'](this['light']['groundColor']);
                for (var bG = 0x0, bH = bF['count']; bG < bH; bG++) {
                    var bI = bG < bH / 0x2 ? bg : bh;
                    bF['setXYZ'](bG, bI['r'], bI['g'], bI['b']);
                }
                bF['needsUpdate'] = !0x0;
            }
            bi['lookAt'](bf['setFromMatrixPosition'](this['light']['matrixWorld'])['negate']());
        };
    }(), aXN['prototype'] = Object['create'](KY['prototype']), aXN['prototype']['constructor'] = aXN, aXN['prototype']['dispose'] = function() {
        this['geometry']['dispose'](), this['material']['dispose']();
    }, aXN['prototype']['onBeforeRender'] = function() {
        this['position']['copy'](this['lightProbe']['position']), this['scale']['set'](0x1, 0x1, 0x1)['multiplyScalar'](this['size']), this['material']['uniforms']['intensity']['value'] = this['lightProbe']['intensity'];
    }, aXT['prototype'] = Object['assign'](Object['create'](aeE['prototype']), {
        'constructor': aXT,
        'copy': function(bf) {
            return aeE['prototype']['copy']['call'](this, bf), this['geometry']['copy'](bf['geometry']), this['material']['copy'](bf['material']), this;
        },
        'clone': function() {
            return new this['constructor']()['copy'](this);
        }
    }), aY9['prototype'] = Object['create'](aeE['prototype']), aY9['prototype']['constructor'] = aY9, aYr['prototype'] = Object['create'](aeA['prototype']), aYr['prototype']['constructor'] = aYr, aYr['prototype']['update'] = function() {
        var bf, bg, bh = this['audio'],
            bi = this['range'],
            bF = this['divisionsInnerAngle'],
            bG = this['divisionsOuterAngle'],
            bH = e2['degToRad'](bh['panner']['coneInnerAngle']),
            bI = e2['degToRad'](bh['panner']['coneOuterAngle']),
            bJ = bH / 0x2,
            bK = bI / 0x2,
            bL = 0x0,
            bM = 0x0,
            bN = this['geometry'],
            bO = bN['attributes']['position'];

        function bP(bh, bF, bG, bH) {
            var bI = (bF - bh) / bG;
            for (bO['setXYZ'](bL, 0x0, 0x0, 0x0), bM++, bf = bh; bf < bF; bf += bI) bg = bL + bM, bO['setXYZ'](bg, Math['sin'](bf) * bi, 0x0, Math['cos'](bf) * bi), bO['setXYZ'](bg + 0x1, Math['sin'](Math['min'](bf + bI, bF)) * bi, 0x0, Math['cos'](Math['min'](bf + bI, bF)) * bi), bO['setXYZ'](bg + 0x2, 0x0, 0x0, 0x0), bM += 0x3;
            bN['addGroup'](bL, bM, bH), bL += bM, bM = 0x0;
        }
        bN['clearGroups'](), bP(-bK, -bJ, bG, 0x0), bP(-bJ, bJ, bF, 0x1), bP(bJ, bK, bG, 0x0), bO['needsUpdate'] = !0x0, bH === bI && (this['material'][0x0]['visible'] = !0x1);
    }, aYr['prototype']['dispose'] = function() {
        this['geometry']['dispose'](), this['material'][0x0]['dispose'](), this['material'][0x1]['dispose']();
    }, aYB['prototype'] = Object['create'](aeE['prototype']), aYB['prototype']['constructor'] = aYB, aYB['prototype']['update'] = function() {
        var bf = new eK(),
            bg = new eK(),
            bh = new eO();
        return function() {
            this['object']['updateMatrixWorld'](!0x0), bh['getNormalMatrix'](this['object']['matrixWorld']);
            for (var bi = this['object']['matrixWorld'], bF = this['geometry']['attributes']['position'], bG = this['object']['geometry'], bH = bG['vertices'], bI = bG['faces'], bJ = 0x0, bK = 0x0, bL = bI['length']; bK < bL; bK++) {
                var bM = bI[bK],
                    bN = bM['normal'];
                bf['copy'](bH[bM['a']])['add'](bH[bM['b']])['add'](bH[bM['c']])['divideScalar'](0x3)['applyMatrix4'](bi), bg['copy'](bN)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf), bF['setXYZ'](bJ, bf['x'], bf['y'], bf['z']), bJ += 0x1, bF['setXYZ'](bJ, bg['x'], bg['y'], bg['z']), bJ += 0x1;
            }
            bF['needsUpdate'] = !0x0;
        };
    }(), aYM['prototype'] = Object['create'](yT['prototype']), aYM['prototype']['constructor'] = aYM, aYM['prototype']['dispose'] = function() {
        this['lightPlane']['geometry']['dispose'](), this['lightPlane']['material']['dispose'](), this['targetLine']['geometry']['dispose'](), this['targetLine']['material']['dispose']();
    }, aYM['prototype']['update'] = function() {
        var bf = new eK(),
            bg = new eK(),
            bh = new eK();
        return function() {
            bf['setFromMatrixPosition'](this['light']['matrixWorld']), bg['setFromMatrixPosition'](this['light']['target']['matrixWorld']), bh['subVectors'](bg, bf), this['lightPlane']['lookAt'](bg), void 0x0 !== this['color'] ? (this['lightPlane']['material']['color']['set'](this['color']), this['targetLine']['material']['color']['set'](this['color'])) : (this['lightPlane']['material']['color']['copy'](this['light']['color']), this['targetLine']['material']['color']['copy'](this['light']['color'])), this['targetLine']['lookAt'](bg), this['targetLine']['scale']['z'] = bh['length']();
        };
    }(), aYS['prototype'] = Object['create'](aeE['prototype']), aYS['prototype']['constructor'] = aYS, aYS['prototype']['update'] = function() {
        var bf, bg, bh = new eK(),
            bi = new a67();

        function bF(bF, bG, bH, bI) {
            bh['set'](bG, bH, bI)['unproject'](bi);
            var bJ = bg[bF];
            if (void 0x0 !== bJ)
                for (var bK = bf['getAttribute']('position'), bL = 0x0, bM = bJ['length']; bL < bM; bL++) bK['setXYZ'](bJ[bL], bh['x'], bh['y'], bh['z']);
        }
        return function() {
            bf = this['geometry'], bg = this['pointMap'];
            bi['projectionMatrixInverse']['copy'](this['camera']['projectionMatrixInverse']), bF('c', 0x0, 0x0, -0x1), bF('t', 0x0, 0x0, 0x1), bF('n1', -0x1, -0x1, -0x1), bF('n2', 0x1, -0x1, -0x1), bF('n3', -0x1, 0x1, -0x1), bF('n4', 0x1, 0x1, -0x1), bF('f1', -0x1, -0x1, 0x1), bF('f2', 0x1, -0x1, 0x1), bF('f3', -0x1, 0x1, 0x1), bF('f4', 0x1, 0x1, 0x1), bF('u1', 0.7, 1.1, -0x1), bF('u2', -0.7, 1.1, -0x1), bF('u3', 0x0, 0x2, -0x1), bF('cf1', -0x1, 0x0, 0x1), bF('cf2', 0x1, 0x0, 0x1), bF('cf3', 0x0, -0x1, 0x1), bF('cf4', 0x0, 0x1, 0x1), bF('cn1', -0x1, 0x0, -0x1), bF('cn2', 0x1, 0x0, -0x1), bF('cn3', 0x0, -0x1, -0x1), bF('cn4', 0x0, 0x1, -0x1), bf['getAttribute']('position')['needsUpdate'] = !0x0;
        };
    }(), aZb['prototype'] = Object['create'](aeE['prototype']), aZb['prototype']['constructor'] = aZb, aZb['prototype']['update'] = function() {
        var bf = new mB();
        return function(bg) {
            if (void 0x0 !== bg && console['warn']('THREE.BoxHelper:\x20.update()\x20has\x20no\x20longer\x20arguments.'), void 0x0 !== this['object'] && bf['setFromObject'](this['object']), !bf['isEmpty']()) {
                var bh = bf['min'],
                    bi = bf['max'],
                    bF = this['geometry']['attributes']['position'],
                    bG = bF['array'];
                bG[0x0] = bi['x'], bG[0x1] = bi['y'], bG[0x2] = bi['z'], bG[0x3] = bh['x'], bG[0x4] = bi['y'], bG[0x5] = bi['z'], bG[0x6] = bh['x'], bG[0x7] = bh['y'], bG[0x8] = bi['z'], bG[0x9] = bi['x'], bG[0xa] = bh['y'], bG[0xb] = bi['z'], bG[0xc] = bi['x'], bG[0xd] = bi['y'], bG[0xe] = bh['z'], bG[0xf] = bh['x'], bG[0x10] = bi['y'], bG[0x11] = bh['z'], bG[0x12] = bh['x'], bG[0x13] = bh['y'], bG[0x14] = bh['z'], bG[0x15] = bi['x'], bG[0x16] = bh['y'], bG[0x17] = bh['z'], bF['needsUpdate'] = !0x0, this['geometry']['computeBoundingSphere']();
            }
        };
    }(), aZb['prototype']['setFromObject'] = function(bf) {
        return this['object'] = bf, this['update'](), this;
    }, aZb['prototype']['copy'] = function(bf) {
        return aeE['prototype']['copy']['call'](this, bf), this['object'] = bf['object'], this;
    }, aZb['prototype']['clone'] = function() {
        return new this['constructor']()['copy'](this);
    }, aZh['prototype'] = Object['create'](aeE['prototype']), aZh['prototype']['constructor'] = aZh, aZh['prototype']['updateMatrixWorld'] = function(bf) {
        var bg = this['box'];
        bg['isEmpty']() || (bg['getCenter'](this['position']), bg['getSize'](this['scale']), this['scale']['multiplyScalar'](0.5), yT['prototype']['updateMatrixWorld']['call'](this, bf));
    }, aZn['prototype'] = Object['create'](aeA['prototype']), aZn['prototype']['constructor'] = aZn, aZn['prototype']['updateMatrixWorld'] = function(bf) {
        var bg = -this['plane']['constant'];
        Math['abs'](bg) < 1e-8 && (bg = 1e-8), this['scale']['set'](0.5 * this['size'], 0.5 * this['size'], bg), this['children'][0x0]['material']['side'] = bg < 0x0 ? bU : bT, this['lookAt'](this['plane']['normal']), yT['prototype']['updateMatrixWorld']['call'](this, bf);
    }, aZu['prototype'] = Object['create'](yT['prototype']), aZu['prototype']['constructor'] = aZu, aZu['prototype']['setDirection'] = (aVS = new eK(), function(bf) {
        bf['y'] > 0.99999 ? this['quaternion']['set'](0x0, 0x0, 0x0, 0x1) : bf['y'] < -0.99999 ? this['quaternion']['set'](0x1, 0x0, 0x0, 0x0) : (aVS['set'](bf['z'], 0x0, -bf['x'])['normalize'](), aVR = Math['acos'](bf['y']), this['quaternion']['setFromAxisAngle'](aVS, aVR));
    }), aZu['prototype']['setLength'] = function(bf, bg, bh) {
        void 0x0 === bg && (bg = 0.2 * bf), void 0x0 === bh && (bh = 0.2 * bg), this['line']['scale']['set'](0x1, Math['max'](0x0, bf - bg), 0x1), this['line']['updateMatrix'](), this['cone']['scale']['set'](bh, bg, bh), this['cone']['position']['y'] = bf, this['cone']['updateMatrix']();
    }, aZu['prototype']['setColor'] = function(bf) {
        this['line']['material']['color']['copy'](bf), this['cone']['material']['color']['copy'](bf);
    }, aZu['prototype']['copy'] = function(bf) {
        return yT['prototype']['copy']['call'](this, bf, !0x1), this['line']['copy'](bf['line']), this['cone']['copy'](bf['cone']), this;
    }, aZu['prototype']['clone'] = function() {
        return new this['constructor']()['copy'](this);
    }, aZB['prototype'] = Object['create'](aeE['prototype']), aZB['prototype']['constructor'] = aZB;
    var b9a = 0x0,
        b9b = 0x1;

    function b9c(bf) {
        return console['warn']('THREE.MeshFaceMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'), bf;
    }

    function b9e(bf) {
        return void 0x0 === bf && (bf = []), console['warn']('THREE.MultiMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'), bf['isMultiMaterial'] = !0x0, bf['materials'] = bf, bf['clone'] = function() {
            return bf['slice']();
        }, bf;
    }

    function b9g(bf, bg) {
        return console['warn']('THREE.PointCloud\x20has\x20been\x20renamed\x20to\x20THREE.Points.'), new aeM(bf, bg);
    }

    function b9j(bf) {
        return console['warn']('THREE.Particle\x20has\x20been\x20renamed\x20to\x20THREE.Sprite.'), new ael(bf);
    }

    function b9l(bf, bg) {
        return console['warn']('THREE.ParticleSystem\x20has\x20been\x20renamed\x20to\x20THREE.Points.'), new aeM(bf, bg);
    }

    function b9o(bf) {
        return console['warn']('THREE.PointCloudMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'), new aeK(bf);
    }

    function b9q(bf) {
        return console['warn']('THREE.ParticleBasicMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'), new aeK(bf);
    }

    function b9s(bf) {
        return console['warn']('THREE.ParticleSystemMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'), new aeK(bf);
    }

    function b9u(bf, bg, bh) {
        return console['warn']('THREE.Vertex\x20has\x20been\x20removed.\x20Use\x20THREE.Vector3\x20instead.'), new eK(bf, bg, bh);
    }

    function b9y(bf, bg) {
        return console['warn']('THREE.DynamicBufferAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.BufferAttribute().setDynamic(\x20true\x20)\x20instead.'), new AI(bf, bg)['setDynamic'](!0x0);
    }

    function b9B(bf, bg) {
        return console['warn']('THREE.Int8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int8BufferAttribute()\x20instead.'), new AM(bf, bg);
    }

    function b9E(bf, bg) {
        return console['warn']('THREE.Uint8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8BufferAttribute()\x20instead.'), new AQ(bf, bg);
    }

    function b9H(bf, bg) {
        return console['warn']('THREE.Uint8ClampedAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8ClampedBufferAttribute()\x20instead.'), new AU(bf, bg);
    }

    function b9K(bf, bg) {
        return console['warn']('THREE.Int16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int16BufferAttribute()\x20instead.'), new AY(bf, bg);
    }

    function b9N(bf, bg) {
        return console['warn']('THREE.Uint16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint16BufferAttribute()\x20instead.'), new B2(bf, bg);
    }

    function b9Q(bf, bg) {
        return console['warn']('THREE.Int32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int32BufferAttribute()\x20instead.'), new B6(bf, bg);
    }

    function b9T(bf, bg) {
        return console['warn']('THREE.Uint32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint32BufferAttribute()\x20instead.'), new Ba(bf, bg);
    }

    function b9W(bf, bg) {
        return console['warn']('THREE.Float32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float32BufferAttribute()\x20instead.'), new Be(bf, bg);
    }

    function b9Z(bf, bg) {
        return console['warn']('THREE.Float64Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float64BufferAttribute()\x20instead.'), new Bi(bf, bg);
    }

    function ba2(bf) {
        console['warn']('THREE.ClosedSplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'), aGw['call'](this, bf), this['type'] = 'catmullrom', this['closed'] = !0x0;
    }

    function ba4(bf) {
        console['warn']('THREE.SplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'), aGw['call'](this, bf), this['type'] = 'catmullrom';
    }

    function ba6(bf) {
        console['warn']('THREE.Spline\x20has\x20been\x20removed.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'), aGw['call'](this, bf), this['type'] = 'catmullrom';
    }

    function ba8(bf) {
        return console['warn']('THREE.AxisHelper\x20has\x20been\x20renamed\x20to\x20THREE.AxesHelper.'), new aZB(bf);
    }

    function baa(bf, bg) {
        return console['warn']('THREE.BoundingBoxHelper\x20has\x20been\x20deprecated.\x20Creating\x20a\x20THREE.BoxHelper\x20instead.'), new aZb(bf, bg);
    }

    function bad(bf, bg) {
        return console['warn']('THREE.EdgesHelper\x20has\x20been\x20removed.\x20Use\x20THREE.EdgesGeometry\x20instead.'), new aeE(new auW(bf['geometry']), new aey({
            'color': void 0x0 !== bg ? bg : 0xffffff
        }));
    }

    function bag(bf, bg) {
        return console['warn']('THREE.WireframeHelper\x20has\x20been\x20removed.\x20Use\x20THREE.WireframeGeometry\x20instead.'), new aeE(new afx(bf['geometry']), new aey({
            'color': void 0x0 !== bg ? bg : 0xffffff
        }));
    }

    function baj(bf) {
        return console['warn']('THREE.XHRLoader\x20has\x20been\x20renamed\x20to\x20THREE.FileLoader.'), new aCv(bf);
    }

    function bal(bf) {
        return console['warn']('THREE.BinaryTextureLoader\x20has\x20been\x20renamed\x20to\x20THREE.DataTextureLoader.'), new aCB(bf);
    }
    aCJ['create'] = function(bf, bg) {
        return console['log']('THREE.Curve.create()\x20has\x20been\x20deprecated'), bf['prototype'] = Object['create'](aCJ['prototype']), bf['prototype']['constructor'] = bf, bf['prototype']['getPoint'] = bg, bf;
    }, Object['assign'](aJk['prototype'], {
        'createPointsGeometry': function(bf) {
            console['warn']('THREE.CurvePath:\x20.createPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
            var bg = this['getPoints'](bf);
            return this['createGeometry'](bg);
        },
        'createSpacedPointsGeometry': function(bf) {
            console['warn']('THREE.CurvePath:\x20.createSpacedPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
            var bg = this['getSpacedPoints'](bf);
            return this['createGeometry'](bg);
        },
        'createGeometry': function(bf) {
            console['warn']('THREE.CurvePath:\x20.createGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
            for (var bg = new AH(), bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                var bF = bf[bh];
                bg['vertices']['push'](new eK(bF['x'], bF['y'], bF['z'] || 0x0));
            }
            return bg;
        }
    }), Object['assign'](aJl['prototype'], {
        'fromPoints': function(bf) {
            console['warn']('THREE.Path:\x20.fromPoints()\x20has\x20been\x20renamed\x20to\x20.setFromPoints().'), this['setFromPoints'](bf);
        }
    }), ba2['prototype'] = Object['create'](aGw['prototype']), ba4['prototype'] = Object['create'](aGw['prototype']), ba6['prototype'] = Object['create'](aGw['prototype']), Object['assign'](ba6['prototype'], {
        'initFromArray': function() {
            console['error']('THREE.Spline:\x20.initFromArray()\x20has\x20been\x20removed.');
        },
        'getControlPointsArray': function() {
            console['error']('THREE.Spline:\x20.getControlPointsArray()\x20has\x20been\x20removed.');
        },
        'reparametrizeByArcLength': function() {
            console['error']('THREE.Spline:\x20.reparametrizeByArcLength()\x20has\x20been\x20removed.');
        }
    }), aXT['prototype']['setColors'] = function() {
        console['error']('THREE.GridHelper:\x20setColors()\x20has\x20been\x20deprecated,\x20pass\x20them\x20in\x20the\x20constructor\x20instead.');
    }, aXg['prototype']['update'] = function() {
        console['error']('THREE.SkeletonHelper:\x20update()\x20no\x20longer\x20needs\x20to\x20be\x20called.');
    }, Object['assign'](aPW['prototype'], {
        'extractUrlBase': function(bf) {
            return console['warn']('THREE.Loader:\x20.extractUrlBase()\x20has\x20been\x20deprecated.\x20Use\x20THREE.LoaderUtils.extractUrlBase()\x20instead.'), aMX['extractUrlBase'](bf);
        }
    }), Object['assign'](aNJ['prototype'], {
        'setTexturePath': function(bf) {
            return console['warn']('THREE.ObjectLoader:\x20.setTexturePath()\x20has\x20been\x20renamed\x20to\x20.setResourcePath().'), this['setResourcePath'](bf);
        }
    }), Object['assign'](aWN['prototype'], {
        'center': function(bf) {
            return console['warn']('THREE.Box2:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'), this['getCenter'](bf);
        },
        'empty': function() {
            return console['warn']('THREE.Box2:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'), this['isEmpty']();
        },
        'isIntersectionBox': function(bf) {
            return console['warn']('THREE.Box2:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'), this['intersectsBox'](bf);
        },
        'size': function(bf) {
            return console['warn']('THREE.Box2:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'), this['getSize'](bf);
        }
    }), Object['assign'](mB['prototype'], {
        'center': function(bf) {
            return console['warn']('THREE.Box3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'), this['getCenter'](bf);
        },
        'empty': function() {
            return console['warn']('THREE.Box3:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'), this['isEmpty']();
        },
        'isIntersectionBox': function(bf) {
            return console['warn']('THREE.Box3:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'), this['intersectsBox'](bf);
        },
        'isIntersectionSphere': function(bf) {
            return console['warn']('THREE.Box3:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'), this['intersectsSphere'](bf);
        },
        'size': function(bf) {
            return console['warn']('THREE.Box3:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'), this['getSize'](bf);
        }
    }), aWQ['prototype']['center'] = function(bf) {
        return console['warn']('THREE.Line3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'), this['getCenter'](bf);
    }, Object['assign'](e2, {
        'random16': function() {
            return console['warn']('THREE.Math:\x20.random16()\x20has\x20been\x20deprecated.\x20Use\x20Math.random()\x20instead.'), Math['random']();
        },
        'nearestPowerOfTwo': function(bf) {
            return console['warn']('THREE.Math:\x20.nearestPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.floorPowerOfTwo().'), e2['floorPowerOfTwo'](bf);
        },
        'nextPowerOfTwo': function(bf) {
            return console['warn']('THREE.Math:\x20.nextPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.ceilPowerOfTwo().'), e2['ceilPowerOfTwo'](bf);
        }
    }), Object['assign'](eO['prototype'], {
        'flattenToArrayOffset': function(bf, bg) {
            return console['warn']('THREE.Matrix3:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'), this['toArray'](bf, bg);
        },
        'multiplyVector3': function(bf) {
            return console['warn']('THREE.Matrix3:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix3(\x20matrix\x20)\x20instead.'), bf['applyMatrix3'](this);
        },
        'multiplyVector3Array': function() {
            console['error']('THREE.Matrix3:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
        },
        'applyToBuffer': function(bf) {
            return console['warn']('THREE.Matrix3:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'), this['applyToBufferAttribute'](bf);
        },
        'applyToVector3Array': function() {
            console['error']('THREE.Matrix3:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
        }
    }), Object['assign'](mR['prototype'], {
        'extractPosition': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.extractPosition()\x20has\x20been\x20renamed\x20to\x20.copyPosition().'), this['copyPosition'](bf);
        },
        'flattenToArrayOffset': function(bf, bg) {
            return console['warn']('THREE.Matrix4:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'), this['toArray'](bf, bg);
        },
        'getPosition': function() {
            var bf;
            return function() {
                return void 0x0 === bf && (bf = new eK()), console['warn']('THREE.Matrix4:\x20.getPosition()\x20has\x20been\x20removed.\x20Use\x20Vector3.setFromMatrixPosition(\x20matrix\x20)\x20instead.'), bf['setFromMatrixColumn'](this, 0x3);
            };
        }(),
        'setRotationFromQuaternion': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.setRotationFromQuaternion()\x20has\x20been\x20renamed\x20to\x20.makeRotationFromQuaternion().'), this['makeRotationFromQuaternion'](bf);
        },
        'multiplyToArray': function() {
            console['warn']('THREE.Matrix4:\x20.multiplyToArray()\x20has\x20been\x20removed.');
        },
        'multiplyVector3': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'), bf['applyMatrix4'](this);
        },
        'multiplyVector4': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.multiplyVector4()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'), bf['applyMatrix4'](this);
        },
        'multiplyVector3Array': function() {
            console['error']('THREE.Matrix4:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
        },
        'rotateAxis': function(bf) {
            console['warn']('THREE.Matrix4:\x20.rotateAxis()\x20has\x20been\x20removed.\x20Use\x20Vector3.transformDirection(\x20matrix\x20)\x20instead.'), bf['transformDirection'](this);
        },
        'crossVector': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.crossVector()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'), bf['applyMatrix4'](this);
        },
        'translate': function() {
            console['error']('THREE.Matrix4:\x20.translate()\x20has\x20been\x20removed.');
        },
        'rotateX': function() {
            console['error']('THREE.Matrix4:\x20.rotateX()\x20has\x20been\x20removed.');
        },
        'rotateY': function() {
            console['error']('THREE.Matrix4:\x20.rotateY()\x20has\x20been\x20removed.');
        },
        'rotateZ': function() {
            console['error']('THREE.Matrix4:\x20.rotateZ()\x20has\x20been\x20removed.');
        },
        'rotateByAxis': function() {
            console['error']('THREE.Matrix4:\x20.rotateByAxis()\x20has\x20been\x20removed.');
        },
        'applyToBuffer': function(bf) {
            return console['warn']('THREE.Matrix4:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'), this['applyToBufferAttribute'](bf);
        },
        'applyToVector3Array': function() {
            console['error']('THREE.Matrix4:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
        },
        'makeFrustum': function(bf, bg, bh, bi, bF, bG) {
            return console['warn']('THREE.Matrix4:\x20.makeFrustum()\x20has\x20been\x20removed.\x20Use\x20.makePerspective(\x20left,\x20right,\x20top,\x20bottom,\x20near,\x20far\x20)\x20instead.'), this['makePerspective'](bf, bg, bi, bh, bF, bG);
        }
    }), mH['prototype']['isIntersectionLine'] = function(bf) {
        return console['warn']('THREE.Plane:\x20.isIntersectionLine()\x20has\x20been\x20renamed\x20to\x20.intersectsLine().'), this['intersectsLine'](bf);
    }, eF['prototype']['multiplyVector3'] = function(bf) {
        return console['warn']('THREE.Quaternion:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20is\x20now\x20vector.applyQuaternion(\x20quaternion\x20)\x20instead.'), bf['applyQuaternion'](this);
    }, Object['assign'](KP['prototype'], {
        'isIntersectionBox': function(bf) {
            return console['warn']('THREE.Ray:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'), this['intersectsBox'](bf);
        },
        'isIntersectionPlane': function(bf) {
            return console['warn']('THREE.Ray:\x20.isIntersectionPlane()\x20has\x20been\x20renamed\x20to\x20.intersectsPlane().'), this['intersectsPlane'](bf);
        },
        'isIntersectionSphere': function(bf) {
            return console['warn']('THREE.Ray:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'), this['intersectsSphere'](bf);
        }
    }), Object['assign'](KS['prototype'], {
        'area': function() {
            return console['warn']('THREE.Triangle:\x20.area()\x20has\x20been\x20renamed\x20to\x20.getArea().'), this['getArea']();
        },
        'barycoordFromPoint': function(bf, bg) {
            return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'), this['getBarycoord'](bf, bg);
        },
        'midpoint': function(bf) {
            return console['warn']('THREE.Triangle:\x20.midpoint()\x20has\x20been\x20renamed\x20to\x20.getMidpoint().'), this['getMidpoint'](bf);
        },
        'normal': function(bf) {
            return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'), this['getNormal'](bf);
        },
        'plane': function(bf) {
            return console['warn']('THREE.Triangle:\x20.plane()\x20has\x20been\x20renamed\x20to\x20.getPlane().'), this['getPlane'](bf);
        }
    }), Object['assign'](KS, {
        'barycoordFromPoint': function(bf, bg, bh, bi, bF) {
            return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'), KS['getBarycoord'](bf, bg, bh, bi, bF);
        },
        'normal': function(bf, bg, bh, bi) {
            return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'), KS['getNormal'](bf, bg, bh, bi);
        }
    }), Object['assign'](aJn['prototype'], {
        'extractAllPoints': function(bf) {
            return console['warn']('THREE.Shape:\x20.extractAllPoints()\x20has\x20been\x20removed.\x20Use\x20.extractPoints()\x20instead.'), this['extractPoints'](bf);
        },
        'extrude': function(bf) {
            return console['warn']('THREE.Shape:\x20.extrude()\x20has\x20been\x20removed.\x20Use\x20ExtrudeGeometry()\x20instead.'), new aqg(this, bf);
        },
        'makeGeometry': function(bf) {
            return console['warn']('THREE.Shape:\x20.makeGeometry()\x20has\x20been\x20removed.\x20Use\x20ShapeGeometry()\x20instead.'), new auo(this, bf);
        }
    }), Object['assign'](eC['prototype'], {
        'fromAttribute': function(bf, bg, bh) {
            return console['warn']('THREE.Vector2:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'), this['fromBufferAttribute'](bf, bg, bh);
        },
        'distanceToManhattan': function(bf) {
            return console['warn']('THREE.Vector2:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'), this['manhattanDistanceTo'](bf);
        },
        'lengthManhattan': function() {
            return console['warn']('THREE.Vector2:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'), this['manhattanLength']();
        }
    }), Object['assign'](eK['prototype'], {
        'setEulerFromRotationMatrix': function() {
            console['error']('THREE.Vector3:\x20.setEulerFromRotationMatrix()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromRotationMatrix()\x20instead.');
        },
        'setEulerFromQuaternion': function() {
            console['error']('THREE.Vector3:\x20.setEulerFromQuaternion()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromQuaternion()\x20instead.');
        },
        'getPositionFromMatrix': function(bf) {
            return console['warn']('THREE.Vector3:\x20.getPositionFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixPosition().'), this['setFromMatrixPosition'](bf);
        },
        'getScaleFromMatrix': function(bf) {
            return console['warn']('THREE.Vector3:\x20.getScaleFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixScale().'), this['setFromMatrixScale'](bf);
        },
        'getColumnFromMatrix': function(bf, bg) {
            return console['warn']('THREE.Vector3:\x20.getColumnFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixColumn().'), this['setFromMatrixColumn'](bg, bf);
        },
        'applyProjection': function(bf) {
            return console['warn']('THREE.Vector3:\x20.applyProjection()\x20has\x20been\x20removed.\x20Use\x20.applyMatrix4(\x20m\x20)\x20instead.'), this['applyMatrix4'](bf);
        },
        'fromAttribute': function(bf, bg, bh) {
            return console['warn']('THREE.Vector3:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'), this['fromBufferAttribute'](bf, bg, bh);
        },
        'distanceToManhattan': function(bf) {
            return console['warn']('THREE.Vector3:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'), this['manhattanDistanceTo'](bf);
        },
        'lengthManhattan': function() {
            return console['warn']('THREE.Vector3:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'), this['manhattanLength']();
        }
    }), Object['assign'](m7['prototype'], {
        'fromAttribute': function(bf, bg, bh) {
            return console['warn']('THREE.Vector4:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'), this['fromBufferAttribute'](bf, bg, bh);
        },
        'lengthManhattan': function() {
            return console['warn']('THREE.Vector4:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'), this['manhattanLength']();
        }
    }), Object['assign'](AH['prototype'], {
        'computeTangents': function() {
            console['error']('THREE.Geometry:\x20.computeTangents()\x20has\x20been\x20removed.');
        },
        'computeLineDistances': function() {
            console['error']('THREE.Geometry:\x20.computeLineDistances()\x20has\x20been\x20removed.\x20Use\x20THREE.Line.computeLineDistances()\x20instead.');
        }
    }), Object['assign'](yT['prototype'], {
        'getChildByName': function(bf) {
            return console['warn']('THREE.Object3D:\x20.getChildByName()\x20has\x20been\x20renamed\x20to\x20.getObjectByName().'), this['getObjectByName'](bf);
        },
        'renderDepth': function() {
            console['warn']('THREE.Object3D:\x20.renderDepth\x20has\x20been\x20removed.\x20Use\x20.renderOrder,\x20instead.');
        },
        'translate': function(bf, bg) {
            return console['warn']('THREE.Object3D:\x20.translate()\x20has\x20been\x20removed.\x20Use\x20.translateOnAxis(\x20axis,\x20distance\x20)\x20instead.'), this['translateOnAxis'](bg, bf);
        },
        'getWorldRotation': function() {
            console['error']('THREE.Object3D:\x20.getWorldRotation()\x20has\x20been\x20removed.\x20Use\x20THREE.Object3D.getWorldQuaternion(\x20target\x20)\x20instead.');
        }
    }), Object['defineProperties'](yT['prototype'], {
        'eulerOrder': {
            'get': function() {
                return console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'), this['rotation']['order'];
            },
            'set': function(bf) {
                console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'), this['rotation']['order'] = bf;
            }
        },
        'useQuaternion': {
            'get': function() {
                console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
            },
            'set': function() {
                console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
            }
        }
    }), Object['defineProperties'](aeo['prototype'], {
        'objects': {
            'get': function() {
                return console['warn']('THREE.LOD:\x20.objects\x20has\x20been\x20renamed\x20to\x20.levels.'), this['levels'];
            }
        }
    }), Object['defineProperty'](aes['prototype'], 'useVertexTexture', {
        'get': function() {
            console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
        },
        'set': function() {
            console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
        }
    }), aep['prototype']['initBones'] = function() {
        console['error']('THREE.SkinnedMesh:\x20initBones()\x20has\x20been\x20removed.');
    }, Object['defineProperty'](aCJ['prototype'], '__arcLengthDivisions', {
        'get': function() {
            return console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'), this['arcLengthDivisions'];
        },
        'set': function(bf) {
            console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'), this['arcLengthDivisions'] = bf;
        }
    }), a68['prototype']['setLens'] = function(bf, bg) {
        console['warn']('THREE.PerspectiveCamera.setLens\x20is\x20deprecated.\x20Use\x20.setFocalLength\x20and\x20.filmGauge\x20for\x20a\x20photographic\x20setup.'), void 0x0 !== bg && (this['filmGauge'] = bg), this['setFocalLength'](bf);
    }, Object['defineProperties'](aJp['prototype'], {
        'onlyShadow': {
            'set': function() {
                console['warn']('THREE.Light:\x20.onlyShadow\x20has\x20been\x20removed.');
            }
        },
        'shadowCameraFov': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraFov\x20is\x20now\x20.shadow.camera.fov.'), this['shadow']['camera']['fov'] = bf;
            }
        },
        'shadowCameraLeft': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraLeft\x20is\x20now\x20.shadow.camera.left.'), this['shadow']['camera']['left'] = bf;
            }
        },
        'shadowCameraRight': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraRight\x20is\x20now\x20.shadow.camera.right.'), this['shadow']['camera']['right'] = bf;
            }
        },
        'shadowCameraTop': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraTop\x20is\x20now\x20.shadow.camera.top.'), this['shadow']['camera']['top'] = bf;
            }
        },
        'shadowCameraBottom': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraBottom\x20is\x20now\x20.shadow.camera.bottom.'), this['shadow']['camera']['bottom'] = bf;
            }
        },
        'shadowCameraNear': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraNear\x20is\x20now\x20.shadow.camera.near.'), this['shadow']['camera']['near'] = bf;
            }
        },
        'shadowCameraFar': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowCameraFar\x20is\x20now\x20.shadow.camera.far.'), this['shadow']['camera']['far'] = bf;
            }
        },
        'shadowCameraVisible': {
            'set': function() {
                console['warn']('THREE.Light:\x20.shadowCameraVisible\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.CameraHelper(\x20light.shadow.camera\x20)\x20instead.');
            }
        },
        'shadowBias': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowBias\x20is\x20now\x20.shadow.bias.'), this['shadow']['bias'] = bf;
            }
        },
        'shadowDarkness': {
            'set': function() {
                console['warn']('THREE.Light:\x20.shadowDarkness\x20has\x20been\x20removed.');
            }
        },
        'shadowMapWidth': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowMapWidth\x20is\x20now\x20.shadow.mapSize.width.'), this['shadow']['mapSize']['width'] = bf;
            }
        },
        'shadowMapHeight': {
            'set': function(bf) {
                console['warn']('THREE.Light:\x20.shadowMapHeight\x20is\x20now\x20.shadow.mapSize.height.'), this['shadow']['mapSize']['height'] = bf;
            }
        }
    }), Object['defineProperties'](AI['prototype'], {
        'length': {
            'get': function() {
                return console['warn']('THREE.BufferAttribute:\x20.length\x20has\x20been\x20deprecated.\x20Use\x20.count\x20instead.'), this['array']['length'];
            }
        },
        'copyIndicesArray': function() {
            console['error']('THREE.BufferAttribute:\x20.copyIndicesArray()\x20has\x20been\x20removed.');
        }
    }), Object['assign'](Gf['prototype'], {
        'addIndex': function(bf) {
            console['warn']('THREE.BufferGeometry:\x20.addIndex()\x20has\x20been\x20renamed\x20to\x20.setIndex().'), this['setIndex'](bf);
        },
        'addDrawCall': function(bf, bg, bh) {
            void 0x0 !== bh && console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20no\x20longer\x20supports\x20indexOffset.'), console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20is\x20now\x20.addGroup().'), this['addGroup'](bf, bg);
        },
        'clearDrawCalls': function() {
            console['warn']('THREE.BufferGeometry:\x20.clearDrawCalls()\x20is\x20now\x20.clearGroups().'), this['clearGroups']();
        },
        'computeTangents': function() {
            console['warn']('THREE.BufferGeometry:\x20.computeTangents()\x20has\x20been\x20removed.');
        },
        'computeOffsets': function() {
            console['warn']('THREE.BufferGeometry:\x20.computeOffsets()\x20has\x20been\x20removed.');
        }
    }), Object['defineProperties'](Gf['prototype'], {
        'drawcalls': {
            'get': function() {
                return console['error']('THREE.BufferGeometry:\x20.drawcalls\x20has\x20been\x20renamed\x20to\x20.groups.'), this['groups'];
            }
        },
        'offsets': {
            'get': function() {
                return console['warn']('THREE.BufferGeometry:\x20.offsets\x20has\x20been\x20renamed\x20to\x20.groups.'), this['groups'];
            }
        }
    }), Object['assign'](aqj['prototype'], {
        'getArrays': function() {
            console['error']('THREE.ExtrudeBufferGeometry:\x20.getArrays()\x20has\x20been\x20removed.');
        },
        'addShapeList': function() {
            console['error']('THREE.ExtrudeBufferGeometry:\x20.addShapeList()\x20has\x20been\x20removed.');
        },
        'addShape': function() {
            console['error']('THREE.ExtrudeBufferGeometry:\x20.addShape()\x20has\x20been\x20removed.');
        }
    }), Object['defineProperties'](aWj['prototype'], {
        'dynamic': {
            'set': function() {
                console['warn']('THREE.Uniform:\x20.dynamic\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.');
            }
        },
        'onUpdate': {
            'value': function() {
                return console['warn']('THREE.Uniform:\x20.onUpdate()\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.'), this;
            }
        }
    }), Object['defineProperties'](Kf['prototype'], {
        'wrapAround': {
            'get': function() {
                console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
            },
            'set': function() {
                console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
            }
        },
        'overdraw': {
            'get': function() {
                console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
            },
            'set': function() {
                console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
            }
        },
        'wrapRGB': {
            'get': function() {
                return console['warn']('THREE.Material:\x20.wrapRGB\x20has\x20been\x20removed.'), new w7();
            }
        },
        'shading': {
            'get': function() {
                console['error']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.');
            },
            'set': function(bf) {
                console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'), this['flatShading'] = bf === bW;
            }
        }
    }), Object['defineProperties'](awX['prototype'], {
        'metal': {
            'get': function() {
                return console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead.'), !0x1;
            },
            'set': function() {
                console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead');
            }
        }
    }), Object['defineProperties'](KN['prototype'], {
        'derivatives': {
            'get': function() {
                return console['warn']('THREE.ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'), this['extensions']['derivatives'];
            },
            'set': function(bf) {
                console['warn']('THREE.\x20ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'), this['extensions']['derivatives'] = bf;
            }
        }
    }), Object['assign'](a8U['prototype'], {
        'clearTarget': function(bf, bg, bh, bi) {
            console['warn']('THREE.WebGLRenderer:\x20.clearTarget()\x20has\x20been\x20deprecated.\x20Use\x20.setRenderTarget()\x20and\x20.clear()\x20instead.'), this['setRenderTarget'](bf), this['clear'](bg, bh, bi);
        },
        'animate': function(bf) {
            console['warn']('THREE.WebGLRenderer:\x20.animate()\x20is\x20now\x20.setAnimationLoop().'), this['setAnimationLoop'](bf);
        },
        'getCurrentRenderTarget': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.getCurrentRenderTarget()\x20is\x20now\x20.getRenderTarget().'), this['getRenderTarget']();
        },
        'getMaxAnisotropy': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.getMaxAnisotropy()\x20is\x20now\x20.capabilities.getMaxAnisotropy().'), this['capabilities']['getMaxAnisotropy']();
        },
        'getPrecision': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.getPrecision()\x20is\x20now\x20.capabilities.precision.'), this['capabilities']['precision'];
        },
        'resetGLState': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.resetGLState()\x20is\x20now\x20.state.reset().'), this['state']['reset']();
        },
        'supportsFloatTextures': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_float\x27\x20).'), this['extensions']['get']('OES_texture_float');
        },
        'supportsHalfFloatTextures': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsHalfFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_half_float\x27\x20).'), this['extensions']['get']('OES_texture_half_float');
        },
        'supportsStandardDerivatives': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsStandardDerivatives()\x20is\x20now\x20.extensions.get(\x20\x27OES_standard_derivatives\x27\x20).'), this['extensions']['get']('OES_standard_derivatives');
        },
        'supportsCompressedTextureS3TC': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTextureS3TC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_s3tc\x27\x20).'), this['extensions']['get']('WEBGL_compressed_texture_s3tc');
        },
        'supportsCompressedTexturePVRTC': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTexturePVRTC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_pvrtc\x27\x20).'), this['extensions']['get']('WEBGL_compressed_texture_pvrtc');
        },
        'supportsBlendMinMax': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsBlendMinMax()\x20is\x20now\x20.extensions.get(\x20\x27EXT_blend_minmax\x27\x20).'), this['extensions']['get']('EXT_blend_minmax');
        },
        'supportsVertexTextures': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsVertexTextures()\x20is\x20now\x20.capabilities.vertexTextures.'), this['capabilities']['vertexTextures'];
        },
        'supportsInstancedArrays': function() {
            return console['warn']('THREE.WebGLRenderer:\x20.supportsInstancedArrays()\x20is\x20now\x20.extensions.get(\x20\x27ANGLE_instanced_arrays\x27\x20).'), this['extensions']['get']('ANGLE_instanced_arrays');
        },
        'enableScissorTest': function(bf) {
            console['warn']('THREE.WebGLRenderer:\x20.enableScissorTest()\x20is\x20now\x20.setScissorTest().'), this['setScissorTest'](bf);
        },
        'initMaterial': function() {
            console['warn']('THREE.WebGLRenderer:\x20.initMaterial()\x20has\x20been\x20removed.');
        },
        'addPrePlugin': function() {
            console['warn']('THREE.WebGLRenderer:\x20.addPrePlugin()\x20has\x20been\x20removed.');
        },
        'addPostPlugin': function() {
            console['warn']('THREE.WebGLRenderer:\x20.addPostPlugin()\x20has\x20been\x20removed.');
        },
        'updateShadowMap': function() {
            console['warn']('THREE.WebGLRenderer:\x20.updateShadowMap()\x20has\x20been\x20removed.');
        },
        'setFaceCulling': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setFaceCulling()\x20has\x20been\x20removed.');
        },
        'allocTextureUnit': function() {
            console['warn']('THREE.WebGLRenderer:\x20.allocTextureUnit()\x20has\x20been\x20removed.');
        },
        'setTexture': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setTexture()\x20has\x20been\x20removed.');
        },
        'setTexture2D': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setTexture2D()\x20has\x20been\x20removed.');
        },
        'setTextureCube': function() {
            console['warn']('THREE.WebGLRenderer:\x20.setTextureCube()\x20has\x20been\x20removed.');
        }
    }), Object['defineProperties'](a8U['prototype'], {
        'shadowMapEnabled': {
            'get': function() {
                return this['shadowMap']['enabled'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapEnabled\x20is\x20now\x20.shadowMap.enabled.'), this['shadowMap']['enabled'] = bf;
            }
        },
        'shadowMapType': {
            'get': function() {
                return this['shadowMap']['type'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapType\x20is\x20now\x20.shadowMap.type.'), this['shadowMap']['type'] = bf;
            }
        },
        'shadowMapCullFace': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        }
    }), Object['defineProperties'](ZZ['prototype'], {
        'cullFace': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        },
        'renderReverseSided': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        },
        'renderSingleSided': {
            'get': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            },
            'set': function() {
                console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
            }
        }
    }), Object['defineProperties'](mk['prototype'], {
        'activeCubeFace': {
            'set': function() {
                console['warn']('THREE.WebGLRenderTargetCube:\x20.activeCubeFace\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20second\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
            }
        },
        'activeMipMapLevel': {
            'set': function() {
                console['warn']('THREE.WebGLRenderTargetCube:\x20.activeMipMapLevel\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20third\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
            }
        }
    }), Object['defineProperties'](mc['prototype'], {
        'wrapS': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'), this['texture']['wrapS'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'), this['texture']['wrapS'] = bf;
            }
        },
        'wrapT': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'), this['texture']['wrapT'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'), this['texture']['wrapT'] = bf;
            }
        },
        'magFilter': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'), this['texture']['magFilter'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'), this['texture']['magFilter'] = bf;
            }
        },
        'minFilter': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'), this['texture']['minFilter'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'), this['texture']['minFilter'] = bf;
            }
        },
        'anisotropy': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'), this['texture']['anisotropy'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'), this['texture']['anisotropy'] = bf;
            }
        },
        'offset': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'), this['texture']['offset'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'), this['texture']['offset'] = bf;
            }
        },
        'repeat': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'), this['texture']['repeat'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'), this['texture']['repeat'] = bf;
            }
        },
        'format': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'), this['texture']['format'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'), this['texture']['format'] = bf;
            }
        },
        'type': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'), this['texture']['type'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'), this['texture']['type'] = bf;
            }
        },
        'generateMipmaps': {
            'get': function() {
                return console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'), this['texture']['generateMipmaps'];
            },
            'set': function(bf) {
                console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'), this['texture']['generateMipmaps'] = bf;
            }
        }
    }), Object['defineProperties'](a7d['prototype'], {
        'standing': {
            'set': function() {
                console['warn']('THREE.WebVRManager:\x20.standing\x20has\x20been\x20removed.');
            }
        },
        'userHeight': {
            'set': function() {
                console['warn']('THREE.WebVRManager:\x20.userHeight\x20has\x20been\x20removed.');
            }
        }
    }), aU3['prototype']['load'] = function(bf) {
        console['warn']('THREE.Audio:\x20.load\x20has\x20been\x20deprecated.\x20Use\x20THREE.AudioLoader\x20instead.');
        var bg = this;
        return new aSa()['load'](bf, function(bf) {
            bg['setBuffer'](bf);
        }), this;
    }, aU7['prototype']['getData'] = function() {
        return console['warn']('THREE.AudioAnalyser:\x20.getData()\x20is\x20now\x20.getFrequencyData().'), this['getFrequencyData']();
    }, aTD['prototype']['updateCubeMap'] = function(bf, bg) {
        return console['warn']('THREE.CubeCamera:\x20.updateCubeMap()\x20is\x20now\x20.update().'), this['update'](bf, bg);
    };
    var bcr = {
        'merge': function(bf, bg, bh) {
            var bi;
            console['warn']('THREE.GeometryUtils:\x20.merge()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.merge(\x20geometry2,\x20matrix,\x20materialIndexOffset\x20)\x20instead.'), bg['isMesh'] && (bg['matrixAutoUpdate'] && bg['updateMatrix'](), bi = bg['matrix'], bg = bg['geometry']), bf['merge'](bg, bi, bh);
        },
        'center': function(bf) {
            return console['warn']('THREE.GeometryUtils:\x20.center()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.center()\x20instead.'), bf['center']();
        }
    };

    function bcx() {
        console['error']('THREE.CanvasRenderer\x20has\x20been\x20removed');
    }

    function bcy() {
        console['error']('THREE.JSONLoader\x20has\x20been\x20removed.');
    }
    lR['crossOrigin'] = void 0x0, lR['loadTexture'] = function(bf, bg, bh, bi) {
        console['warn']('THREE.ImageUtils.loadTexture\x20has\x20been\x20deprecated.\x20Use\x20THREE.TextureLoader()\x20instead.');
        var bF = new aCH();
        bF['setCrossOrigin'](this['crossOrigin']);
        var bG = bF['load'](bf, bh, void 0x0, bi);
        return bg && (bG['mapping'] = bg), bG;
    }, lR['loadTextureCube'] = function(bf, bg, bh, bi) {
        console['warn']('THREE.ImageUtils.loadTextureCube\x20has\x20been\x20deprecated.\x20Use\x20THREE.CubeTextureLoader()\x20instead.');
        var bF = new aCF();
        bF['setCrossOrigin'](this['crossOrigin']);
        var bG = bF['load'](bf, bh, void 0x0, bi);
        return bg && (bG['mapping'] = bg), bG;
    }, lR['loadCompressedTexture'] = function() {
        console['error']('THREE.ImageUtils.loadCompressedTexture\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
    }, lR['loadCompressedTextureCube'] = function() {
        console['error']('THREE.ImageUtils.loadCompressedTextureCube\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
    };
    var bcL = {
        'createMultiMaterialObject': function() {
            console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
        },
        'detach': function() {
            console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
        },
        'attach': function() {
            console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
        }
    };

    function bcM() {
        console['error']('THREE.LensFlare\x20has\x20been\x20moved\x20to\x20/examples/js/objects/Lensflare.js');
    }
}, function(bcN, bcO, bcP) {
    function bcQ(bcN) {
        switch (Object['prototype']['toString']['call'](bcN)) {
            case '[object\x20Error]':
            case '[object\x20Exception]':
            case '[object\x20DOMException]':
                return !0x0;
            default:
                return bcN instanceof Error;
        }
    }

    function bcS(bcN) {
        return '[object\x20ErrorEvent]' === Object['prototype']['toString']['call'](bcN);
    }

    function bcU(bcN) {
        return '[object\x20DOMError]' === Object['prototype']['toString']['call'](bcN);
    }

    function bcW(bcN) {
        return '[object\x20DOMException]' === Object['prototype']['toString']['call'](bcN);
    }

    function bcY(bcN) {
        return '[object\x20String]' === Object['prototype']['toString']['call'](bcN);
    }

    function bd0(bcN) {
        return null === bcN || 'object' != typeof bcN && 'function' != typeof bcN;
    }

    function bd2(bcN) {
        return '[object\x20Object]' === Object['prototype']['toString']['call'](bcN);
    }

    function bd4(bcN) {
        return '[object\x20RegExp]' === Object['prototype']['toString']['call'](bcN);
    }

    function bd6(bcN) {
        return !(!bcN || !bcN['then'] || 'function' != typeof bcN['then']);
    }

    function bd8(bcN) {
        return bd2(bcN) && 'nativeEvent' in bcN && 'preventDefault' in bcN && 'stopPropagation' in bcN;
    }
    bcP['d'](bcO, 'c', function() {
        return bcQ;
    }), bcP['d'](bcO, 'd', function() {
        return bcS;
    }), bcP['d'](bcO, 'a', function() {
        return bcU;
    }), bcP['d'](bcO, 'b', function() {
        return bcW;
    }), bcP['d'](bcO, 'h', function() {
        return bcY;
    }), bcP['d'](bcO, 'f', function() {
        return bd0;
    }), bcP['d'](bcO, 'e', function() {
        return bd2;
    }), bcP['d'](bcO, 'g', function() {
        return bd4;
    }), bcP['d'](bcO, 'j', function() {
        return bd6;
    }), bcP['d'](bcO, 'i', function() {
        return bd8;
    });
}, function(bda, bdb, bdc) {
    (function(bda) {
        bdc['d'](bdb, 'a', function() {
            return bdg;
        }), bdc['d'](bdb, 'd', function() {
            return bdn;
        }), bdc['d'](bdb, 'c', function() {
            return bdt;
        }), bdc['d'](bdb, 'b', function() {
            return bdQ;
        });
        var bde = bdc(0x5),
            bdf = bdc(0x26);

        function bdg(bda, bdb, bdc) {
            if (bdb in bda) {
                var bde = bda[bdb],
                    bdf = bdc(bde);
                if ('function' == typeof bdf) try {
                    bdf['prototype'] = bdf['prototype'] || {}, Object['defineProperties'](bdf, {
                        '__sentry__': {
                            'enumerable': !0x1,
                            'value': !0x0
                        },
                        '__sentry_original__': {
                            'enumerable': !0x1,
                            'value': bde
                        },
                        '__sentry_wrapped__': {
                            'enumerable': !0x1,
                            'value': bdf
                        }
                    });
                } catch (bdm) {}
                bda[bdb] = bdf;
            }
        }

        function bdn(bda) {
            return Object['keys'](bda)['map'](function(bdb) {
                return encodeURIComponent(bdb) + '=' + encodeURIComponent(bda[bdb]);
            })['join']('&');
        }

        function bdq(bda) {
            return function(bda) {
                return ~-encodeURI(bda)['split'](/%..|./)['length'];
            }(JSON['stringify'](bda));
        }

        function bdt(bda, bdb, bdc) {
            void 0x0 === bdb && (bdb = 0x3), void 0x0 === bdc && (bdc = 0x19000);
            var bde = bdQ(bda, bdb);
            return bdq(bde) > bdc ? bdt(bda, bdb - 0x1, bdc) : bde;
        }

        function bdy(bdb, bdc) {
            return 'domain' === bdc && 'object' == typeof bdb && bdb['_events'] ? '[Domain]' : 'domainEmitter' === bdc ? '[DomainEmitter]' : void 0x0 !== bda && bdb === bda ? '[Global]' : 'undefined' != typeof window && bdb === window ? '[Window]' : 'undefined' != typeof document && bdb === document ? '[Document]' : 'undefined' != typeof Event && bdb instanceof Event ? Object['getPrototypeOf'](bdb) ? bdb['constructor']['name'] : 'Event' : Object(bde['i'])(bdb) ? '[SyntheticEvent]' : Number['isNaN'](bdb) ? '[NaN]' : void 0x0 === bdb ? '[undefined]' : 'function' == typeof bdb ? '[Function:\x20' + (bdb['name'] || '<unknown-function-name>') + ']' : bdb;
        }

        function bdB(bda, bdb, bdc, bdg) {
            if (void 0x0 === bdc && (bdc = 0x1 / 0x0), void 0x0 === bdg && (bdg = new bdf['a']()), 0x0 === bdc) return function(bda) {
                var bdb = Object['prototype']['toString']['call'](bda);
                if ('string' == typeof bda) return bda;
                if ('[object\x20Object]' === bdb) return '[Object]';
                if ('[object\x20Array]' === bdb) return '[Array]';
                var bdc = bdy(bda);
                return Object(bde['f'])(bdc) ? bdc : bdb;
            }(bdb);
            if (null != bdb && 'function' == typeof bdb['toJSON']) return bdb['toJSON']();
            var bdn = bdy(bdb, bda);
            if (Object(bde['f'])(bdn)) return bdn;
            var bdq = Object(bde['c'])(bdb) ? function(bda) {
                    var bdb = {
                        'message': bda['message'],
                        'name': bda['name'],
                        'stack': bda['stack']
                    };
                    for (var bdc in bda) Object['prototype']['hasOwnProperty']['call'](bda, bdc) && (bdb[bdc] = bda[bdc]);
                    return bdb;
                }(bdb) : bdb,
                bdt = Array['isArray'](bdb) ? [] : {};
            if (bdg['memoize'](bdb)) return '[Circular\x20~]';
            for (var bdP in bdq) Object['prototype']['hasOwnProperty']['call'](bdq, bdP) && (bdt[bdP] = bdB(bdP, bdq[bdP], bdc - 0x1, bdg));
            return bdg['unmemoize'](bdb), bdt;
        }

        function bdQ(bda, bdb) {
            try {
                return JSON['parse'](JSON['stringify'](bda, function(bda, bdc) {
                    return bdB(bda, bdc, bdb);
                }));
            } catch (bdV) {
                return '**non-serializable**';
            }
        }
    }['call'](this, bdc(0x15)));
}, function(bdW, bdX, bdY) {
    (function(bdX) {
        bdW['exports']['isNode'] = void 0x0 !== bdX && void 0x0 !== bdX['release'] && -0x1 !== bdX['release']['name']['search'](/node|io.js/), bdW['exports']['isProd'] = bdW['exports']['isNode'] ? !!bdX['env']['IS_PROD'] : '127.0.0.1' !== location['hostname'] && 'localhost' !== location['hostname'] && !location['hostname']['startsWith']('192.168.'), bdW['exports']['enableHttps'] = bdW['exports']['isProd'], bdW['exports']['serverTickRate'] = 0x3e8 / 0x1e, bdW['exports']['serverSendRate'] = 0x64, bdW['exports']['clientSendRate'] = 0x3e8 / 0x1e, bdW['exports']['dltMx'] = Math['round'](0x3e8 / 0x1e), bdW['exports']['streamUpdate'] = 0x2710, bdW['exports']['maxPlayers'] = 0x8, bdW['exports']['serverSpread'] = 0x3, bdW['exports']['minServerSpace'] = 0x3, bdW['exports']['gamesPerServer'] = 0x3, bdW['exports']['serverBrowserRate'] = 0x2710, bdW['exports']['maxPlayersTotal'] = bdW['exports']['maxPlayers'] * bdW['exports']['gamesPerServer'] + 0x28, bdW['exports']['kickTimer'] = 0x15f90, bdW['exports']['isNode'] ? (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : 'http://127.0.0.1:5050', bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] || 'krunker_social' == bdX['env']['VULTR_SCHEME'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : 'http://127.0.0.1:5060') : (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : 'http://127.0.0.1:5050', bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : 'http://127.0.0.1:5060'), bdW['exports']['needsRestart'] = !0x1, bdW['exports']['useLooseClient'] = !0x1, bdW['exports']['recaptchaKey'] = '6LdvBrQUAAAAAL6gtEpVNzii_3nQkbOyx912nvlm', bdW['exports']['rewardTime'] = 0x1499700, bdW['exports']['rewardMinLvl'] = 0x5, bdW['exports']['compRegions'] = [{
            'name': 'EU',
            'icon': 'eu',
            'data': [{
                'name': 'KRUNKEUR',
                'prize': 0x578,
                'roster': ['VoKUS', 'ronics', 'AlexDoubleU', 'Nitrahh']
            }, {
                'name': 'UUED\x20GUMMID',
                'prize': 0x258,
                'roster': ['kiiturii', 'WasabiS', 'xXNONUTTERXx', 'BLNCR']
            }, {
                'name': 'Nine',
                'prize': 0x0,
                'roster': ['Chupacabra', 'The_Zionist', 'Tatsuu', 'ZR1']
            }, {
                'name': 'DOOM',
                'prize': 0x0,
                'roster': ['Viiper', 'Jbusom', 'Tahha', 'kari:D']
            }, {
                'name': 'OxicPoonTang',
                'prize': 0x0,
                'roster': ['cato818', 'Amuu123', 'Darebydare', 'Fortysevens']
            }]
        }, {
            'name': 'NA',
            'icon': 'na',
            'data': [{
                'name': 'nV',
                'prize': 0x578,
                'roster': ['RandomExport', 'Rickabonkers', 'Kouka', 'TaylorFerguson']
            }, {
                'name': 'BAKA',
                'prize': 0x258,
                'roster': ['4tapp', 'Gxngu', '魔42', 'Friendlies']
            }, {
                'name': 'Krunky\x20Boys',
                'prize': 0x0,
                'roster': ['bububoosh', 'GGkns', 'chazzychaz', 'ev0xge0']
            }, {
                'name': 'RIP\x20Theta',
                'prize': 0x0,
                'roster': ['UB_Caboose', 'Applechase', 'Predixtions', 'Visuall']
            }, {
                'name': 'Nine\x20NA',
                'prize': 0x0,
                'roster': ['Aoqii', 'Keyown', 'TristanTu', 'Byto']
            }]
        }, {
            'name': 'OCE',
            'icon': 'oce',
            'data': [{
                'name': 'Lore',
                'prize': 0x578,
                'roster': ['Mosswi', 'Agent_Chicken', 'Stazza', 'ShiraishiEZ']
            }, {
                'name': 'Omen',
                'prize': 0x258,
                'roster': ['Equinoxian', 'iiBazza', 'vEternity', 'Equaus']
            }, {
                'name': 'Tokgang',
                'prize': 0x0,
                'roster': ['caL_Tv', 'gymgoer31', 'maxmillion', 'peepoglad']
            }, {
                'name': 'Lore\x20v2',
                'prize': 0x0,
                'roster': ['ZaneAU', 'JamemesG', 'riderrr', '*Void']
            }, {
                'name': 'EXLE',
                'prize': 0x0,
                'roster': ['Tatti123', 'Kurocchi', 'F24CTAL', '-Gaze']
            }]
        }], bdW['exports']['queues'] = [{
            'id': 'r1v1',
            'name': 'windows.ranked.mode.r1v1'
        }, {
            'id': 'r2v2',
            'name': 'windows.ranked.mode.r2v2'
        }, {
            'id': 'r4v4',
            'name': 'windows.ranked.mode.r4v4'
        }], bdW['exports']['minRankedLevel'] = 0x14, bdW['exports']['endTimer'] = 0x61a8, bdW['exports']['endAnim'] = 0x1388, bdW['exports']['thirdPZ'] = 0xe, bdW['exports']['thirdPX'] = 0x5, bdW['exports']['serverConfig'] = [{
            'name': 'Players',
            'varN': 'maxPlayers',
            'def': 0x2,
            'max': 0xa,
            'maxF': 0x10,
            'min': 0x1,
            'step': 0x1
        }, {
            'name': 'Min\x20Players',
            'varN': 'minPlayers',
            'def': 0x0,
            'max': 0xa,
            'maxF': 0x10,
            'min': 0x0,
            'step': 0x1
        }, {
            'name': 'Lives',
            'varN': 'lives',
            'def': 0x0,
            'max': 0xa,
            'min': 0x0,
            'step': 0x1
        }, {
            'name': 'Minutes',
            'varN': 'gameTime',
            'def': 0x4,
            'max': 0x3c,
            'min': 0x0,
            'step': 0x1
        }, {
            'name': 'Gravity',
            'varN': 'gravMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x2,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Jump\x20Force',
            'varN': 'jumpMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x3,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Time\x20Scale',
            'varN': 'deltaMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 1.5,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Strafe\x20Speed',
            'varN': 'strafeSpd',
            'dontChange': !0x0,
            'def': 1.2,
            'max': 0x2,
            'min': 0x1,
            'step': 0.1
        }, {
            'name': 'Health\x20Multiplier',
            'varN': 'healthMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x3,
            'min': 0.1,
            'step': 0.1
        }, {
            'name': 'Weapon\x20Impulse',
            'varN': 'impulseMlt',
            'dontChange': !0x0,
            'def': 0x1,
            'max': 0x3,
            'min': 0x0,
            'step': 0.1
        }, {
            'name': 'Team\x201\x20Name',
            'varN': 'nameTeam1',
            'def': 'Team\x201',
            'hideE': !0x0,
            'input': !0x0
        }, {
            'name': 'Team\x202\x20Name',
            'varN': 'nameTeam2',
            'def': 'Team\x202',
            'hideE': !0x0,
            'input': !0x0
        }, {
            'name': 'Select\x20Team',
            'varN': 'selTeam',
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': 'Spectating',
            'varN': 'allowSpect',
            'def': !0x0,
            'bool': !0x0
        }, {
            'name': 'Kill\x20Rewards',
            'varN': 'killRewards',
            'dontChange': !0x0,
            'def': !0x0,
            'bool': !0x0
        }, {
            'name': 'Headshots\x20Only',
            'varN': 'headshotOnly',
            'dontChange': !0x0,
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': 'No\x20Secondaries',
            'varN': 'noSecondary',
            'dontChange': !0x0,
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': 'Sliding',
            'varN': 'canSlide',
            'def': !0x0,
            'bool': !0x0
        }, {
            'name': 'Auto\x20Jump',
            'varN': 'autoJump',
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': '3rd\x20Person',
            'varN': 'thirdPerson',
            'def': !0x1,
            'bool': !0x0
        }, {
            'name': 'Hide\x20Nametags',
            'varN': 'nameTags',
            'def': !0x1,
            'bool': !0x0
        }], bdW['exports']['prefabIDS'] = ['CUBE', 'CRATE', 'BARREL', 'LADDER', 'PLANE', 'SPAWN_POINT', 'CAMERA_POSITION', 'VEHICLE', 'STACK', 'RAMP', 'SCORE_ZONE', 'BILLBOARD', 'DEATH_ZONE', 'PARTICLES', 'OBJECTIVE', 'TREE', 'CONE', 'CONTAINER', 'GRASS', 'CONTAINERR', 'ACIDBARREL', 'DOOR', 'WINDOW', 'FLAG', 'POINT_GATE', 'CHECK_POINT', 'WEAPON_PICKUP', 'TELEPORTER', 'TEDDY', 'TRIGGER', 'SIGN'], bdW['exports']['textureIDS'] = ['WALL', 'DIRT', 'FLOOR', 'GRID', 'GREY', 'DEFAULT', 'ROOF', 'FLAG', 'GRASS', 'CHECK', 'LINES', 'BRICK', 'LINK'], bdW['exports']['objectLimit'] = 0xdac, bdW['exports']['objectLimitF'] = 0x1770, bdW['exports']['spawnLimit'] = 0x14, bdW['exports']['billboardCnt'] = 0x5, bdW['exports']['signLimit'] = 0xa, bdW['exports']['signTextLimit'] = 0x5dc, bdW['exports']['signFontMax'] = 0x78, bdW['exports']['signFontMin'] = 0xa, bdW['exports']['followURLS'] = ['https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/vincent.de.vries/'], bdW['exports']['gravity'] = 0.00015, bdW['exports']['deathY'] = -0x64, bdW['exports']['skyScale'] = 0x4650, bdW['exports']['shadowDst'] = 0x4b0, bdW['exports']['shadowRes'] = 0x400, bdW['exports']['shadowOff'] = 0.004, bdW['exports']['lightDistance'] = 0x1f4, bdW['exports']['cornerPad'] = 0x1, bdW['exports']['cornerScl'] = 2.5, bdW['exports']['cornerH'] = 0x7, bdW['exports']['wallH'] = 0x5, bdW['exports']['wallW'] = 0.8, bdW['exports']['propsH'] = ['crate', 'barrel', 'cone', 'stack', 'acidbarrel', 'teddy'], bdW['exports']['propsCPY'] = {
            'teddy': -0x3
        }, bdW['exports']['propsCP'] = {
            'barrel': -0x1,
            'teddy': -3.6,
            'cone': -0x2
        }, bdW['exports']['crateScale'] = 0x6, bdW['exports']['stackScale'] = 0x6, bdW['exports']['teddyScale'] = 0x6, bdW['exports']['barrelScale'] = 0x4, bdW['exports']['acidbarrelScale'] = bdW['exports']['barrelScale'], bdW['exports']['treeScale'] = 0xa, bdW['exports']['doorScale'] = 0x5, bdW['exports']['windowScale'] = 0x6, bdW['exports']['coneScale'] = 0x4, bdW['exports']['containerScale'] = 0x7, bdW['exports']['containerrScale'] = bdW['exports']['containerScale'], bdW['exports']['grassScale'] = 0x20, bdW['exports']['vehicleScale'] = 0x14, bdW['exports']['barrelMlt'] = 0x1, bdW['exports']['ladderWidth'] = 3.2, bdW['exports']['ladderScale'] = 0.5, bdW['exports']['terrainGrid'] = 0x8, bdW['exports']['maxTerrainS'] = 0xfa0, bdW['exports']['otherSoundMlt'] = 0.55, bdW['exports']['maxParticles'] = 0x64, bdW['exports']['explosionRange'] = 0xc8, bdW['exports']['chatMaxLength'] = 0x46, bdW['exports']['chatInterval'] = 0x320, bdW['exports']['voiceChatInterval'] = 0x7d0, bdW['exports']['voiceChatMaxLength'] = 0x5, bdW['exports']['movDirs'] = [];
        for (var bdY = 0x0; 0x8 > bdY; ++bdY) bdW['exports']['movDirs']['push'](-Math['PI'] + (bdY + 0x1) * Math['PI'] / 0x4);
        bdW['exports']['interpolation'] = 1.1, bdW['exports']['stateHistory'] = 0x3e8, bdW['exports']['syncFreq'] = 0x3e8, bdW['exports']['pingCount'] = 0xa, bdW['exports']['mouseSens'] = 0.0024, bdW['exports']['camChaseTrn'] = 0.0022, bdW['exports']['camChaseSpd'] = 0.0012, bdW['exports']['camChaseSen'] = 0.2, bdW['exports']['camChaseDst'] = 0x18, bdW['exports']['specMinD'] = 0xa, bdW['exports']['specMaxD'] = 0xa0, bdW['exports']['menuCamDist'] = 0xc8, bdW['exports']['menuCamAngle'] = -0.5, bdW['exports']['menuCamSpeed'] = 0.1, bdW['exports']['idleAnimS'] = 0.0015, bdW['exports']['animMult'] = 1.2, bdW['exports']['leanPull'] = 0.99, bdW['exports']['leanSens'] = 0.05, bdW['exports']['leanMax'] = 0.16, bdW['exports']['leanPullZ'] = 0.99, bdW['exports']['leanMltZ'] = 0.03, bdW['exports']['bobMltY'] = 0.024, bdW['exports']['bobMltZ'] = 0.02, bdW['exports']['bobPullY'] = 0.985, bdW['exports']['bobPullZ'] = 0.99, bdW['exports']['landPull'] = 0.994, bdW['exports']['landPullV'] = 0.985, bdW['exports']['landOff'] = 0.15, bdW['exports']['aimAnimMlt'] = 0.18, bdW['exports']['aimSlow'] = 0.55, bdW['exports']['aimJumpSlow'] = 0.85, bdW['exports']['stepAnim'] = 0.075, bdW['exports']['stepMlt'] = 0.25, bdW['exports']['stepPull'] = 0.995, bdW['exports']['hpSegments'] = 0x7, bdW['exports']['maxHealth'] = 0x64, bdW['exports']['passiveInc'] = 0x1f4, bdW['exports']['cameraHeight'] = 1.5, bdW['exports']['playerSpeed'] = 0.00042, bdW['exports']['slippingSpeed'] = 0.0003, bdW['exports']['ladderSpeed'] = 0.035, bdW['exports']['ladderDecel'] = 0.97, bdW['exports']['slideDecel'] = 0.999, bdW['exports']['slideTime'] = 0x15e, bdW['exports']['terrainSlideDecel'] = 0.9996, bdW['exports']['groundDecel'] = 0.99, bdW['exports']['terrainDecel'] = 0.99, bdW['exports']['terrainSlipDecel'] = 0.99, bdW['exports']['airSpeed'] = 0.000047, bdW['exports']['airDecel'] = 0.9996, bdW['exports']['jumpVel'] = 0.072, bdW['exports']['jumpPush'] = 0.1, bdW['exports']['decelMin'] = 0.0001, bdW['exports']['climbHeight'] = 0x3, bdW['exports']['wpnSpin'] = 0.018, bdW['exports']['terrainSlideThreshold'] = 1.2, bdW['exports']['terrainGravityMlt'] = 1.85, bdW['exports']['playerSlideVelMlt'] = 1.2, bdW['exports']['playerTerrainSlideVelMlt'] = 0.4, bdW['exports']['playerSlippingJumpCooldown'] = 0x1f4, bdW['exports']['materialDens'] = {
            'flesh': 0.2,
            'default': 0.5
        }, bdW['exports']['nameOffset'] = 0.6, bdW['exports']['nameOffsetHat'] = 0.8, bdW['exports']['maxNameLength'] = 0xe, bdW['exports']['maxPassLength'] = 0x10, bdW['exports']['playerHeight'] = 0xb, bdW['exports']['chestWidth'] = 2.6, bdW['exports']['chestScale'] = 1.3, bdW['exports']['armScale'] = 1.3, bdW['exports']['legScale'] = 1.3, bdW['exports']['uArmLength'] = 2.7, bdW['exports']['armInset'] = -0.1, bdW['exports']['lArmLength'] = 2.7, bdW['exports']['headScale'] = 0x2, bdW['exports']['armOff'] = -0.8, bdW['exports']['legHeight'] = 4.2, bdW['exports']['playerScale'] = (0x2 * bdW['exports']['armScale'] + bdW['exports']['chestWidth'] + bdW['exports']['armInset']) / 0x2, bdW['exports']['hitBoxPad'] = 0x1, bdW['exports']['tracerMinDst'] = 0x14, bdW['exports']['tracerMaxDst'] = 0x1f4, bdW['exports']['tracerChance'] = 0x1, bdW['exports']['crouchLean'] = -0.1 * Math['PI'], bdW['exports']['crouchDst'] = 0x3, bdW['exports']['crouchSlow'] = 0.3, bdW['exports']['crouchSpeed'] = 0.007, bdW['exports']['crouchJump'] = 0.25, bdW['exports']['crouchSpread'] = 0.4, bdW['exports']['crouchAnim'] = 0.0008, bdW['exports']['crouchAnimMlt'] = 0.5, bdW['exports']['spreadMove'] = 0x1e, bdW['exports']['spreadFall'] = 0x23, bdW['exports']['spreadRecover'] = 0.985, bdW['exports']['spreadAdj'] = 0.00063, bdW['exports']['spreadMlt'] = 0x190, bdW['exports']['recoilMlt'] = 0.3, bdW['exports']['flagMsg'] = 'You\x20have\x20the\x20Flag', bdW['exports']['flagMsgE'] = 'Enemy\x20has\x20your\x20Flag', bdW['exports']['flagMsgRC'] = 'Enemy\x20has\x20your\x20Flag', bdW['exports']['flagZoneS'] = 0x18, bdW['exports']['flagZoneH'] = 0x24, bdW['exports']['flagScale'] = 0xc, bdW['exports']['flagOff'] = 0x6, bdW['exports']['flagHOff'] = 0xf, bdW['exports']['interactTimer'] = 0x64, bdW['exports']['pickupZoneX'] = 0xc, bdW['exports']['pickupZoneZ'] = 0x4, bdW['exports']['pickupZoneH'] = 0x2, bdW['exports']['pickupScale'] = 0x6, bdW['exports']['pickupOff'] = 0x1, bdW['exports']['maxLevel'] = 0x66, bdW['exports']['assistTime'] = 0x1388, bdW['exports']['assistScore'] = 0x19, bdW['exports']['assistMin'] = 0x14, bdW['exports']['medalAnim'] = 0x3e8, bdW['exports']['medalDelay'] = 0x384, bdW['exports']['scoreStreak'] = 0x7d0, bdW['exports']['feedTimer'] = 0x7d0, bdW['exports']['spinTimer'] = 0x708, bdW['exports']['endStats'] = ['sid', 'name', 'score', 'kills', 'deaths', 'reward'], bdW['exports']['endForm'] = {
            'reward': function(bdW) {
                return bdW ? '<span\x20style=\x27color:#F8C55C\x27>+' + bdW + '</span>\x20KR' : 'NONE';
            },
            'time': function(bdW, bdX, bdY) {
                return bdY['timer'] || 'DNF';
            },
            'infected': function(bdW, bdX, bdY) {
                return bdY['convs'];
            },
            'found': function(bdW, bdX, bdY) {
                return bdY['convs'];
            },
            'weapon': function(bdW, bdX, bdY) {
                return bdY['weaponTier'];
            }
        }, bdW['exports']['hitLife'] = 0x7d0, bdW['exports']['regenDelay'] = 0x1388, bdW['exports']['regenVal'] = 0.1, bdW['exports']['sprayTimer'] = 0x3e8, bdW['exports']['sprayRange'] = 0x19, bdW['exports']['sprayScale'] = 0xf, bdW['exports']['deathDelay'] = 0xaf0, bdW['exports']['deathFollowD'] = 0x64, bdW['exports']['suicides'] = ['uninstall\x20life', 'toaster\x20bath', 'alt\x20f4', 'not\x20alive', 'neck\x20rope', 'scooter\x20ankle', 'death.exe'], bdW['exports']['taunts'] = [{
            'id': 'taunt_0',
            'tm': 0x1f4
        }, {
            'id': 'taunt_1',
            'tm': 0x3e8
        }, {
            'id': 'taunt_2',
            'tm': 0x8fc
        }, {
            'id': 'taunt_3',
            'tm': 0xc80
        }], bdW['exports']['fov'] = 0x46, bdW['exports']['viewDist'] = 0x7d0, bdW['exports']['nameVisRate'] = 0xc8, bdW['exports']['worldUV'] = 0x3c, bdW['exports']['ambientVal'] = 0.5, bdW['exports']['ambD'] = 0x2, bdW['exports']['ambMlt'] = 0xf, bdW['exports']['ambOff'] = 0.09, bdW['exports']['ambScale'] = 0xa, bdW['exports']['ambDiv'] = 0x14, bdW['exports']['ambSFactor'] = 0x1, bdW['exports']['ambBleed'] = 0x0, bdW['exports']['boosterSpd'] = 0.002, bdW['exports']['borderH'] = 0x3e8, bdW['exports']['soundScapes'] = {
            'Default': 0x1,
            'City': 0x2,
            'Desert': 0x3,
            'Market': 0x4
        }, bdW['exports']['mapTabs'] = [{
            'n': 'Hot',
            'c': 0x4e,
            't': 'recent'
        }, {
            'n': 'New',
            'c': 0x3c,
            't': 'initialdate'
        }, {
            'n': 'Favorites',
            'c': 0x24,
            't': 'votes'
        }, {
            'n': 'My\x20Maps',
            'c': 0x2d,
            'sendID': !0x0,
            't': 'votes'
        }, {
            'n': 'Search',
            'search': !0x0,
            't': 'votes'
        }], bdW['exports']['modTabs'] = [{
            'n': 'Hot',
            't': 'recent'
        }, {
            'n': 'New',
            't': 'initialdate'
        }, {
            'n': 'Favorites',
            't': 'votes'
        }, {
            'n': 'My\x20Mods',
            'sendID': !0x0,
            't': 'votes'
        }, {
            'n': 'Search',
            'search': !0x0,
            't': 'votes'
        }], bdW['exports']['saleMax'] = 0x989680, bdW['exports']['saleGrace'] = 0x927c0, bdW['exports']['marketMinLVl'] = 0x14, bdW['exports']['verClans'] = ['DEV', 'FaZe', 'Lore', 'nV', 'Oxic', 'Verb', 'Omen', 'ロリ幼女', 'VOID', 'JBP', 'PHIL', 'TIMP', '24/7', 'g59'], bdW['exports']['rankVar'] = 0.03, bdW['exports']['newDataInterval'] = 0x1d4c0, bdW['exports']['socials'] = ['leaders', 'profile', 'maps', 'tourney', 'market'], bdW['exports']['marketQueries'] = {
            'market': {
                'btn': 'Info',
                'checkItem': function(bdW) {
                    return !!bdW['funds'];
                }
            },
            'inventory': {
                'btn': 'List\x20to\x20Sell',
                'checkItem': function(bdW) {
                    return !bdW['funds'] && bdW['cnt'];
                }
            },
            'sales': {
                'btn': 'Unlist',
                'checkItem': function(bdW) {
                    return !!bdW['funds'];
                }
            }
        }, bdW['exports']['leaderQueries'] = ['player_score', 'player_kills', 'player_wins', 'player_timeplayed', 'player_funds', 'player_clan'], bdW['exports']['leaderCal'] = {
            'player_score': function(bdX) {
                var bdY = Math['max'](0x1, Math['floor'](bdW['exports']['rankVar'] * Math['sqrt'](bdX)));
                return '<span\x20class=\x27floatR\x27><img\x20src=\x27./img/levels/' + Math['max'](Math['min'](bdW['exports']['maxLevel'] - 0x1, bdY['roundToNearest'](0x2) - 0x1), 0x0) + '.png\x27\x20class=\x27rnkIcon\x27>' + bdY + '</span>';
            },
            'player_kills': function(bdW) {
                return bdW + '<span\x20class=\x27lName\x27>\x20kills</span>';
            },
            'player_wins': function(bdW) {
                return bdW + '<span\x20class=\x27lName\x27>\x20wins</span>';
            },
            'player_funds': function(bdW) {
                return '<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + bdW['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',') + '</span>\x20KR';
            },
            'player_timeplayed': function(bdW) {
                var bdX = bdW / 0x3e8 / 0x3c,
                    bdY = parseInt(bdX % 0x3c);
                bdX /= 0x3c;
                var bep = parseInt(bdX % 0x18);
                bdX /= 0x18;
                var beq = parseInt(bdX);
                return (beq ? beq + 'd\x20' : '') + (bep ? bep + 'h\x20' : '') + (bdY || 0x0) + 'm\x20';
            }
        }, bdW['exports']['regionNames'] = {
            'local': 'Local',
            'us-nj': 'New\x20York',
            'us-il': 'Chicago',
            'us-tx': 'Dallas',
            'us-wa': 'Seattle',
            'us-ca-la': 'Los\x20Angeles',
            'us-ga': 'Atlanta',
            'nl-ams': 'Amsterdam',
            'gb-lon': 'London',
            'de-fra': 'Frankfurt',
            'us-ca-sv': 'Silicon\x20Valley',
            'au-syd': 'Sydney',
            'fr-par': 'Paris',
            'jb-hnd': 'Tokyo',
            'us-fl': 'Miami',
            'sgp': 'Singapore'
        }, bdW['exports']['langNames'] = {
            'en': 'English',
            'es': 'Spanish',
            'de': 'German',
            'kr': 'Korean'
        }, bdW['exports']['skinColors'] = [0x805c4a, 0xa77860, 0xd38d6f, 0xcc997e, 0xedbfa6];
    }['call'](this, bdY(0xe)));
}, function(ber, bes, bet) {
    (function(bes) {
        const bev = bet(0x7),
            bew = bet(0x23);
        ber['exports']['keyboardMap'] = ['', '', '', 'CANCEL', '', '', 'HELP', '', 'BACK_SPACE', 'TAB', '', '', 'CLEAR', 'ENTER', 'ENTER_SPECIAL', '', 'SHIFT', 'CONTROL', 'ALT', 'PAUSE', 'CAPS_LOCK', 'KANA', 'EISU', 'JUNJA', 'FINAL', 'HANJA', '', 'ESCAPE', 'CONVERT', 'NONCONVERT', 'ACCEPT', 'MODECHANGE', 'SPACE', 'PAGE_UP', 'PAGE_DOWN', 'END', 'HOME', 'LEFT', 'UP', 'RIGHT', 'DOWN', 'SELECT', 'PRINT', 'EXECUTE', 'PRINTSCREEN', 'INSERT', 'DELETE', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'COLON', 'SEMICOLON', 'LESS_THAN', 'EQUALS', 'GREATER_THAN', 'QUESTION_MARK', 'AT', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'OS_KEY', '', 'CONTEXT_MENU', '', 'SLEEP', 'NUMPAD0', 'NUMPAD1', 'NUMPAD2', 'NUMPAD3', 'NUMPAD4', 'NUMPAD5', 'NUMPAD6', 'NUMPAD7', 'NUMPAD8', 'NUMPAD9', 'MULTIPLY', 'ADD', 'SEPARATOR', 'SUBTRACT', 'DECIMAL', 'DIVIDE', 'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12', 'F13', 'F14', 'F15', 'F16', 'F17', 'F18', 'F19', 'F20', 'F21', 'F22', 'F23', 'F24', '', '', '', '', '', '', '', '', 'NUM_LOCK', 'SCROLL_LOCK', 'WIN_OEM_FJ_JISHO', 'WIN_OEM_FJ_MASSHOU', 'WIN_OEM_FJ_TOUROKU', 'WIN_OEM_FJ_LOYA', 'WIN_OEM_FJ_ROYA', '', '', '', '', '', '', '', '', '', 'CIRCUMFLEX', 'EXCLAMATION', 'DOUBLE_QUOTE', 'HASH', 'DOLLAR', 'PERCENT', 'AMPERSAND', 'UNDERSCORE', 'OPEN_PAREN', 'CLOSE_PAREN', 'ASTERISK', 'PLUS', 'PIPE', 'HYPHEN_MINUS', 'OPEN_CURLY_BRACKET', 'CLOSE_CURLY_BRACKET', 'TILDE', '', '', '', '', 'VOLUME_MUTE', 'VOLUME_DOWN', 'VOLUME_UP', '', '', 'SEMICOLON', 'EQUALS', 'COMMA', 'MINUS', 'PERIOD', 'SLASH', 'BACK_QUOTE', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'OPEN_BRACKET', 'BACK_SLASH', 'CLOSE_BRACKET', 'QUOTE', '', 'META', 'ALTGR', '', 'WIN_ICO_HELP', 'WIN_ICO_00', '', 'WIN_ICO_CLEAR', '', '', 'WIN_OEM_RESET', 'WIN_OEM_JUMP', 'WIN_OEM_PA1', 'WIN_OEM_PA2', 'WIN_OEM_PA3', 'WIN_OEM_WSCTRL', 'WIN_OEM_CUSEL', 'WIN_OEM_ATTN', 'WIN_OEM_FINISH', 'WIN_OEM_COPY', 'WIN_OEM_AUTO', 'WIN_OEM_ENLW', 'WIN_OEM_BACKTAB', 'ATTN', 'CRSEL', 'EXSEL', 'EREOF', 'PLAY', 'ZOOM', '', 'PA1', 'WIN_OEM_CLEAR', ''], ber['exports']['getB64Size'] = function() {}, Number['prototype']['round'] = function(ber) {
            return +this['toFixed'](ber);
        }, String['prototype']['escape'] = function() {
            return (this + '')['replace'](/[\\"']/g, '\x5c$&')['replace'](/\u0000/g, '\x5c0');
        }, Number['prototype']['roundToNearest'] = function(ber) {
            return 0x0 < this ? Math['ceil'](this / ber) * ber : 0x0 > this ? Math['floor'](this / ber) * ber : this;
        }, ber['exports']['capFirst'] = function(ber) {
            return ber['charAt'](0x0)['toUpperCase']() + ber['slice'](0x1);
        }, ber['exports']['isURL'] = function(ber) {
            try {
                return /^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%@_.~+&:]*)*(\?[;&a-z\d%@_.,~+&:=-]*)?(\#[-a-z\d_]*)?$/i ['test'](ber);
            } catch (beB) {}
            return !0x1;
        }, ber['exports']['arrayAverage'] = function(ber) {
            for (var bes = 0x0, bet = 0x0; bet < ber['length']; bet++) bes += ber[bet];
            return bes / ber['length'];
        }, ber['exports']['countInArray'] = function(ber, bes) {
            for (var bet = 0x0, bev = 0x0; bev < ber['length']; bev++) ber[bev] === bes && bet++;
            return bet;
        }, ber['exports']['formatNum'] = function(ber) {
            var bes = Math['floor'](Math['log'](Math['abs'](ber)) / Math['log'](0x3e8)),
                bet = 'kmb' [bes - 0x1];
            return bet ? (ber / Math['pow'](0x3e8, bes))['toFixed'](0x1) + bet : '' + ber;
        }, ber['exports']['randInt'] = function(ber, bes) {
            return Math['floor'](Math['random']() * (bes - ber + 0x1)) + ber;
        }, ber['exports']['randFloat'] = function(ber, bes) {
            return Math['random']() * (bes - ber) + ber;
        }, ber['exports']['getRandom'] = function(bes) {
            return bes[ber['exports']['randInt'](0x0, bes['length'] - 0x1)];
        }, ber['exports']['getDistance'] = function(ber, bes, bet, bev) {
            return Math['sqrt']((bet -= ber) * bet + (bev -= bes) * bev);
        }, ber['exports']['getDistance3D'] = function(ber, bes, bet, bev, bew, bf0) {
            var bf1 = ber - bev,
                bf2 = bes - bew,
                bf3 = bet - bf0;
            return Math['sqrt'](bf1 * bf1 + bf2 * bf2 + bf3 * bf3);
        }, ber['exports']['getAnglesSSS'] = function(ber, bes, bet) {
            var bev = Math['acos']((bes * bes + bet * bet - ber * ber) / (0x2 * bes * bet)),
                bew = Math['acos']((bet * bet + ber * ber - bes * bes) / (0x2 * bet * ber)),
                bf9 = Math['PI'] - bev - bew;
            return [-bev - Math['PI'] / 0x2, bew, bf9];
        }, ber['exports']['getXDir'] = function(bes, bet, bev, bew, bfe, bff) {
            var bfg = Math['abs'](bet - bfe),
                bfh = ber['exports']['getDistance3D'](bes, bet, bev, bew, bfe, bff);
            return Math['asin'](bfg / bfh) * (bet > bfe ? -0x1 : 0x1);
        }, ber['exports']['getAngleDst'] = function(ber, bes) {
            return Math['atan2'](Math['sin'](bes - ber), Math['cos'](ber - bes));
        }, ber['exports']['getAngleDist2'] = function(ber, bes) {
            var bet = Math['abs'](bes - ber) % (0x2 * Math['PI']);
            return bet > Math['PI'] ? 0x2 * Math['PI'] - bet : bet;
        }, ber['exports']['toRad'] = function(ber) {
            return ber * (Math['PI'] / 0xb4);
        }, ber['exports']['getDirection'] = function(ber, bes, bet, bev) {
            return Math['atan2'](bes - bev, ber - bet);
        }, ber['exports']['lerp'] = function(ber, bes, bet) {
            return ber + (bes - ber) * bet;
        }, ber['exports']['orderByScore'] = function(ber, bes) {
            return bes['score'] - ber['score'];
        }, ber['exports']['orderByKills'] = function(ber, bes) {
            return bes['kills'] - ber['kills'];
        }, ber['exports']['orderByDst'] = function(ber, bes) {
            return ber['dst'] - bes['dst'];
        }, ber['exports']['orderByNum'] = function(ber, bes) {
            return ber - bes;
        }, ber['exports']['capFirst'] = function(ber) {
            return ber['charAt'](0x0)['toUpperCase']() + ber['slice'](0x1);
        }, ber['exports']['truncateText'] = function(ber, bes) {
            return ber['length'] > bes ? ber['substring'](0x0, bes) + '...' : ber;
        }, ber['exports']['cleanseString'] = function(ber) {
            return ber ? ber['replace'](/['"]+/g, '') : ber;
        }, ber['exports']['randomString'] = function(ber) {
            for (var bes = '', bet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', bev = 0x0; bev < ber; bev++) bes += bet['charAt'](Math['floor'](Math['random']() * bet['length']));
            return bes;
        }, ber['exports']['formatNumCash'] = function(ber) {
            return parseFloat(Math['round'](0x64 * ber) / 0x64)['toFixed'](0x2);
        }, ber['exports']['getKeyName'] = function(bes) {
            return 0x2710 < bes ? 'M' + (bes - 0x2710) : ber['exports']['keyboardMap'][bes];
        };
        var bfN = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        ber['exports']['getDate'] = function(ber) {
            if (!ber) return 'None';
            ber = ber['split'](/[-A-Z :\.]/i);
            var bes = new Date(ber[0x0], --ber[0x1], ber[0x2], ber[0x3], ber[0x4], ber[0x5]),
                bet = new Date(bes['getTime']());
            return bet['getDate']() + '\x20' + bfN[bet['getMonth']()] + '\x20' + bet['getFullYear']();
        }, ber['exports']['getTime'] = function(ber, bes) {
            if ('inf' == ber) return 'Infinite';
            var bet = parseInt(ber % 0x3e8 / 0x64),
                bev = parseInt(ber / 0x3e8 % 0x3c),
                bew = parseInt(ber / 0xea60 % 0x3c);
            return (bew = 0xa > bew ? '0' + bew : bew) + ':' + (bev = 0xa > bev ? '0' + bev : bev) + (bes ? '.' + bet : '');
        }, ber['exports']['commaFormatNum'] = function(ber) {
            return ber['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',');
        }, ber['exports']['getReadableTime'] = function(ber, bes) {
            var bet = Math['floor'](ber / 0x3e8),
                bev = Math['floor'](bet / 0x3c);
            bet %= 0x3c;
            var bew = Math['floor'](bev / 0x3c);
            bev %= 0x3c;
            var bfN = Math['floor'](bew / 0x18);
            return (bfN ? bfN + 'd\x20' : '') + ((bew %= 0x18) ? bew + 'h\x20' : '') + (bev || 0x0) + 'm\x20' + (bes ? bet + 's' : '');
        }, ber['exports']['getTimeH'] = function(ber) {
            parseInt(ber % 0x3e8 / 0x64);
            var bes = Math['floor'](ber / 0x3e8 % 0x3c),
                bet = Math['floor'](ber / 0xea60 % 0x3c),
                bev = Math['floor'](ber / 0x36ee80 % 0x18);
            return (bev = 0xa > bev ? '0' + bev : bev) + ':' + (bet = 0xa > bet ? '0' + bet : bet) + ':' + (bes = 0xa > bes ? '0' + bes : bes);
        }, ber['exports']['scrambleS'] = function(ber) {
            return ber && ber['replace'] ? ber['replace'](/.(.)?/g, '$1') + ('d' + ber)['replace'](/.(.)?/g, '$1') : ber;
        }, ber['exports']['sanitizeStr'] = function(ber) {
            return ber && ber['replace'] ? ber['replace'](/<|>|&/g, '')['replace'](/[^\x00-\x7F]/g, '') : ber;
        }, ber['exports']['fixTo'] = function(ber, bes) {
            return parseFloat(ber['toFixed'](bes));
        }, ber['exports']['limit'] = function(ber, bes) {
            return ber < -bes ? -bes : ber > bes ? bes : ber;
        }, ber['exports']['limitMM'] = function(ber, bes, bet) {
            return ber < bes ? bes : ber > bet ? bet : ber;
        }, ber['exports']['cropVal'] = function(ber, bes) {
            return ber <= bes && ber >= -bes ? 0x0 : ber;
        }, ber['exports']['isNumber'] = function(ber) {
            return null != ber && 'number' == typeof ber && !isNaN(ber) && isFinite(ber);
        }, ber['exports']['arrayInts'] = function(bes) {
            for (var bet = 0x0; bet < bes['length']; ++bet)
                if (!ber['exports']['isNumber'](bes[bet])) return !0x1;
            return !0x0;
        }, ber['exports']['isArray'] = function(ber) {
            return !!ber && ber['constructor'] === Array;
        }, ber['exports']['isString'] = function(ber) {
            return ber && 'string' == typeof ber;
        }, ber['exports']['emptyString'] = function(ber) {
            return !ber || 0x0 === ber['length'] || /^\s*$/ ['test'](ber) || !ber['trim']();
        }, ber['exports']['compareString'] = function(ber, bes) {
            return 0x0 <= ber['toLowerCase']()['indexOf'](bes['toLowerCase']()) || 0x0 <= bes['toLowerCase']()['indexOf'](ber['toLowerCase']());
        };
        ber['exports']['lineInRect'] = function(ber, bes, bet, bev, bew, bfN, bgw, bgx, bgy, bgz, bgA, bgB) {
            var bgC = (bgw - ber) * bev,
                bgD = (bgz - ber) * bev,
                bgE = (bgy - bet) * bfN,
                bgF = (bgB - bet) * bfN,
                bgG = (bgx - bes) * bew,
                bgH = (bgA - bes) * bew,
                bgI = Math['max'](Math['max'](Math['min'](bgC, bgD), Math['min'](bgE, bgF)), Math['min'](bgG, bgH)),
                bgJ = Math['min'](Math['min'](Math['max'](bgC, bgD), Math['max'](bgE, bgF)), Math['max'](bgG, bgH));
            return !(0x0 > bgJ) && !(bgI > bgJ) && bgI;
        }, ber['exports']['pointInBox3D'] = function(ber, bes, bet, bev, bew) {
            return bew = bew || 0x0, ber >= bev['x'] - bev['width'] - bew && ber <= bev['x'] + bev['width'] + bew && bes >= bev['y'] - bev['height'] - bew && bes <= bev['y'] + bev['height'] + bew && bet >= bev['z'] - bev['length'] - bew && bet <= bev['z'] + bev['length'] + bew;
        }, ber['exports']['similar'] = function(ber, bes, bet) {
            return bet = bet || 0x0, Math['abs'](ber - bes) <= bet;
        }, ber['exports']['pointInBox'] = function(ber, bes, bet, bev, bew, bfN, bgY) {
            return bgY ? ber >= bet && ber <= bew && bes >= bev && bes <= bfN : ber > bet && ber < bew && bes > bev && bes < bfN;
        }, ber['exports']['sharePos'] = function(ber, bes, bet) {
            return bet = bet || 0x0, Math['abs'](ber['x'] - bes['x']) <= bet && Math['abs'](ber['y'] - bes['y']) <= bet && Math['abs'](ber['z'] - bes['z']) <= bet && Math['abs'](ber['d'] - bes['d']) <= bet;
        }, ber['exports']['cdv'] = {
            'x': 'width',
            'y': 'height',
            'z': 'length'
        }, ber['exports']['boxIntersection'] = function(bes, bet, bev, bew, bfN) {
            var bh7 = ber['exports']['cdv'][bev],
                bh8 = ber['exports']['cdv'][bew],
                bh9 = bes[bev] - bes[bh7] - 0.1,
                bha = bet[bev] - bet[bh7] - 0.1,
                bhb = bes[bev] + bes[bh7] + 0.1,
                bhc = bet[bev] + bet[bh7] + 0.1,
                bhd = bes[bew] - bes[bh8] - 0.1,
                bhe = bet[bew] - bet[bh8] - 0.1,
                bhf = bes[bew] + bes[bh8] + 0.1,
                bhg = bet[bew] + bet[bh8] + 0.1,
                bhh = Math['max'](bh9, bha),
                bhi = Math['min'](bhb, bhc);
            if (bhi >= bhh) {
                var bhj = Math['max'](bhd, bhe),
                    bhk = Math['min'](bhf, bhg);
                if (bhk >= bhj) {
                    for (var bhl = [{
                            [bev]: bhh,
                            [bew]: bhj,
                            'd': bfN[0x0]
                        }, {
                            [bev]: bhi,
                            [bew]: bhk,
                            'd': bfN[0x1]
                        }, {
                            [bev]: bhh,
                            [bew]: bhk,
                            'd': bfN[0x2]
                        }, {
                            [bev]: bhi,
                            [bew]: bhj,
                            'd': bfN[0x3]
                        }], bhm = bhl['length'] - 0x1; 0x0 <= bhm; --bhm)(bhl[bhm][bev] == bhb && bhl[bhm][bev] == bhc || bhl[bhm][bev] == bh9 && bhl[bhm][bev] == bha || bhl[bhm][bew] == bhf && bhl[bhm][bew] == bhg || bhl[bhm][bew] == bhd && bhl[bhm][bew] == bhe || ber['exports']['pointInBox'](bhl[bhm][bev], bhl[bhm][bew], bh9, bhd, bhb, bhf) || ber['exports']['pointInBox'](bhl[bhm][bev], bhl[bhm][bew], bha, bhe, bhc, bhg)) && (bhl[bhm]['dontUse'] = !0x0);
                    return bhl;
                }
            }
            return null;
        }, ber['exports']['boxCornerIntersection'] = function(bes, bet, bev, bew) {
            for (var bfN = ber['exports']['cdv'][bev], bhs = ber['exports']['cdv'][bew], bht = bes[bev] - bes[bfN], bhu = bet[bev] - bet[bfN], bhv = bes[bev] + bes[bfN], bhw = bet[bev] + bet[bfN], bhx = bes[bew] - bes[bhs], bhy = bet[bew] - bet[bhs], bhz = bes[bew] + bes[bhs], bhA = bet[bew] + bet[bhs], bhB = [{
                    [bev]: bht,
                    [bew]: bhx,
                    'd': Math['PI'] / 0x2
                }, {
                    [bev]: bht,
                    [bew]: bhz,
                    'd': Math['PI']
                }, {
                    [bev]: bhv,
                    [bew]: bhx,
                    'd': 0x0
                }, {
                    [bev]: bhv,
                    [bew]: bhz,
                    'd': -Math['PI'] / 0x2
                }], bhC = bhB['length'] - 0x1; 0x0 <= bhC; --bhC) bhB[bhC]['i'] = bhC, ber['exports']['pointInBox'](bhB[bhC][bev], bhB[bhC][bew], bhu, bhy, bhw, bhA, !0x0) || bhB['splice'](bhC, 0x1);
            return bhB['length'] ? bhB : null;
        }, ber['exports']['getIntersection'] = function(bes, bet, bev) {
            var bew = ber['exports']['cdv'][bev],
                bfN = bes[bev] - bes[bew],
                bhI = bet[bev] - bet[bew],
                bhJ = bes[bev] + bes[bew],
                bhK = bet[bev] + bet[bew],
                bhL = Math['max'](bfN, bhI),
                bhM = Math['min'](bhJ, bhK);
            if (bhM >= bhL) {
                var bhN = (bhM - bhL) / 0x2;
                return {
                    [bev]: bhL + bhN,
                    [bew]: bhN
                };
            }
            return null;
        }, ber['exports']['limitRectVal'] = function(bes, bet, bev) {
            var bew = ber['exports']['cdv'][bev];
            if (bes[bev] - bes[bew] < bet[bev] - bet[bew]) {
                var bfN = (bet[bev] - bet[bew] - (bes[bev] - bes[bew])) / 0x2;
                bes[bew] -= bfN, bes[bev] += bfN;
            }
            if (bes[bev] + bes[bew] > bet[bev] + bet[bew]) {
                bfN = (bes[bev] + bes[bew] - (bet[bev] + bet[bew])) / 0x2;
                bes[bew] -= bfN, bes[bev] -= bfN;
            }
        }, ber['exports']['getMaxRect'] = function(bes, bet, bev) {
            for (var bew, bfN, bhY, bhZ, bi0 = ber['exports']['cdv'][bet], bi1 = ber['exports']['cdv'][bev], bi2 = 0x0; bi2 < bes['length']; ++bi2) bew = null == bew ? bes[bi2][bet] - bes[bi2][bi0] : Math['min'](bes[bi2][bet] - bes[bi2][bi0], bew), bhY = null == bhY ? bes[bi2][bet] + bes[bi2][bi0] : Math['max'](bes[bi2][bet] + bes[bi2][bi0], bhY), bfN = null == bfN ? bes[bi2][bev] - bes[bi2][bi1] : Math['min'](bes[bi2][bev] - bes[bi2][bi1], bfN), bhZ = null == bhZ ? bes[bi2][bev] + bes[bi2][bi1] : Math['max'](bes[bi2][bev] + bes[bi2][bi1], bhZ);
            return {
                [bet]: (bew + bhY) / 0x2,
                [bev]: (bfN + bhZ) / 0x2,
                [bi0]: Math['abs'](bhY - bew) / 0x2,
                [bi1]: Math['abs'](bhZ - bfN) / 0x2
            };
        }, ber['exports']['limitRect'] = function(bes, bet, bev, bew, bfN, bi8, bi9, bia) {
            var bib = ber['exports']['getMaxRect'](bi8, bi9, bia),
                bic = ber['exports']['cdv'][bi9],
                bid = ber['exports']['cdv'][bia],
                bie = {};
            if (bie[bi9] = bes, bie[bia] = bet, bie[bic] = bev, bie[bid] = bew, ber['exports']['limitRectVal'](bie, bib, bi9), ber['exports']['limitRectVal'](bie, bib, bia), 0x0 == bfN || bfN == Math['PI']) {
                var bif = bie[bic];
                bie[bic] = bie[bid], bie[bid] = bif;
            }
            return bie;
        }, ber['exports']['progressOnLine'] = function(ber, bes, bet, bev, bew, bfN) {
            var bim = bet - ber,
                bin = bev - bes,
                bio = Math['sqrt'](bim * bim + bin * bin);
            return ((bim /= bio) * (bew - ber) + (bin /= bio) * (bfN - bes)) / Math['sqrt'](Math['pow'](bet - ber, 0x2) + Math['pow'](bev - bes, 0x2));
        }, ber['exports']['generateSID'] = function(ber) {
            for (var bes = 0x0, bet = !0x0; bet;) {
                bet = !0x1, bes++;
                for (var bev = 0x0; bev < ber['length']; ++bev)
                    if (ber[bev]['sid'] == bes) {
                        bet = !0x0;
                        break;
                    }
            }
            return bes;
        }, ber['exports']['levelIconId'] = function(ber) {
            return Math['max'](Math['min'](bev['maxLevel'] - 0x1, ber['roundToNearest'](0x2) - 0x1), 0x0);
        }, ber['exports']['copyToClipboard'] = function(ber) {
            const bes = document['createElement']('textarea');
            bes['value'] = ber, bes['setAttribute']('readonly', ''), bes['style']['position'] = 'absolute', bes['style']['left'] = '-9999px', document['body']['appendChild'](bes);
            const bet = !!(0x0 < document['getSelection']()['rangeCount']) && document['getSelection']()['getRangeAt'](0x0);
            bes['select'](), document['execCommand']('copy'), document['body']['removeChild'](bes), bet && (document['getSelection']()['removeAllRanges'](), document['getSelection']()['addRange'](bet));
        };
        var bix = function(ber, bes) {
            return ber['concat'](bes);
        };
        Array['prototype']['flatMap'] = function(ber) {
            return function(ber, bes) {
                return bes['map'](ber)['reduce'](bix, []);
            }(ber, this);
        };
        var biD = bet(0x29);
        ber['exports']['gutb'] = function(bes, bet) {
            let bev = biD['encode'](bes),
                bew = new Uint8Array(bev['length'] + 0x2);
            return bew['set'](ber['exports']['NdnB'](bet), bew['length'] - 0x2), bew['set'](bev, 0x0), bew;
        }, ber['exports']['jPnw'] = function(bes) {
            bes = new Uint8Array(bes);
            let bet = ber['exports']['zSClspf'](bes[bes['length'] - 0x2], bes[bes['length'] - 0x1]),
                bev = bes['slice'](0x0, bes['length'] - 0x2);
            return [biD['decode'](bev), bet];
        }, ber['exports']['IVFXPaTF'] = function(ber, bes) {
            return 0xff & ber + bes;
        }, ber['exports']['NdnB'] = function(ber) {
            return [0xf & ber >> 0x4, 0xf & ber];
        }, ber['exports']['zSClspf'] = function(ber, bes) {
            return (ber << 0x4) + bes;
        }, ber['exports']['restartIfNeeded'] = function(ber) {
            if (bev['needsRestart']) {
                for (var bet in ber['sockets']) {
                    var bew = ber['sockets'][bet];
                    bew['send']('error', 'GAME\x20UPDATING'), bew['close']();
                }
                setTimeout(function() {
                    bes['exit']();
                }, 0x3e8);
            }
        }, ber['exports']['thumbnailSize'] = function(ber) {
            return parseInt(0.75 * ber['replace'](/=/g, '')['length']) / 0x3e8;
        }, ber['exports']['hexToRGB'] = ber => ber['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (ber, bes, bet, bev) => '#' + bes + bes + bet + bet + bev + bev)['substring'](0x1)['match'](/.{2}/g)['map'](ber => parseInt(ber, 0x10)), ber['exports']['versionifyUrl'] = function(ber) {
            return ber + '?build=' + bew;
        }, ber['exports']['getPreview'] = function(bes, bet) {
            return ber['exports']['versionifyUrl']('./textures/previews/' + (bes['type'] && 0x3 > bes['type'] ? 'cosmetics/' + bes['type'] + '_' + bes['id'] + (bes['tex'] ? '_' + bes['tex'] : '') : bet['types'][bes['type'] || 0x0] + (bes['type'] && 0x3 == bes['type'] ? bes['id'] + (bes['tex'] ? '_' + bes['tex'] : '') : (bes['weapon'] || 0x0) + '_' + (null == bes['mid'] ? null == bes['pat'] ? bes['tex'] ? bes['tex'] : bes['id'] : 'c' + bes['pat'] : 'm' + bes['mid']))) + '.png');
        }, ber['exports']['isDropbox'] = function(ber) {
            return /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?(dropbox|dropboxusercontent|dl\.dropboxusercontent)\.com\//g ['test'](ber);
        }, ber['exports']['ctxText'] = function(ber, bes, bet, bev, bew) {
            ber['save'](), ber['translate'](~~bev, ~~bew), ber['fillStyle'] = bet, ber['strokeStyle'] = 'rgba(0,\x200,\x200,\x200.5)', ber['lineWidth'] = 0x1, ber['strokeText'](bes, 0x0, 0x0), ber['fillText'](bes, 0x0, 0x0), ber['restore']();
        }, ber['exports']['getLines'] = function(ber, bes, bet) {
            for (var bev = bes['split']('\x20'), bew = [], bfN = bev[0x0], bix = 0x1; bix < bev['length']; bix++) {
                var biD = bev[bix];
                ber['measureText'](bfN + '\x20' + biD)['width'] < bet ? bfN += '\x20' + biD : (bew['push'](bfN), bfN = biD);
            }
            return bew['push'](bfN), bew;
        }, ber['exports']['createCanvasText'] = function(bes, bet, bew, bfN, bix, biD, bjn, bjo) {
            var bjp = 0x0,
                bjq = 0x0;
            bet > bes ? (bjp = 0x1, bjq = bes / bet) : bet < bes ? (bjp = bet / bes, bjq = 0x1) : (bjp = 0x1, bjq = 0x1);
            var bjr = document['createElement']('canvas'),
                bjs = bjr['getContext']('2d');
            bjr['width'] = 0x400 * bjq, bjr['height'] = 0x400 * bjp, bjn || (bjs['fillStyle'] = biD, bjs['fillRect'](0x0, 0x0, bjr['width'], bjr['height']));
            var bjt = bfN;
            bjs['font'] = bjt + 'px\x20GameFont', bew = bew['substring'](0x0, bev['signTextLimit'] - 0x1), bjs['textAlign'] = 0x2 == bjo ? 'right' : 0x1 == bjo ? 'center' : 'left';
            var bju = 0x2 * bjt,
                bjv = bjs['measureText']('M')['width'] / 0x2;
            bjv = 0x2 == bjo ? bjr['width'] - bjv : 0x1 == bjo ? bjr['width'] / 0x2 : bjv;
            for (var bjw = 1.2 * bjs['measureText']('M')['width'], bjx = bew['split']('\x5cn'), bjy = null, bjz = 0x0; bjz < bjx['length']; ++bjz) {
                bjy = ber['exports']['getLines'](bjs, bjx[bjz], bjr['width'] - bjt);
                for (var bjA = 0x0; bjA < bjy['length'] && (ber['exports']['ctxText'](bjs, bjy[bjA], bix, bjv, bju), !((bju += bjw) > bjr['height'])); ++bjA);
            }
            return bjr;
        };
    }['call'](this, bet(0xe)));
}, function(bjB, bjC, bjD) {
    (function(bjB) {
        bjD['d'](bjC, 'a', function() {
            return bjK;
        }), bjD['d'](bjC, 'b', function() {
            return bkQ;
        }), bjD['d'](bjC, 'c', function() {
            return bkX;
        });
        var bjF = bjD(0x0),
            bjG = bjD(0x2),
            bjH = bjD(0x18),
            bjI = bjD(0xa),
            bjJ = 0x3,
            bjK = function() {
                function bjB(bjB, bjC, bjD) {
                    void 0x0 === bjC && (bjC = new bjI['a']()), void 0x0 === bjD && (bjD = bjJ), this['_version'] = bjD, this['_stack'] = [], this['_stack']['push']({
                        'client': bjB,
                        'scope': bjC
                    });
                }
                return bjB['prototype']['_invokeClient'] = function(bjB) {
                    for (var bjC, bjD = [], bjG = 0x1; bjG < arguments['length']; bjG++) bjD[bjG - 0x1] = arguments[bjG];
                    var bjH = this['getStackTop']();
                    bjH && bjH['client'] && bjH['client'][bjB] && (bjC = bjH['client'])[bjB]['apply'](bjC, bjF['d'](bjD, [bjH['scope']]));
                }, bjB['prototype']['isOlderThan'] = function(bjB) {
                    return this['_version'] < bjB;
                }, bjB['prototype']['bindClient'] = function(bjB) {
                    this['getStackTop']()['client'] = bjB;
                }, bjB['prototype']['pushScope'] = function() {
                    var bjB = this['getStack'](),
                        bjC = 0x0 < bjB['length'] ? bjB[bjB['length'] - 0x1]['scope'] : void 0x0,
                        bjD = bjI['a']['clone'](bjC);
                    return this['getStack']()['push']({
                        'client': this['getClient'](),
                        'scope': bjD
                    }), bjD;
                }, bjB['prototype']['popScope'] = function() {
                    return void 0x0 !== this['getStack']()['pop']();
                }, bjB['prototype']['withScope'] = function(bjB) {
                    var bjC = this['pushScope']();
                    try {
                        bjB(bjC);
                    } finally {
                        this['popScope']();
                    }
                }, bjB['prototype']['getClient'] = function() {
                    return this['getStackTop']()['client'];
                }, bjB['prototype']['getScope'] = function() {
                    return this['getStackTop']()['scope'];
                }, bjB['prototype']['getStack'] = function() {
                    return this['_stack'];
                }, bjB['prototype']['getStackTop'] = function() {
                    return this['_stack'][this['_stack']['length'] - 0x1];
                }, bjB['prototype']['captureException'] = function(bjB, bjC) {
                    var bjD = this['_lastEventId'] = Object(bjG['g'])();
                    return this['_invokeClient']('captureException', bjB, bjF['a']({}, bjC, {
                        'event_id': bjD
                    })), bjD;
                }, bjB['prototype']['captureMessage'] = function(bjB, bjC, bjD) {
                    var bjH = this['_lastEventId'] = Object(bjG['g'])();
                    return this['_invokeClient']('captureMessage', bjB, bjC, bjF['a']({}, bjD, {
                        'event_id': bjH
                    })), bjH;
                }, bjB['prototype']['captureEvent'] = function(bjB, bjC) {
                    var bjD = this['_lastEventId'] = Object(bjG['g'])();
                    return this['_invokeClient']('captureEvent', bjB, bjF['a']({}, bjC, {
                        'event_id': bjD
                    })), bjD;
                }, bjB['prototype']['lastEventId'] = function() {
                    return this['_lastEventId'];
                }, bjB['prototype']['addBreadcrumb'] = function(bjB, bjC) {
                    var bjD = this['getStackTop']();
                    if (bjD['scope'] && bjD['client']) {
                        var bjH = bjD['client']['getOptions'] && bjD['client']['getOptions']() || {},
                            bjI = bjH['beforeBreadcrumb'],
                            bjJ = void 0x0 === bjI ? null : bjI,
                            bjK = bjH['maxBreadcrumbs'],
                            bki = void 0x0 === bjK ? 0x1e : bjK;
                        if (!(0x0 >= bki)) {
                            var bkj = new Date()['getTime']() / 0x3e8,
                                bkk = bjF['a']({
                                    'timestamp': bkj
                                }, bjB),
                                bkl = bjJ ? Object(bjG['b'])(function() {
                                    return bjJ(bkk, bjC);
                                }) : bkk;
                            null === bkl || bjD['scope']['addBreadcrumb'](bkl, Math['min'](bki, 0x64));
                        }
                    }
                }, bjB['prototype']['setUser'] = function(bjB) {
                    var bjC = this['getStackTop']();
                    bjC['scope'] && bjC['scope']['setUser'](bjB);
                }, bjB['prototype']['setTags'] = function(bjB) {
                    var bjC = this['getStackTop']();
                    bjC['scope'] && bjC['scope']['setTags'](bjB);
                }, bjB['prototype']['setExtras'] = function(bjB) {
                    var bjC = this['getStackTop']();
                    bjC['scope'] && bjC['scope']['setExtras'](bjB);
                }, bjB['prototype']['setTag'] = function(bjB, bjC) {
                    var bjD = this['getStackTop']();
                    bjD['scope'] && bjD['scope']['setTag'](bjB, bjC);
                }, bjB['prototype']['setExtra'] = function(bjB, bjC) {
                    var bjD = this['getStackTop']();
                    bjD['scope'] && bjD['scope']['setExtra'](bjB, bjC);
                }, bjB['prototype']['setContext'] = function(bjB, bjC) {
                    var bjD = this['getStackTop']();
                    bjD['scope'] && bjD['scope']['setContext'](bjB, bjC);
                }, bjB['prototype']['configureScope'] = function(bjB) {
                    var bjC = this['getStackTop']();
                    bjC['scope'] && bjC['client'] && bjB(bjC['scope']);
                }, bjB['prototype']['run'] = function(bjB) {
                    var bjC = bkM(this);
                    try {
                        bjB(this);
                    } finally {
                        bkM(bjC);
                    }
                }, bjB['prototype']['getIntegration'] = function(bjB) {
                    var bjC = this['getClient']();
                    if (!bjC) return null;
                    try {
                        return bjC['getIntegration'](bjB);
                    } catch (bkH) {
                        return bjH['a']['warn']('Cannot\x20retrieve\x20integration\x20' + bjB['id'] + '\x20from\x20the\x20current\x20Hub'), null;
                    }
                }, bjB['prototype']['traceHeaders'] = function() {
                    var bjB = this['getStackTop']();
                    if (bjB['scope'] && bjB['client']) {
                        var bjC = bjB['scope']['getSpan']();
                        if (bjC) return {
                            'sentry-trace': bjC['toTraceparent']()
                        };
                    }
                    return {};
                }, bjB;
            }();

        function bkK() {
            var bjB = Object(bjG['e'])();
            return bjB['__SENTRY__'] = bjB['__SENTRY__'] || {
                'hub': void 0x0
            }, bjB;
        }

        function bkM(bjB) {
            var bjC = bkK(),
                bjD = bkX(bjC);
            return bkZ(bjC, bjB), bjD;
        }

        function bkQ() {
            var bjC = bkK();
            (!bkV(bjC) || bkX(bjC)['isOlderThan'](bjJ)) && bkZ(bjC, new bjK());
            try {
                var bjD = Object(bjG['c'])(bjB, 'domain')['active'];
                if (!bjD) return bkX(bjC);
                if (!bkV(bjD) || bkX(bjD)['isOlderThan'](bjJ)) {
                    var bjF = bkX(bjC)['getStackTop']();
                    bkZ(bjD, new bjK(bjF['client'], bjI['a']['clone'](bjF['scope'])));
                }
                return bkX(bjD);
            } catch (bkU) {
                return bkX(bjC);
            }
        }

        function bkV(bjB) {
            return !!(bjB && bjB['__SENTRY__'] && bjB['__SENTRY__']['hub']);
        }

        function bkX(bjB) {
            return bjB && bjB['__SENTRY__'] && bjB['__SENTRY__']['hub'] ? bjB['__SENTRY__']['hub'] : (bjB['__SENTRY__'] = bjB['__SENTRY__'] || {}, bjB['__SENTRY__']['hub'] = new bjK(), bjB['__SENTRY__']['hub']);
        }

        function bkZ(bjB, bjC) {
            return !!bjB && (bjB['__SENTRY__'] = bjB['__SENTRY__'] || {}, bjB['__SENTRY__']['hub'] = bjC, !0x0);
        }
    }['call'](this, bjD(0x3f)(bjB)));
}, function(bl2, bl3, bl4) {
    bl4['d'](bl3, 'a', function() {
        return blb;
    }), bl4['d'](bl3, 'b', function() {
        return blT;
    });
    var bl5 = bl4(0x0),
        bl6 = bl4(0x49),
        bl7 = bl4(0x5),
        bl8 = bl4(0x6),
        bl9 = bl4(0x2),
        bla = bl4(0xd),
        blb = function() {
            function bl2() {
                this['_notifyingListeners'] = !0x1, this['_scopeListeners'] = [], this['_eventProcessors'] = [], this['_breadcrumbs'] = [], this['_user'] = {}, this['_tags'] = {}, this['_extra'] = {}, this['_context'] = {};
            }
            return bl2['prototype']['addScopeListener'] = function(bl2) {
                this['_scopeListeners']['push'](bl2);
            }, bl2['prototype']['addEventProcessor'] = function(bl2) {
                return this['_eventProcessors']['push'](bl2), this;
            }, bl2['prototype']['_notifyScopeListeners'] = function() {
                var bl2 = this;
                this['_notifyingListeners'] || (this['_notifyingListeners'] = !0x0, setTimeout(function() {
                    bl2['_scopeListeners']['forEach'](function(bl3) {
                        bl3(bl2);
                    }), bl2['_notifyingListeners'] = !0x1;
                }));
            }, bl2['prototype']['_notifyEventProcessors'] = function(bl2, bl3, bl4, bl8) {
                var bl9 = this;
                return void 0x0 === bl8 && (bl8 = 0x0), new bl6['a'](function(bl6, bla) {
                    var blb = bl2[bl8];
                    if (null === bl3 || 'function' != typeof blb) bl6(bl3);
                    else {
                        var blp = blb(bl5['a']({}, bl3), bl4);
                        Object(bl7['j'])(blp) ? blp['then'](function(bl3) {
                            return bl9['_notifyEventProcessors'](bl2, bl3, bl4, bl8 + 0x1)['then'](bl6);
                        })['catch'](bla) : bl9['_notifyEventProcessors'](bl2, blp, bl4, bl8 + 0x1)['then'](bl6)['catch'](bla);
                    }
                });
            }, bl2['prototype']['setUser'] = function(bl2) {
                return this['_user'] = Object(bl8['b'])(bl2), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setTags'] = function(bl2) {
                return this['_tags'] = bl5['a']({}, this['_tags'], Object(bl8['b'])(bl2)), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setTag'] = function(bl2, bl3) {
                var bl4;
                return this['_tags'] = bl5['a']({}, this['_tags'], ((bl4 = {})[bl2] = Object(bl8['b'])(bl3), bl4)), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setExtras'] = function(bl2) {
                return this['_extra'] = bl5['a']({}, this['_extra'], Object(bl8['b'])(bl2)), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setExtra'] = function(bl2, bl3) {
                var bl4;
                return this['_extra'] = bl5['a']({}, this['_extra'], ((bl4 = {})[bl2] = Object(bl8['b'])(bl3), bl4)), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setFingerprint'] = function(bl2) {
                return this['_fingerprint'] = Object(bl8['b'])(bl2), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setLevel'] = function(bl2) {
                return this['_level'] = Object(bl8['b'])(bl2), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setTransaction'] = function(bl2) {
                return this['_transaction'] = bl2, this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setContext'] = function(bl2, bl3) {
                return this['_context'][bl2] = bl3 ? Object(bl8['b'])(bl3) : void 0x0, this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['setSpan'] = function(bl2) {
                return this['_span'] = bl2, this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['startSpan'] = function(bl2) {
                var bl3 = new bla['a']();
                return bl3['setParent'](bl2), this['setSpan'](bl3), bl3;
            }, bl2['prototype']['getSpan'] = function() {
                return this['_span'];
            }, bl2['clone'] = function(bl3) {
                var bl4 = new bl2();
                return Object['assign'](bl4, bl3, {
                    '_scopeListeners': []
                }), bl3 && (bl4['_breadcrumbs'] = bl5['d'](bl3['_breadcrumbs']), bl4['_tags'] = bl5['a']({}, bl3['_tags']), bl4['_extra'] = bl5['a']({}, bl3['_extra']), bl4['_context'] = bl5['a']({}, bl3['_context']), bl4['_user'] = bl3['_user'], bl4['_level'] = bl3['_level'], bl4['_span'] = bl3['_span'], bl4['_transaction'] = bl3['_transaction'], bl4['_fingerprint'] = bl3['_fingerprint'], bl4['_eventProcessors'] = bl5['d'](bl3['_eventProcessors'])), bl4;
            }, bl2['prototype']['clear'] = function() {
                return this['_breadcrumbs'] = [], this['_tags'] = {}, this['_extra'] = {}, this['_user'] = {}, this['_context'] = {}, this['_level'] = void 0x0, this['_transaction'] = void 0x0, this['_fingerprint'] = void 0x0, this['_span'] = void 0x0, this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['addBreadcrumb'] = function(bl2, bl3) {
                var bl4 = new Date()['getTime']() / 0x3e8,
                    bl6 = bl5['a']({
                        'timestamp': bl4
                    }, bl2);
                return this['_breadcrumbs'] = void 0x0 !== bl3 && 0x0 <= bl3 ? bl5['d'](this['_breadcrumbs'], [Object(bl8['b'])(bl6)])['slice'](-bl3) : bl5['d'](this['_breadcrumbs'], [Object(bl8['b'])(bl6)]), this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['clearBreadcrumbs'] = function() {
                return this['_breadcrumbs'] = [], this['_notifyScopeListeners'](), this;
            }, bl2['prototype']['_applyFingerprint'] = function(bl2) {
                bl2['fingerprint'] = bl2['fingerprint'] ? Array['isArray'](bl2['fingerprint']) ? bl2['fingerprint'] : [bl2['fingerprint']] : [], this['_fingerprint'] && (bl2['fingerprint'] = bl2['fingerprint']['concat'](this['_fingerprint'])), bl2['fingerprint'] && !bl2['fingerprint']['length'] && delete bl2['fingerprint'];
            }, bl2['prototype']['applyToEvent'] = function(bl2, bl3) {
                return this['_extra'] && Object['keys'](this['_extra'])['length'] && (bl2['extra'] = bl5['a']({}, this['_extra'], bl2['extra'])), this['_tags'] && Object['keys'](this['_tags'])['length'] && (bl2['tags'] = bl5['a']({}, this['_tags'], bl2['tags'])), this['_user'] && Object['keys'](this['_user'])['length'] && (bl2['user'] = bl5['a']({}, this['_user'], bl2['user'])), this['_context'] && Object['keys'](this['_context'])['length'] && (bl2['contexts'] = bl5['a']({}, this['_context'], bl2['contexts'])), this['_level'] && (bl2['level'] = this['_level']), this['_transaction'] && (bl2['transaction'] = this['_transaction']), this['_span'] && (bl2['contexts'] = bl2['contexts'] || {}, bl2['contexts']['trace'] = this['_span']), this['_applyFingerprint'](bl2), bl2['breadcrumbs'] = bl5['d'](bl2['breadcrumbs'] || [], this['_breadcrumbs']), bl2['breadcrumbs'] = 0x0 < bl2['breadcrumbs']['length'] ? bl2['breadcrumbs'] : void 0x0, this['_notifyEventProcessors'](bl5['d'](blR(), this['_eventProcessors']), bl2, bl3);
            }, bl2;
        }();

    function blR() {
        var bl2 = Object(bl9['e'])();
        return bl2['__SENTRY__'] = bl2['__SENTRY__'] || {}, bl2['__SENTRY__']['globalEventProcessors'] = bl2['__SENTRY__']['globalEventProcessors'] || [], bl2['__SENTRY__']['globalEventProcessors'];
    }

    function blT(bl2) {
        blR()['push'](bl2);
    }
}, function(blV, blW) {
    var blX = {}['toString'];
    blV['exports'] = Array['isArray'] || function(blV) {
        return '[object\x20Array]' == blX['call'](blV);
    };
}, function(blZ, bm0, bm1) {
    var bm2 = bm1(0xb);
    bm0['createCodec'] = bmh, bm0['install'] = function(blZ) {
        for (var bm0 in blZ) bmc['prototype'][bm0] = bme(bmc['prototype'][bm0], blZ[bm0]);
    }, bm0['filter'] = function(blZ) {
        return bm2(blZ) ? function(blZ) {
            function bm0(blZ, bm0) {
                return bm0(blZ);
            }
            return blZ = blZ['slice'](),
                function(bm1) {
                    return blZ['reduce'](bm0, bm1);
                };
        }(blZ) : blZ;
    };
    var bmb = bm1(0x3);

    function bmc(blZ) {
        return this instanceof bmc ? (this['options'] = blZ, void this['init']()) : new bmc(blZ);
    }

    function bme(blZ, bm0) {
        return blZ && bm0 ? function() {
            return blZ['apply'](this, arguments), bm0['apply'](this, arguments);
        } : blZ || bm0;
    }

    function bmh(blZ) {
        return new bmc(blZ);
    }
    bmc['prototype']['init'] = function() {
        var blZ = this['options'];
        return blZ && blZ['uint8array'] && (this['bufferish'] = bmb['Uint8Array']), this;
    }, bm0['preset'] = bmh({
        'preset': !0x0
    });
}, function(bmk, bml, bmm) {
    bmm['d'](bml, 'a', function() {
        return bmp;
    });
    var bmn = bmm(0x2),
        bmo = /^[ \t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \t]*$/,
        bmp = function() {
            function bmk(bmk, bml, bmm, bmo) {
                void 0x0 === bmk && (bmk = Object(bmn['g'])()), void 0x0 === bml && (bml = Object(bmn['g'])()['substring'](0x10)), this['_traceId'] = bmk, this['_spanId'] = bml, this['_sampled'] = bmm, this['_parent'] = bmo;
            }
            return bmk['prototype']['setParent'] = function(bmk) {
                return this['_parent'] = bmk, this;
            }, bmk['prototype']['setSampled'] = function(bmk) {
                return this['_sampled'] = bmk, this;
            }, bmk['fromTraceparent'] = function(bml) {
                var bmm = bml['match'](bmo);
                if (bmm) {
                    var bmn;
                    '1' === bmm[0x3] ? bmn = !0x0 : '0' === bmm[0x3] && (bmn = !0x1);
                    var bmp = new bmk(bmm[0x1], bmm[0x2], bmn);
                    return new bmk(bmm[0x1], void 0x0, bmn, bmp);
                }
            }, bmk['prototype']['toTraceparent'] = function() {
                var bmk = '';
                return !0x0 === this['_sampled'] ? bmk = '-1' : !0x1 === this['_sampled'] && (bmk = '-0'), this['_traceId'] + '-' + this['_spanId'] + bmk;
            }, bmk['prototype']['toJSON'] = function() {
                return {
                    'parent': this['_parent'] && this['_parent']['toJSON']() || void 0x0,
                    'sampled': this['_sampled'],
                    'span_id': this['_spanId'],
                    'trace_id': this['_traceId']
                };
            }, bmk;
        }();
}, function(bmC, bmD) {
    var bmE, bmF, bmG = bmC['exports'] = {};

    function bmH() {
        throw new Error('setTimeout\x20has\x20not\x20been\x20defined');
    }

    function bmI() {
        throw new Error('clearTimeout\x20has\x20not\x20been\x20defined');
    }

    function bmJ(bmC) {
        if (bmE === setTimeout) return setTimeout(bmC, 0x0);
        if ((bmE === bmH || !bmE) && setTimeout) return bmE = setTimeout, setTimeout(bmC, 0x0);
        try {
            return bmE(bmC, 0x0);
        } catch (bmL) {
            try {
                return bmE['call'](null, bmC, 0x0);
            } catch (bmM) {
                return bmE['call'](this, bmC, 0x0);
            }
        }
    }! function() {
        try {
            bmE = 'function' == typeof setTimeout ? setTimeout : bmH;
        } catch (bmN) {
            bmE = bmH;
        }
        try {
            bmF = 'function' == typeof clearTimeout ? clearTimeout : bmI;
        } catch (bmO) {
            bmF = bmI;
        }
    }();
    var bmP, bmQ = [],
        bmR = !0x1,
        bmS = -0x1;

    function bmT() {
        bmR && bmP && (bmR = !0x1, bmP['length'] ? bmQ = bmP['concat'](bmQ) : bmS = -0x1, bmQ['length'] && bmU());
    }

    function bmU() {
        if (!bmR) {
            var bmC = bmJ(bmT);
            bmR = !0x0;
            for (var bmD = bmQ['length']; bmD;) {
                for (bmP = bmQ, bmQ = []; ++bmS < bmD;) bmP && bmP[bmS]['run']();
                bmS = -0x1, bmD = bmQ['length'];
            }
            bmP = null, bmR = !0x1,
                function(bmC) {
                    if (bmF === clearTimeout) return clearTimeout(bmC);
                    if ((bmF === bmI || !bmF) && clearTimeout) return bmF = clearTimeout, clearTimeout(bmC);
                    try {
                        bmF(bmC);
                    } catch (bmY) {
                        try {
                            return bmF['call'](null, bmC);
                        } catch (bmZ) {
                            return bmF['call'](this, bmC);
                        }
                    }
                }(bmC);
        }
    }

    function bn0(bmC, bmD) {
        this['fun'] = bmC, this['array'] = bmD;
    }

    function bn3() {}
    bmG['nextTick'] = function(bmC) {
        var bmD = Array(arguments['length'] - 0x1);
        if (0x1 < arguments['length'])
            for (var bmE = 0x1; bmE < arguments['length']; bmE++) bmD[bmE - 0x1] = arguments[bmE];
        bmQ['push'](new bn0(bmC, bmD)), 0x1 !== bmQ['length'] || bmR || bmJ(bmU);
    }, bn0['prototype']['run'] = function() {
        this['fun']['apply'](null, this['array']);
    }, bmG['title'] = 'browser', bmG['browser'] = !0x0, bmG['env'] = {}, bmG['argv'] = [], bmG['version'] = '', bmG['versions'] = {}, bmG['on'] = bn3, bmG['addListener'] = bn3, bmG['once'] = bn3, bmG['off'] = bn3, bmG['removeListener'] = bn3, bmG['removeAllListeners'] = bn3, bmG['emit'] = bn3, bmG['prependListener'] = bn3, bmG['prependOnceListener'] = bn3, bmG['listeners'] = function() {
        return [];
    }, bmG['binding'] = function() {
        throw new Error('process.binding\x20is\x20not\x20supported');
    }, bmG['cwd'] = function() {
        return '/';
    }, bmG['chdir'] = function() {
        throw new Error('process.chdir\x20is\x20not\x20supported');
    }, bmG['umask'] = function() {
        return 0x0;
    };
}, function(bn7, bn8, bn9) {
    var bna = bn9(0x10)['ExtBuffer'],
        bnb = bn9(0x30),
        bnc = bn9(0x31),
        bnd = bn9(0xc);

    function bne() {
        var bn7 = this['options'];
        return this['encode'] = function(bn7) {
            var bn8 = bnc['getWriteType'](bn7);
            return function(bn7, bn9) {
                var bna = bn8[typeof bn9];
                if (!bna) throw new Error('Unsupported\x20type\x20\x22' + typeof bn9 + '\x22:\x20' + bn9);
                bna(bn7, bn9);
            };
        }(bn7), bn7 && bn7['preset'] && bnb['setExtPackers'](this), this;
    }
    bnd['install']({
        'addExtPacker': function(bn7, bn8, bn9) {
            function bnb(bn8) {
                return bn9 && (bn8 = bn9(bn8)), new bna(bn8, bn7);
            }
            bn9 = bnd['filter'](bn9);
            var bnc = bn8['name'];
            if (bnc && 'Object' !== bnc) {
                var bne = this['extPackers'] || (this['extPackers'] = {});
                bne[bnc] = bnb;
            } else {
                var bns = this['extEncoderList'] || (this['extEncoderList'] = []);
                bns['unshift']([bn8, bnb]);
            }
        },
        'getExtPacker': function(bn7) {
            var bn8 = this['extPackers'] || (this['extPackers'] = {}),
                bn9 = bn7['constructor'],
                bna = bn9 && bn9['name'] && bn8[bn9['name']];
            if (bna) return bna;
            for (var bnb, bnc = this['extEncoderList'] || (this['extEncoderList'] = []), bnd = bnc['length'], bne = 0x0; bne < bnd; bne++)
                if (bnb = bnc[bne], bn9 === bnb[0x0]) return bnb[0x1];
        },
        'init': bne
    }), bn8['preset'] = bne['call'](bnd['preset']);
}, function(bnB, bnC, bnD) {
    bnC['ExtBuffer'] = function bnB(bnC, bnD) {
        return this instanceof bnB ? (this['buffer'] = bnG['from'](bnC), void(this['type'] = bnD)) : new bnB(bnC, bnD);
    };
    var bnG = bnD(0x3);
}, function(bnH, bnI) {
    bnI['read'] = function(bnH, bnI, bnL, bnM, bnN) {
        var bnO, bnP, bnQ = 0x8 * bnN - bnM - 0x1,
            bnR = (0x1 << bnQ) - 0x1,
            bnS = bnR >> 0x1,
            bnT = -0x7,
            bnU = bnL ? bnN - 0x1 : 0x0,
            bnV = bnL ? -0x1 : 0x1,
            bnW = bnH[bnI + bnU];
        for (bnU += bnV, bnO = bnW & (0x1 << -bnT) - 0x1, bnW >>= -bnT, bnT += bnQ; 0x0 < bnT; bnO = 0x100 * bnO + bnH[bnI + bnU], bnU += bnV, bnT -= 0x8);
        for (bnP = bnO & (0x1 << -bnT) - 0x1, bnO >>= -bnT, bnT += bnM; 0x0 < bnT; bnP = 0x100 * bnP + bnH[bnI + bnU], bnU += bnV, bnT -= 0x8);
        if (0x0 === bnO) bnO = 0x1 - bnS;
        else {
            if (bnO === bnR) return bnP ? NaN : 0x1 / 0x0 * (bnW ? -0x1 : 0x1);
            bnP += Math['pow'](0x2, bnM), bnO -= bnS;
        }
        return (bnW ? -0x1 : 0x1) * bnP * Math['pow'](0x2, bnO - bnM);
    }, bnI['write'] = function(bnH, bnI, bnZ, bo0, bo1, bo2) {
        var bo3, bo4, bo5, bo6 = 0x8 * bo2 - bo1 - 0x1,
            bo7 = (0x1 << bo6) - 0x1,
            bo8 = bo7 >> 0x1,
            bo9 = 0x17 === bo1 ? Math['pow'](0x2, -0x18) - Math['pow'](0x2, -0x4d) : 0x0,
            boa = bo0 ? 0x0 : bo2 - 0x1,
            bob = bo0 ? 0x1 : -0x1,
            boc = 0x0 > bnI || 0x0 === bnI && 0x0 > 0x1 / bnI ? 0x1 : 0x0;
        for (bnI = Math['abs'](bnI), isNaN(bnI) || bnI === 0x1 / 0x0 ? (bo4 = isNaN(bnI) ? 0x1 : 0x0, bo3 = bo7) : (bo3 = Math['floor'](Math['log'](bnI) / Math['LN2']), 0x1 > bnI * (bo5 = Math['pow'](0x2, -bo3)) && (bo3--, bo5 *= 0x2), 0x2 <= (bnI += 0x1 <= bo3 + bo8 ? bo9 / bo5 : bo9 * Math['pow'](0x2, 0x1 - bo8)) * bo5 && (bo3++, bo5 /= 0x2), bo3 + bo8 >= bo7 ? (bo4 = 0x0, bo3 = bo7) : 0x1 <= bo3 + bo8 ? (bo4 = (bnI * bo5 - 0x1) * Math['pow'](0x2, bo1), bo3 += bo8) : (bo4 = bnI * Math['pow'](0x2, bo8 - 0x1) * Math['pow'](0x2, bo1), bo3 = 0x0)); 0x8 <= bo1; bnH[bnZ + boa] = 0xff & bo4, boa += bob, bo4 /= 0x100, bo1 -= 0x8);
        for (bo3 = bo3 << bo1 | bo4, bo6 += bo1; 0x0 < bo6; bnH[bnZ + boa] = 0xff & bo3, boa += bob, bo3 /= 0x100, bo6 -= 0x8);
        bnH[bnZ + boa - bob] |= 0x80 * boc;
    };
}, function(bod, boe, bof) {
    var bog, boh = bof(0x2f);
    boe['copy'] = bon, boe['slice'] = bov, boe['toString'] = function() {
        return (!bol && boj['isBuffer'](this) ? this['toString'] : boh['toString'])['apply'](this, arguments);
    }, boe['write'] = (bog = 'write', function() {
        var bod = this[bog] || boh[bog];
        return bod['apply'](this, arguments);
    });
    var boj = bof(0x3),
        bok = boj['global'],
        bol = boj['hasBuffer'] && 'TYPED_ARRAY_SUPPORT' in bok,
        bom = bol && !bok['TYPED_ARRAY_SUPPORT'];

    function bon(bod, boe, bof, bog) {
        var bok = boj['isBuffer'](this),
            bol = boj['isBuffer'](bod);
        if (bok && bol) return this['copy'](bod, boe, bof, bog);
        if (!bom && !bok && !bol && boj['isView'](this) && boj['isView'](bod)) {
            var bon = bof || null != bog ? bov['call'](this, bof, bog) : this;
            return bod['set'](bon, boe), bon['length'];
        }
        return boh['copy']['call'](this, bod, boe, bof, bog);
    }

    function bov(bod, boe) {
        var bof = this['slice'] || !bom && this['subarray'];
        if (bof) return bof['call'](this, bod, boe);
        var bog = boj['alloc']['call'](this, boe - bod);
        return bon['call'](this, bog, 0x0, bod, boe), bog;
    }
}, function(boA, boB, boC) {
    (function(boA) {
        ! function(boB) {
            function boC(boA, boC, boI) {
                function boJ(boA, boB, boC, boN) {
                    return this instanceof boJ ? function(boA, boB, boC, boN, boS) {
                        if (bqo && bqp && (boB instanceof bqp && (boB = new bqo(boB)), boN instanceof bqp && (boN = new bqo(boN))), !(boB || boC || boN || bqm)) return void(boA['buffer'] = bpZ(bqq, 0x0));
                        if (!bpP(boB, boC)) {
                            var boT = bqm || Array;
                            boS = boC, boN = boB, boC = 0x0, boB = new boT(0x8);
                        }
                        boA['buffer'] = boB, boA['offset'] = boC |= 0x0, void 0x0 === boN || ('string' == typeof boN ? function(boA, boB, boC, boN) {
                            var boS = 0x0,
                                boT = boC['length'],
                                bp0 = 0x0,
                                bp1 = 0x0;
                            '-' === boC[0x0] && boS++;
                            for (var bp2, bp3 = boS; boS < boT && 0x0 <= (bp2 = parseInt(boC[boS++], boN));) bp1 = bp1 * boN + bp2, bp0 = bp0 * boN + Math['floor'](bp1 / 0x100000000), bp1 %= 0x100000000;
                            bp3 && (bp0 = ~bp0, bp1 ? bp1 = 0x100000000 - bp1 : bp0++), bp9(boA, boB + bpg, bp0), bp9(boA, boB + bph, bp1);
                        }(boB, boC, boN, boS || 0xa) : bpP(boN, boS) ? bpT(boB, boC, boN, boS) : 'number' == typeof boS ? (bp9(boB, boC + bpg, boN), bp9(boB, boC + bph, boS)) : 0x0 < boN ? bpm(boB, boC, boN) : 0x0 > boN ? bpn(boB, boC, boN) : bpT(boB, boC, bqq, 0x0));
                    }(this, boA, boB, boC, boN) : new boJ(boA, boB, boC, boN);
                }

                function bp4() {
                    var boA = this['buffer'],
                        boB = this['offset'],
                        boC = bpd(boA, boB + bpg),
                        bp8 = bpd(boA, boB + bph);
                    return boI || (boC |= 0x0), boC ? 0x100000000 * boC + bp8 : bp8;
                }

                function bp9(boA, boB, boC) {
                    boA[boB + bpl] = 0xff & boC, boC >>= 0x8, boA[boB + bpk] = 0xff & boC, boC >>= 0x8, boA[boB + bpj] = 0xff & boC, boC >>= 0x8, boA[boB + bpi] = 0xff & boC;
                }

                function bpd(boA, boB) {
                    return 0x1000000 * boA[boB + bpi] + (boA[boB + bpj] << 0x10) + (boA[boB + bpk] << 0x8) + boA[boB + bpl];
                }
                var bpg = boC ? 0x0 : 0x4,
                    bph = boC ? 0x4 : 0x0,
                    bpi = boC ? 0x0 : 0x3,
                    bpj = boC ? 0x1 : 0x2,
                    bpk = boC ? 0x2 : 0x1,
                    bpl = boC ? 0x3 : 0x0,
                    bpm = boC ? bq2 : bqc,
                    bpn = boC ? bq7 : bqh,
                    bpo = boJ['prototype'],
                    bpp = 'is' + boA,
                    bpq = '_' + bpp;
                return bpo['buffer'] = void 0x0, bpo['offset'] = 0x0, bpo[bpq] = !0x0, bpo['toNumber'] = bp4, bpo['toString'] = function(boA) {
                    var boB = this['buffer'],
                        boC = this['offset'],
                        bpu = bpd(boB, boC + bpg),
                        bpv = bpd(boB, boC + bph),
                        bpw = '',
                        bpx = !boI && 0x80000000 & bpu;
                    for (bpx && (bpu = ~bpu, bpv = 0x100000000 - bpv), boA = boA || 0xa;;) {
                        var bpy = bpu % boA * 0x100000000 + bpv;
                        if (bpu = Math['floor'](bpu / boA), bpv = Math['floor'](bpy / boA), bpw = (bpy % boA)['toString'](boA) + bpw, !bpu && !bpv) break;
                    }
                    return bpx && (bpw = '-' + bpw), bpw;
                }, bpo['toJSON'] = bp4, bpo['toArray'] = bpA, bqn && (bpo['toBuffer'] = bpE), bqo && (bpo['toArrayBuffer'] = bpJ), boJ[bpp] = function(boA) {
                    return !(!boA || !boA[bpq]);
                }, boB[boA] = boJ, boJ;
            }

            function bpA(boA) {
                var boB = this['buffer'],
                    boC = this['offset'];
                return bqm = null, !0x1 !== boA && 0x0 === boC && 0x8 === boB['length'] && bqr(boB) ? boB : bpZ(boB, boC);
            }

            function bpE(boB) {
                var boC = this['buffer'],
                    bpA = this['offset'];
                if (bqm = bqn, !0x1 !== boB && 0x0 === bpA && 0x8 === boC['length'] && boA['isBuffer'](boC)) return boC;
                var bpE = new bqn(0x8);
                return bpT(bpE, 0x0, boC, bpA), bpE;
            }

            function bpJ(boA) {
                var boB = this['buffer'],
                    boC = this['offset'],
                    bpA = boB['buffer'];
                if (bqm = bqo, !0x1 !== boA && 0x0 === boC && bpA instanceof bqp && 0x8 === bpA['byteLength']) return bpA;
                var bpE = new bqo(0x8);
                return bpT(bpE, 0x0, boB, boC), bpE['buffer'];
            }

            function bpP(boA, boB) {
                var boC = boA && boA['length'];
                return boB |= 0x0, boC && boB + 0x8 <= boC && 'string' != typeof boA[boB];
            }

            function bpT(boA, boB, boC, bpA) {
                boB |= 0x0, bpA |= 0x0;
                for (var bpE = 0x0; 0x8 > bpE; bpE++) boA[boB++] = 0xff & boC[bpA++];
            }

            function bpZ(boA, boB) {
                return Array['prototype']['slice']['call'](boA, boB, boB + 0x8);
            }

            function bq2(boA, boB, boC) {
                for (var bpA = boB + 0x8; bpA > boB;) boA[--bpA] = 0xff & boC, boC /= 0x100;
            }

            function bq7(boA, boB, boC) {
                var bpA = boB + 0x8;
                for (boC++; bpA > boB;) boA[--bpA] = 0xff ^ 0xff & -boC, boC /= 0x100;
            }

            function bqc(boA, boB, boC) {
                for (var bpA = boB + 0x8; boB < bpA;) boA[boB++] = 0xff & boC, boC /= 0x100;
            }

            function bqh(boA, boB, boC) {
                var bpA = boB + 0x8;
                for (boC++; boB < bpA;) boA[boB++] = 0xff ^ 0xff & -boC, boC /= 0x100;
            }
            var bqm, bqn = void 0x0 !== boA && boA,
                bqo = 'undefined' != typeof Uint8Array && Uint8Array,
                bqp = 'undefined' != typeof ArrayBuffer && ArrayBuffer,
                bqq = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
                bqr = Array['isArray'] || function(boA) {
                    return !!boA && '[object\x20Array]' == Object['prototype']['toString']['call'](boA);
                };
            boC('Uint64BE', !0x0, !0x0), boC('Int64BE', !0x0, !0x1), boC('Uint64LE', !0x1, !0x0), boC('Int64LE', !0x1, !0x1);
        }('string' != typeof boB['nodeName'] ? boB : this || {});
    }['call'](this, boC(0x1b)['Buffer']));
}, function(bqt, bqu, bqv) {
    var bqw = bqv(0x10)['ExtBuffer'],
        bqx = bqv(0x33),
        bqy = bqv(0x20)['readUint8'],
        bqz = bqv(0x34),
        bqA = bqv(0xc);

    function bqB() {
        var bqt = this['options'];
        return this['decode'] = function(bqt) {
            var bqu = bqz['getReadToken'](bqt);
            return function(bqt) {
                var bqv = bqy(bqt),
                    bqw = bqu[bqv];
                if (!bqw) throw new Error('Invalid\x20type:\x20' + (bqv ? '0x' + bqv['toString'](0x10) : bqv));
                return bqw(bqt);
            };
        }(bqt), bqt && bqt['preset'] && bqx['setExtUnpackers'](this), this;
    }
    bqA['install']({
        'addExtUnpacker': function(bqt, bqu) {
            (this['extUnpackers'] || (this['extUnpackers'] = []))[bqt] = bqA['filter'](bqu);
        },
        'getExtUnpacker': function(bqt) {
            return (this['extUnpackers'] || (this['extUnpackers'] = []))[bqt] || function(bqu) {
                return new bqw(bqu, bqt);
            };
        },
        'init': bqB
    }), bqu['preset'] = bqB['call'](bqA['preset']);
}, function(bqM, bqN) {
    var bqO = function() {
        return this;
    }();
    try {
        bqO = bqO || new Function('return\x20this')();
    } catch (bqP) {
        'object' == typeof window && (bqO = window);
    }
    bqM['exports'] = bqO;
}, function(bqQ, bqR) {
    bqQ['exports'] = [{
        'name': 'Sniper\x20Rifle',
        'src': 'weapon_1',
        'icon': 'icon_1',
        'sound': 'weapon_1',
        'animWhileAim': !0x0,
        'trail': !0x0,
        'flap': {
            'src': 'flap_0',
            'rot': 2.1,
            'scl': 0x1,
            'zOff': 0.43,
            'xOff': 0.17,
            'yOff': 0.53
        },
        'noAo': !0x0,
        'nAuto': !0x0,
        'type': 0x0,
        'scope': !0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 0.95,
        'ammo': 0x3,
        'reload': 0x5dc,
        'dmg': 0x64,
        'pierce': 0.2,
        'range': 0x3e8,
        'dropStart': 0xe6,
        'dmgDrop': 0x1e,
        'scale': 0.00115608717587935,
        'leftHoldY': -0.7,
        'rightHoldY': -0.75,
        'leftHoldZ': 2.4,
        'rightHoldZ': 0.4,
        'xOff': 0.8,
        'yOff': -0.68,
        'zOff': -1.8,
        'xOrg': 0x0,
        'yOrg': -0.55,
        'zOrg': -0.8,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.2,
        'inspectM': 0.1,
        'muzOff': 0x8,
        'muzMlt': 1.6,
        'rate': 0x384,
        'spread': 0x104,
        'zoom': 2.7,
        'leanMlt': 1.5,
        'recoil': 0.009,
        'recoilR': 0.02,
        'recover': 0.993,
        'recoverY': 0.997,
        'recoverF': 0.975,
        'recoilYM': 0.35,
        'recoilZ': 1.4,
        'recoilAnim': {
            'time': 0x118,
            'aimTime': 0x1f4,
            'recoilTweenY': 0.2
        },
        'jumpYM': 0.15,
        'rumble': 0.9,
        'rumbleDur': 0x1f4,
        'icnPad': 0x9
    }, {
        'name': 'Assault\x20Rifle',
        'src': 'weapon_2',
        'icon': 'icon_2',
        'sound': 'weapon_2',
        'noAo': !0x0,
        'swapWiggle': 0.3,
        'attach': 0x0,
        'attachYOff': -0.1,
        'attachZOff': -0.8,
        'zRot': 0x1,
        'type': 0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x82,
        'spdMlt': 0.95,
        'ammo': 0x1e,
        'rate': 0x6e,
        'reload': 0x4b0,
        'dmg': 0x17,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0x5,
        'scale': 0.00095745145728643,
        'leftHoldY': -0.45,
        'rightHoldY': -0.6,
        'leftHoldZ': 0.65,
        'rightHoldZ': -1.3,
        'xOff': 0x1,
        'yOff': -0.7,
        'yRot': 0.0018,
        'zOff': -3.6,
        'xOrg': 0x0,
        'yOrg': -0.625,
        'zOrg': -2.3,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.1,
        'inspectM': 1.5,
        'caseZOff': -1.7,
        'caseYOff': -0.2,
        'muzOff': 5.1,
        'muzOffY': -0.05,
        'muzMlt': 1.4,
        'spread': 0x64,
        'minSpread': 0x5,
        'zoom': 1.6,
        'leanMlt': 1.5,
        'recoil': 0.003,
        'recoilR': 0.02,
        'recover': 0.978,
        'recoverY': 0.995,
        'recoverF': 0.975,
        'jYMlt': 0.9,
        'recoilYM': 0.32,
        'recoilZ': 0x5,
        'recoilZM': -0.05,
        'aimRecMlt': 0.8,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.05
        },
        'jumpYM': 0.6,
        'rumble': 0.5,
        'icnPad': 0x5
    }, {
        'name': 'Pistol',
        'src': 'weapon_3',
        'icon': 'icon_3',
        'sound': 'weapon_3',
        'secondary': !0x0,
        'noAo': !0x0,
        'transp': !0x0,
        'nAuto': !0x0,
        'kill': ['', 0x4b],
        'swapWiggle': 0.3,
        'type': 0x1,
        'shine': 0xa,
        'swapTime': 0x15e,
        'aimSpeed': 0x78,
        'spdMlt': 1.05,
        'ammo': 0xa,
        'reload': 0x2bc,
        'dmg': 0x14,
        'range': 0x2bc,
        'dmgDrop': 0xa,
        'scale': 0.0003158947055276376,
        'leftHoldY': -1.1,
        'rightHoldY': -0.62,
        'leftHoldZ': -0.55,
        'rightHoldZ': -0.5,
        'xOff': 0.7,
        'yOff': -0.6,
        'zOff': -3.7,
        'xOrg': 0x0,
        'yRot': -0.005,
        'yOrg': -0.23,
        'zOrg': -3.9,
        'jYMlt': 0.1,
        'cLean': 0.3,
        'cRot': 0.3,
        'caseZOff': 0.2,
        'caseYOff': 0x0,
        'inspectR': 0.3,
        'inspectM': 0.8,
        'muzOff': 1.5,
        'muzOffY': 0x0,
        'muzMlt': 0.95,
        'rate': 0x96,
        'spread': 0x5a,
        'zoom': 1.4,
        'leanMlt': 0x1,
        'recoil': 0.006,
        'recoilR': 0.01,
        'recover': 0.98,
        'recoverY': 0.99,
        'recoverF': 0.98,
        'recoilYM': 0.2,
        'aimRecMlt': 0.4,
        'recoilZ': 3.6,
        'recoilZM': -0.4,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenY': 0.2
        },
        'rumble': 0.4,
        'icnPad': -0xf
    }, {
        'name': 'Submachine\x20Gun',
        'src': 'weapon_4',
        'icon': 'icon_4',
        'sound': 'weapon_4',
        'swapWiggle': 0.5,
        'attach': 0x0,
        'attachYOff': -0.09,
        'attachZOff': -1.1,
        'zRot': 0.75,
        'noAo': !0x0,
        'type': 0x0,
        'shine': 0x32,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 1.04,
        'ammo': 0x18,
        'reload': 0x3e8,
        'dmg': 0x12,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0xc,
        'scale': 0.000574897587939697,
        'leftHoldY': -0.4,
        'leftHoldX': -0.1,
        'rightHoldY': -0.5,
        'leftHoldZ': 1.1,
        'rightHoldZ': -0.95,
        'xOff': 0.85,
        'yOff': -0.86,
        'zOff': -0x3,
        'xOrg': 0x0,
        'yOrg': -0.59,
        'zOrg': -2.5,
        'cRot': 0.18,
        'cLean': 0.16,
        'inspectR': 0.2,
        'inspectM': 1.2,
        'caseYOff': -0.15,
        'caseZOff': -0.4,
        'muzOff': 2.15,
        'muzOffY': 0.1,
        'rate': 0x5a,
        'spread': 0x46,
        'minSpread': 0x5,
        'zoom': 1.65,
        'jYMlt': 0.8,
        'leanMlt': 0x1,
        'recoil': 0.0034,
        'recoilY': 0.77,
        'recoilR': 0.02,
        'recover': 0.975,
        'recoverY': 0.996,
        'recoverF': 0.975,
        'recoilZ': 3.2,
        'recoilZM': -0.1,
        'aimRecMlt': 0.7,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenYM': 0.05,
            'recoilTweenY': 0.06
        },
        'expScale': 0.8,
        'rumble': 0.4,
        'icnPad': 0x0
    }, {
        'name': 'Revolver',
        'src': 'weapon_5',
        'icon': 'icon_5',
        'sound': 'weapon_5',
        'nAuto': !0x0,
        'nCase': !0x0,
        'transp': !0x0,
        'kill': ['', 0x32],
        'type': 0x0,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 1.04,
        'ammo': 0x6,
        'reload': 0x384,
        'dmg': 0x42,
        'pierce': 0.85,
        'dmgDrop': 0xa,
        'scale': 1.3,
        'leftHoldY': -1.1,
        'rightHoldY': -0.8,
        'leftHoldZ': -0.5,
        'rightHoldZ': -0.5,
        'xOff': 0.7,
        'yOff': -0.7,
        'zOff': -4.1,
        'xOrg': 0x0,
        'yOrg': -0.31,
        'zOrg': -3.8,
        'jYMlt': 0.5,
        'cLean': 0.5,
        'cRot': 0.4,
        'cDrop': 0.1,
        'inspectR': 0.1,
        'inspectM': 0.3,
        'muzOff': 2.75,
        'muzOffY': 0.2,
        'muzMlt': 0.95,
        'range': 0x2bc,
        'rate': 0x186,
        'spread': 0x64,
        'zoom': 1.4,
        'leanMlt': 1.6,
        'recoil': 0.013,
        'recoilR': 0.035,
        'recover': 0.982,
        'recoverY': 0.992,
        'recoverF': 0.98,
        'recoilYM': 0.2,
        'aimRecMlt': 0.6,
        'recoilZM': -1.4,
        'recoilZ': 0x2,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.4
        },
        'expScale': 0.9,
        'rumble': 0.7,
        'icnPad': -0xa
    }, {
        'name': 'Shotgun',
        'src': 'weapon_6',
        'icon': 'icon_6',
        'sound': 'weapon_6',
        'noAo': !0x0,
        'nAuto': !0x0,
        'nCase': !0x0,
        'transp': !0x0,
        'nRing': !0x0,
        'swapWiggle': 0.4,
        'shine': 0x23,
        'type': 0x0,
        'physRang': 0x23,
        'physPow': 0.085,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x2,
        'reload': 0x44c,
        'dmg': 0x32,
        'dmgDrop': 0x32,
        'scale': 0.00082934281407035,
        'rightHoldX': 0.1,
        'leftHoldY': -0.5,
        'rightHoldY': -0.7,
        'leftHoldZ': 0.4,
        'rightHoldZ': -1.5,
        'xOff': 0.95,
        'yOff': -0.65,
        'zOff': -3.8,
        'xOrg': 0x0,
        'yOrg': -0.3,
        'zOrg': -2.8,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'jYMlt': 0.2,
        'inspectR': 0.1,
        'inspectM': 1.9,
        'muzOff': 0x6,
        'muzMlt': 1.8,
        'range': 0xdc,
        'rate': 0x190,
        'innac': 0x6e,
        'spread': 0x78,
        'shots': 0x5,
        'minSpread': 0x14,
        'zoom': 1.25,
        'leanMlt': 1.6,
        'recoil': 0.016,
        'recoilR': 0.015,
        'recover': 0.99,
        'recoverF': 0.97,
        'recoilZ': 0x2,
        'recoilZM': 0.2,
        'aimRecMlt': 0.5,
        'recoilYM': 0.6,
        'recoilAnim': {
            'time': 0x154,
            'recoilTweenY': 0.2
        },
        'jumpYM': 0.5,
        'rumble': 0.8,
        'icnPad': 0xa
    }, {
        'name': 'Light\x20Machine\x20Gun',
        'src': 'weapon_7',
        'icon': 'icon_7',
        'sound': 'weapon_7',
        'type': 0x0,
        'attach': 0x0,
        'swapWiggle': 0.3,
        'attachYOff': -0.085,
        'attachZOff': -0.7,
        'zRot': 0.75,
        'noAo': !0x0,
        'swapTime': 0x2bc,
        'aimSpeed': 0xc8,
        'spdMlt': 0.79,
        'ammo': 0x3c,
        'reload': 0xdac,
        'dmg': 0x14,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0xa,
        'jYMlt': 0.8,
        'scale': 0.0008856008924623108,
        'leftHoldY': -0.85,
        'leftHoldX': 0.4,
        'rightHoldY': -0.75,
        'leftHoldZ': 1.1,
        'rightHoldZ': -0.2,
        'yRot': -0.01,
        'xOff': 0.95,
        'yOff': -0.75,
        'zOff': -2.8,
        'xOrg': 0x0,
        'yOrg': -0.6,
        'zOrg': -1.8,
        'cLean': 0.1,
        'cRot': 0.1,
        'cDrop': 0.1,
        'inspectR': 0.2,
        'inspectM': 0.6,
        'caseInd': 0x2,
        'caseZOff': -0.5,
        'caseYOff': -0.1,
        'muzOff': 5.5,
        'muzOffY': -0.14,
        'muzMlt': 1.7,
        'rate': 0x78,
        'spread': 0x12c,
        'minSpread': 0xa,
        'zoom': 1.3,
        'leanMlt': 1.6,
        'recoil': 0.0032,
        'recoilR': 0.014,
        'recover': 0.98,
        'recoverY': 0.9975,
        'recoverF': 0.975,
        'recoilZ': 3.8,
        'recoilYM': 0.25,
        'recoilZ': 0x3,
        'recoilZM': -0.1,
        'aimRecMlt': 0.5,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenY': 0.03
        },
        'jumpYM': 0.5,
        'expScale': 0.85,
        'rumble': 0.65,
        'icnPad': 0xa
    }, {
        'name': 'Semi\x20Auto',
        'src': 'weapon_8',
        'icon': 'icon_8',
        'sound': 'weapon_8',
        'attach': 0x0,
        'attachYOff': -0.08,
        'attachZOff': -1.55,
        'nAuto': !0x0,
        'zRot': 0.7,
        'type': 0x0,
        'noAo': !0x0,
        'swapWiggle': 0.4,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x8,
        'reload': 0x5dc,
        'dmg': 0x22,
        'pierce': 0.2,
        'range': 0x3e8,
        'dmgDrop': 0x0,
        'scale': 0.00093686221105528,
        'leftHoldY': -0.5,
        'rightHoldY': -0.45,
        'leftHoldZ': 0.4,
        'rightHoldZ': -1.85,
        'jYMlt': 0.9,
        'xOff': 0.8,
        'yOff': -0.55,
        'zOff': -3.5,
        'xOrg': 0x0,
        'yOrg': -0.395,
        'yRot': -0.005,
        'zOrg': -3.4,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.2,
        'inspectM': 1.4,
        'muzOff': 0x4,
        'muzOffY': -0.05,
        'muzMlt': 1.1,
        'rate': 0x78,
        'spread': 0xfa,
        'caseZOff': -1.3,
        'zoom': 2.1,
        'recoil': 0.01,
        'recoilR': 0.012,
        'recover': 0.98,
        'recoilY': 0.36,
        'recoverY': 0.994,
        'recoverF': 0.975,
        'recoilYM': 0.6,
        'recoilZ': 0x2,
        'recoilZM': 0.2,
        'aimRecMlt': 0.8,
        'recoilAnim': {
            'time': 0xfa,
            'recoilTweenY': 0.11
        },
        'jumpYM': 0.5,
        'rumble': 0.75,
        'icnPad': 0xa
    }, {
        'name': 'Rocket\x20Launcher',
        'src': 'weapon_9',
        'icon': 'icon_9',
        'sound': 'weapon_9',
        'nInsp': !0x0,
        'nSkill': !0x0,
        'nAuto': !0x0,
        'nCase': !0x0,
        'nRing': !0x0,
        'noAo': !0x0,
        'projectile': 0x0,
        'type': 0x0,
        'swapTime': 0x190,
        'swapWiggle': 0.4,
        'aimSpeed': 0xc8,
        'spdMlt': 0.9,
        'ammo': 0x1,
        'reload': 0x640,
        'scale': 0.00076263407035176,
        'leftHoldX': -0.1,
        'leftHoldY': -0.36,
        'rightHoldY': -0.3,
        'leftHoldZ': 1.2,
        'rightHoldX': -0.15,
        'rightHoldZ': -0.2,
        'jYMlt': 0.4,
        'xOff': 0.95,
        'yOff': -0.56,
        'zOff': -2.6,
        'xOrg': 0x0,
        'yOrg': -0.945,
        'zOrg': -0x3,
        'zRot': 0.9,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'muzOff': 0x5,
        'muzOffY': 0x0,
        'muzMlt': 1.5,
        'rate': 0x1,
        'spread': 0x78,
        'minSpread': 0xf,
        'zoom': 1.5,
        'leanMlt': 1.4,
        'landBob': 0.8,
        'recoil': 0.008,
        'recoilR': 0.012,
        'recover': 0.99,
        'recoverY': 0.998,
        'recoverF': 0.975,
        'recoilZ': 0x4,
        'recoilZM': -0.5,
        'aimRecMlt': 0.9,
        'recoilAnim': {
            'time': 0x190,
            'recoilTweenY': 0.25
        },
        'jumpYM': 0.3,
        'expScale': 0.7,
        'rumble': 0x1,
        'rumbleDur': 0x2ee,
        'icnPad': 0xa
    }, {
        'name': 'Akimbo\x20Uzi',
        'src': 'weapon_10',
        'icon': 'icon_10',
        'sound': 'weapon_10',
        'nInsp': !0x0,
        'noAim': !0x0,
        'akimbo': !0x0,
        'type': 0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x78,
        'spdMlt': 1.04,
        'ammo': 0x12,
        'reload': 0x4b0,
        'dmg': 0x12,
        'pierce': 0x1,
        'range': 0x2bc,
        'dmgDrop': 0xc,
        'scale': 0.9,
        'rightHoldY': -0.55,
        'leftHoldZ': 0.3,
        'leftHoldX': -0.25,
        'leftHoldY': -0.55,
        'rightHoldZ': 0.3,
        'rightHoldX': -0.25,
        'holdW': 1.3,
        'xOff': 1.5,
        'yOff': -0.95,
        'zOff': -3.3,
        'xOrg': 0x0,
        'yOrg': -0.62,
        'zOrg': -2.5,
        'zLnM': 0.4,
        'cLean': 0.1,
        'cRot': 0.1,
        'cDrop': 0.2,
        'caseYOff': -0.15,
        'caseZOff': -0.4,
        'muzOff': 3.6,
        'rate': 0x3c,
        'spread': 0x28,
        'spreadInc': 1.5,
        'minSpread': 0xa,
        'zoom': 1.5,
        'leanMlt': 0.6,
        'recoil': 0.0034,
        'recoilR': 0.015,
        'recover': 0.978,
        'recoverY': 0.996,
        'recoverF': 0.975,
        'recoilZ': 0x5,
        'recoilYM': 0.6,
        'recoilAnim': {
            'recoilTweenY': 0.01
        },
        'expScale': 0.7,
        'rumble': 0.4,
        'icnPad': -0x4
    }, {
        'name': 'Desert\x20Eagle',
        'src': 'weapon_11',
        'icon': 'icon_11',
        'sound': 'weapon_11',
        'secondary': !0x0,
        'minRec': 0xf,
        'nAuto': !0x0,
        'noAo': !0x0,
        'transp': !0x0,
        'kill': ['', 0x32],
        'type': 0x1,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x6,
        'reload': 0x3e8,
        'dmg': 0x32,
        'pierce': 0.85,
        'dmgDrop': 0xa,
        'scale': 0.94,
        'leftHoldY': -0.9,
        'rightHoldY': -0.7,
        'leftHoldZ': -0.5,
        'rightHoldZ': -0.5,
        'holdW': 0.95,
        'xOff': 0x1,
        'yOff': -0.7,
        'zOff': -4.1,
        'xOrg': 0x0,
        'yOrg': -0.195,
        'zOrg': -3.8,
        'cLean': 0.3,
        'cRot': 0.3,
        'inspectR': 0.35,
        'inspectM': 0.9,
        'muzOff': 0x2,
        'muzMlt': 1.1,
        'range': 0x2bc,
        'rate': 0x190,
        'spread': 0x96,
        'jYMlt': 0.5,
        'zoom': 1.4,
        'leanMlt': 1.6,
        'recoil': 0.01,
        'recoilR': 0.01,
        'recover': 0.985,
        'recoverY': 0.996,
        'recoverF': 0.98,
        'recoilYM': 0.4,
        'aimRecMlt': 0.5,
        'recoilZ': 2.5,
        'recoilZM': 0.2,
        'recoilAnim': {
            'time': 0x122,
            'recoilTweenY': 0.35
        },
        'rumble': 0.8,
        'icnPad': -0xa
    }, {
        'name': 'Alien\x20Blaster',
        'src': 'weapon_13',
        'icon': 'icon_13',
        'sound': 'weapon_13',
        'secondary': !0x0,
        'nRing': !0x0,
        'nAuto': !0x0,
        'transp': !0x0,
        'nCase': !0x0,
        'minRec': 0x32,
        'kill': ['', 0x32],
        'type': 0x1,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x4,
        'reload': 0x5dc,
        'dmg': 0x32,
        'pierce': 0.85,
        'dmgDrop': 0xa,
        'scale': 1.1,
        'leftHoldY': -0x1,
        'rightHoldY': -0.65,
        'leftHoldZ': -0.2,
        'rightHoldZ': -0.2,
        'xOff': 1.3,
        'yOff': -0.83,
        'zOff': -4.1,
        'xOrg': 0x0,
        'yRot': -0.01,
        'yOrg': -0.53,
        'zOrg': -3.8,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0x0,
        'inspectR': 0.1,
        'inspectM': 0.8,
        'holdW': 0.7,
        'muzOff': 2.2,
        'muzOffY': 0.1,
        'muzID': 0x3,
        'muzMlt': 1.1,
        'jYMlt': 0.8,
        'range': 0x2bc,
        'rate': 0x96,
        'spread': 0x96,
        'zoom': 1.4,
        'leanMlt': 1.6,
        'recoil': 0.006,
        'recoilR': 0.01,
        'recover': 0.98,
        'recoverY': 0.99,
        'recoverF': 0.98,
        'recoilYM': 0.2,
        'recoilZ': 0x2,
        'aimRecMlt': 0.6,
        'recoilAnim': {
            'time': 0xc8,
            'recoilTweenY': 0.3
        },
        'rumble': 0.4,
        'icnPad': -0x8
    }, {
        'name': 'Combat\x20Knife',
        'icon': 'icon_0',
        'melee': !0x0,
        'nInsp': !0x0,
        'noSkins': !0x0,
        'holdW': 0.9,
        'swapWiggle': 0.3,
        'sounds': ['swish_0', 'swish_1'],
        'noAim': !0x0,
        'anim': function(bqQ, bqR, bqU) {
            if (0x1 == bqU) {
                bqQ['handAnimInd'] = -0x1 * (bqQ['handAnimInd'] || 0x1);
                var bqV = !0x1;
                bqQ['meleeAnim']['anim'] && (bqQ['meleeAnim']['anim']['stop'](), bqV = 0x2 <= bqQ['meleeAnim']['armM']), bqQ['resetMeleeAnim']();
                var bqW = -1.2,
                    bqX = 0.7,
                    bqY = -0.4;
                bqV ? (bqW += 0.1, bqQ['meleeAnim']['weaR'] = bqW, bqY += 0.8, bqQ['meleeAnim']['armR'] = bqY, bqX += 0.2, bqQ['meleeAnim']['weaM'] = bqX, bqQ['meleeAnim']['flipW'] = Math['PI']) : bqW -= 0.4, bqQ['meleeAnim']['anim'] = new bqR['Tween'](bqQ['meleeAnim'])['to']({
                    'armR': bqY,
                    'lArm': 0x1,
                    'armT': bqV ? -0.2 : -0.8,
                    'armY': -0x3,
                    'armM': bqV ? -0xa : 0xd,
                    'armE': -0x2,
                    'weaR': bqW,
                    'weaM': bqX
                }, 0xdc * (bqV ? 1.3 : 0x1))['easing'](bqR['Easing']['Cubic']['Out'])['onComplete'](function() {
                    bqQ['meleeAnim']['anim'] = new bqR['Tween'](bqQ['meleeAnim'])['to']({
                        'armR': 0x0,
                        'armT': 0x0,
                        'armY': 0x0,
                        'lArm': 0x0,
                        'armM': 0x0,
                        'armE': 0x0,
                        'weaR': 0x0,
                        'weaM': 0x0,
                        'flipW': 0x0
                    }, 0x15e)['easing'](bqR['Easing']['Cubic']['Out'])['start']();
                })['start']();
            } else {
                bqQ['handAnimInd'] = -0x1 * (bqQ['handAnimInd'] || 0x1);
                var bqZ = (0x1 == bqQ['handAnimInd'] ? 'l' : 'r') + 'HndTween';
                bqQ[bqZ] && bqQ[bqZ]['stop'](), bqQ[bqZ + 'A'] = bqQ[bqZ + 'A'] || 0x0, bqQ[bqZ] = new bqR['Tween'](bqQ)['to']({
                    [bqZ + 'A']: 2.4
                }, 0x1e)['easing'](bqR['Easing']['Linear']['None'])['onComplete'](function() {
                    bqQ[bqZ] = new bqR['Tween'](bqQ)['to']({
                        [bqZ + 'A']: 0x0
                    }, 0xc8)['easing'](bqR['Easing']['Linear']['None'])['delay'](0x64)['start']();
                })['start']();
            }
        },
        'type': 0x1,
        'swapTime': 0x15e,
        'aimSpeed': 0x78,
        'rate': 0xfa,
        'dmg': 0x32,
        'dmgDrop': 0x0,
        'range': 0xf,
        'spdMlt': 1.1,
        'spread': 0x64,
        'leftHoldY': -0.82,
        'leftHoldX': 1.5,
        'rightHoldX': -1.5,
        'rightHoldY': -0.82,
        'leftHoldZ': -0.5,
        'rightHoldZ': -0.5,
        'xOff': 0x0,
        'yOff': -0.6,
        'zOff': -3.6,
        'xOrg': 0.5,
        'yOrg': 0x0,
        'zOrg': -3.6,
        'zRM': 0.35,
        'zoom': 0x1,
        'leanMlt': 0.8,
        'recoil': 0.006,
        'recoilR': 0.01,
        'recover': 0.98,
        'recoverF': 0.98,
        'rumble': 0x1,
        'icnPad': -0xa
    }, {
        'name': 'Crossbow',
        'src': 'weapon_17',
        'icon': 'icon_17',
        'sound': 'weapon_17',
        'noSkins': !0x0,
        'nInsp': !0x0,
        'nRing': !0x0,
        'nAuto': !0x0,
        'noAo': !0x0,
        'nCase': !0x0,
        'nMuz': !0x0,
        'attach': 0x0,
        'attachYOff': -0.1,
        'attachZOff': 0.65,
        'kill': ['', 0x64],
        'type': 0x0,
        'projectile': 0x1,
        'swapTime': 0xc8,
        'aimSpeed': 0x78,
        'spdMlt': 0x1,
        'ammo': 0x1,
        'reload': 0x3e8,
        'dmg': 0x64,
        'pierce': 0x0,
        'dmgDrop': 0x0,
        'scale': 0.0007303348040201011,
        'leftHoldY': -0.33,
        'rightHoldY': -0.28,
        'leftHoldZ': 2.2,
        'leftHoldX': 0x0,
        'rightHoldZ': 0.9,
        'xOff': 1.3,
        'yOff': -0.95,
        'zOff': -1.9,
        'xOrg': 0x0,
        'yOrg': -0.72,
        'zOrg': -0x1,
        'cLean': 0.1,
        'cRot': 0.1,
        'zRot': 0.9,
        'cDrop': 0.2,
        'holdW': 0.5,
        'muzOff': 2.2,
        'muzOffY': 0.1,
        'muzID': 0x3,
        'muzMlt': 1.1,
        'jYMlt': 0.95,
        'range': 0x2bc,
        'rate': 0x96,
        'spread': 0x12c,
        'zoom': 1.4,
        'leanMlt': 0.3,
        'recoil': 0.007,
        'recoilR': 0.01,
        'recover': 0.985,
        'recoverY': 0.996,
        'recoverF': 0.98,
        'recoilZ': 0x4,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.1
        },
        'rumble': 0.5,
        'icnPad': 0x9
    }, {
        'name': 'Famas',
        'src': 'weapon_15',
        'icon': 'icon_15',
        'sound': 'weapon_15',
        'noAo': !0x0,
        'nAuto': !0x0,
        'burst': {
            'c': 0x3,
            'r': 0x5a
        },
        'swapWiggle': 0.6,
        'attach': 0x0,
        'attachYOff': -0.1,
        'attachZOff': -0.5,
        'zRot': 0x1,
        'type': 0x0,
        'swapTime': 0x12c,
        'aimSpeed': 0x82,
        'spdMlt': 0.95,
        'ammo': 0x1e,
        'rate': 0x118,
        'reload': 0x4b0,
        'dmg': 0x1c,
        'pierce': 0x1,
        'range': 0x384,
        'dmgDrop': 0x5,
        'scale': 0.0008858419597989991,
        'leftHoldY': -0.45,
        'rightHoldY': -0.5,
        'leftHoldZ': 0.72,
        'rightHoldZ': -0x1,
        'xOff': 0x1,
        'yOff': -0.86,
        'yRot': 0.0018,
        'zOff': -0x3,
        'xOrg': 0x0,
        'yOrg': -1.14,
        'zOrg': -0x2,
        'cLean': 0.2,
        'cRot': 0.2,
        'cDrop': 0.1,
        'inspectR': 0.1,
        'inspectM': 1.5,
        'caseZOff': -1.7,
        'caseYOff': -0.2,
        'muzOff': 4.9,
        'muzOffY': -0.05,
        'muzMlt': 1.4,
        'spread': 0x5a,
        'minSpread': 0x5,
        'zoom': 1.5,
        'leanMlt': 1.5,
        'recoil': 0.0032,
        'recoilR': 0.02,
        'recover': 0.978,
        'recoverY': 0.995,
        'recoverF': 0.975,
        'jYMlt': 0.9,
        'recoilYM': 0.32,
        'recoilZ': 0x5,
        'recoilZM': 0.05,
        'aimRecMlt': 0.8,
        'recoilAnim': {
            'time': 0x12c,
            'recoilTweenY': 0.05
        },
        'jumpYM': 0.6,
        'rumble': 0.5,
        'expScale': 0.9,
        'icnPad': 0x9
    }], bqQ['exports']['findWeaponBySrc'] = function(bqR) {
        for (var br1 = 0x0; br1 < bqQ['exports']['length']; ++br1)
            if (bqQ['exports'][br1]['src'] == 'weapon_' + bqR) return bqQ['exports'][br1];
        return null;
    }, bqQ['exports']['findIndexBySrc'] = function(bqR) {
        for (var br3 = 0x0; br3 < bqQ['exports']['length']; ++br3)
            if (bqQ['exports'][br3]['src'] == bqR) return br3;
        return null;
    };
}, function(br4, br5, br6) {
    var br7 = br6(0x4);
    const br8 = br6(0x7);
    br6(0x8);
    var br9 = {};
    br4['exports']['getColor'] = function(br4, br5) {
        var br6 = br4 + '-' + (br5 || ''),
            br8 = br9[br6];
        return br8 || (br8 = new br7['Color'](br4), br5 && br8['multiplyScalar'](br5), br9[br6] = br8), br8;
    }, br4['exports']['colorize'] = function(br5, br6, br7) {
        br6 = br7 || br4['exports']['getColor'](br6);
        for (var br8 = 0x0; br8 < br5['faces']['length']; ++br8) br5['faces'][br8]['vertexColors'][0x0] = br6, br5['faces'][br8]['vertexColors'][0x1] = br6, br5['faces'][br8]['vertexColors'][0x2] = br6;
    };
    var bri, brj = function(br4, br5, br6, br8) {
            for (var br9, bri = new br7['Vector2'](br5, br6)['multiplyScalar'](br8 || 0x1), brj = 0x0; brj < br4['faceVertexUvs']['length']; brj++) {
                br9 = br4['faceVertexUvs'][brj];
                for (var brk = 0x0; brk < br9['length']; brk++)
                    for (var brl, brm = 0x0; 0x3 > brm; brm++)(brl = br9[brk][brm]['multiply'](bri))['x'] = 0.5 + brl['x'] - bri['x'] / 0x2;
            }
        },
        brk = function(br4, br5, br6, br7, br8, br9) {
            return br4 >= br6 - br8 && br4 <= br6 + br8 && br5 >= br7 - br9 && br5 <= br7 + br9;
        },
        brl = [],
        brm = ['a', 'b', 'c', 'd'];
    br4['exports']['generatePlane'] = function(br5, br6, br9, brG, brH, brI) {
        br5 *= br9['ratio'] || 0x1;
        var brJ = (br9['scale'] ? br5 + '_' + br6 + '_' : '') + (br9['scale'] || '') + (br9['tilesX'] || '') + (br9['tilesZ'] || '') + (br9['noise'] ? brG + '_' + brH + '_' + brI : '') + (null == br9['colr'] ? '' : br9['colr']) + (br9['dark'] || '');
        if (!(bri = brl[brJ])) {
            if (bri = new br7['PlaneGeometry'](0x1, 0x1, br9['tilesX'] || 0x1, br9['tilesZ'] || 0x1), br9['noise']) {
                for (var brK = {}, brL = br9['margin'] || 0x0, brM = 0x0; brM < bri['vertices']['length']; ++brM) {
                    var brN = bri['vertices'][brM]['x'],
                        brO = bri['vertices'][brM]['y'];
                    if (!br9['pinEdges'] || -0.5 != brN && 0.5 != brN && -0.5 != brO && 0.5 != brO)
                        if (br9['objects']) {
                            for (var brP = 0x0; brP < br9['objects']['length']; ++brP)
                                if (br9['objects'][brP]['y'] - br9['objects'][brP]['height'] <= brH + 0.1 && br9['objects'][brP]['y'] + br9['objects'][brP]['height'] > brH + br9['noise'] && brk(brI + -brO * br5 * 0x2, brG + brN * br6 * 0x2, br9['objects'][brP]['z'], br9['objects'][brP]['x'], br9['objects'][brP]['length'] + brL, br9['objects'][brP]['width'] + brL)) {
                                    bri['vertices'][brM]['z'] = Math['random']() * br9['noise'] + 0x1, brK[brM] = br4['exports']['getColor'](br9['colr'], 0.6);
                                    break;
                                }
                        } else bri['vertices'][brM]['z'] = Math['random']() * br9['noise'];
                    brK[brM] || (brK[brM] = br4['exports']['getColor'](br9['colr']));
                }
                for (brM = 0x0; brM < bri['faces']['length']; brM++) {
                    for (var brQ = bri['faces'][brM], brR = 0x0, brS = 0x0; 0x3 > brS; brS++) brQ['vertexColors'][brS] = brK[brQ[brm[brS]]], 0x0 >= bri['vertices'][brQ[brm[brS]]]['z'] && brR++;
                    0x3 <= brR && delete bri['faces'][brM];
                }
                bri['faces'] = bri['faces']['filter'](function(br4) {
                    return br4;
                }), bri['elementsNeedUpdate'] = !0x0;
            } else br4['exports']['colorize'](bri, null, br4['exports']['getColor'](br9['colr'] || 0xffffff, br9['dark'] || 0x1));
            br9['scale'] && brj(bri, br6 / br8['worldUV'], br5 / br8['worldUV'], br9['scale']), bri['computeVertexNormals'](), brl[brJ] = bri;
        }
        return bri;
    };
    var brU = [];
    br4['exports']['generateCube'] = function(br5, br6, br9, brk, brl) {
        br5 = br5 || [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], brl['flipp'] = (br6 > br9 || brk > br9) && 'floor_0' == brl['src'], brl['flippW'] = br6 > brk && 'floor_0' == brl['src'];
        for (var brm = (brl['scale'] ? br6 + '_' + br9 + '_' + brk + '_' : '') + (null == brl['colr'] ? '' : brl['colr']) + (brl['scale'] || '') + (brl['flippW'] ? 'flw' : 'fnw') + (brl['flipp'] ? 'fl' : 'fn') + (brl['amb'] || '') + (brl['fAmb'] || '') + (brl['useScale'] || ''), bs1 = 0x0; bs1 < br5['length']; ++bs1) brm += '_' + br5[bs1];
        if (!(bri = brU[brm])) {
            brl['colr'] = null == brl['colr'] ? 0xffffff : brl['colr'];
            var bs2 = br4['exports']['getColor'](brl['colr']),
                bs3 = brl['amb'] ? br4['exports']['getColor'](brl['colr'], brl['amb']) : bs2;
            if (brl['fAmb']) {
                var bs4 = bs2;
                bs2 = bs3, bs3 = bs4;
            }
            bri = new br7['Geometry']();
            var bs5, bs6 = [];
            br5[0x0] && ((bs5 = new br7['PlaneGeometry'](0x1, 0x1))['rotateY'](Math['PI'] / 0x2), brl['flipp'] && bs5['rotateX'](Math['PI'] / 0x2), bs5['translate'](0.5, 0.5, 0x0), bs5['faces'][0x0]['vertexColors'] = [bs2, bs3, bs2], bs5['faces'][0x1]['vertexColors'] = [bs3, bs3, bs2], brl['scale'] && brj(bs5, (brl['flipp'] ? br9 : brk) / br8['worldUV'], (brl['flipp'] ? brk : br9) / br8['worldUV'], brl['scale']), bs6['push'](bs5)), br5[0x1] && ((bs5 = new br7['PlaneGeometry'](0x1, 0x1))['rotateY'](-Math['PI'] / 0x2), brl['flipp'] && bs5['rotateX'](Math['PI'] / 0x2), bs5['translate'](-0.5, 0.5, 0x0), bs5['faces'][0x0]['vertexColors'] = [bs2, bs3, bs2], bs5['faces'][0x1]['vertexColors'] = [bs3, bs3, bs2], brl['scale'] && brj(bs5, (brl['flipp'] ? br9 : brk) / br8['worldUV'], (brl['flipp'] ? brk : br9) / br8['worldUV'], brl['scale']), bs6['push'](bs5)), br5[0x2] && ((bs5 = new br7['PlaneGeometry'](0x1, 0x1))['rotateX'](-Math['PI'] / 0x2), brl['flippW'] && bs5['rotateY'](Math['PI'] / 0x2), bs5['translate'](0x0, 0x1, 0x0), bs5['faces'][0x0]['vertexColors'] = [bs2, bs2, bs2], bs5['faces'][0x1]['vertexColors'] = [bs2, bs2, bs2], brl['scale'] && brj(bs5, (brl['flippW'] ? brk : br6) / br8['worldUV'], (brl['flippW'] ? br6 : brk) / br8['worldUV'], brl['scale']), bs6['push'](bs5)), br5[0x3] && ((bs5 = new br7['PlaneGeometry'](0x1, 0x1))['rotateX'](Math['PI'] / 0x2), brl['flippW'] && bs5['rotateY'](Math['PI'] / 0x2), bs5['translate'](0x0, 0x0, 0x0), bs5['faces'][0x0]['vertexColors'] = [bs3, bs3, bs3], bs5['faces'][0x1]['vertexColors'] = [bs3, bs3, bs3], brl['scale'] && brj(bs5, (brl['flippW'] ? brk : br6) / br8['worldUV'], (brl['flippW'] ? br6 : brk) / br8['worldUV'], brl['scale']), bs6['push'](bs5)), br5[0x4] && (bs5 = new br7['PlaneGeometry'](0x1, 0x1), brl['flipp'] && bs5['rotateZ'](Math['PI'] / 0x2), bs5['translate'](0x0, 0.5, 0.5), bs5['faces'][0x0]['vertexColors'] = [bs2, bs3, bs2], bs5['faces'][0x1]['vertexColors'] = [bs3, bs3, bs2], brl['scale'] && brj(bs5, (brl['flipp'] ? br9 : br6) / br8['worldUV'], (brl['flipp'] ? br6 : br9) / br8['worldUV'], brl['scale']), bs6['push'](bs5)), br5[0x5] && ((bs5 = new br7['PlaneGeometry'](0x1, 0x1))['rotateY'](Math['PI']), brl['flipp'] && bs5['rotateZ'](Math['PI'] / 0x2), bs5['translate'](0x0, 0.5, -0.5), bs5['faces'][0x0]['vertexColors'] = [bs2, bs3, bs2], bs5['faces'][0x1]['vertexColors'] = [bs3, bs3, bs2], brl['scale'] && brj(bs5, (brl['flipp'] ? br9 : br6) / br8['worldUV'], (brl['flipp'] ? br6 : br9) / br8['worldUV'], brl['scale']), bs6['push'](bs5));
            for (bs1 = 0x0; bs1 < bs6['length']; bs1++) bri['merge'](bs6[bs1], new br7['Matrix4']());
            brl && brl['useScale'] && (bri['scale'](br6, br9, brk), bri['translate'](0x0, -br9 / 0x2, 0x0)), brU[brm] = bri;
        }
        return bri;
    };
}, function(bs7, bs8, bs9) {
    bs9['d'](bs8, 'a', function() {
        return bsl;
    });
    var bsa = bs9(0x2),
        bsb = Object(bsa['e'])(),
        bsc = 'Sentry\x20Logger\x20',
        bsd = function() {
            function bs7() {
                this['_enabled'] = !0x1;
            }
            return bs7['prototype']['disable'] = function() {
                this['_enabled'] = !0x1;
            }, bs7['prototype']['enable'] = function() {
                this['_enabled'] = !0x0;
            }, bs7['prototype']['log'] = function() {
                for (var bs7 = [], bs8 = 0x0; bs8 < arguments['length']; bs8++) bs7[bs8] = arguments[bs8];
                this['_enabled'] && Object(bsa['b'])(function() {
                    bsb['console']['log'](bsc + '[Log]:\x20' + bs7['join']('\x20'));
                });
            }, bs7['prototype']['warn'] = function() {
                for (var bs7 = [], bs8 = 0x0; bs8 < arguments['length']; bs8++) bs7[bs8] = arguments[bs8];
                this['_enabled'] && Object(bsa['b'])(function() {
                    bsb['console']['warn'](bsc + '[Warn]:\x20' + bs7['join']('\x20'));
                });
            }, bs7['prototype']['error'] = function() {
                for (var bs7 = [], bs8 = 0x0; bs8 < arguments['length']; bs8++) bs7[bs8] = arguments[bs8];
                this['_enabled'] && Object(bsa['b'])(function() {
                    bsb['console']['error'](bsc + '[Error]:\x20' + bs7['join']('\x20'));
                });
            }, bs7;
        }();
    bsb['__SENTRY__'] = bsb['__SENTRY__'] || {};
    var bsl = bsb['__SENTRY__']['logger'] || (bsb['__SENTRY__']['logger'] = new bsd());
}, function(bsm, bsn, bso) {
    bsn['encode'] = function(bsm, bsn) {
        var bso = new bss(bsn);
        return bso['write'](bsm), bso['read']();
    };
    var bss = bso(0x1a)['EncodeBuffer'];
}, function(bst, bsu, bsv) {
    bsu['EncodeBuffer'] = bsx;
    var bsw = bsv(0xf)['preset'];

    function bsx(bst) {
        if (!(this instanceof bsx)) return new bsx(bst);
        if (bst && (this['options'] = bst, bst['codec'])) {
            var bsu = this['codec'] = bst['codec'];
            bsu['bufferish'] && (this['bufferish'] = bsu['bufferish']);
        }
    }
    bsv(0x1d)['FlexEncoder']['mixin'](bsx['prototype']), bsx['prototype']['codec'] = bsw, bsx['prototype']['write'] = function(bst) {
        this['codec']['encode'](this, bst);
    };
}, function(bsB, bsC, bsD) {
    (function(bsB) {
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
         * @license  MIT
         */
        var bsF = bsD(0x2b),
            bsG = bsD(0x11),
            bsH = bsD(0xb);

        function bsI() {
            return bsM['TYPED_ARRAY_SUPPORT'] ? 0x7fffffff : 0x3fffffff;
        }

        function bsJ(bsB, bsC) {
            if (bsI() < bsC) throw new RangeError('Invalid\x20typed\x20array\x20length');
            return bsM['TYPED_ARRAY_SUPPORT'] ? (bsB = new Uint8Array(bsC))['__proto__'] = bsM['prototype'] : (null === bsB && (bsB = new bsM(bsC)), bsB['length'] = bsC), bsB;
        }

        function bsM(bsB, bsC, bsD) {
            if (!(bsM['TYPED_ARRAY_SUPPORT'] || this instanceof bsM)) return new bsM(bsB, bsC, bsD);
            if ('number' == typeof bsB) {
                if ('string' == typeof bsC) throw new Error('If\x20encoding\x20is\x20specified\x20then\x20the\x20first\x20argument\x20must\x20be\x20a\x20string');
                return bta(this, bsB);
            }
            return bsQ(this, bsB, bsC, bsD);
        }

        function bsQ(bsB, bsC, bsD, bsF) {
            if ('number' == typeof bsC) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
            return 'undefined' != typeof ArrayBuffer && bsC instanceof ArrayBuffer ? function(bsB, bsC, bsD, bsF) {
                if (bsC['byteLength'], 0x0 > bsD || bsC['byteLength'] < bsD) throw new RangeError('\x27offset\x27\x20is\x20out\x20of\x20bounds');
                if (bsC['byteLength'] < bsD + (bsF || 0x0)) throw new RangeError('\x27length\x27\x20is\x20out\x20of\x20bounds');
                return bsC = void 0x0 === bsD && void 0x0 === bsF ? new Uint8Array(bsC) : void 0x0 === bsF ? new Uint8Array(bsC, bsD) : new Uint8Array(bsC, bsD, bsF), bsM['TYPED_ARRAY_SUPPORT'] ? (bsB = bsC)['__proto__'] = bsM['prototype'] : bsB = bte(bsB, bsC), bsB;
            }(bsB, bsC, bsD, bsF) : 'string' == typeof bsC ? function(bsB, bsC, bsD) {
                if (('string' != typeof bsD || '' === bsD) && (bsD = 'utf8'), !bsM['isEncoding'](bsD)) throw new TypeError('\x22encoding\x22\x20must\x20be\x20a\x20valid\x20string\x20encoding');
                var bsF = 0x0 | btl(bsC, bsD),
                    bsG = (bsB = bsJ(bsB, bsF))['write'](bsC, bsD);
                return bsG !== bsF && (bsB = bsB['slice'](0x0, bsG)), bsB;
            }(bsB, bsC, bsD) : function(bsB, bsC) {
                if (bsM['isBuffer'](bsC)) {
                    var bsD = 0x0 | btj(bsC['length']);
                    return 0x0 === (bsB = bsJ(bsB, bsD))['length'] ? bsB : (bsC['copy'](bsB, 0x0, 0x0, bsD), bsB);
                }
                if (bsC) {
                    if ('undefined' != typeof ArrayBuffer && bsC['buffer'] instanceof ArrayBuffer || 'length' in bsC) return 'number' != typeof bsC['length'] || function(bsB) {
                        return bsB != bsB;
                    }(bsC['length']) ? bsJ(bsB, 0x0) : bte(bsB, bsC);
                    if ('Buffer' === bsC['type'] && bsH(bsC['data'])) return bte(bsB, bsC['data']);
                }
                throw new TypeError('First\x20argument\x20must\x20be\x20a\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20or\x20array-like\x20object.');
            }(bsB, bsC);
        }

        function bt8(bsB) {
            if ('number' != typeof bsB) throw new TypeError('\x22size\x22\x20argument\x20must\x20be\x20a\x20number');
            if (0x0 > bsB) throw new RangeError('\x22size\x22\x20argument\x20must\x20not\x20be\x20negative');
        }

        function bta(bsB, bsC) {
            if (bt8(bsC), bsB = bsJ(bsB, 0x0 > bsC ? 0x0 : 0x0 | btj(bsC)), !bsM['TYPED_ARRAY_SUPPORT'])
                for (var bsD = 0x0; bsD < bsC; ++bsD) bsB[bsD] = 0x0;
            return bsB;
        }

        function bte(bsB, bsC) {
            var bsD = 0x0 > bsC['length'] ? 0x0 : 0x0 | btj(bsC['length']);
            bsB = bsJ(bsB, bsD);
            for (var bsF = 0x0; bsF < bsD; bsF += 0x1) bsB[bsF] = 0xff & bsC[bsF];
            return bsB;
        }

        function btj(bsB) {
            if (bsB >= bsI()) throw new RangeError('Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20size:\x200x' + bsI()['toString'](0x10) + '\x20bytes');
            return 0x0 | bsB;
        }

        function btl(bsB, bsC) {
            if (bsM['isBuffer'](bsB)) return bsB['length'];
            if ('undefined' != typeof ArrayBuffer && 'function' == typeof ArrayBuffer['isView'] && (ArrayBuffer['isView'](bsB) || bsB instanceof ArrayBuffer)) return bsB['byteLength'];
            'string' != typeof bsB && (bsB = '' + bsB);
            var bsD = bsB['length'];
            if (0x0 === bsD) return 0x0;
            for (var bsF = !0x1;;) switch (bsC) {
                case 'ascii':
                case 'latin1':
                case 'binary':
                    return bsD;
                case 'utf8':
                case 'utf-8':
                case void 0x0:
                    return bzv(bsB)['length'];
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return 0x2 * bsD;
                case 'hex':
                    return bsD >>> 0x1;
                case 'base64':
                    return bzD(bsB)['length'];
                default:
                    if (bsF) return bzv(bsB)['length'];
                    bsC = ('' + bsC)['toLowerCase'](), bsF = !0x0;
            }
        }

        function btq(bsB, bsC, bsD) {
            var bsF = bsB[bsC];
            bsB[bsC] = bsB[bsD], bsB[bsD] = bsF;
        }

        function btv(bsB, bsC, bsD, bsF, bsG) {
            if (0x0 === bsB['length']) return -0x1;
            if ('string' == typeof bsD ? (bsF = bsD, bsD = 0x0) : 0x7fffffff < bsD ? bsD = 0x7fffffff : -0x80000000 > bsD && (bsD = -0x80000000), bsD = +bsD, isNaN(bsD) && (bsD = bsG ? 0x0 : bsB['length'] - 0x1), 0x0 > bsD && (bsD = bsB['length'] + bsD), bsD >= bsB['length']) {
                if (bsG) return -0x1;
                bsD = bsB['length'] - 0x1;
            } else if (0x0 > bsD) {
                if (!bsG) return -0x1;
                bsD = 0x0;
            }
            if ('string' == typeof bsC && (bsC = bsM['from'](bsC, bsF)), bsM['isBuffer'](bsC)) return 0x0 === bsC['length'] ? -0x1 : btB(bsB, bsC, bsD, bsF, bsG);
            if ('number' == typeof bsC) return bsC &= 0xff, bsM['TYPED_ARRAY_SUPPORT'] && 'function' == typeof Uint8Array['prototype']['indexOf'] ? bsG ? Uint8Array['prototype']['indexOf']['call'](bsB, bsC, bsD) : Uint8Array['prototype']['lastIndexOf']['call'](bsB, bsC, bsD) : btB(bsB, [bsC], bsD, bsF, bsG);
            throw new TypeError('val\x20must\x20be\x20string,\x20number\x20or\x20Buffer');
        }

        function btB(bsB, bsC, bsD, bsF, bsG) {
            function bsH(bsB, bsC) {
                return 0x1 === bsJ ? bsB[bsC] : bsB['readUInt16BE'](bsC * bsJ);
            }
            var bsI, bsJ = 0x1,
                bsM = bsB['length'],
                bsQ = bsC['length'];
            if (void 0x0 !== bsF && ('ucs2' === (bsF = (bsF + '')['toLowerCase']()) || 'ucs-2' === bsF || 'utf16le' === bsF || 'utf-16le' === bsF)) {
                if (0x2 > bsB['length'] || 0x2 > bsC['length']) return -0x1;
                bsJ = 0x2, bsM /= 0x2, bsQ /= 0x2, bsD /= 0x2;
            }
            if (bsG) {
                var bt8 = -0x1;
                for (bsI = bsD; bsI < bsM; bsI++)
                    if (bsH(bsB, bsI) !== bsH(bsC, -0x1 === bt8 ? 0x0 : bsI - bt8)) - 0x1 !== bt8 && (bsI -= bsI - bt8), bt8 = -0x1;
                    else if (-0x1 === bt8 && (bt8 = bsI), bsI - bt8 + 0x1 === bsQ) return bt8 * bsJ;
            } else
                for (bsD + bsQ > bsM && (bsD = bsM - bsQ), bsI = bsD; 0x0 <= bsI; bsI--) {
                    for (var bta = !0x0, bte = 0x0; bte < bsQ; bte++)
                        if (bsH(bsB, bsI + bte) !== bsH(bsC, bte)) {
                            bta = !0x1;
                            break;
                        }
                    if (bta) return bsI;
                }
            return -0x1;
        }

        function btR(bsB, bsC, bsD, bsF) {
            bsD = +bsD || 0x0;
            var bsG = bsB['length'] - bsD;
            bsF ? (bsF = +bsF) > bsG && (bsF = bsG) : bsF = bsG;
            var bsH = bsC['length'];
            if (0x0 != bsH % 0x2) throw new TypeError('Invalid\x20hex\x20string');
            bsF > bsH / 0x2 && (bsF = bsH / 0x2);
            for (var bsI, bsJ = 0x0; bsJ < bsF; ++bsJ) {
                if (bsI = parseInt(bsC['substr'](0x2 * bsJ, 0x2), 0x10), isNaN(bsI)) return bsJ;
                bsB[bsD + bsJ] = bsI;
            }
            return bsJ;
        }

        function bu0(bsB, bsC, bsD, bsF) {
            return bzH(bzv(bsC, bsB['length'] - bsD), bsB, bsD, bsF);
        }

        function bu5(bsB, bsC, bsD, bsF) {
            return bzH(function(bsB) {
                for (var bsC = [], bsD = 0x0; bsD < bsB['length']; ++bsD) bsC['push'](0xff & bsB['charCodeAt'](bsD));
                return bsC;
            }(bsC), bsB, bsD, bsF);
        }

        function bud(bsB, bsC, bsD, bsF) {
            return bu5(bsB, bsC, bsD, bsF);
        }

        function bui(bsB, bsC, bsD, bsF) {
            return bzH(bzD(bsC), bsB, bsD, bsF);
        }

        function bun(bsB, bsC, bsD, bsF) {
            return bzH(function(bsB, bsC) {
                for (var bsD, bsF, bsG, bsH = [], bsI = 0x0; bsI < bsB['length'] && !(0x0 > (bsC -= 0x2)); ++bsI) bsD = bsB['charCodeAt'](bsI), bsF = bsD >> 0x8, bsG = bsD % 0x100, bsH['push'](bsG), bsH['push'](bsF);
                return bsH;
            }(bsC, bsB['length'] - bsD), bsB, bsD, bsF);
        }

        function buz(bsB, bsC, bsD) {
            return 0x0 === bsC && bsD === bsB['length'] ? bsF['fromByteArray'](bsB) : bsF['fromByteArray'](bsB['slice'](bsC, bsD));
        }

        function buD(bsB, bsC, bsD) {
            bsD = Math['min'](bsB['length'], bsD);
            for (var bsF = [], bsG = bsC; bsG < bsD;) {
                var bsH, bsI, bsJ, bsM, bsQ = bsB[bsG],
                    bt8 = null,
                    bta = 0xef < bsQ ? 0x4 : 0xdf < bsQ ? 0x3 : 0xbf < bsQ ? 0x2 : 0x1;
                if (bsG + bta <= bsD) 0x1 === bta ? 0x80 > bsQ && (bt8 = bsQ) : 0x2 === bta ? 0x80 == (0xc0 & (bsH = bsB[bsG + 0x1])) && (0x7f < (bsM = (0x1f & bsQ) << 0x6 | 0x3f & bsH) && (bt8 = bsM)) : 0x3 === bta ? (bsH = bsB[bsG + 0x1], bsI = bsB[bsG + 0x2], 0x80 == (0xc0 & bsH) && 0x80 == (0xc0 & bsI) && (0x7ff < (bsM = (0xf & bsQ) << 0xc | (0x3f & bsH) << 0x6 | 0x3f & bsI) && (0xd800 > bsM || 0xdfff < bsM) && (bt8 = bsM))) : 0x4 === bta && (bsH = bsB[bsG + 0x1], bsI = bsB[bsG + 0x2], bsJ = bsB[bsG + 0x3], 0x80 == (0xc0 & bsH) && 0x80 == (0xc0 & bsI) && 0x80 == (0xc0 & bsJ) && (0xffff < (bsM = (0xf & bsQ) << 0x12 | (0x3f & bsH) << 0xc | (0x3f & bsI) << 0x6 | 0x3f & bsJ) && 0x110000 > bsM && (bt8 = bsM)));
                null === bt8 ? (bt8 = 0xfffd, bta = 0x1) : 0xffff < bt8 && (bt8 -= 0x10000, bsF['push'](0xd800 | 0x3ff & bt8 >>> 0xa), bt8 = 0xdc00 | 0x3ff & bt8), bsF['push'](bt8), bsG += bta;
            }
            return function(bsB) {
                var bsC = bsB['length'];
                if (bsC <= bw2) return String['fromCharCode']['apply'](String, bsB);
                for (var bsD = '', bsF = 0x0; bsF < bsC;) bsD += String['fromCharCode']['apply'](String, bsB['slice'](bsF, bsF += bw2));
                return bsD;
            }(bsF);
        }
        bsC['Buffer'] = bsM, bsC['SlowBuffer'] = function(bsB) {
            return +bsB != bsB && (bsB = 0x0), bsM['alloc'](+bsB);
        }, bsC['INSPECT_MAX_BYTES'] = 0x32, bsM['TYPED_ARRAY_SUPPORT'] = void 0x0 === bsB['TYPED_ARRAY_SUPPORT'] ? function() {
            try {
                var bsB = new Uint8Array(0x1);
                return bsB['__proto__'] = {
                    '__proto__': Uint8Array['prototype'],
                    'foo': function() {
                        return 0x2a;
                    }
                }, 0x2a === bsB['foo']() && 'function' == typeof bsB['subarray'] && 0x0 === bsB['subarray'](0x1, 0x1)['byteLength'];
            } catch (buW) {
                return !0x1;
            }
        }() : bsB['TYPED_ARRAY_SUPPORT'], bsC['kMaxLength'] = bsI(), bsM['poolSize'] = 0x2000, bsM['_augment'] = function(bsB) {
            return bsB['__proto__'] = bsM['prototype'], bsB;
        }, bsM['from'] = function(bsB, bsC, bsD) {
            return bsQ(null, bsB, bsC, bsD);
        }, bsM['TYPED_ARRAY_SUPPORT'] && (bsM['prototype']['__proto__'] = Uint8Array['prototype'], bsM['__proto__'] = Uint8Array, 'undefined' != typeof Symbol && Symbol['species'] && bsM[Symbol['species']] === bsM && Object['defineProperty'](bsM, Symbol['species'], {
            'value': null,
            'configurable': !0x0
        })), bsM['alloc'] = function(bsB, bsC, bsD) {
            return function(bsB, bsC, bsD, bsF) {
                return bt8(bsC), 0x0 >= bsC ? bsJ(bsB, bsC) : void 0x0 === bsD ? bsJ(bsB, bsC) : 'string' == typeof bsF ? bsJ(bsB, bsC)['fill'](bsD, bsF) : bsJ(bsB, bsC)['fill'](bsD);
            }(null, bsB, bsC, bsD);
        }, bsM['allocUnsafe'] = function(bsB) {
            return bta(null, bsB);
        }, bsM['allocUnsafeSlow'] = function(bsB) {
            return bta(null, bsB);
        }, bsM['isBuffer'] = function(bsB) {
            return !(null == bsB || !bsB['_isBuffer']);
        }, bsM['compare'] = function(bsB, bsC) {
            if (!bsM['isBuffer'](bsB) || !bsM['isBuffer'](bsC)) throw new TypeError('Arguments\x20must\x20be\x20Buffers');
            if (bsB === bsC) return 0x0;
            for (var bsD = bsB['length'], bsF = bsC['length'], bsG = 0x0, bsH = Math['min'](bsD, bsF); bsG < bsH; ++bsG)
                if (bsB[bsG] !== bsC[bsG]) {
                    bsD = bsB[bsG], bsF = bsC[bsG];
                    break;
                }
            return bsD < bsF ? -0x1 : bsF < bsD ? 0x1 : 0x0;
        }, bsM['isEncoding'] = function(bsB) {
            switch ((bsB + '')['toLowerCase']()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'latin1':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return !0x0;
                default:
                    return !0x1;
            }
        }, bsM['concat'] = function(bsB, bsC) {
            if (!bsH(bsB)) throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
            if (0x0 === bsB['length']) return bsM['alloc'](0x0);
            var bsD;
            if (void 0x0 === bsC)
                for (bsC = 0x0, bsD = 0x0; bsD < bsB['length']; ++bsD) bsC += bsB[bsD]['length'];
            var bsF = bsM['allocUnsafe'](bsC),
                bsG = 0x0;
            for (bsD = 0x0; bsD < bsB['length']; ++bsD) {
                var bsI = bsB[bsD];
                if (!bsM['isBuffer'](bsI)) throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
                bsI['copy'](bsF, bsG), bsG += bsI['length'];
            }
            return bsF;
        }, bsM['byteLength'] = btl, bsM['prototype']['_isBuffer'] = !0x0, bsM['prototype']['swap16'] = function() {
            var bsB = this['length'];
            if (0x0 != bsB % 0x2) throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits');
            for (var bsC = 0x0; bsC < bsB; bsC += 0x2) btq(this, bsC, bsC + 0x1);
            return this;
        }, bsM['prototype']['swap32'] = function() {
            var bsB = this['length'];
            if (0x0 != bsB % 0x4) throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits');
            for (var bsC = 0x0; bsC < bsB; bsC += 0x4) btq(this, bsC, bsC + 0x3), btq(this, bsC + 0x1, bsC + 0x2);
            return this;
        }, bsM['prototype']['swap64'] = function() {
            var bsB = this['length'];
            if (0x0 != bsB % 0x8) throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits');
            for (var bsC = 0x0; bsC < bsB; bsC += 0x8) btq(this, bsC, bsC + 0x7), btq(this, bsC + 0x1, bsC + 0x6), btq(this, bsC + 0x2, bsC + 0x5), btq(this, bsC + 0x3, bsC + 0x4);
            return this;
        }, bsM['prototype']['toString'] = function() {
            var bsB = 0x0 | this['length'];
            return 0x0 == bsB ? '' : 0x0 === arguments['length'] ? buD(this, 0x0, bsB) : function(bsB, bsC, bsD) {
                var bsF = !0x1;
                if ((void 0x0 === bsC || 0x0 > bsC) && (bsC = 0x0), bsC > this['length']) return '';
                if ((void 0x0 === bsD || bsD > this['length']) && (bsD = this['length']), 0x0 >= bsD) return '';
                if ((bsD >>>= 0x0) <= (bsC >>>= 0x0)) return '';
                for (bsB || (bsB = 'utf8');;) switch (bsB) {
                    case 'hex':
                        return bwf(this, bsC, bsD);
                    case 'utf8':
                    case 'utf-8':
                        return buD(this, bsC, bsD);
                    case 'ascii':
                        return bw3(this, bsC, bsD);
                    case 'latin1':
                    case 'binary':
                        return bw9(this, bsC, bsD);
                    case 'base64':
                        return buz(this, bsC, bsD);
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return bwm(this, bsC, bsD);
                    default:
                        if (bsF) throw new TypeError('Unknown\x20encoding:\x20' + bsB);
                        bsB = (bsB + '')['toLowerCase'](), bsF = !0x0;
                }
            }['apply'](this, arguments);
        }, bsM['prototype']['equals'] = function(bsB) {
            if (!bsM['isBuffer'](bsB)) throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
            return this === bsB || 0x0 === bsM['compare'](this, bsB);
        }, bsM['prototype']['inspect'] = function() {
            var bsB = '',
                bsD = bsC['INSPECT_MAX_BYTES'];
            return 0x0 < this['length'] && (bsB = this['toString']('hex', 0x0, bsD)['match'](/.{2}/g)['join']('\x20'), this['length'] > bsD && (bsB += '\x20...\x20')), '<Buffer\x20' + bsB + '>';
        }, bsM['prototype']['compare'] = function(bsB, bsC, bsD, bsF, bsG) {
            if (!bsM['isBuffer'](bsB)) throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
            if (void 0x0 === bsC && (bsC = 0x0), void 0x0 === bsD && (bsD = bsB ? bsB['length'] : 0x0), void 0x0 === bsF && (bsF = 0x0), void 0x0 === bsG && (bsG = this['length']), 0x0 > bsC || bsD > bsB['length'] || 0x0 > bsF || bsG > this['length']) throw new RangeError('out\x20of\x20range\x20index');
            if (bsF >= bsG && bsC >= bsD) return 0x0;
            if (bsF >= bsG) return -0x1;
            if (bsC >= bsD) return 0x1;
            if (this === bsB) return 0x0;
            for (var bsH = (bsG >>>= 0x0) - (bsF >>>= 0x0), bsI = (bsD >>>= 0x0) - (bsC >>>= 0x0), bsJ = Math['min'](bsH, bsI), bsQ = this['slice'](bsF, bsG), bt8 = bsB['slice'](bsC, bsD), bta = 0x0; bta < bsJ; ++bta)
                if (bsQ[bta] !== bt8[bta]) {
                    bsH = bsQ[bta], bsI = bt8[bta];
                    break;
                }
            return bsH < bsI ? -0x1 : bsI < bsH ? 0x1 : 0x0;
        }, bsM['prototype']['includes'] = function(bsB, bsC, bsD) {
            return -0x1 !== this['indexOf'](bsB, bsC, bsD);
        }, bsM['prototype']['indexOf'] = function(bsB, bsC, bsD) {
            return btv(this, bsB, bsC, bsD, !0x0);
        }, bsM['prototype']['lastIndexOf'] = function(bsB, bsC, bsD) {
            return btv(this, bsB, bsC, bsD, !0x1);
        }, bsM['prototype']['write'] = function(bsB, bsC, bsD, bsF) {
            if (void 0x0 === bsC) bsF = 'utf8', bsD = this['length'], bsC = 0x0;
            else if (void 0x0 === bsD && 'string' == typeof bsC) bsF = bsC, bsD = this['length'], bsC = 0x0;
            else {
                if (!isFinite(bsC)) throw new Error('Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported');
                bsC |= 0x0, isFinite(bsD) ? (bsD |= 0x0, void 0x0 === bsF && (bsF = 'utf8')) : (bsF = bsD, bsD = void 0x0);
            }
            var bsG = this['length'] - bsC;
            if ((void 0x0 === bsD || bsD > bsG) && (bsD = bsG), 0x0 < bsB['length'] && (0x0 > bsD || 0x0 > bsC) || bsC > this['length']) throw new RangeError('Attempt\x20to\x20write\x20outside\x20buffer\x20bounds');
            bsF || (bsF = 'utf8');
            for (var bsH = !0x1;;) switch (bsF) {
                case 'hex':
                    return btR(this, bsB, bsC, bsD);
                case 'utf8':
                case 'utf-8':
                    return bu0(this, bsB, bsC, bsD);
                case 'ascii':
                    return bu5(this, bsB, bsC, bsD);
                case 'latin1':
                case 'binary':
                    return bud(this, bsB, bsC, bsD);
                case 'base64':
                    return bui(this, bsB, bsC, bsD);
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return bun(this, bsB, bsC, bsD);
                default:
                    if (bsH) throw new TypeError('Unknown\x20encoding:\x20' + bsF);
                    bsF = ('' + bsF)['toLowerCase'](), bsH = !0x0;
            }
        }, bsM['prototype']['toJSON'] = function() {
            return {
                'type': 'Buffer',
                'data': Array['prototype']['slice']['call'](this['_arr'] || this, 0x0)
            };
        };
        var bw2 = 0x1000;

        function bw3(bsB, bsC, bsD) {
            var bsF = '';
            bsD = Math['min'](bsB['length'], bsD);
            for (var bsG = bsC; bsG < bsD; ++bsG) bsF += String['fromCharCode'](0x7f & bsB[bsG]);
            return bsF;
        }

        function bw9(bsB, bsC, bsD) {
            var bsF = '';
            bsD = Math['min'](bsB['length'], bsD);
            for (var bsG = bsC; bsG < bsD; ++bsG) bsF += String['fromCharCode'](bsB[bsG]);
            return bsF;
        }

        function bwf(bsB, bsC, bsD) {
            var bsF = bsB['length'];
            (!bsC || 0x0 > bsC) && (bsC = 0x0), (!bsD || 0x0 > bsD || bsD > bsF) && (bsD = bsF);
            for (var bsG = '', bsH = bsC; bsH < bsD; ++bsH) bsG += bzt(bsB[bsH]);
            return bsG;
        }

        function bwm(bsB, bsC, bsD) {
            for (var bsF = bsB['slice'](bsC, bsD), bsG = '', bsH = 0x0; bsH < bsF['length']; bsH += 0x2) bsG += String['fromCharCode'](bsF[bsH] + 0x100 * bsF[bsH + 0x1]);
            return bsG;
        }

        function bwt(bsB, bsC, bsD) {
            if (0x0 != bsB % 0x1 || 0x0 > bsB) throw new RangeError('offset\x20is\x20not\x20uint');
            if (bsB + bsC > bsD) throw new RangeError('Trying\x20to\x20access\x20beyond\x20buffer\x20length');
        }

        function bwx(bsB, bsC, bsD, bsF, bsG, bsH) {
            if (!bsM['isBuffer'](bsB)) throw new TypeError('\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance');
            if (bsC > bsG || bsC < bsH) throw new RangeError('\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds');
            if (bsD + bsF > bsB['length']) throw new RangeError('Index\x20out\x20of\x20range');
        }

        function bwE(bsB, bsC, bsD, bsF) {
            0x0 > bsC && (bsC = 0xffff + bsC + 0x1);
            for (var bsG = 0x0, bsH = Math['min'](bsB['length'] - bsD, 0x2); bsG < bsH; ++bsG) bsB[bsD + bsG] = (bsC & 0xff << 0x8 * (bsF ? bsG : 0x1 - bsG)) >>> 0x8 * (bsF ? bsG : 0x1 - bsG);
        }

        function bwL(bsB, bsC, bsD, bsF) {
            0x0 > bsC && (bsC = 0xffffffff + bsC + 0x1);
            for (var bsG = 0x0, bsH = Math['min'](bsB['length'] - bsD, 0x4); bsG < bsH; ++bsG) bsB[bsD + bsG] = 0xff & bsC >>> 0x8 * (bsF ? bsG : 0x3 - bsG);
        }

        function bwS(bsB, bsC, bsD, bsF) {
            if (bsD + bsF > bsB['length']) throw new RangeError('Index\x20out\x20of\x20range');
            if (0x0 > bsD) throw new RangeError('Index\x20out\x20of\x20range');
        }

        function bwX(bsB, bsC, bsD, bsF, bsH) {
            return bsH || bwS(bsB, 0x0, bsD, 0x4), bsG['write'](bsB, bsC, bsD, bsF, 0x17, 0x4), bsD + 0x4;
        }

        function bx3(bsB, bsC, bsD, bsF, bsH) {
            return bsH || bwS(bsB, 0x0, bsD, 0x8), bsG['write'](bsB, bsC, bsD, bsF, 0x34, 0x8), bsD + 0x8;
        }
        bsM['prototype']['slice'] = function(bsB, bsC) {
            var bsD, bsF = this['length'];
            if (0x0 > (bsB = ~~bsB) ? 0x0 > (bsB += bsF) && (bsB = 0x0) : bsB > bsF && (bsB = bsF), 0x0 > (bsC = void 0x0 === bsC ? bsF : ~~bsC) ? 0x0 > (bsC += bsF) && (bsC = 0x0) : bsC > bsF && (bsC = bsF), bsC < bsB && (bsC = bsB), bsM['TYPED_ARRAY_SUPPORT'])(bsD = this['subarray'](bsB, bsC))['__proto__'] = bsM['prototype'];
            else {
                var bsG = bsC - bsB;
                bsD = new bsM(bsG, void 0x0);
                for (var bsH = 0x0; bsH < bsG; ++bsH) bsD[bsH] = this[bsH + bsB];
            }
            return bsD;
        }, bsM['prototype']['readUIntLE'] = function(bsB, bsC, bsD) {
            bsB |= 0x0, bsC |= 0x0, bsD || bwt(bsB, bsC, this['length']);
            for (var bsF = this[bsB], bsG = 0x1, bsH = 0x0; ++bsH < bsC && (bsG *= 0x100);) bsF += this[bsB + bsH] * bsG;
            return bsF;
        }, bsM['prototype']['readUIntBE'] = function(bsB, bsC, bsD) {
            bsB |= 0x0, bsC |= 0x0, bsD || bwt(bsB, bsC, this['length']);
            for (var bsF = this[bsB + --bsC], bsG = 0x1; 0x0 < bsC && (bsG *= 0x100);) bsF += this[bsB + --bsC] * bsG;
            return bsF;
        }, bsM['prototype']['readUInt8'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x1, this['length']), this[bsB];
        }, bsM['prototype']['readUInt16LE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x2, this['length']), this[bsB] | this[bsB + 0x1] << 0x8;
        }, bsM['prototype']['readUInt16BE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x2, this['length']), this[bsB] << 0x8 | this[bsB + 0x1];
        }, bsM['prototype']['readUInt32LE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x4, this['length']), (this[bsB] | this[bsB + 0x1] << 0x8 | this[bsB + 0x2] << 0x10) + 0x1000000 * this[bsB + 0x3];
        }, bsM['prototype']['readUInt32BE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x4, this['length']), 0x1000000 * this[bsB] + (this[bsB + 0x1] << 0x10 | this[bsB + 0x2] << 0x8 | this[bsB + 0x3]);
        }, bsM['prototype']['readIntLE'] = function(bsB, bsC, bsD) {
            bsB |= 0x0, bsC |= 0x0, bsD || bwt(bsB, bsC, this['length']);
            for (var bsF = this[bsB], bsG = 0x1, bsH = 0x0; ++bsH < bsC && (bsG *= 0x100);) bsF += this[bsB + bsH] * bsG;
            return bsF >= (bsG *= 0x80) && (bsF -= Math['pow'](0x2, 0x8 * bsC)), bsF;
        }, bsM['prototype']['readIntBE'] = function(bsB, bsC, bsD) {
            bsB |= 0x0, bsC |= 0x0, bsD || bwt(bsB, bsC, this['length']);
            for (var bsF = bsC, bsG = 0x1, bsH = this[bsB + --bsF]; 0x0 < bsF && (bsG *= 0x100);) bsH += this[bsB + --bsF] * bsG;
            return bsH >= (bsG *= 0x80) && (bsH -= Math['pow'](0x2, 0x8 * bsC)), bsH;
        }, bsM['prototype']['readInt8'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x1, this['length']), 0x80 & this[bsB] ? -0x1 * (0xff - this[bsB] + 0x1) : this[bsB];
        }, bsM['prototype']['readInt16LE'] = function(bsB, bsC) {
            bsC || bwt(bsB, 0x2, this['length']);
            var bsD = this[bsB] | this[bsB + 0x1] << 0x8;
            return 0x8000 & bsD ? 0xffff0000 | bsD : bsD;
        }, bsM['prototype']['readInt16BE'] = function(bsB, bsC) {
            bsC || bwt(bsB, 0x2, this['length']);
            var bsD = this[bsB + 0x1] | this[bsB] << 0x8;
            return 0x8000 & bsD ? 0xffff0000 | bsD : bsD;
        }, bsM['prototype']['readInt32LE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x4, this['length']), this[bsB] | this[bsB + 0x1] << 0x8 | this[bsB + 0x2] << 0x10 | this[bsB + 0x3] << 0x18;
        }, bsM['prototype']['readInt32BE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x4, this['length']), this[bsB] << 0x18 | this[bsB + 0x1] << 0x10 | this[bsB + 0x2] << 0x8 | this[bsB + 0x3];
        }, bsM['prototype']['readFloatLE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x4, this['length']), bsG['read'](this, bsB, !0x0, 0x17, 0x4);
        }, bsM['prototype']['readFloatBE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x4, this['length']), bsG['read'](this, bsB, !0x1, 0x17, 0x4);
        }, bsM['prototype']['readDoubleLE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x8, this['length']), bsG['read'](this, bsB, !0x0, 0x34, 0x8);
        }, bsM['prototype']['readDoubleBE'] = function(bsB, bsC) {
            return bsC || bwt(bsB, 0x8, this['length']), bsG['read'](this, bsB, !0x1, 0x34, 0x8);
        }, bsM['prototype']['writeUIntLE'] = function(bsB, bsC, bsD, bsF) {
            (bsB = +bsB, bsC |= 0x0, bsD |= 0x0, bsF) || bwx(this, bsB, bsC, bsD, Math['pow'](0x2, 0x8 * bsD) - 0x1, 0x0);
            var bsG = 0x1,
                bsH = 0x0;
            for (this[bsC] = 0xff & bsB; ++bsH < bsD && (bsG *= 0x100);) this[bsC + bsH] = 0xff & bsB / bsG;
            return bsC + bsD;
        }, bsM['prototype']['writeUIntBE'] = function(bsB, bsC, bsD, bsF) {
            (bsB = +bsB, bsC |= 0x0, bsD |= 0x0, bsF) || bwx(this, bsB, bsC, bsD, Math['pow'](0x2, 0x8 * bsD) - 0x1, 0x0);
            var bsG = bsD - 0x1,
                bsH = 0x1;
            for (this[bsC + bsG] = 0xff & bsB; 0x0 <= --bsG && (bsH *= 0x100);) this[bsC + bsG] = 0xff & bsB / bsH;
            return bsC + bsD;
        }, bsM['prototype']['writeUInt8'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x1, 0xff, 0x0), bsM['TYPED_ARRAY_SUPPORT'] || (bsB = Math['floor'](bsB)), this[bsC] = 0xff & bsB, bsC + 0x1;
        }, bsM['prototype']['writeUInt16LE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x2, 0xffff, 0x0), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC] = 0xff & bsB, this[bsC + 0x1] = bsB >>> 0x8) : bwE(this, bsB, bsC, !0x0), bsC + 0x2;
        }, bsM['prototype']['writeUInt16BE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x2, 0xffff, 0x0), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC] = bsB >>> 0x8, this[bsC + 0x1] = 0xff & bsB) : bwE(this, bsB, bsC, !0x1), bsC + 0x2;
        }, bsM['prototype']['writeUInt32LE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x4, 0xffffffff, 0x0), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC + 0x3] = bsB >>> 0x18, this[bsC + 0x2] = bsB >>> 0x10, this[bsC + 0x1] = bsB >>> 0x8, this[bsC] = 0xff & bsB) : bwL(this, bsB, bsC, !0x0), bsC + 0x4;
        }, bsM['prototype']['writeUInt32BE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x4, 0xffffffff, 0x0), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC] = bsB >>> 0x18, this[bsC + 0x1] = bsB >>> 0x10, this[bsC + 0x2] = bsB >>> 0x8, this[bsC + 0x3] = 0xff & bsB) : bwL(this, bsB, bsC, !0x1), bsC + 0x4;
        }, bsM['prototype']['writeIntLE'] = function(bsB, bsC, bsD, bsF) {
            if (bsB = +bsB, bsC |= 0x0, !bsF) {
                var bsG = Math['pow'](0x2, 0x8 * bsD - 0x1);
                bwx(this, bsB, bsC, bsD, bsG - 0x1, -bsG);
            }
            var bsH = 0x0,
                bsI = 0x1,
                bsJ = 0x0;
            for (this[bsC] = 0xff & bsB; ++bsH < bsD && (bsI *= 0x100);) 0x0 > bsB && 0x0 === bsJ && 0x0 !== this[bsC + bsH - 0x1] && (bsJ = 0x1), this[bsC + bsH] = 0xff & (bsB / bsI >> 0x0) - bsJ;
            return bsC + bsD;
        }, bsM['prototype']['writeIntBE'] = function(bsB, bsC, bsD, bsF) {
            if (bsB = +bsB, bsC |= 0x0, !bsF) {
                var bsG = Math['pow'](0x2, 0x8 * bsD - 0x1);
                bwx(this, bsB, bsC, bsD, bsG - 0x1, -bsG);
            }
            var bsH = bsD - 0x1,
                bsI = 0x1,
                bsJ = 0x0;
            for (this[bsC + bsH] = 0xff & bsB; 0x0 <= --bsH && (bsI *= 0x100);) 0x0 > bsB && 0x0 === bsJ && 0x0 !== this[bsC + bsH + 0x1] && (bsJ = 0x1), this[bsC + bsH] = 0xff & (bsB / bsI >> 0x0) - bsJ;
            return bsC + bsD;
        }, bsM['prototype']['writeInt8'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x1, 0x7f, -0x80), bsM['TYPED_ARRAY_SUPPORT'] || (bsB = Math['floor'](bsB)), 0x0 > bsB && (bsB = 0xff + bsB + 0x1), this[bsC] = 0xff & bsB, bsC + 0x1;
        }, bsM['prototype']['writeInt16LE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x2, 0x7fff, -0x8000), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC] = 0xff & bsB, this[bsC + 0x1] = bsB >>> 0x8) : bwE(this, bsB, bsC, !0x0), bsC + 0x2;
        }, bsM['prototype']['writeInt16BE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x2, 0x7fff, -0x8000), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC] = bsB >>> 0x8, this[bsC + 0x1] = 0xff & bsB) : bwE(this, bsB, bsC, !0x1), bsC + 0x2;
        }, bsM['prototype']['writeInt32LE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x4, 0x7fffffff, -0x80000000), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC] = 0xff & bsB, this[bsC + 0x1] = bsB >>> 0x8, this[bsC + 0x2] = bsB >>> 0x10, this[bsC + 0x3] = bsB >>> 0x18) : bwL(this, bsB, bsC, !0x0), bsC + 0x4;
        }, bsM['prototype']['writeInt32BE'] = function(bsB, bsC, bsD) {
            return bsB = +bsB, bsC |= 0x0, bsD || bwx(this, bsB, bsC, 0x4, 0x7fffffff, -0x80000000), 0x0 > bsB && (bsB = 0xffffffff + bsB + 0x1), bsM['TYPED_ARRAY_SUPPORT'] ? (this[bsC] = bsB >>> 0x18, this[bsC + 0x1] = bsB >>> 0x10, this[bsC + 0x2] = bsB >>> 0x8, this[bsC + 0x3] = 0xff & bsB) : bwL(this, bsB, bsC, !0x1), bsC + 0x4;
        }, bsM['prototype']['writeFloatLE'] = function(bsB, bsC, bsD) {
            return bwX(this, bsB, bsC, !0x0, bsD);
        }, bsM['prototype']['writeFloatBE'] = function(bsB, bsC, bsD) {
            return bwX(this, bsB, bsC, !0x1, bsD);
        }, bsM['prototype']['writeDoubleLE'] = function(bsB, bsC, bsD) {
            return bx3(this, bsB, bsC, !0x0, bsD);
        }, bsM['prototype']['writeDoubleBE'] = function(bsB, bsC, bsD) {
            return bx3(this, bsB, bsC, !0x1, bsD);
        }, bsM['prototype']['copy'] = function(bsB, bsC, bsD, bsF) {
            if (bsD || (bsD = 0x0), bsF || 0x0 === bsF || (bsF = this['length']), bsC >= bsB['length'] && (bsC = bsB['length']), bsC || (bsC = 0x0), 0x0 < bsF && bsF < bsD && (bsF = bsD), bsF === bsD) return 0x0;
            if (0x0 === bsB['length'] || 0x0 === this['length']) return 0x0;
            if (0x0 > bsC) throw new RangeError('targetStart\x20out\x20of\x20bounds');
            if (0x0 > bsD || bsD >= this['length']) throw new RangeError('sourceStart\x20out\x20of\x20bounds');
            if (0x0 > bsF) throw new RangeError('sourceEnd\x20out\x20of\x20bounds');
            bsF > this['length'] && (bsF = this['length']), bsB['length'] - bsC < bsF - bsD && (bsF = bsB['length'] - bsC + bsD);
            var bsG, bsH = bsF - bsD;
            if (this === bsB && bsD < bsC && bsC < bsF)
                for (bsG = bsH - 0x1; 0x0 <= bsG; --bsG) bsB[bsG + bsC] = this[bsG + bsD];
            else if (0x3e8 > bsH || !bsM['TYPED_ARRAY_SUPPORT'])
                for (bsG = 0x0; bsG < bsH; ++bsG) bsB[bsG + bsC] = this[bsG + bsD];
            else Uint8Array['prototype']['set']['call'](bsB, this['subarray'](bsD, bsD + bsH), bsC);
            return bsH;
        }, bsM['prototype']['fill'] = function(bsB, bsC, bsD, bsF) {
            if ('string' == typeof bsB) {
                if ('string' == typeof bsC ? (bsF = bsC, bsC = 0x0, bsD = this['length']) : 'string' == typeof bsD && (bsF = bsD, bsD = this['length']), 0x1 === bsB['length']) {
                    var bsG = bsB['charCodeAt'](0x0);
                    0x100 > bsG && (bsB = bsG);
                }
                if (void 0x0 !== bsF && 'string' != typeof bsF) throw new TypeError('encoding\x20must\x20be\x20a\x20string');
                if ('string' == typeof bsF && !bsM['isEncoding'](bsF)) throw new TypeError('Unknown\x20encoding:\x20' + bsF);
            } else 'number' == typeof bsB && (bsB &= 0xff);
            if (0x0 > bsC || this['length'] < bsC || this['length'] < bsD) throw new RangeError('Out\x20of\x20range\x20index');
            if (bsD <= bsC) return this;
            var bsH;
            if (bsC >>>= 0x0, bsD = void 0x0 === bsD ? this['length'] : bsD >>> 0x0, bsB || (bsB = 0x0), 'number' == typeof bsB)
                for (bsH = bsC; bsH < bsD; ++bsH) this[bsH] = bsB;
            else {
                var bsI = bsM['isBuffer'](bsB) ? bsB : bzv(new bsM(bsB, bsF)['toString']()),
                    bsJ = bsI['length'];
                for (bsH = 0x0; bsH < bsD - bsC; ++bsH) this[bsH + bsC] = bsI[bsH % bsJ];
            }
            return this;
        };
        var bzs = /[^+\/0-9A-Za-z-_]/g;

        function bzt(bsB) {
            return 0x10 > bsB ? '0' + bsB['toString'](0x10) : bsB['toString'](0x10);
        }

        function bzv(bsB, bsC) {
            bsC = bsC || 0x1 / 0x0;
            for (var bsD, bsF = bsB['length'], bsG = null, bsH = [], bsI = 0x0; bsI < bsF; ++bsI) {
                if (0xd7ff < (bsD = bsB['charCodeAt'](bsI)) && 0xe000 > bsD) {
                    if (!bsG) {
                        if (0xdbff < bsD) {
                            -0x1 < (bsC -= 0x3) && bsH['push'](0xef, 0xbf, 0xbd);
                            continue;
                        }
                        if (bsI + 0x1 === bsF) {
                            -0x1 < (bsC -= 0x3) && bsH['push'](0xef, 0xbf, 0xbd);
                            continue;
                        }
                        bsG = bsD;
                        continue;
                    }
                    if (0xdc00 > bsD) {
                        -0x1 < (bsC -= 0x3) && bsH['push'](0xef, 0xbf, 0xbd), bsG = bsD;
                        continue;
                    }
                    bsD = 0x10000 + (bsG - 0xd800 << 0xa | bsD - 0xdc00);
                } else bsG && -0x1 < (bsC -= 0x3) && bsH['push'](0xef, 0xbf, 0xbd);
                if (bsG = null, 0x80 > bsD) {
                    if (0x0 > (bsC -= 0x1)) break;
                    bsH['push'](bsD);
                } else if (0x800 > bsD) {
                    if (0x0 > (bsC -= 0x2)) break;
                    bsH['push'](0xc0 | bsD >> 0x6, 0x80 | 0x3f & bsD);
                } else if (0x10000 > bsD) {
                    if (0x0 > (bsC -= 0x3)) break;
                    bsH['push'](0xe0 | bsD >> 0xc, 0x80 | 0x3f & bsD >> 0x6, 0x80 | 0x3f & bsD);
                } else {
                    if (!(0x110000 > bsD)) throw new Error('Invalid\x20code\x20point');
                    if (0x0 > (bsC -= 0x4)) break;
                    bsH['push'](0xf0 | bsD >> 0x12, 0x80 | 0x3f & bsD >> 0xc, 0x80 | 0x3f & bsD >> 0x6, 0x80 | 0x3f & bsD);
                }
            }
            return bsH;
        }

        function bzD(bsB) {
            return bsF['toByteArray'](function(bsB) {
                if (0x2 > (bsB = function(bsB) {
                        return bsB['trim'] ? bsB['trim']() : bsB['replace'](/^\s+|\s+$/g, '');
                    }(bsB)['replace'](bzs, ''))['length']) return '';
                for (; 0x0 != bsB['length'] % 0x4;) bsB += '=';
                return bsB;
            }(bsB));
        }

        function bzH(bsB, bsC, bsD, bsF) {
            for (var bsG = 0x0; bsG < bsF && !(bsG + bsD >= bsC['length'] || bsG >= bsB['length']); ++bsG) bsC[bsG + bsD] = bsB[bsG];
            return bsG;
        }
    }['call'](this, bsD(0x15)));
}, function(bzN, bzO) {
    for (var bzP = bzO['uint8'] = Array(0x100), bzQ = 0x0; 0xff >= bzQ; bzQ++) bzP[bzQ] = bzR(bzQ);

    function bzR(bzN) {
        return function(bzO) {
            var bzP = bzO['reserve'](0x1);
            bzO['buffer'][bzP] = bzN;
        };
    }
}, function(bzV, bzW, bzX) {
    bzW['FlexDecoder'] = bA2, bzW['FlexEncoder'] = bA3;
    var bzY = bzX(0x3),
        bzZ = 0x800,
        bA0 = 0x10000,
        bA1 = 'BUFFER_SHORTAGE';

    function bA2() {
        if (!(this instanceof bA2)) return new bA2();
    }

    function bA3() {
        if (!(this instanceof bA3)) return new bA3();
    }

    function bA4() {
        throw new Error('method\x20not\x20implemented:\x20write()');
    }

    function bA5() {
        throw new Error('method\x20not\x20implemented:\x20fetch()');
    }

    function bA6() {
        return this['buffers'] && this['buffers']['length'] ? (this['flush'](), this['pull']()) : this['fetch']();
    }

    function bA7(bzV) {
        (this['buffers'] || (this['buffers'] = []))['push'](bzV);
    }

    function bA9() {
        return (this['buffers'] || (this['buffers'] = []))['shift']();
    }

    function bAa(bzV) {
        return function(bzW) {
            for (var bzX in bzV) bzW[bzX] = bzV[bzX];
            return bzW;
        };
    }
    bA2['mixin'] = bAa({
        'bufferish': bzY,
        'write': function(bzV) {
            var bzW = this['offset'] ? bzY['prototype']['slice']['call'](this['buffer'], this['offset']) : this['buffer'];
            this['buffer'] = bzW ? bzV ? this['bufferish']['concat']([bzW, bzV]) : bzW : bzV, this['offset'] = 0x0;
        },
        'fetch': bA5,
        'flush': function() {
            for (; this['offset'] < this['buffer']['length'];) {
                var bzV, bzW = this['offset'];
                try {
                    bzV = this['fetch']();
                } catch (bAi) {
                    if (bAi && bAi['message'] != bA1) throw bAi;
                    this['offset'] = bzW;
                    break;
                }
                this['push'](bzV);
            }
        },
        'push': bA7,
        'pull': bA9,
        'read': bA6,
        'reserve': function(bzV) {
            var bzW = this['offset'],
                bzX = bzW + bzV;
            if (bzX > this['buffer']['length']) throw new Error(bA1);
            return this['offset'] = bzX, bzW;
        },
        'offset': 0x0
    }), bA2['mixin'](bA2['prototype']), bA3['mixin'] = bAa({
        'bufferish': bzY,
        'write': bA4,
        'fetch': function() {
            var bzV = this['start'];
            if (bzV < this['offset']) {
                var bzW = this['start'] = this['offset'];
                return bzY['prototype']['slice']['call'](this['buffer'], bzV, bzW);
            }
        },
        'flush': function() {
            for (; this['start'] < this['offset'];) {
                var bzV = this['fetch']();
                bzV && this['push'](bzV);
            }
        },
        'push': bA7,
        'pull': function() {
            var bzV = this['buffers'] || (this['buffers'] = []),
                bzW = 0x1 < bzV['length'] ? this['bufferish']['concat'](bzV) : bzV[0x0];
            return bzV['length'] = 0x0, bzW;
        },
        'read': bA6,
        'reserve': function(bzV) {
            var bzW = 0x0 | bzV;
            if (this['buffer']) {
                var bzX = this['buffer']['length'],
                    bzY = 0x0 | this['offset'],
                    bzZ = bzY + bzW;
                if (bzZ < bzX) return this['offset'] = bzZ, bzY;
                this['flush'](), bzV = Math['max'](bzV, Math['min'](0x2 * bzX, this['maxBufferSize']));
            }
            return bzV = Math['max'](bzV, this['minBufferSize']), this['buffer'] = this['bufferish']['alloc'](bzV), this['start'] = 0x0, this['offset'] = bzW, 0x0;
        },
        'send': function(bzV) {
            var bzW = bzV['length'];
            if (bzW > this['minBufferSize']) this['flush'](), this['push'](bzV);
            else {
                var bzX = this['reserve'](bzW);
                bzY['prototype']['copy']['call'](bzV, this['buffer'], bzX);
            }
        },
        'maxBufferSize': bA0,
        'minBufferSize': bzZ,
        'offset': 0x0,
        'start': 0x0
    }), bA3['mixin'](bA3['prototype']);
}, function(bAz, bAA, bAB) {
    bAA['decode'] = function(bAz, bAA) {
        var bAB = new bAF(bAA);
        return bAB['write'](bAz), bAB['read']();
    };
    var bAF = bAB(0x1f)['DecodeBuffer'];
}, function(bAG, bAH, bAI) {
    bAH['DecodeBuffer'] = bAK;
    var bAJ = bAI(0x14)['preset'];

    function bAK(bAG) {
        if (!(this instanceof bAK)) return new bAK(bAG);
        if (bAG && (this['options'] = bAG, bAG['codec'])) {
            var bAH = this['codec'] = bAG['codec'];
            bAH['bufferish'] && (this['bufferish'] = bAH['bufferish']);
        }
    }
    bAI(0x1d)['FlexDecoder']['mixin'](bAK['prototype']), bAK['prototype']['codec'] = bAJ, bAK['prototype']['fetch'] = function() {
        return this['codec']['decode'](this);
    };
}, function(bAN, bAO, bAP) {
    var bAQ = bAP(0x11),
        bAR = bAP(0x13),
        bAS = bAR['Uint64BE'],
        bAT = bAR['Int64BE'];
    bAO['getReadFormat'] = function(bAN) {
        var bAO = bAX['hasArrayBuffer'] && bAN && bAN['binarraybuffer'],
            bAP = bAN && bAN['int64'];
        return {
            'map': bAZ && bAN && bAN['usemap'] ? bB9 : bB1,
            'array': bBh,
            'str': bBn,
            'bin': bAO ? bBw : bBr,
            'ext': bBB,
            'uint8': bBI,
            'uint16': bBP,
            'uint32': bBY,
            'uint64': bC6(0x8, bAP ? bCf : bCb),
            'int8': bBL,
            'int16': bBT,
            'int32': bC2,
            'int64': bC6(0x8, bAP ? bCh : bCd),
            'float32': bC6(0x4, bCj),
            'float64': bC6(0x8, bCl)
        };
    }, bAO['readUint8'] = bBI;
    var bAX = bAP(0x3),
        bAY = bAP(0x12),
        bAZ = 'undefined' != typeof Map,
        bB0 = !0x0;

    function bB1(bAN, bAO) {
        var bAP, bAQ = {},
            bAR = Array(bAO),
            bAS = Array(bAO),
            bAT = bAN['codec']['decode'];
        for (bAP = 0x0; bAP < bAO; bAP++) bAR[bAP] = bAT(bAN), bAS[bAP] = bAT(bAN);
        for (bAP = 0x0; bAP < bAO; bAP++) bAQ[bAR[bAP]] = bAS[bAP];
        return bAQ;
    }

    function bB9(bAN, bAO) {
        var bAP, bAQ = new Map(),
            bAR = Array(bAO),
            bAS = Array(bAO),
            bAT = bAN['codec']['decode'];
        for (bAP = 0x0; bAP < bAO; bAP++) bAR[bAP] = bAT(bAN), bAS[bAP] = bAT(bAN);
        for (bAP = 0x0; bAP < bAO; bAP++) bAQ['set'](bAR[bAP], bAS[bAP]);
        return bAQ;
    }

    function bBh(bAN, bAO) {
        for (var bAP = Array(bAO), bAQ = bAN['codec']['decode'], bAR = 0x0; bAR < bAO; bAR++) bAP[bAR] = bAQ(bAN);
        return bAP;
    }

    function bBn(bAN, bAO) {
        var bAP = bAN['reserve'](bAO);
        return bAY['toString']['call'](bAN['buffer'], 'utf-8', bAP, bAP + bAO);
    }

    function bBr(bAN, bAO) {
        var bAP = bAN['reserve'](bAO),
            bAQ = bAY['slice']['call'](bAN['buffer'], bAP, bAP + bAO);
        return bAX['from'](bAQ);
    }

    function bBw(bAN, bAO) {
        var bAP = bAN['reserve'](bAO),
            bAQ = bAY['slice']['call'](bAN['buffer'], bAP, bAP + bAO);
        return bAX['Uint8Array']['from'](bAQ)['buffer'];
    }

    function bBB(bAN, bAO) {
        var bAP = bAN['reserve'](bAO + 0x1),
            bAQ = bAN['buffer'][bAP++],
            bAR = bAP + bAO,
            bAS = bAN['codec']['getExtUnpacker'](bAQ);
        if (!bAS) throw new Error('Invalid\x20ext\x20type:\x20' + (bAQ ? '0x' + bAQ['toString'](0x10) : bAQ));
        return bAS(bAY['slice']['call'](bAN['buffer'], bAP, bAR));
    }

    function bBI(bAN) {
        var bAO = bAN['reserve'](0x1);
        return bAN['buffer'][bAO];
    }

    function bBL(bAN) {
        var bAO = bAN['reserve'](0x1),
            bAP = bAN['buffer'][bAO];
        return 0x80 & bAP ? bAP - 0x100 : bAP;
    }

    function bBP(bAN) {
        var bAO = bAN['reserve'](0x2),
            bAP = bAN['buffer'];
        return bAP[bAO++] << 0x8 | bAP[bAO];
    }

    function bBT(bAN) {
        var bAO = bAN['reserve'](0x2),
            bAP = bAN['buffer'],
            bAQ = bAP[bAO++] << 0x8 | bAP[bAO];
        return 0x8000 & bAQ ? bAQ - 0x10000 : bAQ;
    }

    function bBY(bAN) {
        var bAO = bAN['reserve'](0x4),
            bAP = bAN['buffer'];
        return 0x1000000 * bAP[bAO++] + (bAP[bAO++] << 0x10) + (bAP[bAO++] << 0x8) + bAP[bAO];
    }

    function bC2(bAN) {
        var bAO = bAN['reserve'](0x4),
            bAP = bAN['buffer'];
        return bAP[bAO++] << 0x18 | bAP[bAO++] << 0x10 | bAP[bAO++] << 0x8 | bAP[bAO];
    }

    function bC6(bAN, bAO) {
        return function(bAP) {
            var bAQ = bAP['reserve'](bAN);
            return bAO['call'](bAP['buffer'], bAQ, bB0);
        };
    }

    function bCb(bAN) {
        return new bAS(this, bAN)['toNumber']();
    }

    function bCd(bAN) {
        return new bAT(this, bAN)['toNumber']();
    }

    function bCf(bAN) {
        return new bAS(this, bAN);
    }

    function bCh(bAN) {
        return new bAT(this, bAN);
    }

    function bCj(bAN) {
        return bAQ['read'](this, bAN, !0x1, 0x17, 0x4);
    }

    function bCl(bAN) {
        return bAQ['read'](this, bAN, !0x1, 0x34, 0x8);
    }
}, function(bCn, bCo, bCp) {
    ! function(bCo) {
        function bCp(bCn) {
            for (var bCo in bCF) bCn[bCo] = bCF[bCo];
            return bCn;
        }

        function bCu(bCn, bCo) {
            var bCp, bCy = this;
            if (arguments['length']) {
                if (bCo) {
                    if (bCp = bCA(bCy, bCn, !0x0)) {
                        if (!(bCp = bCp['filter'](function(bCn) {
                                return bCn !== bCo && bCn['originalListener'] !== bCo;
                            }))['length']) return bCu['call'](bCy, bCn);
                        bCy['listeners'][bCn] = bCp;
                    }
                } else if ((bCp = bCy['listeners']) && (delete bCp[bCn], !Object['keys'](bCp)['length'])) return bCu['call'](bCy);
            } else delete bCy['listeners'];
            return bCy;
        }

        function bCA(bCn, bCo, bCp) {
            if (!bCp || bCn['listeners']) {
                var bCu = bCn['listeners'] || (bCn['listeners'] = {});
                return bCu[bCo] || (bCu[bCo] = []);
            }
        }
        bCn['exports'] = bCo;
        var bCF = {
            'on': function(bCn, bCo) {
                return bCA(this, bCn)['push'](bCo), this;
            },
            'once': function(bCn, bCo) {
                function bCp() {
                    bCu['call'](bCF, bCn, bCp), bCo['apply'](this, arguments);
                }
                var bCF = this;
                return bCp['originalListener'] = bCo, bCA(bCF, bCn)['push'](bCp), bCF;
            },
            'off': bCu,
            'emit': function(bCn, bCo) {
                var bCp = this,
                    bCu = bCA(bCp, bCn, !0x0);
                if (!bCu) return !0x1;
                var bCF = arguments['length'];
                if (0x1 === bCF) bCu['forEach'](function(bCn) {
                    bCn['call'](bCp);
                });
                else if (0x2 === bCF) bCu['forEach'](function(bCn) {
                    bCn['call'](bCp, bCo);
                });
                else {
                    var bCT = Array['prototype']['slice']['call'](arguments, 0x1);
                    bCu['forEach'](function(bCn) {
                        bCn['apply'](bCp, bCT);
                    });
                }
                return !!bCu['length'];
            }
        };
        bCp(bCo['prototype']), bCo['mixin'] = bCp;
    }(
        /**
         * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)
         *
         * @copyright Yusuke Kawasaki
         * @license MIT
         * @constructor
         * @see https://github.com/kawanet/event-lite
         * @see http://kawanet.github.io/event-lite/EventLite.html
         * @example
         * var EventLite = require("event-lite");
         *
         * function MyClass() {...}             // your class
         *
         * EventLite.mixin(MyClass.prototype);  // import event methods
         *
         * var obj = new MyClass();
         * obj.on("foo", function() {...});     // add event listener
         * obj.once("bar", function() {...});   // add one-time event listener
         * obj.emit("foo");                     // dispatch event
         * obj.emit("bar");                     // dispatch another event
         * obj.off("foo");                      // remove event listener
         */
        function bCn() {
            if (!(this instanceof bCn)) return new bCn();
        });
}, function(bCV, bCW, bCX) {
    var bCY = bCX(0x64),
        bCZ = bCX(0x89),
        bD0 = Object['prototype']['toString'];

    function bD1(bCV) {
        return '[object\x20Array]' === bD0['call'](bCV);
    }

    function bD3(bCV) {
        return null !== bCV && 'object' == typeof bCV;
    }

    function bD5(bCV) {
        return '[object\x20Function]' === bD0['call'](bCV);
    }

    function bD7(bCV, bCW) {
        if (null != bCV)
            if ('object' != typeof bCV && (bCV = [bCV]), bD1(bCV))
                for (var bCX = 0x0, bCY = bCV['length']; bCX < bCY; bCX++) bCW['call'](null, bCV[bCX], bCX, bCV);
            else
                for (var bCZ in bCV) Object['prototype']['hasOwnProperty']['call'](bCV, bCZ) && bCW['call'](null, bCV[bCZ], bCZ, bCV);
    }
    bCV['exports'] = {
        'isArray': bD1,
        'isArrayBuffer': function(bCV) {
            return '[object\x20ArrayBuffer]' === bD0['call'](bCV);
        },
        'isBuffer': bCZ,
        'isFormData': function(bCV) {
            return 'undefined' != typeof FormData && bCV instanceof FormData;
        },
        'isArrayBufferView': function(bCV) {
            return 'undefined' != typeof ArrayBuffer && ArrayBuffer['isView'] ? ArrayBuffer['isView'](bCV) : bCV && bCV['buffer'] && bCV['buffer'] instanceof ArrayBuffer;
        },
        'isString': function(bCV) {
            return 'string' == typeof bCV;
        },
        'isNumber': function(bCV) {
            return 'number' == typeof bCV;
        },
        'isObject': bD3,
        'isUndefined': function(bCV) {
            return void 0x0 === bCV;
        },
        'isDate': function(bCV) {
            return '[object\x20Date]' === bD0['call'](bCV);
        },
        'isFile': function(bCV) {
            return '[object\x20File]' === bD0['call'](bCV);
        },
        'isBlob': function(bCV) {
            return '[object\x20Blob]' === bD0['call'](bCV);
        },
        'isFunction': bD5,
        'isStream': function(bCV) {
            return bD3(bCV) && bD5(bCV['pipe']);
        },
        'isURLSearchParams': function(bCV) {
            return 'undefined' != typeof URLSearchParams && bCV instanceof URLSearchParams;
        },
        'isStandardBrowserEnv': function() {
            return ('undefined' == typeof navigator || 'ReactNative' !== navigator['product'] && 'NativeScript' !== navigator['product'] && 'NS' !== navigator['product']) && 'undefined' != typeof window && 'undefined' != typeof document;
        },
        'forEach': bD7,
        'merge': function bCV() {
            function bCW(bCW, bCY) {
                bCX[bCY] = 'object' == typeof bCX[bCY] && 'object' == typeof bCW ? bCV(bCX[bCY], bCW) : bCW;
            }
            for (var bCX = {}, bCY = 0x0, bCZ = arguments['length']; bCY < bCZ; bCY++) bD7(arguments[bCY], bCW);
            return bCX;
        },
        'deepMerge': function bCV() {
            function bCW(bCW, bCY) {
                bCX[bCY] = 'object' == typeof bCX[bCY] && 'object' == typeof bCW ? bCV(bCX[bCY], bCW) : 'object' == typeof bCW ? bCV({}, bCW) : bCW;
            }
            for (var bCX = {}, bCY = 0x0, bCZ = arguments['length']; bCY < bCZ; bCY++) bD7(arguments[bCY], bCW);
            return bCX;
        },
        'extend': function(bCV, bCW, bCX) {
            return bD7(bCW, function(bCW, bCZ) {
                bCV[bCZ] = bCX && 'function' == typeof bCW ? bCY(bCW, bCX) : bCW;
            }), bCV;
        },
        'trim': function(bCV) {
            return bCV['replace'](/^\s*/, '')['replace'](/\s*$/, '');
        }
    };
}, function(bDG) {
    bDG['exports'] = 'pcCsl';
}, function(bDH, bDI, bDJ) {
    var bDK = bDJ(0x5e),
        bDL = bDJ(0x73),
        bDM = Object['prototype']['toString'];

    function bDN(bDH) {
        return '[object\x20Array]' === bDM['call'](bDH);
    }

    function bDP(bDH) {
        return null !== bDH && 'object' == typeof bDH;
    }

    function bDR(bDH) {
        return '[object\x20Function]' === bDM['call'](bDH);
    }

    function bDT(bDH, bDI) {
        if (null != bDH)
            if ('object' != typeof bDH && (bDH = [bDH]), bDN(bDH))
                for (var bDJ = 0x0, bDK = bDH['length']; bDJ < bDK; bDJ++) bDI['call'](null, bDH[bDJ], bDJ, bDH);
            else
                for (var bDL in bDH) Object['prototype']['hasOwnProperty']['call'](bDH, bDL) && bDI['call'](null, bDH[bDL], bDL, bDH);
    }
    bDH['exports'] = {
        'isArray': bDN,
        'isArrayBuffer': function(bDH) {
            return '[object\x20ArrayBuffer]' === bDM['call'](bDH);
        },
        'isBuffer': bDL,
        'isFormData': function(bDH) {
            return 'undefined' != typeof FormData && bDH instanceof FormData;
        },
        'isArrayBufferView': function(bDH) {
            return 'undefined' != typeof ArrayBuffer && ArrayBuffer['isView'] ? ArrayBuffer['isView'](bDH) : bDH && bDH['buffer'] && bDH['buffer'] instanceof ArrayBuffer;
        },
        'isString': function(bDH) {
            return 'string' == typeof bDH;
        },
        'isNumber': function(bDH) {
            return 'number' == typeof bDH;
        },
        'isObject': bDP,
        'isUndefined': function(bDH) {
            return void 0x0 === bDH;
        },
        'isDate': function(bDH) {
            return '[object\x20Date]' === bDM['call'](bDH);
        },
        'isFile': function(bDH) {
            return '[object\x20File]' === bDM['call'](bDH);
        },
        'isBlob': function(bDH) {
            return '[object\x20Blob]' === bDM['call'](bDH);
        },
        'isFunction': bDR,
        'isStream': function(bDH) {
            return bDP(bDH) && bDR(bDH['pipe']);
        },
        'isURLSearchParams': function(bDH) {
            return 'undefined' != typeof URLSearchParams && bDH instanceof URLSearchParams;
        },
        'isStandardBrowserEnv': function() {
            return ('undefined' == typeof navigator || 'ReactNative' !== navigator['product']) && 'undefined' != typeof window && 'undefined' != typeof document;
        },
        'forEach': bDT,
        'merge': function bDH() {
            function bDI(bDI, bDK) {
                bDJ[bDK] = 'object' == typeof bDJ[bDK] && 'object' == typeof bDI ? bDH(bDJ[bDK], bDI) : bDI;
            }
            for (var bDJ = {}, bDK = 0x0, bDL = arguments['length']; bDK < bDL; bDK++) bDT(arguments[bDK], bDI);
            return bDJ;
        },
        'extend': function(bDH, bDI, bDJ) {
            return bDT(bDI, function(bDI, bDL) {
                bDH[bDL] = bDJ && 'function' == typeof bDI ? bDK(bDI, bDJ) : bDI;
            }), bDH;
        },
        'trim': function(bDH) {
            return bDH['replace'](/^\s*/, '')['replace'](/\s*$/, '');
        }
    };
}, function(bEm, bEn, bEo) {
    let bEp = bEo(0x4);
    const bEq = bEo(0x7),
        bEr = bEo(0x17),
        bEs = bEo(0x8),
        bEt = bEo(0x16);
    let bEu = new bEp['TextureLoader'](),
        bEv = new bEp['LoadingManager'](),
        bEw = new bEp['OBJLoader'](bEv);

    function bEx(bEm, bEn, bEo, bEq, bEr, bEt = 0x0, bEv = 0x0, bEx = 0x0, bEG = null) {
        return new Promise(bEH => {
            bEw['load'](bEs['versionifyUrl'](bEn), bEn => {
                let bEw;
                bEo && (bEw = bEu['load'](bEs['versionifyUrl'](bEo), bEm => {
                    bEm['wrapS'] = bEp['RepeatWrapping'], bEm['wrapT'] = bEp['RepeatWrapping'], bEm['repeat']['set'](0x1, 0x1), bEm['minFilter'] = bEp['NearestFilter'], bEm['magFilter'] = bEp['NearestFilter'], bEm['needsUpdate'] = !0x0;
                }));
                let bEL = new bEp['StrippedLambertMaterial']({
                        'map': bEw
                    }),
                    bEM = new bEp['Geometry']();
                bEn['traverse'](bEm => {
                    bEm instanceof bEp['Mesh'] && (bEm['geometry']['isBufferGeometry'] ? (bEM['fromBufferGeometry'](bEm['geometry']), bEM['computeFlatVertexNormals'](), bEm['geometry']['fromGeometry'](bEM)) : bEm['geometry']['computeFlatVertexNormals'](), bEm['material'] = bEL);
                }), bEL['vertexColors'] = bEp['VertexColors'], bEL['color']['set'](bEr || 0xffffff), bEn['scale']['setScalar'](bEq || 0x1), bEn['position']['y'] += bEt, bEn['rotateX'](bEv || 0x0), bEn['rotateY'](bEx || 0x0), bEG ? (bEm[bEG] && (bEm['remove'](bEm[bEG]), bEm[bEG] = null), bEm[bEG] = bEn, bEm['add'](bEm[bEG])) : bEm['add'](bEn), bEH(bEn);
            });
        });
    }
    new bEp['BoxBufferGeometry'](0x1, 0x1, 0x1);
    new bEp['PlaneBufferGeometry'](0x1, 0x1)['rotateX'](-Math['PI'] / 0x2);
    new bEp['StrippedLambertMaterial']({
        'color': 0xff00
    }), new bEp['StrippedLambertMaterial']({
        'color': 0x555555
    });

    function bEO(bEm, bEn, bEo, bEq) {
        var bEs = bEr['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], bEm, bEn, bEo, {
            'scale': 0x1,
            'amb': bEq,
            'useScale': !0x0
        });
        return bEs = new bEp['BufferGeometry']()['fromGeometry'](bEs);
    }
    let bEU = (bEm, bEn, bEo, bEq, bEs, bEt, bEu, bEv, bEw, bEx) => {
            (bEu = bEu || {})['premultipliedAlpha'] = !0x0;
            var bEO = new bEp['Mesh'](bEr['generatePlane'](bEt, bEs, bEu, bEn, bEo, bEq));
            bEO['position']['set'](bEn, bEo, bEq), bEO['rotateY'](bEv || 0x0), bEO['rotateX']((bEw || 0x0) - Math['PI'] / 0x2), bEO['rotateZ'](bEx || 0x0), bEO['scale']['set'](0x2 * bEs, 0x2 * bEt, 0x1), bEO['updateMatrix'](), bEm['merge'](bEO['geometry'], bEO['matrix']);
        },
        bEV = (bEm, bEn, bEo, bEq, bEs, bEt, bEu, bEv, bEw) => {
            bEw = bEw || {};
            var bEx = new bEp['Mesh'](bEr['generateCube'](bEv, bEs, bEt, bEu, bEw));
            return bEx['position']['set'](bEn, bEo, bEq), bEx['rotation']['set'](bEw['yR'] || 0x0, bEw['xR'] || 0x0, bEw['zR'] || 0x0), bEx['scale']['set'](bEs, bEt, bEu), bEm instanceof bEp['Geometry'] ? (bEx['updateMatrix'](), bEm['merge'](bEx['geometry'], bEx['matrix'])) : bEm['add'](bEx), bEx;
        };
    bEm['exports']['prefabs'] = {
        'CRATE': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bEm => bEx(bEm, 'models/crate_0.obj', 'textures/crate_0.png', bEq['crateScale'], bEm['color']),
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'STACK': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bEm => bEx(bEm, 'models/stack_0.obj', 'textures/stack_0.png', bEq['crateScale'], bEm['color']),
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'BARREL': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bEm => bEx(bEm, 'models/barrel_0.obj', 'textures/barrel_0.png', bEq['barrelScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'ACIDBARREL': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'emiss': !0x0,
            'gen': bEm => bEx(bEm, 'models/acidbarrel_0.obj', 'textures/acidbarrel_0.png', bEq['acidbarrelScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'TREE': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'complex': !0x0,
            'gen': bEm => bEx(bEm, 'models/tree_0.obj', 'textures/tree_0.png', bEq['treeScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CONE': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'complex': !0x0,
            'gen': bEm => bEx(bEm, 'models/cone_0.obj', 'textures/cone_0.png', bEq['coneScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'TEDDY': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'complex': !0x0,
            'gen': bEm => bEx(bEm, 'models/teddy_0.obj', 'textures/teddy_0.png', bEq['teddyScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CONTAINER': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bEm => bEx(bEm, 'models/container_0.obj', 'textures/container_0.png', bEq['containerScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CONTAINERR': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bEm => bEx(bEm, 'models/containerr_0.obj', 'textures/containerr_0.png', bEq['containerScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'DOOR': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bEm => bEx(bEm, 'models/door_0.obj', 'textures/door_0.png', bEq['doorScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'WINDOW': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'gen': bEm => bEx(bEm, 'models/window_0.obj', 'textures/window_0.png', bEq['windowScale'], bEm['color']),
            'castShadow': !0x0,
            'transparent': !0x0,
            'receiveShadow': !0x0
        },
        'GRASS': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'complex': !0x0,
            'doubleSide': !0x0,
            'transparent': !0x0,
            'gen': bEm => bEx(bEm, 'models/grass_0.obj', 'textures/grass_0.png', bEq['grassScale'], bEm['color']),
            'receiveShadow': !0x0
        },
        'WEAPON_PICKUP': {
            'interact': !0x0,
            'customScore': !0x0,
            'defaultSize': [bEq['pickupZoneX'], bEq['pickupZoneH'], bEq['pickupZoneZ']],
            'scalable': !0x1,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'lineCol': 0x36dbff,
            'noTexture': !0x0,
            'texturable': !0x1,
            'opacity': 0.1,
            'genGeo': async (bEm, bEn) => function(bEm, bEn) {
                let bEo = bEr['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], ...bEm['size'], {
                    'scale': 0x1,
                    'amb': bEn,
                    'useScale': !0x0
                });
                return bEo = new bEp['BufferGeometry']()['fromGeometry'](bEo), bEx(bEm, 'models/weapons/' + bEt[bEm['weaponId']]['src'] + '.obj', 'textures/weapons/' + bEt[bEm['weaponId']]['src'] + '.png', bEt[bEm['weaponId']]['scale'], 0xffffff, -0.5, -1.6, 0x0, 'wepMesh'), bEo;
            }(bEm, bEn),
            'stepSrc': 'a'
        },
        'VEHICLE': {
            'hasHealth': !0x0,
            'editColor': !0x0,
            'dontRound': !0x0,
            'complex': !0x0,
            'emiss': !0x0,
            'gen': bEm => bEx(bEm, 'models/vehicle_0.obj', 'textures/vehicle_0.png', bEq['vehicleScale'], bEm['color']),
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'LADDER': {
            'defaultSize': [0x2, 0xa, 0x4],
            'scalable': !0x0,
            'scaleWithSize': !0x1,
            'editColor': !0x0,
            'hideBoundingBox': !0x1,
            'texturable': !0x0,
            'genGeo': async bEm => function(bEm, bEn, bEo, bEr) {
                var bEt = new bEp['Geometry']();
                bEr = bEr * Math['PI'] / 0x2;
                let bEu = {
                    'x': 0x0 + bEq['ladderScale'] * Math['cos'](bEr),
                    'z': 0x0 + bEq['ladderScale'] * Math['sin'](bEr),
                    'y': 0x0 - bEn / 0x2
                };
                bEV(bEt, bEu['x'] + bEq['ladderWidth'] * Math['sin'](bEr), bEu['y'], bEu['z'] + bEq['ladderWidth'] * Math['cos'](bEr), 0x2 * bEq['ladderScale'], bEn + 0x2, 0x2 * bEq['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
                    'scale': 0.02
                }), bEV(bEt, bEu['x'] - bEq['ladderWidth'] * Math['sin'](bEr), bEu['y'], bEu['z'] - bEq['ladderWidth'] * Math['cos'](bEr), 0x2 * bEq['ladderScale'], bEn + 0x2, 0x2 * bEq['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
                    'scale': 0.02
                });
                for (var bEv = Math['floor'](bEn / 0x6), bEw = 0x0; bEw < bEv; ++bEw) bEU(bEt, bEu['x'], bEu['y'] + 0x6 * (bEw + 0x1) + bEs['randFloat'](-0x1, 0x1), bEu['z'], bEq['ladderWidth'], bEq['ladderScale'], {
                    'scale': 0.02
                }, -bEr + Math['PI'] / 0x2, Math['PI'] / 0x2, bEs['randFloat'](-0.1, 0.1));
                return bEt;
            }(...bEm['size'], bEm['direction']),
            'customDirection': !0x0,
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0
        },
        'CUBE': {
            'canTrigger': !0x0,
            'movingTexture': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'hasHealth': !0x0,
            'scalable': !0x0,
            'editAmb': !0x0,
            'scaleWithSize': !0x1,
            'editColor': !0x0,
            'editEmissive': !0x0,
            'editOpac': !0x0,
            'hideBoundingBox': !0x1,
            'editPen': !0x0,
            'texturable': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'hasBorder': !0x0
        },
        'RAMP': {
            'defaultSize': [0xa, 0x5, 0xa],
            'movingTexture': !0x0,
            'scalable': !0x0,
            'scaleWithSize': !0x1,
            'hideBoundingBox': !0x1,
            'boostable': !0x0,
            'editColor': !0x0,
            'texturable': !0x0,
            'genGeo': async bEm => function(bEm, bEn, bEo, bEq, bEs, bEt, bEu) {
                var bEv = new bEp['Geometry']();
                bEn = 0x0 - bEs / 0x2;
                var bEw = 0x0 != (bEu = bEu * Math['PI'] / 0x2) && bEu != Math['PI'];
                return ((bEm, bEn, bEo, bEq, bEs, bEt, bEu, bEw, bEx) => {
                    bEw = bEw || {};
                    var bEO = new bEp['Mesh'](bEr['generatePlane'](0x2 * bEt, bEq, bEw));
                    bEO['position']['set'](bEm, bEn + bEs / 0x2, bEo), bEt *= 0x2;
                    var bEU = Math['sqrt'](bEs * bEs + bEt * bEt);
                    bEO['scale']['set'](bEq, bEU, 0x2), bEO['rotateY'](-Math['PI'] / 0x2 - bEu), bEO['rotateX'](Math['asin'](bEs / bEU) - Math['PI'] / 0x2), bEO['rotateZ'](bEx || 0x0), bEO['updateMatrix'](), bEv['merge'](bEO['geometry'], bEO['matrix']);
                })(bEm, bEn, bEo, bEw ? bEq : bEt, bEs, (bEw ? bEt : bEq) / 0x2, bEu, {
                    'scale': 0x1
                }), bEv;
            }(0x0, 0x0, 0x0, ...bEm['size'], bEm['direction']),
            'shootable': !0x0,
            'customDirection': !0x0,
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'doubleSide': !0x0
        },
        'PLANE': {
            'defaultSize': [0x4, 0.01, 0x4],
            'movingTexture': !0x0,
            'dontRound': !0x0,
            'scalable': !0x0,
            'canTerrain': !0x0,
            'edgeNoise': !0x0,
            'scaleWithSize': !0x0,
            'editColor': !0x0,
            'editPen': !0x0,
            'editEmissive': !0x0,
            'editOpac': !0x0,
            'hideBoundingBox': !0x1,
            'texturable': !0x0,
            'genGeo': async bEm => function(bEm, bEn) {
                let bEo = new bEp['PlaneGeometry'](bEm, bEn);
                return bEo['rotateX'](-Math['PI'] / 0x2), bEo;
            }(bEm['size'][0x0], bEm['size'][0x2]),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'doubleSide': !0x0
        },
        'OBJECTIVE': {
            'defaultSize': [0x32, 0x32, 0x32],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.2,
            'lineCol': 0xc800ff,
            'tool': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a'
        },
        'PARTICLES': {
            'defaultSize': [0x14, 0x14, 0x14],
            'hasParticles': !0x0,
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0x2effff,
            'tool': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a'
        },
        'BILLBOARD': {
            'defaultSize': [0x28, 0.01, 0xa],
            'lineCol': 0xffff00,
            'dontRound': !0x0,
            'scalable': !0x0,
            'canTerrain': !0x0,
            'scaleWithSize': !0x0,
            'hideBoundingBox': !0x1,
            'genGeo': async bEm => function(bEm, bEn, bEo, bEq, bEr, bEs) {
                var bEt = new bEp['Geometry']();
                return bEU(bEt, bEm, bEn, bEo, bEq / 0x2, bEs / 0x2), bEt;
            }(0x0, 0x0, 0x0, ...bEm['size']),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'doubleSide': !0x0
        },
        'SCORE_ZONE': {
            'customScore': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0xffff00,
            'tool': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a'
        },
        'DEATH_ZONE': {
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0xff0000,
            'tool': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a'
        },
        'SPAWN_POINT': {
            'scalable': !0x1,
            'alwaysSee': !0x0,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'teamable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.00001,
            'stepSrc': 'a',
            'customDirection': !0x0,
            'dontRound': !0x0,
            'genGeo': async (bEm, bEn) => function(bEm, bEn) {
                bEx(bEm, 'models/spawn_0.obj', 'textures/spawn_0.png', 0x1, 0xffffff, -5.5, 0x0, -((bEm['direction'] || 0x0) + 0x1) * Math['PI'] / 0x2, 'spwnMesh');
                let bEo = bEr['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x7, 0xb, 0x7, {
                    'scale': 0x1,
                    'amb': bEn,
                    'transparent': !0x0,
                    'useScale': !0x0,
                    'depthWrite': !0x1,
                    'side': 0x2
                });
                return bEo = new bEp['BufferGeometry']()['fromGeometry'](bEo);
            }(bEm, bEn),
            'dummy': !0x1,
            'castShadow': !0x1,
            'receiveShadow': !0x1
        },
        'CHECK_POINT': {
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0x3dac5,
            'tool': !0x0,
            'customDirection': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a'
        },
        'TELEPORTER': {
            'hasSignals': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'opacity': 0.3,
            'lineCol': 0xb1fff0,
            'tool': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a'
        },
        'CAMERA_POSITION': {
            'defaultSize': [0x2, 0x2, 0x2],
            'scalable': !0x1,
            'alwaysSee': !0x0,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'hideBoundingBox': !0x0,
            'editorGen': bEm => function(bEm, bEn, bEo) {
                let bEq = new bEp['TextureLoader']()['load'](bEs['versionifyUrl'](bEn));
                bEq['magFilter'] = bEp['NearestFilter'];
                let bEr = new bEp['SpriteMaterial']({
                        'map': bEq,
                        'color': 0xffffff
                    }),
                    bEt = new bEp['Sprite'](bEr);
                bEo && bEt['scale']['set'](bEo, bEo, 0x1), bEm['add'](bEt);
            }(bEm, 'img/crosshair.png', 0x5),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x1,
            'receiveShadow': !0x1
        },
        'FLAG': {
            'defaultSize': [bEq['flagZoneS'], bEq['flagZoneH'], bEq['flagZoneS']],
            'scalable': !0x1,
            'tool': !0x0,
            'scaleWithSize': !0x1,
            'lineCol': 0xc800ff,
            'teamable': !0x0,
            'noDefault': !0x0,
            'genGeo': async (bEm, bEn) => function(bEm, bEn) {
                bEx(bEm, 'models/crystal_0.obj', 'textures/crystal_0.png', bEq['flagScale'], 0xffffff, bEq['flagOff'] / 0x2);
                var bEo = bEr['generateCube']([0x1, 0x1, 0x0, 0x0, 0x1, 0x1], ...bEm['size'], {
                    'scale': 0x1,
                    'amb': bEn,
                    'useScale': !0x0,
                    'transparent': !0x0,
                    'depthWrite': !0x1,
                    'side': 0x2
                });
                return bEo = new bEp['BufferGeometry']()['fromGeometry'](bEo);
            }(bEm, bEn),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x1,
            'receiveShadow': !0x1
        },
        'POINT_GATE': {
            'canUndo': !0x0,
            'interact': !0x0,
            'customScore': !0x0,
            'movingTexture': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'forceCollision': !0x0,
            'editAmb': !0x0,
            'scaleWithSize': !0x1,
            'editColor': !0x0,
            'editEmissive': !0x0,
            'editOpac': !0x0,
            'lineCol': 0xff00ff,
            'texturable': !0x0,
            'tool2': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'complex': !0x0,
            'hasBorder': !0x0
        },
        'TRIGGER': {
            'movingTexture': !0x0,
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'forceCollision': !0x0,
            'editAmb': !0x0,
            'scaleWithSize': !0x1,
            'editColor': !0x0,
            'editEmissive': !0x0,
            'editOpac': !0x0,
            'lineCol': 0xff00ff,
            'texturable': !0x0,
            'tool2': !0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'complex': !0x0
        },
        'SIGN': {
            'movingTexture': !0x0,
            'hasText': !0x0,
            'defaultSize': [0x28, 0.01, 0xa],
            'forceCollision': !0x0,
            'lineCol': 0xffff00,
            'scalable': !0x0,
            'scaleWithSize': !0x0,
            'hideBoundingBox': !0x1,
            'tool': !0x0,
            'genGeo': async bEm => function(bEm, bEn, bEo, bEq, bEr, bEs, bEt) {
                var bEu = new bEp['Geometry']();
                return bEU(bEu, 0x0, 0x0, 0x0, bEr / 0x2, bEt / 0x2), bEu;
            }(bEm, 0x0, 0x0, 0x0, ...bEm['size']),
            'stepSrc': 'a',
            'dummy': !0x1,
            'castShadow': !0x0,
            'receiveShadow': !0x0,
            'doubleSide': !0x0
        },
        'PLACEHOLDER': {
            'defaultSize': [0xa, 0xa, 0xa],
            'scalable': !0x0,
            'noTexture': !0x0,
            'noExport': !0x0,
            'tool': !0x0,
            'opacity': 0.1,
            'lineCol': 0x0,
            'genGeo': async (bEm, bEn) => bEO(...bEm['size'], bEn),
            'stepSrc': 'a'
        }
    }, bEm['exports']['texturePrefabs'] = {
        'WALL': {
            'src': 'wall_0',
            'filter': bEp['NearestFilter']
        },
        'DIRT': {
            'src': 'dirt_0',
            'filter': bEp['NearestFilter']
        },
        'FLOOR': {
            'src': 'floor_0',
            'filter': bEp['NearestFilter']
        },
        'GRID': {
            'src': 'grid_0',
            'filter': bEp['NearestFilter']
        },
        'GREY': {
            'src': 'grey_0',
            'filter': bEp['NearestFilter']
        },
        'DEFAULT': {
            'src': 'default',
            'filter': bEp['NearestFilter']
        },
        'ROOF': {
            'src': 'roof_0',
            'filter': bEp['NearestFilter']
        },
        'FLAG': {
            'src': 'flag_0',
            'filter': bEp['NearestFilter']
        },
        'CHECK': {
            'src': 'check_0',
            'filter': bEp['NearestFilter']
        },
        'GRASS': {
            'src': 'grass_1',
            'filter': bEp['NearestFilter']
        },
        'LINES': {
            'src': 'lines_0',
            'filter': bEp['NearestFilter']
        },
        'BRICK': {
            'src': 'brick_0',
            'filter': bEp['NearestFilter']
        },
        'LINK': {
            'src': 'link_0',
            'trans': !0x0,
            'filter': bEp['NearestFilter']
        }
    };
    let bGZ = bEm => ({
        'src': bEm,
        'filter': bEp['NearestFilter']
    });
    bEm['exports']['loadTexturePrefab'] = function(bEn, bEo = null) {
        if (bEo['prefab']['hasText']) return (bEm => {
            var bEn = new bEp['Texture'](bEm);
            return bEn['wrapS'] = bEp['RepeatWrapping'], bEn['wrapT'] = bEp['RepeatWrapping'], bEn['repeat']['set'](0x1, 0x1), bEn['minFilter'] = bEp['NearestFilter'], bEn['magFilter'] = bEp['NearestFilter'], bEn['needsUpdate'] = !0x0, bEn;
        })(bEs['createCanvasText'](bEo['size'][0x0], bEo['size'][0x2], bEo['text'] || 'Hello\x20World', bEo['fsize'] || 0xa, bEo['fcolor'] || '#000', bEo['bcolor'] || '#fff', !bEo['backVisible'], bEo['tAlign'] || 0x0));
        let bEr = 'BILLBOARD' == bEo['objType'] ? bGZ('pubs/b_' + (bEo['poster'] || bEs['randInt'](0x1, bEq['billboardCnt']))) : bEm['exports']['texturePrefabs'][bEn];
        return 'default' == (bEr = 'FLAG' == bEo['objType'] ? bGZ('zone_r') : bEr)['src'] ? void 0x0 : bEu['load'](bEs['versionifyUrl']('/textures/' + bEr['src'] + '.png'), bEm => {
            bEm['wrapS'] = bEp['RepeatWrapping'], bEm['wrapT'] = bEp['RepeatWrapping'], bEm['minFilter'] = bEr['filter'], bEm['magFilter'] = bEr['filter'], bEm['needsUpdate'] = !0x0;
        });
    };
}, function(bH7, bH8, bH9) {
    bH9['d'](bH8, 'a', function() {
        return bHa;
    });
    var bHa = function() {
        function bH7() {
            this['_hasWeakSet'] = 'function' == typeof WeakSet, this['_inner'] = this['_hasWeakSet'] ? new WeakSet() : [];
        }
        return bH7['prototype']['memoize'] = function(bH7) {
            if (this['_hasWeakSet']) return !!this['_inner']['has'](bH7) || (this['_inner']['add'](bH7), !0x1);
            for (var bH8 = 0x0; bH8 < this['_inner']['length']; bH8++)
                if (this['_inner'][bH8] === bH7) return !0x0;
            return this['_inner']['push'](bH7), !0x1;
        }, bH7['prototype']['unmemoize'] = function(bH7) {
            if (this['_hasWeakSet']) this['_inner']['delete'](bH7);
            else
                for (var bH8 = 0x0; bH8 < this['_inner']['length']; bH8++)
                    if (this['_inner'][bH8] === bH7) {
                        this['_inner']['splice'](bH8, 0x1);
                        break;
                    }
        }, bH7;
    }();
}, function(bHg, bHh, bHi) {
    const bHj = bHi(0x7),
        bHk = bHi(0x3b),
        bHl = bHi(0x3c),
        bHm = bHi(0x16),
        bHn = bHi(0x28);
    var bHo = [{
            'id': 'ffa',
            'name': 'Free\x20for\x20All',
            'alias': 'ffa'
        }, {
            'id': 'tdm',
            'name': 'Team\x20Deathmatch',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
            'alias': 'tdm',
            'teams': !0x0
        }, {
            'id': 'point',
            'name': 'Hardpoint',
            'alias': 'point',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
            'objective': !0x0,
            'teams': !0x0,
            'gameStart': function(bHg) {
                bHg['activeObjective'] = -0x1, bHg['nextObjective']();
            }
        }, {
            'id': 'ctf',
            'name': 'Capture\x20the\x20Flag',
            'alias': 'ctf',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'caps', 'reward'],
            'onKill': function(bHg, bHh, bHi) {
                bHg['dropFlag'](bHi['flag']);
            },
            'flags': !0x0,
            'teams': !0x0,
            'noScoreC': !0x0
        }, {
            'id': 'bhop',
            'name': 'Parkour',
            'endStats': ['sid', 'name', 'score', 'deaths'],
            'alias': 'bhop',
            'noKick': !0x0,
            'friendly': !0x0
        }, {
            'id': 'hide',
            'name': 'Hide\x20&\x20Seek',
            'alias': 'hide',
            'endStats': ['sid', 'name', 'score', 'found', 'reward'],
            'winCondition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0; bHi < bHg['players']['list']['length']; ++bHi) bHg['players']['list'][bHi]['active'] && 'hide' == bHg['players']['list'][bHi]['team'] && bHh++;
                return 0x0 < bHh ? 'hide' : 'seek';
            },
            'condition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0; bHi < bHg['players']['list']['length']; ++bHi) bHg['players']['list'][bHi]['active'] && 'hide' == bHg['players']['list'][bHi]['team'] && bHh++;
                return 0x0 < bHh;
            },
            'minPlayers': 0x2,
            'waitTimers': [{
                'time': 0x2710,
                'msg': 'picking\x20seeker\x20in\x20',
                'trigger': function(bHg) {
                    bHg['pickSeeker']();
                }
            }, {
                'time': 0xafc8,
                'msg': 'releasing\x20seeker\x20in\x20',
                'trigger': function(bHg) {
                    bHg['releaseSeeker']();
                }
            }],
            'spdMlt': {
                'hide': 0.8
            },
            'killConv': !0x0,
            'noKick': !0x0,
            'showTeam': !0x0,
            'startTeam': 'hide',
            'convTeam': 'seek',
            'convWord': 'found',
            'noWeap': !0x0,
            'friendly': !0x0,
            'hideNames': !0x0
        }, {
            'id': 'infect',
            'name': 'Infected',
            'alias': 'infect',
            'endStats': ['sid', 'name', 'score', 'kills', 'infected', 'reward'],
            'winCondition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0; bHi < bHg['players']['list']['length']; ++bHi) bHg['players']['list'][bHi]['active'] && 'surv' == bHg['players']['list'][bHi]['team'] && bHh++;
                return 0x0 < bHh ? 'surv' : 'inf';
            },
            'condition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0; bHi < bHg['players']['list']['length']; ++bHi) bHg['players']['list'][bHi]['active'] && 'surv' == bHg['players']['list'][bHi]['team'] && bHh++;
                return 0x0 < bHh;
            },
            'minPlayers': 0x2,
            'waitTimers': [{
                'time': 0x4e20,
                'msg': 'infection\x20in\x20',
                'trigger': function(bHg) {
                    bHg['infectRandom']();
                }
            }],
            'teamClass': {
                'inf': 0x9
            },
            'spdMlt': {
                'inf': 1.15
            },
            'killConv': !0x0,
            'noKick': !0x0,
            'startTeam': 'surv',
            'convWord': 'infected',
            'convTeam': 'inf'
        }, {
            'id': 'race',
            'name': 'Race',
            'alias': 'race',
            'endStats': ['sid', 'name', 'score', 'time'],
            'gameTime': 0x0,
            'showMS': !0x0,
            'timed': !0x0,
            'endSort': function(bHg, bHh) {
                return bHg['score'] === bHh['score'] && bHg['gameTimer'] && bHh['gameTimer'] ? bHg['gameTimer'] - bHh['gameTimer'] : bHh['score'] - bHg['score'];
            },
            'gameStart': function(bHg) {
                bHg['lockMove'] = !0x0, bHg['targetScore'] = 0x0;
                for (var bHh = 0x0; bHh < bHg['map']['manager']['objects']['length']; ++bHh) bHg['map']['manager']['objects'][bHh]['score'] && (bHg['targetScore'] += bHg['map']['manager']['objects'][bHh]['scoreP']);
            },
            'condition': function(bHg) {
                for (var bHh = 0x0; bHh < bHg['players']['list']['length']; ++bHh) bHg['players']['list'][bHh]['score'] >= bHg['targetScore'] && !bHg['players']['list'][bHh]['timer'] && (bHg['players']['list'][bHh]['timer'] = bHg['lastTimer'], bHg['players']['list'][bHh]['gameTimer'] = bHg['gameTimer'], bHg['waitTimers'] || (bHg['waitTimers'] = [{
                    'time': 0x2710,
                    'contTime': !0x0,
                    'msg': 'race\x20ends\x20in\x20',
                    'trigger': function(bHg) {
                        bHg['gameTimer'] = 'skip';
                    }
                }]));
                return !0x0;
            },
            'waitTimers': [{
                'time': 0x3a98,
                'msg': 'race\x20starting\x20in\x20',
                'trigger': function(bHg) {
                    bHg['lockMove'] = !0x1;
                }
            }],
            'noWeap': !0x0,
            'friendly': !0x0
        }, {
            'id': 'lms',
            'name': 'Last\x20Man\x20Standing',
            'alias': 'lms',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists'],
            'noRegen': !0x0,
            'noKick': !0x0,
            'teams': !0x0,
            'lives': 0x1,
            'winCondition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0, bHj = 0x0; bHj < bHg['players']['list']['length']; ++bHj)
                    if (0x0 < bHg['players']['list'][bHj]['lives']) {
                        var bHk = bHg['players']['list'][bHj]['lives'];
                        0x1 == bHg['players']['list'][bHj]['team'] ? bHh += bHk : bHi += bHk;
                    }
                return bHh > bHi ? 0x1 : 0x2;
            },
            'gameTime': 0x493e0
        }, {
            'id': 'simon',
            'name': 'Simon\x20Says',
            'alias': 'simon',
            'endStats': ['sid', 'name', 'score', 'reward'],
            'condition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0; bHi < bHg['players']['list']['length']; ++bHi) bHg['players']['list'][bHi]['active'] && 'foll' == bHg['players']['list'][bHi]['team'] && bHh++;
                return 0x0 < bHh;
            },
            'minPlayers': 0x3,
            'waitTimers': [{
                'time': 0x2710,
                'msg': 'starts\x20in\x20',
                'trigger': function(bHg) {
                    bHg['pickSimon']();
                }
            }],
            'noKick': !0x0,
            'teamSee': ['simon', 'foll'],
            'startTeam': 'foll'
        }, {
            'id': 'gun',
            'name': 'Gun\x20Game',
            'alias': 'gun',
            'endStats': ['sid', 'name', 'weapon', 'kills', 'melees', 'setbacks', 'reward'],
            'leaderStat': 'weaponTier',
            'winCondition': function(bHg) {
                for (var bHh = 0x0; bHh < bHg['players']['list']['length']; ++bHh)
                    if (bHg['players']['list'][bHh]['weaponTier'] >= bHg['mode']['weaponOrder']['length']) return bHg['players']['list'][bHh];
                return null;
            },
            'condition': function(bHg) {
                for (var bHh = 0x0; bHh < bHg['players']['list']['length']; ++bHh)
                    if (bHg['players']['list'][bHh]['weaponTier'] >= bHg['mode']['weaponOrder']['length']) return !0x1;
                return !0x0;
            },
            'onKill': function(bHg, bHh, bHi, bHj, bHk) {
                bHj && bHj != bHi ? bHg['weapons'][null == bHk['weaponId'] ? bHj['loadout'][bHj['weaponIndex']] : bHk['weaponId']]['melee'] ? bHg['decreaseWeapon'](bHi) : bHg['increaseWeapon'](bHj, bHk) : bHg['decreaseWeapon'](bHi), bHh && bHg['players']['syncLeaders']();
            },
            'startingLoadout': [0x2],
            'keepLoadout': !0x0,
            'rewardMlt': 0x32,
            'noReward': !0x0,
            'noAssists': !0x0,
            'noStreaks': !0x0,
            'minPlayers': 0x2,
            'noWeap': !0x0,
            'weaponOrder': [0x2, 0xa, 0x4, 0xb, 0x5, 0x3, 0x9, 0x1, 0xe, 0x6, 0x0, 0x7, 0x8, 0xd]
        }, {
            'id': 'prop',
            'name': 'Prop\x20Hunt',
            'alias': 'prop',
            'genID': 'p',
            'endStats': ['sid', 'name', 'score', 'kills'],
            'noRegen': !0x0,
            'noKick': !0x0,
            'teams': !0x0,
            'lives': 0x1,
            'winCondition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0; bHi < bHg['players']['list']['length']; ++bHi) bHg['players']['list'][bHi]['active'] && 'prop' == bHg['players']['list'][bHi]['team'] && bHh++;
                return 0x0 < bHh ? 'prop' : 'seek';
            },
            'condition': function(bHg) {
                for (var bHh = 0x0, bHi = 0x0, bHj = 0x0; bHj < bHg['players']['list']['length']; ++bHj) 0x0 < bHg['players']['list'][bHj]['lives'] && bHg['players']['list'][bHj]['active'] && ('prop' == bHg['players']['list'][bHj]['team'] ? bHh++ : bHi++);
                return 0x1 <= bHh && 0x1 <= bHi;
            },
            'minPlayers': 0x2,
            'waitTimers': [{
                'time': 0x2710,
                'msg': 'locking\x20seekers\x20in\x20',
                'trigger': function(bHg) {
                    bHg['lockSeekers']();
                }
            }, {
                'time': 0x7530,
                'msg': 'releasing\x20seekers\x20in\x20',
                'noJoin': !0x0,
                'trigger': function(bHg) {
                    bHg['releaseSeeker']();
                }
            }],
            'teamNs': ['seek', 'prop'],
            'showTeam': !0x0,
            'hideNames': !0x0
        }],
        bHp = [0x0, 0x1, 0x2, 0x3];
    bHg['exports']['modes'] = bHo;
    for (var bIi = [{
            'name': 'Burg',
            'ambInd': 0x1,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x1,
            'skyDomeCol0': '#ffffff',
            'skyDomeCol1': '#7196a2',
            'skyDomeCol2': '#184452',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0x7d6e6c,
            'light': 0xffe8e8,
            'sky': 0xd7c6c6,
            'fog': 0xd2c1c1,
            'fogD': 918.7540927106669,
            'dthY': -0x64,
            'camPos': [0xb, 0x21, -0xd9],
            'spawns': [
                [-0x50, 0x12, 0x23, 0x0],
                [0xb1, 0x0, -0xbc, 0x0],
                [0xd7, 0xa, -0x1f8, 0x0, 0x1],
                [-0xa9, 0x2, -0x202, 0x0, 0x2],
                [-0x148, 0x0, -0xff, 0x0],
                [-0x9a, 0x0, -0x86, 0x0, 0x1],
                [-0x7d, -0x1c, -0x155, 0x0],
                [0x20, -0x1c, -0x1fd, 0x0, 0x1],
                [0x14b, 0x0, -0xe3, 0x0, 0x2],
                [0x66, 0x0, -0x16d, 0x0]
            ],
            'ambO': 0.7,
            'ambS': 0x5,
            'modes': [0x0, 0x1],
            'shadScale': 0xaa,
            'objects': [{
                'p': [-0x60, 0x10, 0x29],
                's': [0x120, 0x2, 0x3e],
                't': 0x1
            }, {
                'p': [0x49, 0x0, 0x21],
                's': [0x32, 0x12, 0x2e],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [0x1c, 0x0, 0x8],
                's': [0x98, 0x18, 0x4]
            }, {
                'p': [0x0, -0x2, -0x47],
                's': [0x204, 0x2, 0xfc],
                't': 0x1
            }, {
                'p': [-0x4c, 0x0, -0x30],
                's': [0x38, 0x4a, 0x7a],
                'bo': 0x1
            }, {
                'p': [0x25, 0x0, -0x44],
                's': [0x6e, 0x36, 0x50],
                'bo': 0x1
            }, {
                'p': [-0x70, 0x0, 0x4a],
                's': [0x7e, 0x4c, 0x26],
                'bo': 0x1
            }, {
                'p': [0x5a, 0x0, 0x4d],
                's': [0x9e, 0x4c, 0x2c],
                'bo': 0x1
            }, {
                'p': [-0x88, 0x10, -0x10],
                's': [0x40, 0x2, 0x34],
                't': 0x1
            }, {
                'p': [-0x88, 0x0, -0x2c],
                's': [0x40, 0x18, 0x4]
            }, {
                'p': [-0xaa, 0x0, -0x12],
                's': [0x4, 0x18, 0x38]
            }, {
                'p': [-0xea, 0x0, -0x1b],
                's': [0x20, 0x3c, 0x61],
                'bo': 0x1
            }, {
                'p': [-0x102, 0x12, 0x29],
                's': [0x2f, 0x20, 0x2c],
                'c': 0xcfcfcf,
                'bo': 0x1
            }, {
                'p': [-0xda, 0xd, 0x4a],
                's': [0x58, 0x26, 0x36],
                'bo': 0x1
            }, {
                'p': [0xb9, 0x0, -0x9],
                's': [0x10, 0x43, 0x54],
                'bo': 0x1
            }, {
                'p': [0xb4, 0x0, 0x2d],
                's': [0x3c, 0x5c, 0x2c],
                'c': 0xb4b4b4,
                'bo': 0x1
            }, {
                'p': [0xd5, 0x0, -0x3d],
                's': [0x5e, 0x5c, 0x3c],
                'c': 0xb1b1b1,
                'bo': 0x1
            }, {
                'p': [0x60, 0x0, -0xaf],
                's': [0x6e, 0x2c, 0x2c],
                'bo': 0x1
            }, {
                'p': [-0x55, 0x0, -0x8c],
                's': [0x38, 0x54, 0x70],
                'bo': 0x1
            }, {
                'p': [0x7e, -0x4, -0x12c],
                's': [0xe4, 0x4, 0xce],
                't': 0x1
            }, {
                'p': [-0x52, -0x1c, -0xfc],
                's': [0x3c, 0x5e, 0x8a],
                'bo': 0x1
            }, {
                'p': [0x9, -0x1c, -0x112],
                's': [0x6, 0x22, 0xa8]
            }, {
                'p': [0x31, -0x1c, -0x181],
                's': [0x60, 0x68, 0x44],
                'bo': 0x1
            }, {
                'p': [-0x17, -0x1c, -0xfc],
                's': [0x3a, 0x1c, 0x6e],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [0x3b, -0x20, -0x1c4],
                's': [0xda, 0x4, 0x8a],
                't': 0x1
            }, {
                'p': [-0x6c, -0x1c, -0x179],
                's': [0x82, 0x58, 0x2a],
                'bo': 0x1
            }, {
                'p': [-0x15, 0x6, -0x179],
                's': [0x2c, 0x26, 0x14],
                'bo': 0x1
            }, {
                'p': [-0xf3, 0x0, -0x69],
                's': [0x15, 0x32, 0x60],
                'c': 0xbbb9b9,
                'bo': 0x1
            }, {
                'p': [0xbe, 0x0, -0x15a],
                's': [0x75, 0x3a, 0x76],
                'bo': 0x1
            }, {
                'p': [-0xc3, 0x0, -0x11],
                's': [0x2e, 0x12, 0x36],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0x86, 0x0, -0xbf],
                's': [0x5a, 0x4d, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0x116, 0x0, -0xbf],
                's': [0x82, 0x4d, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0xe3, -0x2, -0xfe],
                's': [0xe8, 0x2, 0x32],
                't': 0x1
            }, {
                'p': [-0xd2, -0x1c, -0x143],
                's': [0x84, 0x5a, 0x42],
                'bo': 0x1
            }, {
                'p': [-0x80, -0x1c, -0x12c],
                's': [0x20, 0x1c, 0x2a],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0xe9, -0x2, -0x1a3],
                's': [0xac, 0x2, 0x118],
                't': 0x1
            }, {
                'p': [-0x146, -0x16, -0x141],
                's': [0x22, 0x54, 0x58],
                'bo': 0x1
            }, {
                'p': [-0x172, -0x2, -0xfd],
                's': [0x37, 0x9b, 0x3a],
                'bo': 0x1
            }, {
                'p': [-0x9e, -0x1c, -0x112],
                's': [0x1c, 0x5a, 0x20],
                'bo': 0x1
            }, {
                'p': [-0x107, -0x14, -0x142],
                's': [0x1e, 0x5e, 0x5e],
                'bo': 0x1
            }, {
                'p': [-0x14a, -0x17, -0x18a],
                's': [0x16, 0x51, 0xd2],
                'bo': 0x1
            }, {
                'p': [-0x58, -0x1c, -0x1ad],
                's': [0x4e, 0x1c, 0x3e],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [-0x67, -0x16, -0x1f1],
                's': [0x31, 0x54, 0x56],
                'bo': 0x1
            }, {
                'p': [-0x89, -0x2, -0x1cf],
                's': [0x14, 0x2, 0x82],
                't': 0x1
            }, {
                'p': [-0xa4, 0x0, -0x223],
                's': [0x62, 0x56, 0x28],
                'bo': 0x1
            }, {
                'p': [-0x11b, 0x0, -0x1fa],
                's': [0x48, 0xa, 0x56],
                't': 0x1
            }, {
                'p': [-0x105, 0x0, -0x1c4],
                's': [0x1c, 0xa, 0x16],
                't': 0x1
            }, {
                'p': [-0x12a, 0x0, -0x1c2],
                's': [0x2a, 0xa, 0x1a],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x15b, 0x0, -0x217],
                's': [0x48, 0x48, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0x106, 0x0, -0x237],
                's': [0x62, 0x34, 0x28],
                'bo': 0x1
            }, {
                'p': [-0x13f, 0x0, -0x24b],
                's': [0x30, 0x8b, 0x36],
                'c': 0xb1b1b1
            }, {
                'p': [-0x1, -0x1c, -0x179],
                's': [0x4, 0x22, 0x14],
                'bo': 0x1
            }, {
                'p': [-0x29, -0x1c, -0x179],
                's': [0x4, 0x22, 0x14],
                'bo': 0x1
            }, {
                'p': [-0x3f, -0x1c, -0x1fa],
                's': [0x34, 0x76, 0x5c],
                'bo': 0x1
            }, {
                'p': [0x55, -0x1c, -0x1f2],
                's': [0x20, 0x70, 0x58],
                'bo': 0x1
            }, {
                'p': [0xad, 0x8, -0x1f7],
                's': [0x94, 0x2, 0x54],
                't': 0x1
            }, {
                'p': [0x27, -0x1d, -0x220],
                's': [0xda, 0x5e, 0x2e],
                'bo': 0x1
            }, {
                'p': [0xb6, 0xa, -0x21c],
                's': [0x48, 0x57, 0x3c],
                'bo': 0x1
            }, {
                'p': [0x124, -0x4, -0x149],
                's': [0x68, 0x4, 0x108],
                't': 0x1
            }, {
                'p': [0x118, 0x0, -0x1e5],
                's': [0x3a, 0xa, 0x30],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [0x116, 0x8, -0x20f],
                's': [0x3e, 0x2, 0x24],
                't': 0x1
            }, {
                'p': [0x108, 0x9, -0x22e],
                's': [0x5e, 0x24, 0x1a],
                'bo': 0x1
            }, {
                'p': [0x14b, -0x17, -0x228],
                's': [0x36, 0x87, 0x6e],
                'c': '#aaaaaa',
                'bo': 0x1
            }, {
                'p': [0x14c, 0x0, -0x1f3],
                's': [0x30, 0x37, 0x6e],
                'bo': 0x1
            }, {
                'p': [0x156, 0x1, -0x19b],
                's': [0x14, 0x1f, 0x6e],
                'bo': 0x1
            }, {
                'p': [0x150, 0x0, -0x12f],
                's': [0x36, 0x3d, 0x6e],
                'bo': 0x1
            }, {
                'p': [0x7f, -0x1c, -0x1a9],
                's': [0x40, 0x23, 0x4]
            }, {
                'p': [0xc4, -0x1c, -0x1cd],
                's': [0x6e, 0x2c, 0x4]
            }, {
                'p': [0xf9, 0x0, -0x1e6],
                's': [0x4, 0x10, 0x2e]
            }, {
                'p': [0xcc, -0x1c, -0x1b8],
                's': [0x48, 0x1c, 0x26],
                'i': 0x9,
                't': 0x1
            }, {
                'p': [0x9c, 0x0, -0xbc],
                's': [0x20, 0x46, 0x52],
                'bo': 0x1
            }, {
                'p': [0xe4, 0x0, -0xbc],
                's': [0x20, 0x56, 0x52],
                'bo': 0x1
            }, {
                'p': [0x16f, 0x0, -0x92],
                's': [0x3a, 0x32, 0x76],
                'c': '#a2a2a2',
                'bo': 0x1
            }, {
                'p': [0x14f, 0x51, -0x3e],
                's': [0x3c, 0x3a, 0x3c]
            }, {
                'p': [0x15c, 0x0, -0xe3],
                's': [0x8, 0x2c, 0x34],
                'bo': 0x1
            }, {
                'p': [0x189, 0x0, -0x1a4],
                's': [0x58, 0x40, 0xc5]
            }, {
                'p': [0x18c, 0x0, -0xc4],
                's': [0x3a, 0x51, 0xba]
            }, {
                'p': [-0x164, 0x0, -0x171],
                's': [0x2a, 0x62, 0x32]
            }, {
                'p': [-0x108, 0x0, -0x54],
                's': [0x2a, 0x7c, 0x32],
                'c': 0xacacac
            }, {
                'p': [0x1, 0x0, 0x0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2a, 0x0, -0x4f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2a, 0xc, -0x4f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2a, 0x0, -0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x0, -0x1c, -0x145],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x0, -0x1c, -0x151],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x0, -0x10, -0x14d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x4c, -0x1c, -0x147],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x4c, -0x10, -0x147],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xed, 0xa, -0x1d9],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe0, 0xa, -0x208],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9b, 0xa, -0x1f8],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa7, 0xa, -0x1f8],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa3, 0x16, -0x1f8],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd6, 0xa, -0x1d2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x138, 0x0, -0x18f],
                's': [0x2, 0x2, 0x5c]
            }, {
                'p': [0x13e, 0x0, -0xf2],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe3, 0x0, -0x119],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd7, 0x0, -0x119],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe0, 0xc, -0x119],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x3b, 0x12, 0x13],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x6e, 0x12, -0x24],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x6e, 0x0, -0x34],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7a, 0x0, -0x34],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa5, 0x12, -0x27],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd7, 0x12, 0xd],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x9a, 0x0, -0xfc],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x139, 0x0, -0xeb],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x85, 0x0, -0x1d5],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0xbe, 0x0, -0x1e5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xce, 0x0, -0xcf],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xce, 0x0, -0xc3],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x62, 0x0, -0x3d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x62, 0x0, -0x49],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x5f, 0x0, -0x34],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x85, 0x0, -0x96],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xc0, 0x22, -0xbc],
                's': [0x28, 0x18, 0x52],
                'bo': 0x1
            }, {
                'p': [0x80, -0x4, -0x19f],
                's': [0x44, 0xc, 0x14],
                't': 0x1
            }, {
                'p': [0x5d, -0x1c, -0x1a6],
                's': [0x4, 0x2a, 0xa]
            }, {
                'p': [0x151, -0x4, -0x96],
                's': [0x16, 0x4, 0x5e],
                't': 0x1
            }, {
                'p': [-0xb, -0x1c, -0x180],
                's': [0x14, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x20, -0x1c, -0x172],
                's': [0x12, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xad, 0x0, -0xe9],
                's': [0x2, 0x22, 0x18],
                'pe': 0x1,
                't': 0x2
            }, {
                'p': [0xca, 0x0, -0xe2],
                's': [0x14, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb6, 0x0, -0x96],
                's': [0x14, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xd3, 0x0, -0xa2],
                's': [0x2, 0x22, 0x18],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, -0x1c, -0x1b6],
                's': [0x1c, 0x4c, 0x28],
                'bo': 0x1
            }, {
                'p': [0x72, 0x0, -0x184],
                's': [0x24, 0x8, 0x22],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x151, 0x8b, -0x233],
                's': [0xc, 0x4, 0x6],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [-0x12b, 0x8b, -0x236],
                's': [0x8, 0x4, 0xc],
                'l': 0x1,
                'c': 0xb1afaf
            }, {
                'p': [-0x129, 0x8b, -0x24a],
                's': [0x4, 0x4, 0xc],
                'l': 0x1,
                'c': 0xb4b4b4
            }, {
                'p': [-0x12c, 0x8b, -0x260],
                's': [0xa, 0x4, 0xc],
                'l': 0x1,
                'c': 0xa5a5a5
            }, {
                'p': [-0x13c, 0x8b, -0x233],
                's': [0xc, 0x2, 0x6],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [-0xce, 0x56, -0x217],
                's': [0xe, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0x7e, 0x56, -0x217],
                's': [0x16, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xa5, 0x56, -0x212],
                's': [0x16, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xd1, 0x56, -0x230],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0xe6, 0x34, -0x226],
                's': [0x18, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x108, 0x34, -0x226],
                's': [0x12, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x127, 0x34, -0x226],
                's': [0xe, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x13c, 0x46, -0x1f6],
                's': [0x6, 0xc, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x17a, 0x49, -0x1f6],
                's': [0x6, 0x8, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x13e, 0x48, -0x1f8],
                's': [0xe, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x17a, 0x48, -0x1f8],
                's': [0xa, 0x2, 0xe],
                'l': 0x1
            }, {
                'p': [-0x166, 0x48, -0x1f3],
                's': [0xe, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13a, 0x48, -0x218],
                's': [0x6, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x1e0],
                's': [0x4, 0x2, 0x18],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x180],
                's': [0x4, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x19d],
                's': [0x4, 0x3, 0x15],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x1be],
                's': [0x4, 0x3, 0x13],
                'l': 0x1
            }, {
                'p': [-0x35, 0x3c, -0x188],
                's': [0x14, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [-0xa6, 0x3c, -0x16c],
                's': [0xe, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [0xe9, 0x2d, -0x224],
                's': [0xc, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0x106, 0x2d, -0x224],
                's': [0xb, 0x2, 0x6],
                'l': 0x1,
                'c': 0xcacaca
            }, {
                'p': [0x120, 0x2d, -0x224],
                's': [0x10, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x52, 0x5a, -0x1d2],
                's': [0xe, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x2b, 0x5a, -0x1d3],
                's': [0xc, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x2c, 0x5a, -0x207],
                's': [0xe, 0x6, 0x1e],
                'l': 0x1
            }, {
                'p': [-0x3c, 0x5a, -0x1cf],
                's': [0xe, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x27, 0x5a, -0x1ea],
                's': [0x4, 0x2, 0x10],
                'l': 0x1
            }, {
                'p': [-0x54, 0x5a, -0x20c],
                's': [0xa, 0x3, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x57, 0x5a, -0x1ec],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [-0x3f, 0x47, -0x1c2],
                's': [0x4, 0x4, 0x14],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x7a, 0x37, -0x1cb],
                's': [0x6, 0x10, 0x6],
                't': 0x2
            }, {
                'p': [-0x7c, 0x3e, -0x1fb],
                's': [0x6, 0x3, 0x10],
                'l': 0x1,
                'c': 0xdcdcdc
            }, {
                'p': [-0x7c, 0x3e, -0x1dc],
                's': [0x6, 0x2, 0xe],
                'l': 0x1,
                'c': 0xe3e3e3
            }, {
                'p': [-0x58, 0x3e, -0x1c9],
                's': [0x12, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0x74, 0x3c, -0x18c],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0xa4, 0x3c, -0x188],
                's': [0x12, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [-0x52, 0x3c, -0x18c],
                's': [0xe, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x55, 0x42, -0x1bf],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1f, 0x2c, -0x179],
                's': [0x9, 0x4, 0x14],
                'bo': 0x1
            }, {
                'p': [-0xe, 0x2c, -0x179],
                's': [0xa, 0x2, 0x14],
                'bo': 0x1
            }, {
                'p': [-0x155, 0x62, -0x183],
                's': [0xc, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x155, 0x62, -0x15e],
                's': [0xc, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [-0x152, 0x62, -0x171],
                's': [0x6, 0x2, 0xc],
                'l': 0x1
            }, {
                'p': [-0x173, 0x62, -0x185],
                's': [0xc, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [-0x164, 0x62, -0x188],
                's': [0x8, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x35, 0x41, -0x20b],
                's': [0x12, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x87, 0x41, -0x20b],
                's': [0xc, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x72, 0x41, -0x20b],
                's': [0xc, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0xd3, 0x61, -0x205],
                's': [0xe, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [0x99, 0x61, -0x206],
                's': [0xe, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [0xb8, 0x61, -0x202],
                's': [0xc, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0xd7, 0x61, -0x21b],
                's': [0x6, 0x2, 0x12],
                'l': 0x1
            }, {
                'p': [0xd3, 0x61, -0x234],
                's': [0xe, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [0x99, 0x61, -0x232],
                's': [0xe, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x95, 0x61, -0x21b],
                's': [0x6, 0x2, 0xc],
                'l': 0x1
            }, {
                'p': [0x94, 0x10, -0x1cd],
                's': [0xe, 0x1, 0x4]
            }, {
                'p': [0xf2, 0x10, -0x1cd],
                's': [0x12, 0x2, 0x4]
            }, {
                'p': [0xf9, 0x10, -0x1f1],
                's': [0x4, 0x2, 0xa]
            }, {
                'p': [0x60, 0x54, -0x1cb],
                's': [0x6, 0xc, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x4a, 0x54, -0x1cb],
                's': [0x6, 0xa, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x61, 0x54, -0x219],
                's': [0x6, 0x14, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x5e, 0x54, -0x1cf],
                's': [0xe, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x4a, 0x54, -0x1cf],
                's': [0xa, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x4c, 0x54, -0x215],
                's': [0xe, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x60, 0x54, -0x215],
                's': [0xa, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x62, 0x54, -0x1f2],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x48, 0x54, -0x1f2],
                's': [0x6, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [0x5b, 0x4c, -0x19e],
                's': [0x6, 0x10, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x55, 0x4c, -0x19a],
                's': [0x18, 0x6, 0x12],
                'l': 0x1
            }, {
                'p': [0xd, 0x4c, -0x19a],
                's': [0x18, 0x6, 0x12],
                'l': 0x1
            }, {
                'p': [0x30, 0x4c, -0x1a0],
                's': [0x14, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0xc, 0x4c, -0x166],
                's': [0x16, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [0x5, 0x4c, -0x17e],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x35, 0x4c, -0x162],
                's': [0x16, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x55, 0x4c, -0x168],
                's': [0x18, 0x6, 0x12],
                'l': 0x1
            }, {
                'p': [0x5d, 0x4c, -0x183],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x6, 0x4c, -0x19e],
                's': [0x6, 0x14, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x6, 0x4c, -0x164],
                's': [0x6, 0xe, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x14e, 0x20, -0x1b0],
                's': [0x4, 0x2, 0x12],
                'l': 0x1
            }, {
                'p': [0x14e, 0x20, -0x178],
                's': [0x4, 0x3, 0x12],
                'l': 0x1
            }, {
                'p': [0x14e, 0x20, -0x196],
                's': [0x4, 0x2, 0x16],
                'l': 0x1
            }, {
                'p': [0x93, 0x3a, -0x192],
                's': [0x1f, 0x9, 0x6],
                'l': 0x1
            }, {
                'p': [0x88, 0x3a, -0x17a],
                's': [0x9, 0xc, 0x2a],
                'l': 0x1
            }, {
                'p': [0xc6, 0x3a, -0x1a2],
                's': [0xa, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0xf5, 0x3a, -0x177],
                's': [0x7, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0xea, 0x3a, -0x19d],
                's': [0x1d, 0x5, 0x10],
                'l': 0x1
            }, {
                'p': [0xec, 0x3a, -0x12b],
                's': [0x19, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [0xf5, 0x3a, -0x155],
                's': [0x7, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0xf3, 0x3a, -0x1a0],
                's': [0x6, 0x13, 0x6],
                't': 0x2
            }, {
                'p': [0x13a, 0x3d, -0x15d],
                's': [0xa, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x14d, 0x3d, -0x164],
                's': [0xb, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x162, 0x3d, -0x15d],
                's': [0x12, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x138, 0x3d, -0x132],
                's': [0x6, 0x4, 0x1c],
                'l': 0x1
            }, {
                'p': [0x13c, 0x3d, -0x103],
                's': [0xe, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [0x14e, 0x3d, -0xfa],
                's': [0xb, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x164, 0x3d, -0x101],
                's': [0xe, 0x3, 0x12],
                'l': 0x1
            }, {
                'p': [0x11d, 0x3a, -0x58],
                's': [0x2, 0x28, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x11d, 0x3a, -0x28],
                's': [0x2, 0x28, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x126, 0x5d, -0x40],
                's': [0x16, 0x2, 0x35],
                't': 0x2
            }, {
                'p': [0xc1, 0x3a, -0x122],
                's': [0x18, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x88, 0x3a, -0x14c],
                's': [0x9, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [0x15c, 0x2c, -0xec],
                's': [0x8, 0x4, 0x10],
                'l': 0x1,
                'c': 0xe6e6e6
            }, {
                'p': [0x15c, 0x2c, -0xd8],
                's': [0x8, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x160, 0x40, -0x17b],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x160, 0x40, -0x19f],
                's': [0x6, 0x3, 0xe],
                'l': 0x1
            }, {
                'p': [0x136, 0x37, -0x1ea],
                's': [0x4, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x13b, 0x37, -0x1c3],
                's': [0xe, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x136, 0x37, -0x1d9],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [0x156, 0x37, -0x1be],
                's': [0xe, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x133, 0x70, -0x240],
                's': [0x6, 0x4, 0x16],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x14f, 0x8b, -0x59],
                's': [0xc, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x139, 0x8b, -0x54],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x165, 0x8b, -0x54],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x139, 0x8b, -0x28],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x134, 0x8b, -0x3e],
                's': [0x6, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0xe4, 0x30, -0x66],
                's': [0xa, 0x2, 0xe],
                'l': 0x1
            }, {
                'p': [-0x125, 0x28, -0x141],
                's': [0x20, 0x16, 0x58],
                'bo': 0x1
            }, {
                'p': [-0xc0, 0x3e, -0x143],
                's': [0x14, 0x4, 0x42],
                'l': 0x1
            }, {
                'p': [-0x148, 0x3e, -0x169],
                's': [0x14, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [-0x128, 0x3e, -0x169],
                's': [0x14, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [-0xfd, 0x49, -0x16c],
                's': [0x6, 0xa, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x112, 0x49, -0x16c],
                's': [0x6, 0xe, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x112, 0x4a, -0x142],
                's': [0x8, 0x4, 0x5e],
                'l': 0x1
            }, {
                'p': [-0xfc, 0x4a, -0x11b],
                's': [0x8, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [0x9, 0x6, -0x139],
                's': [0x6, 0x2, 0x12]
            }, {
                'p': [0x9, 0x6, -0xc7],
                's': [0x6, 0x2, 0x12]
            }, {
                'p': [0x9, 0x6, -0xfc],
                's': [0x6, 0x2, 0xa]
            }, {
                'p': [0xa4, 0x0, -0x3d],
                's': [0x4, 0x3e, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9a, 0x36, -0x3d],
                's': [0x10, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x33, -0x3d],
                's': [0x10, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                't': 0x2
            }, {
                'p': [-0x107, 0x0, -0x111],
                's': [0x4, 0x36, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x107, 0x2f, -0x107],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x107, 0x2b, -0x10c],
                's': [0x2, 0x2, 0x10],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xee, 0x56, -0xe0],
                's': [0xc, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [0xf0, 0x56, -0x98],
                's': [0x8, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [0xd9, 0x56, -0xde],
                's': [0xa, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0xf2, 0x56, -0xbd],
                's': [0x4, 0x4, 0x1c],
                'l': 0x1
            }, {
                'p': [0xfb, 0x5c, -0x52],
                's': [0x12, 0x6, 0x12],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [0xb0, 0x5c, -0x54],
                's': [0x14, 0x4, 0xe],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [0xad, 0x5c, -0x26],
                's': [0xe, 0x4, 0xe],
                'l': 0x1,
                'c': 0xbbbbbb
            }, {
                'p': [0xcf, 0x5c, -0x58],
                's': [0x14, 0x4, 0x6],
                'l': 0x1,
                'c': 0xb9b9b9
            }, {
                'p': [0xa8, 0x5c, -0x3d],
                's': [0x4, 0x2, 0xc],
                'l': 0x1,
                'c': 0xa7a7a7
            }, {
                'p': [0xfe, 0x5c, -0x29],
                's': [0xc, 0x4, 0x14],
                'l': 0x1,
                'c': 0xb6b6b6
            }, {
                'p': [0xd6, 0x5c, -0x22],
                's': [0x18, 0x4, 0x6],
                'l': 0x1,
                'c': 0xafafaf
            }, {
                'p': [0x91, 0x46, -0x9e],
                's': [0xa, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [0xa8, 0x46, -0x9a],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x91, 0x46, -0xda],
                's': [0xa, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [0xa8, 0x46, -0xde],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0xd6, 0x56, -0xb8],
                's': [0x4, 0x2, 0x18],
                'l': 0x1
            }, {
                'p': [0xd8, 0x56, -0x98],
                's': [0x8, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [0xb3, 0x43, 0x0],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [0xb3, 0x43, 0x11],
                's': [0x4, 0x6, 0xf],
                'l': 0x1
            }, {
                'p': [0x88, 0x2c, -0x9d],
                's': [0x4, 0x26, 0x4],
                't': 0x2
            }, {
                'p': [0x2d, 0x2c, -0x9d],
                's': [0x4, 0x26, 0x4],
                't': 0x2
            }, {
                'p': [0x2d, 0x2c, -0xc1],
                's': [0x4, 0x26, 0x4],
                't': 0x2
            }, {
                'p': [0x88, 0x2c, -0xc1],
                's': [0x4, 0x2a, 0x4],
                't': 0x2
            }, {
                'p': [0x5b, 0x3a, -0xaf],
                's': [0x64, 0x2, 0x2c],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x7f, 0x2c, -0x9b],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x30, 0x2c, -0x9f],
                's': [0xe, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0x2e, 0x2c, -0xbf],
                's': [0xa, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0x5a, 0x2c, -0x9b],
                's': [0x12, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xc3, 0x3a, -0xe2],
                's': [0x12, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0xba, 0x3a, -0x96],
                's': [0x12, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x3, 0x36, -0x64],
                's': [0x1e, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x4d, 0x36, -0x62],
                's': [0x1e, 0x6, 0x14],
                'l': 0x1
            }, {
                'p': [0x4f, 0x36, -0x23],
                's': [0x1a, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [-0x5, 0x36, -0x23],
                's': [0x1a, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [0x59, 0x36, -0x42],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x25, 0x36, -0x69],
                's': [0x1e, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xf, 0x36, -0x42],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x26, 0x36, -0x1f],
                's': [0x12, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x35, 0x3c, -0x16c],
                's': [0x14, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xed, 0x32, 0x23],
                's': [0x5, 0x2, 0xa],
                'l': 0x1,
                'c': 0xc8c8c8
            }, {
                'p': [0xa4, 0x5c, 0x1f],
                's': [0x1c, 0x6, 0x10],
                'l': 0x1,
                'c': 0xb4b4b4
            }, {
                'p': [0xcd, 0x5c, 0x1f],
                's': [0xa, 0x4, 0x10],
                'l': 0x1,
                'c': 0xd2d2d2
            }, {
                'p': [0x9c, 0x5c, 0x3c],
                's': [0xc, 0x6, 0xe],
                'l': 0x1,
                'c': 0xc8c8c8
            }, {
                'p': [-0x104, 0x2f, 0x13],
                's': [0x4, 0x36, 0x9e]
            }, {
                'p': [-0xc5, 0x2f, 0x61],
                's': [0x9e, 0x36, 0x4]
            }, {
                'p': [-0xb2, 0xd, 0x33],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0xfe, 0xd, 0x33],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0xd8, 0x50, 0x48],
                's': [0x54, 0x2, 0x32],
                't': 0x2
            }, {
                'p': [-0x37, 0x4a, 0x2],
                's': [0xe, 0x6, 0x16],
                'l': 0x1
            }, {
                'p': [-0x61, 0x4a, 0x1],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x66, 0x4a, -0x2a],
                's': [0x4, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0x66, 0x4a, -0x4b],
                's': [0x4, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x4d, 0x4a, 0xb],
                's': [0xe, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x32, 0x4a, -0x2d],
                's': [0x4, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0x36, 0x4a, -0x61],
                's': [0xc, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0xec, 0x32, -0x83],
                's': [0x7, 0x4, 0x18],
                'l': 0x1,
                'c': 0xc8c6c6
            }, {
                'p': [-0xec, 0x32, -0x60],
                's': [0x7, 0x4, 0x16],
                'l': 0x1,
                'c': 0xb6b6b6
            }, {
                'p': [-0xdd, 0x3c, 0xe],
                's': [0x6, 0x2, 0xf],
                'l': 0x1
            }, {
                'p': [-0xf4, 0x3c, 0xd],
                's': [0xc, 0x2, 0x11],
                'l': 0x1
            }, {
                'p': [-0xe0, 0x3c, -0x3d],
                's': [0xc, 0x2, 0x1d],
                'l': 0x1
            }, {
                'p': [-0xdc, 0x3c, -0x11],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0xfb, 0x7c, -0x40],
                's': [0x10, 0x4, 0xa],
                'l': 0x1,
                'c': 0xb9b7b7
            }, {
                'p': [-0x117, 0x7c, -0x42],
                's': [0xc, 0x4, 0xe],
                'l': 0x1,
                'c': 0xc3c3c3
            }, {
                'p': [-0x116, 0x7c, -0x69],
                's': [0xe, 0x3, 0x8],
                'l': 0x1
            }, {
                'p': [-0x6d, 0x3c, -0x167],
                's': [0x22, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x82, 0x4d, -0x9c],
                's': [0xe, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [0x165, 0x8b, -0x28],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [-0x128, 0x3e, -0x119],
                's': [0x14, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [-0x143, 0x3e, -0x119],
                's': [0xe, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [0x9, 0x0, -0xb4],
                's': [0x4, 0x36, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9, 0x2c, -0xaf],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x6a, 0x54, -0x60],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x6e, 0x54, -0x89],
                's': [0x6, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0x40, 0x54, -0x60],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x40, 0x54, -0xb8],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x3c, 0x54, -0x89],
                's': [0x6, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xb6, 0x33, 0x37],
                's': [0x10, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xfa, 0x33, 0x32],
                's': [0x10, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xd4, 0x33, 0x32],
                's': [0x10, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xfc, 0x33, 0x3c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x157, 0x20, -0x16c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf3, 0x38, -0x124],
                's': [0x6, 0x1c, 0x6],
                't': 0x2
            }, {
                'p': [0xa, 0x18, 0x8],
                's': [0x12, 0x2, 0x4]
            }, {
                'p': [0x52, 0x18, 0x8],
                's': [0x14, 0x2, 0x4]
            }, {
                'p': [-0x23, 0x18, 0x8],
                's': [0x9, 0x1, 0x4]
            }, {
                'p': [-0x81, 0x18, -0x2c],
                's': [0x10, 0x2, 0x4]
            }, {
                'p': [-0xa4, 0x18, -0x2c],
                's': [0x10, 0x2, 0x4]
            }, {
                'p': [-0xaa, 0x18, -0x1f],
                's': [0x4, 0x2, 0x16]
            }, {
                'p': [-0xaa, 0x18, 0x4],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [-0xe3, 0x3e, -0x143],
                's': [0x14, 0x4, 0x42],
                'l': 0x1
            }, {
                'p': [-0x6c, 0x53, -0x59],
                's': [0x6, 0x1a, 0x6],
                't': 0x2
            }, {
                'p': [-0xfa, 0x2c, -0x7c],
                's': [0x4, 0x29, 0x4],
                't': 0x2
            }, {
                'p': [-0x118, 0x2c, -0x7c],
                's': [0x4, 0x28, 0x4],
                't': 0x2
            }, {
                'p': [-0x109, 0x4a, -0x75],
                's': [0x26, 0x2, 0x16],
                't': 0x2
            }, {
                'p': [-0x39, 0x42, -0xc9],
                's': [0xa, 0x6, 0x24],
                'l': 0x1
            }, {
                'p': [-0x39, 0x42, -0x104],
                's': [0xa, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x3d, 0x42, -0x134],
                's': [0x12, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x67, 0x42, -0x134],
                's': [0x12, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x6b, 0x42, -0xfb],
                's': [0xa, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [-0xa8, 0x3e, -0x10c],
                's': [0x8, 0x2, 0x14],
                'l': 0x1
            }, {
                'p': [-0x96, 0x3e, -0x10c],
                's': [0xc, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [-0x94, 0x3e, -0x130],
                's': [0x8, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [-0x94, 0x3e, -0x156],
                's': [0x8, 0x4, 0x1c],
                'l': 0x1
            }, {
                'p': [0x14f, 0x64, -0x5c],
                's': [0x6, 0x14, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xc4, 0x33, -0x5b],
                's': [0x6, 0x14, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0xf3, 0x5e, -0x54],
                's': [0x2, 0x10, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x127, 0x70, -0x24b],
                's': [0x2, 0xe, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x13f, 0x70, -0x230],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x131, 0x64, -0x3e],
                's': [0x2, 0x14, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x130, 0x4e, -0x206],
                's': [0x2, 0xe, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xcb, 0x46, -0x1fe],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xb7, 0x46, -0x1fe],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xa2, 0x46, -0x1fe],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x26, 0x12, 0x34],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x12c, 0x31, -0x12d],
                's': [0x12, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd2, 0x0, -0x9b],
                's': [0x4, 0x1, 0x6],
                'l': 0x1
            }, {
                'p': [-0xb1, 0x0, -0x102],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x10f, 0x0, -0x10e],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xf2, 0x0, -0x1af],
                's': [0x8, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xae, 0x0, -0x193],
                's': [0x4, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x9a, -0x1, -0x194],
                's': [0x8, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0x5, -0x1c, -0x189],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x133, 0x0, -0x1b7],
                's': [0x4, 0x1, 0x6],
                'l': 0x1
            }, {
                'p': [0x152, 0x0, -0xd4],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x131, 0x0, -0xfe],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0xdf, 0x0, -0xe8],
                's': [0x8, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xcb, 0x0, -0x11c],
                's': [0x8, 0x2, 0x4],
                'c': 0xacacac
            }, {
                'p': [0x65, 0x0, -0x163],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0xf, 0x0, -0x159],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0xf, 0x0, -0xd3],
                's': [0x4, 0x2, 0x8]
            }, {
                'p': [-0x32, 0x0, -0xaf],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x61, 0x0, -0x57],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x5e, 0x0, 0x0],
                's': [0xa, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x2b, 0x0, -0x1],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0xb, 0x12, 0xf],
                's': [0xa, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x9a, 0x12, -0x26],
                's': [0x6, 0x1, 0x3],
                'l': 0x1
            }, {
                'p': [-0x6c, 0x12, -0x7],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [-0x88, 0x0, -0x34],
                's': [0x8, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0xa2, 0x0, -0x34],
                's': [0x3, 0x2, 0x5],
                'l': 0x1
            }, {
                'p': [0x2e, 0x0, -0x95],
                's': [0x6, 0x1, 0x5],
                'l': 0x1
            }, {
                'p': [-0x132, 0x0, -0x15d],
                's': [0x4, 0x1, 0x7],
                'l': 0x1
            }, {
                'p': [-0x14c, 0x0, -0x10e],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0x3b, -0x1c, -0x145],
                's': [0x4, 0x2, 0x4]
            }, {
                'p': [-0x8d, -0x1c, -0x15f],
                's': [0x4, 0x2, 0x8]
            }, {
                'p': [-0xb6, 0x0, -0xda],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0xda, 0x12, 0x2b],
                's': [0x8, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x28, 0x12, 0x34],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x77, 0x0, -0x95],
                's': [0x6, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xc4, 0x0, -0x20c],
                's': [0x5, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xa0, 0x0, -0x46],
                's': [0x4, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x34, 0x0, -0xa3],
                's': [0x4, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xfb, 0x0, -0x197],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x5, -0x1c, -0x198],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xfb, 0x0, -0x120],
                's': [0x3, 0x1, 0x5],
                'l': 0x1,
                'c': 0xc3c3c3
            }, {
                'p': [0x139, 0x0, -0x158],
                's': [0x3, 0x1, 0x4]
            }, {
                'p': [0x141, 0x0, -0x16c],
                's': [0x4, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xca, 0x0, -0x5e],
                's': [0x4, 0x1, 0x4]
            }, {
                'p': [0x10, 0x0, -0x108],
                's': [0x4, 0x1, 0x6]
            }, {
                'p': [0x25, 0x0, -0x133],
                's': [0x4, 0x6, 0x26]
            }, {
                'p': [0x5e, 0x0, -0x145],
                's': [0x16, 0x6, 0x4]
            }, {
                'p': [0x6b, 0x0, -0x13a],
                's': [0x4, 0x6, 0x1a]
            }, {
                'p': [0x25, 0x6, -0x13c],
                's': [0x4, 0x2, 0xa]
            }, {
                'p': [0x6b, 0x6, -0x141],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [0x63, 0x6, -0x145],
                's': [0xc, 0x4, 0x4]
            }, {
                'p': [0x4c, 0x0, -0x145],
                's': [0xe, 0x2, 0x4]
            }, {
                'p': [0x9, 0x2f, -0xab],
                's': [0x4, 0x4, 0xe],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x55, -0x1, -0xe2],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x41, -0x1, -0xc8],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x7c, 0x3d, -0x72],
                's': [0x16, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16, 0x2d, -0x15f],
                's': [0x6, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x33, 0x2d, -0x15f],
                's': [0x6, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x4f, 0x2d, -0x15f],
                's': [0x6, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x3f, 0x44, -0x1c8],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x73, 0x39, -0x72],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                't': 0x2
            }, {
                'p': [0x5b, 0x4d, -0xaf],
                's': [0x64, 0x2, 0x2c],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0xa, -0x1d5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xcb, -0x1c, -0x19d],
                's': [0x5b, 0x56, 0x10],
                'bo': 0x1
            }, {
                'p': [0xa5, 0x3a, -0x19d],
                's': [0xb, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0xb3, 0x10, -0x1cd],
                's': [0x14, 0x2, 0x4]
            }, {
                'p': [0x158, 0x32, -0xc4],
                's': [0xc, 0x3, 0x12],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x154, 0x32, -0xa0],
                's': [0x4, 0x2, 0x12],
                'l': 0x1,
                'c': '#b9b9b9'
            }, {
                'p': [0x154, 0x32, -0x7b],
                's': [0x4, 0x4, 0x16],
                'l': 0x1,
                'c': '#b9b9b9'
            }, {
                'p': [0x142, -0x1, -0x191],
                's': [0x14, 0x2, 0x60],
                'c': 0xa7a7a7,
                't': 0x1
            }, {
                'p': [0x90, 0x3a, -0x126],
                's': [0x19, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x131, 0x2d, -0x12d],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                't': 0x2
            }, {
                'p': [0x55, 0x3e, -0x1c5],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x16, 0x41, -0x20b],
                's': [0x12, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x10, 0x41, -0x20b],
                's': [0x14, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x92, 0x0, -0x1db],
                's': [0x8, 0x1a, 0x2],
                'i': 0x3,
                't': 0x2,
                'd': 0x1
            }, {
                'p': [-0xd2, 0x0, -0x114],
                's': [0x4c, 0x5, 0x2],
                'c': 0xc8c8c8
            }, {
                'p': [-0xd2, 0x0, -0x11c],
                's': [0x4c, 0x4, 0xe],
                'l': 0x1,
                'c': 0x1d3d5a,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [-0xfd, 0x0, -0x10d],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xaf, 0x0, -0x10e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x12e, 0x0, -0xe8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x80, 0x0, -0x73],
                's': [0x6, 0x2, 0x42],
                't': 0x2
            }, {
                'p': [-0x79, 0x0, -0x72],
                's': [0x6, 0x2, 0x42],
                'c': 0xcacaca,
                't': 0x2
            }, {
                'p': [-0x84, 0x2, -0x71],
                's': [0x6, 0x2, 0x42],
                't': 0x2
            }, {
                'p': [-0x7d, 0x2, -0x72],
                's': [0x6, 0x2, 0x42],
                't': 0x2
            }, {
                'p': [-0x80, 0x4, -0x70],
                's': [0x6, 0x2, 0x42],
                'c': 0xc0c0c0,
                't': 0x2
            }, {
                'p': [-0x87, 0x0, -0x70],
                's': [0x6, 0x2, 0x42],
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [-0x84, 0x26, -0x72],
                's': [0x1, 0x19, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xc4, 0x2e, -0xbf],
                's': [0x22, 0x1f, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0xb7, 0x28, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc0, 0x2a, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc9, 0x29, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xd1, 0x28, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc0, 0x29, -0xe3],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xb7, 0x28, -0xe3],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc9, 0x2a, -0xe3],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xd1, 0x28, -0xe3],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0x1ba, 0x0, 0x9d],
                's': [0x3e, 0xce, 0x48],
                'l': 0x1
            }, {
                'p': [-0x1a2, 0xce, 0x81],
                's': [0xe, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [-0x19e, 0xce, 0x9d],
                's': [0x6, 0x6, 0x16],
                'l': 0x1
            }, {
                'p': [-0x19e, 0xce, 0xba],
                's': [0x6, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x1bc, 0xce, 0x7b],
                's': [0x14, 0x6, 0x4],
                'l': 0x1
            }, {
                'p': [-0x1d4, 0xce, 0x7b],
                's': [0xa, 0x6, 0x4],
                'l': 0x1
            }, {
                'p': [-0x1ba, 0xa3, 0x79],
                's': [0x8, 0x14, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0xb2, 0xd, 0x5d],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0xfe, 0xd, 0x5d],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0x13, 0x40, 0x4a],
                's': [0x3c, 0xc, 0x26],
                'bo': 0x1
            }, {
                'p': [0x7b, 0x4c, 0x39],
                's': [0x1c, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x46, 0x4c, 0x39],
                's': [0x22, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x15, 0x4c, 0x39],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x29, 0x4c, 0x39],
                's': [0xc, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x4b, 0x4c, 0x39],
                's': [0x10, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x7f, 0x4c, 0x39],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13, 0x0, 0x49],
                's': [0x3c, 0x40, 0x2],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x2e, 0x12, 0x3d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd, 0x20, 0x47],
                's': [0x4, 0x4, 0x2],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x20, 0x47],
                's': [0x4, 0x4, 0x2],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x13, 0x3f, 0x30],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x38, 0x3f, 0x30],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x38, 0x3b, 0x35],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x13, 0x3b, 0x35],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x8b, 0x12d, 0x195],
                's': [0x6e, 0x42, 0x56],
                't': 0x5
            }, {
                'p': [-0x49, 0x119, 0x169],
                's': [0x46, 0x2a, 0x38],
                't': 0x5
            }, {
                'p': [-0x20f, 0x19c, 0x175],
                's': [0x92, 0x5a, 0x74],
                't': 0x5
            }, {
                'p': [-0x23b, 0x171, 0x129],
                's': [0x76, 0x48, 0x5e],
                't': 0x5
            }, {
                'p': [0x2a1, 0x13f, 0x78],
                's': [0x6e, 0x42, 0x56],
                't': 0x5
            }, {
                'p': [0x1e5, 0x151, 0xe2],
                's': [0x92, 0x58, 0xc6],
                't': 0x5
            }, {
                'p': [0x14e, 0x151, 0x5f],
                's': [0x3a, 0x1e, 0x61],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x362, 0x143, -0x115],
                's': [0x92, 0x5a, 0xc4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x39e, 0x12f, -0x204],
                's': [0x7a, 0x4c, 0xa0],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x7ce, 0x168, -0x23],
                's': [0x104, 0x4c, 0x170],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x639, 0x18d, -0x8c],
                's': [0xda, 0x84, 0x100],
                't': 0x5
            }, {
                'p': [0x639, 0x179, -0x10b],
                's': [0x76, 0x48, 0x5c],
                't': 0x5
            }, {
                'p': [-0x82, 0xea, -0x392],
                's': [0x92, 0x5a, 0x74],
                't': 0x5
            }, {
                'p': [-0x2e, 0xcc, -0x3b8],
                's': [0x76, 0x4a, 0x5e],
                't': 0x5
            }, {
                'p': [0x62, 0xcc, -0x3b8],
                's': [0x60, 0x26, 0x30],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x2df, 0x16b, -0x4e1],
                's': [0xe0, 0x68, 0xb2],
                't': 0x5
            }, {
                'p': [0xba, 0x107, 0x1f4],
                's': [0x68, 0x3a, 0x70],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x51, 0x107, 0x1f4],
                's': [0x30, 0x1c, 0x34],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x231, 0xcc, -0x353],
                's': [0x76, 0x4a, 0x5e],
                't': 0x5
            }, {
                'p': [-0x16, -0x1c, -0x206],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x22, -0x10, -0x206],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x1f, -0x1c, -0x203],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3c, -0x1c, -0x1a9],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3f, -0x1c, -0x203],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3f, -0x1c, -0x1f7],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x36, -0x1c, -0x206],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xda, 0x46, -0x21d],
                's': [0x2, 0xe, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0xd, 0x4c, 0x39],
                's': [0xa, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13, 0x46, 0x66],
                's': [0xdc, 0x28, 0x3a],
                'c': 0xbbbbbb,
                'bo': 0x1
            }, {
                'p': [0x59, 0x6e, 0x6c],
                's': [0x4, 0x4, 0x12],
                'l': 0x1,
                'c': 0xd2cbcb
            }, {
                'p': [-0x77, 0x6e, 0x50],
                's': [0x14, 0x4, 0xe],
                'l': 0x1,
                'c': 0xbbbbbb
            }, {
                'p': [0x24, 0x6e, 0x4b],
                's': [0x10, 0x4, 0x4],
                'l': 0x1,
                'c': 0xbebcbc
            }, {
                'p': [-0x2, 0x6e, 0x4b],
                's': [0x18, 0x2, 0x4],
                'l': 0x1,
                'c': 0xc0bcbc
            }, {
                'p': [-0x4e, 0x6e, 0x4b],
                's': [0xe, 0x2, 0x4],
                'l': 0x1,
                'c': 0x9d9d9d
            }, {
                'p': [-0x2c, 0x6e, 0x4b],
                's': [0xe, 0x4, 0x4],
                'l': 0x1,
                'c': 0xc5c5c5
            }, {
                'p': [0x51, 0x6e, 0x50],
                's': [0x14, 0x4, 0xe],
                'l': 0x1,
                'c': 0xbbbbbb
            }, {
                'p': [-0x7f, 0x6e, 0x6c],
                's': [0x4, 0x4, 0x12],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0x79, 0x63, 0x46],
                's': [0x4, 0x4, 0x8],
                't': 0x2
            }, {
                'p': [0x52, 0x63, 0x46],
                's': [0x4, 0x4, 0x8],
                't': 0x2
            }, {
                'p': [0x5c, 0x63, 0x52],
                's': [0xc, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x83, 0x63, 0x52],
                's': [0xa, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [0x124, 0x2d, -0x71],
                's': [0x3c, 0x2, 0x14],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x108, 0x0, -0x79],
                's': [0x2, 0x31, 0x2],
                't': 0x2
            }, {
                'p': [0xc, -0x1c, -0x1cd],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x8a, -0x1c, -0x1c8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x14, 0x30, -0x1b1],
                's': [0x1c, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x14, 0x30, -0x1c5],
                's': [0x1c, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [0xa1, -0x1c, -0x1a8],
                's': [0x4, 0x2a, 0x6]
            }, {
                'p': [-0x6d, 0x28, -0x194],
                's': [0x4, 0x4, 0xe],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x6d, 0x25, -0x190],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x14, 0x22, -0x1cd],
                's': [0x4, 0x4, 0x14],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x20, -0x1cd],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x15, -0x1c, -0x1d0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x15, -0x10, -0x1d0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xfd, 0x39, -0x22f],
                's': [0x4a, 0x20, 0x2],
                'c': 0x695b48,
                't': 0x5
            }, {
                'p': [-0x11e, 0x34, -0x232],
                's': [0x4, 0x28, 0x4],
                't': 0x2
            }, {
                'p': [-0xdd, 0x34, -0x232],
                's': [0x4, 0x28, 0x4],
                't': 0x2
            }, {
                'p': [0x104, 0x33, -0x238],
                's': [0x4a, 0x20, 0x2],
                'c': 0x705b4d,
                't': 0x5
            }, {
                'p': [0x104, 0x43, -0x236],
                's': [0x45, 0x0, 0x1d],
                'i': 0xb,
                'l': 0x1,
                'r': [1.57, 0x0, 0x0]
            }, {
                'p': [-0x102, 0x45, -0x12],
                's': [0x2, 0x1a, 0x3e],
                'c': 0x695743,
                't': 0x5
            }, {
                'p': [-0x100, 0x52, -0x12],
                's': [0x39, 0x0, 0x17],
                'i': 0xb,
                'l': 0x1,
                'r': [1.57, 0x0, 1.57]
            }, {
                'p': [0x48, 0x0, -0x115],
                's': [0x40, 0x29, 0x5a],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x11b, 0xa, -0x1f9],
                's': [0x45, 0x29, 0x4e],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xae, 0xa, -0x1f8],
                's': [0x8e, 0x29, 0x4e],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x88, 0x12, -0x10],
                's': [0x3b, 0x29, 0x31],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x150, 0x4f, -0x12f],
                's': [0x36, 0x2, 0x6e],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x138, 0x3c, -0xfb],
                's': [0x4, 0x19, 0x4],
                't': 0x2
            }, {
                'p': [0x138, 0x3e, -0x163],
                's': [0x4, 0x19, 0x4],
                't': 0x2
            }, {
                'p': [0x168, 0x3d, -0x163],
                's': [0x4, 0x18, 0x4],
                't': 0x2
            }, {
                'p': [0x168, 0x3d, -0xfb],
                's': [0x4, 0x1a, 0x4],
                't': 0x2
            }, {
                'p': [0x101, 0x2f, -0x160],
                's': [0x12, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xfc, 0x2c, -0x160],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                't': 0x2
            }, {
                'p': [0xd5, 0x0, -0x61],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd2, 0x38, -0x124],
                's': [0x6, 0x1e, 0x6],
                't': 0x2
            }, {
                'p': [0xf3, 0x38, -0x146],
                's': [0x6, 0x1d, 0x6],
                't': 0x2
            }, {
                'p': [0xd2, 0x38, -0x146],
                's': [0x6, 0x1a, 0x6],
                't': 0x2
            }, {
                'p': [0xe3, 0x4d, -0x135],
                's': [0x2a, 0x2, 0x2b],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x89, 0x38, -0x124],
                's': [0x6, 0x16, 0x6],
                't': 0x2
            }, {
                'p': [-0xb, -0x1c, -0x202],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x115, 0xa, -0x21c],
                's': [0x8, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0x2, -0x1c, -0x1c0],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x93, 0x3e, -0x105],
                's': [0x4, 0xc, 0x4],
                't': 0x2
            }, {
                'p': [-0xa9, 0x3e, -0x105],
                's': [0x4, 0xf, 0x4],
                't': 0x2
            }, {
                'p': [-0xa9, 0x3e, -0x11e],
                's': [0x4, 0xb, 0x4],
                't': 0x2
            }, {
                'p': [-0x93, 0x3e, -0x11f],
                's': [0x4, 0xd, 0x4],
                't': 0x2
            }, {
                'p': [-0x9e, 0x46, -0x112],
                's': [0x1c, 0x1, 0x20],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x76, 0x3d, -0xc5],
                's': [0x30, 0x57, 0x2f],
                'c': 0xa7a7a7
            }, {
                'p': [-0x77, 0x60, -0xc5],
                's': [0x55, 0x2, 0x2e],
                't': 0x2
            }, {
                'p': [-0x9f, 0x48, -0xda],
                's': [0x3, 0x1e, 0x3],
                't': 0x2
            }, {
                'p': [-0x8f, 0x48, -0xda],
                's': [0x3, 0x1c, 0x3],
                't': 0x2
            }, {
                'p': [-0x8f, 0x48, -0xb0],
                's': [0x3, 0x1d, 0x3],
                't': 0x2
            }, {
                'p': [-0x9f, 0x48, -0xb0],
                's': [0x3, 0x1c, 0x3],
                't': 0x2
            }, {
                'p': [0x107, 0x23, -0x160],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0x6d, 0x1c, -0x199],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xae, 0x0, -0x1d8],
                's': [0x6, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x93, 0x12, 0x34],
                's': [0x6, 0x1, 0x5],
                'l': 0x1
            }, {
                'p': [0xc8, 0xdc, -0x38f],
                's': [0xae, 0x4a, 0x9b],
                't': 0x5
            }, {
                'p': [0x5c, 0x4c, -0x164],
                's': [0x6, 0x11, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x30, 0x3b, -0x169],
                's': [0x6, 0xe, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0xe4, 0x30, -0x89],
                's': [0xa, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [0x25, 0x0, -0xa0],
                's': [0x8, 0xd, 0x4]
            }, {
                'p': [0x1d, 0x0, -0xa0],
                's': [0x8, 0x6, 0x4]
            }, {
                'p': [0x7, 0x0, -0xad],
                's': [0x4, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x4f, 0x42, -0xda],
                's': [0x3, 0x21, 0x3],
                't': 0x2
            }, {
                'p': [-0x4f, 0x54, -0xb1],
                's': [0x3, 0x11, 0x3],
                't': 0x2
            }, {
                'p': [-0x5d, 0x54, -0xb1],
                's': [0x3, 0x11, 0x3],
                't': 0x2
            }, {
                'p': [-0x5d, 0x42, -0xda],
                's': [0x3, 0x23, 0x3],
                't': 0x2
            }, {
                'p': [-0x60, 0x94, -0xc5],
                's': [0x4, 0x3, 0xb],
                'l': 0x1,
                'c': 0xa7a7a7
            }, {
                'p': [-0x8c, 0x94, -0xca],
                's': [0x4, 0x3, 0xf],
                'l': 0x1,
                'c': 0x898989
            }, {
                'p': [-0x89, 0x94, -0xb2],
                's': [0xa, 0x3, 0x9],
                'l': 0x1,
                'c': 0xafafaf
            }, {
                'p': [-0x63, 0x94, -0xb2],
                's': [0xa, 0x3, 0x9],
                'l': 0x1,
                'c': 0xb6b2b2
            }, {
                'p': [-0x63, 0x94, -0xd8],
                's': [0xa, 0x4, 0x9],
                'l': 0x1,
                'c': 0xa7a7a7
            }, {
                'p': [-0x75, 0x94, -0xda],
                's': [0xc, 0x2, 0x5],
                'l': 0x1,
                'c': 0xb6b6b6
            }, {
                'p': [-0x8a, 0x94, -0xd9],
                's': [0x8, 0x3, 0x7],
                'l': 0x1,
                'c': 0x9b9b9b
            }, {
                'p': [-0x78, 0x94, -0xb0],
                's': [0x9, 0x2, 0x5],
                'l': 0x1,
                'c': 0xafafaf
            }, {
                'p': [-0x76, 0x75, -0xc5],
                's': [0x32, 0x10, 0x5],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x76, 0x75, -0xc5],
                's': [0x5, 0x10, 0x31],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x2b, 0x2b, -0x12a],
                's': [0x12, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x30, 0x27, -0x12a],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                'c': 0xe6e6e6,
                't': 0x2
            }, {
                'p': [-0x25, 0x1f, -0x12a],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xd4, 0x32, -0x3f],
                's': [0xe, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0xa6, 0x0, -0x96],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x16, 0x2a, -0x15e],
                's': [0x9, 0x3, 0x3],
                'c': 0xe3e3e3,
                'bo': 0x1
            }, {
                'p': [0x33, 0x2a, -0x15e],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0x4f, 0x2a, -0x15e],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0xb7, 0x43, -0x1fd],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0xcb, 0x43, -0x1fd],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0xa2, 0x43, -0x1fd],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [-0x36, 0x0, -0x73],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x36, 0x0, -0x79],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x8, 0x12, 0x45],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x132, 0x0, -0x141],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0xfb, 0x0, -0x160],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0xa0, 0x0, -0x96],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x9a, 0x0, -0x96],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x47, 0x0, -0x159],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x77, 0x12, -0x27],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x49, 0x11, 0x10],
                's': [0x5, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x74, 0x0, -0xe9],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xa9, 0x3e, -0x189],
                's': [0x6, 0xc, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0xae, 0x0, -0x1c],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0xae, 0x0, -0x17],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0xb0, 0x0, -0x10],
                's': [0x2, 0x13, 0x4],
                't': 0x2
            }, {
                'p': [0x70, 0x0, -0xd1],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11
            }, {
                'p': [0x37, -0x1, -0xff],
                's': [0x6, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x38, 0x0, -0xf9],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x3e, 0x0, -0x15c],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x56, 0x0, -0x129],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x56, 0x0, -0x124],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0xdc, 0x0, -0x68],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xe3, 0x0, -0x8b],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x4e, 0x0, -0xcb],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0xad, 0x0, -0x46],
                's': [0x4, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xa9, 0x0, 0x11],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x93, 0x0, 0x1c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x121, 0xa, -0x21e],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x127, 0xa, -0x21e],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0xb5, 0x0, -0x1d9],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x34, 0x15, -0x10d],
                's': [0x1, 0xf, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x34, 0x1d, -0xda],
                's': [0x1, 0xf, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x35, 0x12, -0x10d],
                's': [0x6, 0x3, 0x9],
                'l': 0x1,
                'c': 0xe3e3e3
            }, {
                'p': [-0x35, 0x1a, -0xda],
                's': [0x6, 0x3, 0x9],
                'l': 0x1,
                'c': 0xe3e3e3
            }, {
                'p': [0xd9, 0x43, -0x21d],
                's': [0x6, 0x3, 0x9],
                'c': 0xe3e3e3,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4c, -0x206],
                's': [0x6, 0x3, 0x9],
                'c': 0xb1b1b1,
                'bo': 0x1
            }, {
                'p': [0x5a, 0x2c, -0xc3],
                's': [0x10, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x7f, 0x2c, -0xc3],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x42, 0x2c, -0xc3],
                's': [0xc, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13d, 0x0, -0x19f],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x35, 0x0, -0x9f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d5e371'
            }, {
                'p': [-0x36, 0x0, -0xa9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, -3.14],
                'c': '#d5e371'
            }, {
                'p': [0x24, 0x0, -0xa5],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0],
                'c': '#d5e371'
            }, {
                'p': [0x25, 0x0, -0xaf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#d5e371'
            }, {
                'p': [0x5, 0x0, -0xbc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.09, -3.14],
                'c': '#d5e371'
            }, {
                'p': [-0x2a, 0x0, -0x39],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [-0x9, 0x0, 0x2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [-0x13, 0x0, -0x1a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x15, 0x0, -0x15a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0x3b, 0x0, -0x158],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x50, 0x0, -0xd4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x1d, 0x0, -0x15a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [0x81, 0x0, -0x11e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x65, 0x0, -0x13e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x3b, 0x0, -0xf3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0]
            }, {
                'p': [0x8b, 0x0, -0xe7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x2a, -0x1c, -0x163],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0]
            }, {
                'p': [-0x5, -0x1c, -0x15b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [-0x56, -0x1c, -0x145],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [-0x104, 0x0, -0x10d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x12a, 0x0, -0xec],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x133, 0x0, -0x113],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb6, 0x0, -0x10f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xb0, 0x0, -0x108],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd9, 0x0, -0x88],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0xd6, 0x0, -0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x93, 0x0, -0x95],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x6d, 0x0, -0x3e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x6d, 0x12, -0x19],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0xd7, 0x12, 0x13],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0xe6, 0x12, 0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [-0x2e, 0x12, 0x36],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.22, -3.14]
            }, {
                'p': [0xa, 0x12, 0x36],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x30, 0x12, 0x10],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [0xa0, 0x0, -0x3e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [0xa9, 0x0, -0x1b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xa2, 0x0, 0x14],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xad, 0x0, 0xb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.38, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xa6, 0x0, -0x5c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x7e, 0x0, -0x96],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x7f, 0x0, -0x41],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x86, 0x0, -0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x80, 0x0, -0x4d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.23, 3.14],
                'c': '#c9d47c'
            }, {
                'p': [0x60, 0x0, -0x2e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x82, 0x0, -0x47],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xae, 0x0, 0x14],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xb, 0x0, 0x3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xce, 0x0, -0xda],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0xd0, 0x0, -0xba],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.51, 0x0]
            }, {
                'p': [0xae, 0x0, -0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.51, 0x0]
            }, {
                'p': [0x65, 0x0, 0x2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [0xcd, 0x0, -0x117],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0xed, 0x0, -0x11b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x133, -0x1, -0xf7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.41, 3.14],
                'c': '#c9d47c'
            }, {
                'p': [0xfd, 0x0, -0x6c],
                's': [0x6, 0x1, 0x6],
                'l': 0x1
            }, {
                'p': [0x132, 0x0, -0x13c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x112, 0x0, -0x15e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.13, -1.41, -3.13]
            }, {
                'p': [0x140, 0x1, -0x1b8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x140, 0x1, -0x1a4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x13f, 0x1, -0x1ae],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.56, 0x0]
            }, {
                'p': [0x142, 0x1, -0x174],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0]
            }, {
                'p': [0x13e, 0x1, -0x181],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [0x146, 0x1, -0x185],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x149, 0x1, -0x169],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0xfb, 0x0, -0x165],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x147, 0x1, -0x1a6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [0x13e, 0x1, -0x18b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.18, 3.14]
            }, {
                'p': [0x146, 0x1, -0x1b2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-0.1, -1.56, -0.1]
            }, {
                'p': [0x12d, 0xa, -0x21d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0xde, 0xa, -0x1ff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0xdd, 0xa, -0x1d3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [-0x28, -0x1c, -0x16a],
                's': [0x4, 0x1, 0x6]
            }, {
                'p': [-0xd6, 0x0, -0x44],
                's': [0x2, 0x1, 0x2],
                'l': 0x1
            }, {
                'p': [-0x118, 0x0, -0x128],
                's': [0x3, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xc3, 0x0, -0x11c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x131, 0x0, -0x133],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xa4, -0x1c, -0x1ad],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.36, -3.14]
            }, {
                'p': [0x69, -0x1c, -0x1c8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [0x81, -0x1c, -0x1c7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [0xde, 0xa, -0x211],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0xdc, 0xa, -0x21f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.51, -3.14]
            }, {
                'p': [0x3d, -0x1d, -0x1b3],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x114, 0x0, -0x15a],
                's': [0x2, 0x1, 0x3],
                'l': 0x1
            }, {
                'p': [0x86, 0x0, -0x4d],
                's': [0x2, 0x1, 0x3],
                'l': 0x1
            }, {
                'p': [-0x9d, 0x0, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xf7, 0x0, -0x10f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0x32, -0x1c, -0x1a7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [0x35, -0x1c, -0x1ff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x31, -0x1c, -0x205],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.51, 0x0]
            }, {
                'p': [-0xf, -0x1c, -0x205],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.06, 0x0]
            }, {
                'p': [-0x15, -0x1c, -0x200],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.16, 0x0]
            }, {
                'p': [-0x20, -0x1c, -0x1f9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.56, -3.14]
            }, {
                'p': [0x6, -0x1c, -0x1ce],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.21, -3.14]
            }, {
                'p': [0xb, 0x0, -0xba],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, -3.14],
                'c': '#d5e371'
            }, {
                'p': [0x3, -0x1c, -0x13b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [-0x6, -0x1c, -0x13e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [0x2, -0x1c, -0x15b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.22, 0x0]
            }, {
                'p': [-0x43, -0x1c, -0x145],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x3, -0x1c, -0x1a6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.21, -3.14]
            }, {
                'p': [-0xbb, 0x0, -0x1dd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x13c, 0x0, -0x170],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x13c, 0x0, -0x178],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x13b, 0x0, -0x19a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.7, -3.14]
            }, {
                'p': [-0xaf, 0x0, -0x18e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xba, 0x0, -0x1f3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xf5, 0x0, -0x168],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0x2, -0x1c, -0x1a1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.16, -3.14]
            }, {
                'p': [-0xf9, 0x0, -0x1b2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.7, -3.14]
            }, {
                'p': [-0xc2, 0x0, -0x1dc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.52, 3.14]
            }, {
                'p': [0x85, 0x0, -0xe0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0x125, 0x27, -0x12d],
                's': [0x1, 0xa, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xa5, 0x12, -0x21],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [0x47, 0x0, -0x112],
                's': [0x39, 0x1a, 0x19],
                'i': 0x13,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x47, 0x0, -0x112],
                's': [0x19, 0x2, 0x39],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x47, 0x18, -0x112],
                's': [0x19, 0x2, 0x39],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x3b, 0x2, -0x112],
                's': [0x1, 0x16, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x53, 0x2, -0x112],
                's': [0x1, 0x16, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x47, -0x1, -0x112],
                's': [0x16, 0x2, 0x36],
                'c': 0x752717,
                't': 0x5
            }, {
                'p': [-0x34, -0x1c, -0x142],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x30, -0x1c, -0x13b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [0x57, 0x0, -0x11f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0xfb, 0x0, -0x19e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x44, 0x0, -0x72],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0xe4, 0x30, -0x7c],
                's': [0xa, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0xdf, 0x0, -0x8f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x105, 0x0, -0x141],
                's': [0x39, 0x1a, 0x19],
                'i': 0x13,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x105, 0x0, -0x141],
                's': [0x19, 0x2, 0x39],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x105, 0x18, -0x141],
                's': [0x19, 0x2, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x111, 0x2, -0x141],
                's': [0x1, 0x16, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xf9, 0x2, -0x141],
                's': [0x1, 0x16, 0x37],
                'pe': 0x1,
                't': 0x5
            }, {
                'p': [0x105, 0x0, -0x141],
                's': [0x17, 0x1, 0x36],
                'c': 0x913c31,
                't': 0x5
            }, {
                'p': [0x113, 0x0, -0x123],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.19, -3.14],
                'c': '#c9d47c'
            }, {
                'p': [-0xca, 0x0, -0x1e5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xbe, 0xc, -0x1e5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xbb, 0x0, -0x1ee],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x9c, 0x0, -0x202],
                's': [0x39, 0x1a, 0x19],
                'i': 0x13,
                'l': 0x1
            }, {
                'p': [-0x9c, 0x0, -0x20f],
                's': [0x39, 0x34, 0x2],
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0x99, 0x0, -0x202],
                's': [0x3f, 0x1, 0x17],
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0xd9, 0x0, -0x220],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.52, 3.14]
            }, {
                'p': [-0xbb, 0x0, -0x20c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.52, 3.14]
            }, {
                'p': [-0x9b, 0x1, -0x1f6],
                's': [0x36, 0x18, 0x2],
                'v': 0x1,
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0x9b, 0x18, -0x202],
                's': [0x39, 0x2, 0x19],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0xf5, 0x0, -0x1c5],
                's': [0x4, 0xb, 0x17]
            }, {
                'p': [0x144, -0x12, -0x9e],
                's': [0x4, 0x19, 0x50]
            }, {
                'p': [0x104, -0x12, -0x9e],
                's': [0x4, 0x19, 0x50]
            }, {
                'p': [0x124, -0xe, -0xaf],
                's': [0x3d, 0xe, 0x2c],
                'i': 0x9,
                'c': '#ffffff',
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x131, 0xa, -0x209],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x10e, 0xa, -0x1bd],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x109, 0x0, -0x177],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa5, 0x0, -0x194],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x113, 0x0, -0x1c5],
                's': [0x4, 0x10, 0x18]
            }, {
                'p': [0x144, 0x7, -0x96],
                's': [0x4, 0x2, 0x16]
            }, {
                'p': [0x144, 0x7, -0xb6],
                's': [0x4, 0x2, 0x10]
            }, {
                'p': [-0xf5, 0x10, -0x20a],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [-0xf5, 0x10, -0x1df],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [-0xf5, 0x0, -0x1fb],
                's': [0x4, 0x10, 0x50]
            }, {
                'p': [-0xf5, 0x0, -0x1d3],
                's': [0x5, 0x11, 0x5]
            }, {
                'p': [-0x113, 0x10, -0x1c3],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [0xe4, 0x0, -0x62],
                's': [0xa, 0x30, 0x12],
                'bo': 0x1
            }, {
                'p': [0x124, -0x1, -0x70],
                's': [0x44, 0x1, 0x16],
                't': 0x1
            }, {
                'p': [0x124, -0x12, -0x79],
                's': [0x3c, 0x13, 0x6],
                'c': '#525252',
                't': 0x5
            }, {
                'p': [0xe4, 0x14, -0x6d],
                's': [0xa, 0x1c, 0x4],
                'bo': 0x1
            }, {
                'p': [0x124, 0x24, -0x40],
                's': [0x32, 0x2, 0x50],
                'c': '#3e3e3e',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x124, -0x3, -0x49],
                's': [0x32, 0x4, 0x5a],
                'c': '#525252',
                't': 0x5
            }, {
                'p': [0x103, 0x0, -0x3f],
                's': [0x12, 0x25, 0x50],
                'bo': 0x1
            }, {
                'p': [0x17c, 0x0, -0x3f],
                's': [0x80, 0x25, 0x50],
                'bo': 0x1
            }, {
                'p': [0x131, 0xa, -0x45],
                's': [0x42, 0x16, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x124, 0xa, -0x45],
                's': [0x42, 0x2, 0x18],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x2c3f55,
                't': 0x5
            }, {
                'p': [0x124, 0x20, -0x45],
                's': [0x42, 0x2, 0x1c],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x124, 0x3, -0x4e],
                's': [0x4, 0x4, 0x1b],
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x12f, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x12a, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x119, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x11e, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x124, 0x6, -0x43],
                's': [0x42, 0x4, 0x5],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x124, 0x6, -0x65],
                's': [0x3, 0x4, 0x18],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x11d, 0xc, -0x66],
                's': [0x2, 0x14, 0xc],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x132, 0xc, -0x61],
                's': [0xc, 0x14, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x124, 0x5, -0x65],
                's': [0x4, 0x1, 0x1b],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x11a, 0x7, -0x66],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0xff4b00,
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x12e, 0x7, -0x66],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#ff4b00',
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x13c, 0x0, -0x40],
                's': [0x2, 0x24, 0x50],
                'c': '#3e3e3e',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x124, 0x0, -0x26],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                't': 0x5
            }, {
                'p': [0x124, 0x0, -0x39],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0x124, 0x0, -0x49],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0x124, 0x0, -0x49],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0x124, -0x12, -0x8b],
                's': [0x3c, 0x4, 0x1e],
                'c': '#b6b6b6',
                't': 0x1
            }, {
                'p': [0x124, 0x0, -0x67],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x124, 0x0, -0x5b],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0xe4, 0x0, -0x8e],
                's': [0xa, 0x30, 0xe],
                'bo': 0x1
            }, {
                'p': [0xe4, 0x13, -0x85],
                's': [0xa, 0x1d, 0x4],
                'bo': 0x1
            }, {
                'p': [0xe4, 0x1a, -0x79],
                's': [0xa, 0x16, 0x14],
                'bo': 0x1
            }, {
                'p': [0xde, 0x0, -0x83],
                's': [0x7, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x9c, 0x0, -0x1e8],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11
            }, {
                'p': [-0x109, 0xa, -0x1bb],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x140, 0x0, -0x79],
                's': [0x2, 0x32, 0x2],
                't': 0x2
            }, {
                'p': [0x13d, -0xe, -0x82],
                's': [0x4, 0x1, 0x4],
                'l': 0x1,
                'c': '#c5c5c5'
            }, {
                'p': [0x139, 0x1, -0x64],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x13b, 0x1, -0x77],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x36, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0],
                'c': '#d5e371'
            }, {
                'p': [0xec, 0x0, -0x5e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xec, 0x0, -0x90],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [-0xfd, 0x49, -0x22d],
                's': [0x45, 0x0, 0x1c],
                'i': 0xb,
                'l': 0x1,
                'r': [1.57, 0x0, 0x0]
            }, {
                'p': [-0xfa, 0xa, -0x220],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x81, 0x2, -0x202],
                's': [0x1, 0x18, 0x17],
                'l': 0x1,
                'c': 0x0,
                'o': 0.7000000000000001,
                't': 0x5
            }, {
                'p': [-0x7a, 0x3a, -0x20c],
                's': [0x6, 0xe, 0x6],
                't': 0x2
            }, {
                'p': [-0x53, 0x3e, -0x1cb],
                's': [0x6, 0x10, 0x6],
                't': 0x2
            }, {
                'p': [-0x9c, 0x1a, -0x202],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11
            }, {
                'p': [-0x88, -0x1c, -0x15e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [0xb0, 0x0, -0xa],
                's': [0x2, 0x12, 0x4],
                'c': 0xd7d7d7,
                't': 0x2
            }, {
                'p': [-0x38, 0x0, -0x80],
                's': [0x2, 0x12, 0x4],
                'c': 0xd7d7d7,
                't': 0x2
            }, {
                'p': [0x8a, 0x0, -0x11e],
                's': [0x5, 0x13, 0x2],
                't': 0x2
            }, {
                'p': [0x91, 0x0, -0x11e],
                's': [0x5, 0x12, 0x2],
                't': 0x2
            }, {
                'p': [0x1a, 0x0, -0x15e],
                's': [0x5, 0x12, 0x2],
                't': 0x2
            }, {
                'p': [0x135, 0x0, -0x132],
                's': [0x2, 0x13, 0x4],
                't': 0x2
            }, {
                'p': [0x134, 0x0, -0x13c],
                's': [0x2, 0x13, 0x4],
                't': 0x2
            }, {
                'p': [-0x104, 0x0, -0x1b7],
                's': [0x1a, 0x10, 0x4]
            }, {
                'p': [-0x10d, 0xa, -0x1c4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.7, -3.14]
            }, {
                'p': [-0xd4, 0x0, -0x181],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xd4, 0x0, -0x180],
                's': [0x31, 0x8, 0x10],
                'v': 0x1
            }, {
                'p': [-0xd9, 0x8, -0x180],
                's': [0x18, 0x7, 0x10],
                'v': 0x1
            }, {
                'p': [-0x9b, 0x0, -0x19c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.87, 3.14]
            }, {
                'p': [-0xf1, 0x0, -0x184],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xc0, 0x0, -0x173],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [0x117, 0xa, -0x45],
                's': [0x42, 0x16, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x157, 0x20, -0x178],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x157, 0x2c, -0x171],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xb7, 0x58, -0x4],
                's': [0x4, 0x2, 0x36],
                't': 0x2
            }, {
                'p': [0xc7, 0x58, -0x4],
                's': [0x4, 0x2, 0x36],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, -0x1b],
                's': [0x1a, 0x1, 0x4],
                'c': 0xd9d9d9,
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, -0x14],
                's': [0x19, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbf, 0x5a, -0xc],
                's': [0x1a, 0x1, 0x4],
                'c': 0xc8c8c8,
                't': 0x2
            }, {
                'p': [0xbf, 0x5a, 0x13],
                's': [0x1a, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, -0x5],
                's': [0x18, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, 0xc],
                's': [0x17, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, 0x4],
                's': [0x17, 0x1, 0x4],
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [0xaa, 0x57, -0x57],
                's': [0x6, 0x13, 0x6],
                't': 0x2
            }, {
                'p': [0xb1, 0x2b, -0x5],
                's': [0x2, 0xd, 0x4],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x13e, 0x1, -0x193],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x144, 0x1, -0x19a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x92, 0x0, 0x33],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x12, 0x1c, -0x208],
                's': [0xb, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [-0x11, 0x1f, -0x208],
                's': [0xb, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0x33, 0x1f, -0x208],
                's': [0xb, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0x12, 0x1f, -0x209],
                's': [0x7, 0x10, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x33, 0x22, -0x209],
                's': [0x7, 0x10, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x11, 0x22, -0x209],
                's': [0x7, 0x10, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x96, 0x7, -0x1a9],
                's': [0x12, 0x7, 0x4]
            }, {
                'p': [0x64, 0x7, -0x1a9],
                's': [0xa, 0x7, 0x4]
            }, {
                'p': [0x65, 0xa, -0x1cd],
                's': [0x8, 0x6, 0x4]
            }, {
                'p': [0x70, -0x1c, -0x1cd],
                's': [0x3a, 0x24, 0x4]
            }, {
                'p': [0x7b, 0x4, -0x1bb],
                's': [0x24, 0x1, 0x20]
            }, {
                'p': [0x8f, 0x4, -0x1bb],
                's': [0x4, 0xa, 0x20]
            }, {
                'p': [0x67, 0x4, -0x1bb],
                's': [0x4, 0xa, 0x20]
            }, {
                'p': [0x8f, 0xe, -0x1b3],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x67, 0xe, -0x1c1],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x67, 0xe, -0x1b1],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x7b, 0x8, -0x1bb],
                's': [0x24, 0x2, 0x24],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [0x98, 0xe, -0x1a9],
                's': [0x8, 0x2, 0x4]
            }, {
                'p': [0x8b, 0x1, -0x1bc],
                's': [0x4, 0x3, 0x22],
                't': 0x2
            }, {
                'p': [0x6b, 0x1, -0x1bc],
                's': [0x4, 0x3, 0x22],
                't': 0x2
            }, {
                'p': [0x8b, -0x1, -0x1c7],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                'c': 0xd4d4d4,
                't': 0x2
            }, {
                'p': [0x6b, -0x1, -0x1c7],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                'c': 0xd9d9d9,
                't': 0x2
            }, {
                'p': [0x6b, -0x1, -0x1ad],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                'c': 0xe6e6e6,
                't': 0x2
            }, {
                'p': [0x8b, -0x1, -0x1ae],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                'c': 0xe1e1e1,
                't': 0x2
            }, {
                'p': [0x9a, 0x8, -0x198],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0x65, 0x8, -0x1a3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xf1, 0x0, -0x1c5],
                's': [0x4, 0x8, 0x19],
                'l': 0x1
            }, {
                'p': [-0xed, 0x0, -0x1c5],
                's': [0x4, 0x5, 0x19],
                'l': 0x1
            }, {
                'p': [-0xe9, 0x0, -0x1c5],
                's': [0x4, 0x2, 0x19]
            }, {
                'p': [-0xec, 0x0, -0x1c5],
                's': [0xe, 0xb, 0x17],
                'i': 0x9,
                'v': 0x1,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [-0xc1, 0x0, -0x1ee],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.53, 3.14]
            }, {
                'p': [0x171, 0x51, -0x79],
                's': [0x4, 0x3, 0x11],
                'l': 0x1
            }, {
                'p': [-0x94, 0x65, 0x61],
                's': [0x14, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xee, -0x1, -0x24a],
                's': [0xaf, 0x5a, 0xb]
            }, {
                'p': [-0x118, 0x59, -0x24a],
                's': [0x16, 0x4, 0xb],
                'l': 0x1
            }, {
                'p': [-0xfc, 0x32, 0x1b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf8, 0xf, -0x23e],
                's': [0x81, 0x4b, 0xb]
            }, {
                'p': [0xdf, 0x5a, -0x23e],
                's': [0x15, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [0xfd, 0x5a, -0x23e],
                's': [0x15, 0x2, 0xb],
                'l': 0x1
            }, {
                'p': [0x11f, 0x5a, -0x23e],
                's': [0x11, 0x4, 0xb],
                'l': 0x1
            }, {
                'p': [-0xf9, 0x7c, -0x67],
                's': [0xc, 0x4, 0xc],
                'l': 0x1,
                'c': 0xbebaba
            }, {
                'p': [-0xf6, 0x7c, -0x54],
                's': [0x6, 0x2, 0xc],
                'l': 0x1,
                'c': 0xd7d7d7
            }, {
                'p': [-0xb2, 0x65, 0x61],
                's': [0xd, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xcf, 0x65, 0x61],
                's': [0xd, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [-0xed, 0x65, 0x61],
                's': [0x10, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, 0x49],
                's': [0x4, 0x2, 0x11],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, 0x29],
                's': [0x4, 0x2, 0xd],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, 0xc],
                's': [0x4, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, -0x15],
                's': [0x4, 0x2, 0x17],
                'l': 0x1
            }, {
                'p': [-0xf3, 0x5b, -0x54],
                's': [0x6, 0x3, 0xa],
                'c': 0xb9b9b9
            }, {
                'p': [-0x9f, 0x4d, -0x9c],
                's': [0xe, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xb9, 0x4d, -0x9c],
                's': [0xb, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0xdc, 0x4d, -0x9e],
                's': [0xe, 0x3, 0xa],
                'l': 0x1
            }, {
                'p': [-0x116, 0x4d, -0xe2],
                's': [0x17, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x136, 0x4d, -0x9c],
                's': [0x1b, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0x165, 0x62, -0x1c2],
                's': [0x10, 0x3, 0x10],
                'l': 0x1
            }, {
                'p': [0x160, 0x62, -0x1e7],
                's': [0x6, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0x171, 0x51, -0xeb],
                's': [0x4, 0x3, 0x11],
                'l': 0x1
            }, {
                'p': [0x171, 0x51, -0xca],
                's': [0x4, 0x2, 0xb],
                'l': 0x1
            }, {
                'p': [0x171, 0x51, -0xa5],
                's': [0x4, 0x2, 0x15],
                'l': 0x1
            }, {
                'p': [0x148, 0x25, -0x3f],
                's': [0x9c, 0x2c, 0x50],
                'bo': 0x1
            }, {
                'p': [0x15b, 0x51, -0x65],
                's': [0xd, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x101, 0x51, -0x64],
                's': [0xe, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [0x13e, 0x51, -0x65],
                's': [0x10, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x11d, 0x51, -0x65],
                's': [0xe, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x169, 0x32, -0xbc],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x169, 0x32, -0xb0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xf2, 0x59, -0x24a],
                's': [0x16, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [-0xc8, 0x59, -0x24a],
                's': [0x12, 0x4, 0xb],
                'l': 0x1
            }, {
                'p': [-0x100, 0x4d, -0x9c],
                's': [0x11, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xea, 0x4d, -0xe2],
                's': [0x10, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x13f, 0x4d, -0xe2],
                's': [0x14, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0xc1, 0x4d, -0xe2],
                's': [0x13, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x97, 0x4d, -0xe2],
                's': [0x13, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0xab, 0x12, 0x33],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x76, 0x74, -0xc5],
                's': [0x9, 0x3, 0x34],
                'c': 0xafafaf
            }, {
                'p': [-0x76, 0x74, -0xc5],
                's': [0x34, 0x3, 0x9],
                'c': 0x969696
            }, {
                'p': [-0x8f, 0x0, -0x31],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.05, -3.14]
            }, {
                'p': [-0x15c, 0x99, -0xe6],
                's': [0xb, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x15d, 0x99, -0x114],
                's': [0xd, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x188, 0x99, -0xe6],
                's': [0xb, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x186, 0x99, -0x114],
                's': [0xf, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x172, 0x6e, -0xfd],
                's': [0x48, 0x2, 0x4c],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0xfd],
                's': [0x43, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0xeb],
                's': [0x43, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0x110],
                's': [0x43, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0xfd],
                's': [0x4, 0x4, 0x48],
                't': 0x2
            }, {
                'p': [-0x162, 0x6a, -0xfd],
                's': [0x4, 0x4, 0x48],
                't': 0x2
            }, {
                'p': [-0x183, 0x6a, -0xfd],
                's': [0x4, 0x4, 0x48],
                't': 0x2
            }, {
                'p': [-0x157, 0x7b, -0xfe],
                's': [0x2, 0x10, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x159, 0x99, -0xfc],
                's': [0x5, 0x3, 0xc],
                'l': 0x1
            }, {
                'p': [-0x170, 0x99, -0xe2],
                's': [0xe, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x170, 0x99, -0x118],
                's': [0xb, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13f, 0x67, -0x24b],
                's': [0x3e, 0x2, 0x43],
                'c': 0xbebebe,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x24b],
                's': [0x4, 0x3, 0x3f],
                'c': 0xe1dede,
                't': 0x2
            }, {
                'p': [-0x14e, 0x64, -0x24b],
                's': [0x4, 0x3, 0x3f],
                'c': 0xd9d5d5,
                't': 0x2
            }, {
                'p': [-0x12f, 0x64, -0x24b],
                's': [0x4, 0x3, 0x3f],
                'c': 0xdcdcdc,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x24b],
                's': [0x3a, 0x3, 0x3],
                'c': 0xc3c3c3,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x239],
                's': [0x3a, 0x3, 0x3],
                'c': 0xc8c8c8,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x25b],
                's': [0x3a, 0x3, 0x3],
                'c': 0xcfcfcf,
                't': 0x2
            }, {
                'p': [0xb7, 0x55, -0x1c],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xc7, 0x55, -0x1c],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xc7, 0x55, 0x14],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xb7, 0x55, 0x14],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x10e, -0xe, -0x82],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0xe7, 0x0, -0x18e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [-0xca, 0x0, -0x18d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [-0x104, 0x10, -0x1b7],
                's': [0xc, 0x2, 0x4]
            }, {
                'p': [-0xf5, 0x0, -0x1b7],
                's': [0x5, 0x11, 0x5]
            }, {
                'p': [-0x113, 0x0, -0x1b7],
                's': [0x5, 0x11, 0x5]
            }, {
                'p': [-0xec, 0x0, -0x1d3],
                's': [0xe, 0xd, 0x3]
            }, {
                'p': [-0xec, 0x0, -0x1b7],
                's': [0xe, 0xd, 0x3]
            }, {
                'p': [-0xef, 0x0, -0x1d8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xe5, 0x0, -0x1b7],
                's': [0x4, 0xe, 0x4]
            }, {
                'p': [-0xe5, 0x0, -0x1d3],
                's': [0x4, 0xe, 0x4]
            }, {
                'p': [-0xb2, 0x0, -0x169],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xcb, 0x0, -0x174],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0.01, -1.39, 0.01]
            }, {
                'p': [-0xdd, 0x0, -0x173],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0.01, -1.39, 0.01]
            }, {
                'p': [-0xe8, 0x1, -0x174],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.23, 0.01]
            }, {
                'p': [-0xb8, 0x0, -0x184],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [-0xb9, 0x0, -0x17a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [-0xe3, 0x0, -0x165],
                's': [0x4, 0x13, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0xd9, 0x0, -0x164],
                's': [0x4, 0x13, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0xde, 0x0, -0x165],
                's': [0x4, 0xe, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x90, -0x1c, -0x1c7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.21, 0x0]
            }, {
                'p': [-0xef, 0x0, -0x1df],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.88, 0x0]
            }, {
                'p': [0x104, 0x7, -0xb6],
                's': [0x4, 0x2, 0x10]
            }, {
                'p': [0x104, 0x7, -0x96],
                's': [0x4, 0x2, 0x16]
            }, {
                'p': [0x14f, 0x8b, -0x23],
                's': [0xc, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x16a, 0x8b, -0x3e],
                's': [0x6, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0xd4, 0x10, -0x1cd],
                's': [0x14, 0x2, 0x4]
            }, {
                'p': [0x8f, 0xe, -0x1c2],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x10c, 0x0, -0x40],
                's': [0x2, 0x24, 0x50],
                'c': '#3e3e3e',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x45, -0x20, -0x159],
                's': [0x96, 0x4, 0x4c],
                't': 0x1
            }, {
                'p': [-0xc4, -0x2, -0xd5],
                's': [0x22, 0x2, 0x20],
                't': 0x1
            }, {
                'p': [-0xd2, 0x2a, -0x169],
                's': [0x4c, 0x1, 0xc],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xf7, 0x26, -0x168],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0xd2, 0x26, -0x168],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0xae, 0x26, -0x168],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0xb2, 0x2b, -0x16a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb8, 0x2b, -0x168],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb4, 0x33, -0x168],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe4, 0x1c, -0x170],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xd7, 0x0, -0x18b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [-0x19f, 0x0, -0x1bc],
                's': [0x3a, 0x7f, 0x5a],
                'c': 0xa7a5a5
            }, {
                'p': [-0x18a, 0x7f, -0x196],
                's': [0x10, 0x3, 0xe],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0x18a, 0x7f, -0x1e1],
                's': [0x10, 0x4, 0x10],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0x18a, 0x7f, -0x1bc],
                's': [0x10, 0x3, 0x10],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [-0x1b2, 0x7f, -0x197],
                's': [0x14, 0x3, 0x10],
                'l': 0x1,
                'c': 0xa5a3a3
            }, {
                'p': [-0x1b4, 0x7f, -0x1e1],
                's': [0x10, 0x3, 0x10],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0xd2, 0x29, -0x170],
                's': [0x4c, 0x2, 0x2],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x159, 0x48, -0x20e],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x21c],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x215],
                's': [0x3, 0x3, 0x28],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x160, 0x5a, -0x20e],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x20e],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x151, 0x5a, -0x20e],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x151, 0x5a, -0x21c],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x160, 0x5a, -0x21c],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x21c],
                's': [0x3, 0x26, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x56, -0x215],
                's': [0x3, 0x3, 0x21],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x56, -0x21c],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x56, -0x20e],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x202],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [-0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x228],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x16a],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x178],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x171],
                's': [0x3, 0x3, 0x28],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x16b, 0x74, -0x16a],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x16a],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x15c, 0x74, -0x16a],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x15c, 0x74, -0x178],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x16b, 0x74, -0x178],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x178],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x70, -0x171],
                's': [0x3, 0x3, 0x21],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x70, -0x178],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x70, -0x16a],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x8c, -0x171],
                's': [0x3, 0x3, 0x14],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x167, 0x7d, -0x171],
                's': [0x9, 0xb, 0x6],
                'c': '#757575'
            }, {
                'p': [-0x15a, 0x97, -0x171],
                's': [0x29, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -2.45],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x147, 0xa4, -0x171],
                's': [0x5, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x146, 0x84, -0x171],
                's': [0x1, 0x22, 0x1],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x146, 0x81, -0x171],
                's': [0x2, 0x3, 0x2],
                'c': '#343434',
                't': 0x5
            }, {
                'p': [-0x164, 0x62, -0x15e],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [-0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x184],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x168, 0x88, -0x171],
                's': [0x5, 0x3, 0x6],
                'c': '#757575'
            }, {
                'p': [-0x182, 0x5a, -0x1bd],
                's': [0x2, 0x13, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x182, 0x58, -0x1bd],
                's': [0x6, 0x4, 0xc],
                'c': 0xaaa3a3
            }, {
                'p': [-0xd8, 0x30, -0x3f],
                's': [0x8, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                't': 0x2
            }, {
                'p': [-0xcf, 0x22, -0x3f],
                's': [0x1, 0x12, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1cf],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1dd],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1d6],
                's': [0x3, 0x3, 0x28],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x173, 0x74, -0x1cf],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1cf],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x182, 0x74, -0x1cf],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x182, 0x74, -0x1dd],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x173, 0x74, -0x1dd],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1dd],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x70, -0x1d6],
                's': [0x3, 0x3, 0x21],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x70, -0x1dd],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x70, -0x1cf],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x8c, -0x1d6],
                's': [0x3, 0x3, 0x14],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17f, 0x7d, -0x1d6],
                's': [0x9, 0xb, 0x6],
                'c': '#757575'
            }, {
                'p': [0x16f, 0x96, -0x1d6],
                's': [0x29, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x161, 0xa5, -0x1d6],
                's': [0x5, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 2.45],
                'c': '#522505',
                't': 0x5
            }, {
                'p': [0x15f, 0x83, -0x1d6],
                's': [0x1, 0x22, 0x1],
                'c': '#522505',
                't': 0x5
            }, {
                'p': [0x15f, 0x80, -0x1d6],
                's': [0x2, 0x3, 0x2],
                'c': '#343434',
                't': 0x5
            }, {
                'p': [0x17a, 0x62, -0x1c3],
                's': [0x3, 0x11, 0x3],
                'r': [-0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1e9],
                's': [0x3, 0x11, 0x3],
                'r': [0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17f, 0x88, -0x1d6],
                's': [0x5, 0x3, 0x6],
                'c': '#757575'
            }, {
                'p': [0x137, 0x70, -0x1fc],
                's': [0xe, 0x4, 0x16],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x15b, 0x70, -0x1f4],
                's': [0x16, 0x3, 0x6],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x133, 0x70, -0x21b],
                's': [0x6, 0x3, 0x12],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0xfd, 0x0, -0x1c9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0]
            }, {
                'p': [0xdb, 0x0, -0x6a],
                's': [0x4, 0x2, 0x3],
                'l': 0x1
            }, {
                'p': [0xea, 0x0, -0x70],
                's': [0x3, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xdb, 0x0, -0x8e],
                's': [0x3, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0x139, 0x3a, -0x1c1],
                's': [0x6, 0xa, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x189, 0x40, -0x1dd],
                's': [0x58, 0x22, 0x46]
            }, {
                'p': [0x181, 0x62, -0x1bc],
                's': [0x12, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x19b, 0x62, -0x1bc],
                's': [0x10, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x1b0, 0x62, -0x1bf],
                's': [0xa, 0x3, 0xa],
                'l': 0x1
            }, {
                'p': [0x184, 0x59, -0x1b3],
                's': [0x4, 0x4, 0x10],
                't': 0x2
            }, {
                'p': [0x184, 0x55, -0x1b9],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x11a, -0xe, -0x80],
                's': [0x7, 0x1, 0x4],
                'l': 0x1,
                'c': '#c5c5c5'
            }, {
                'p': [0xb3, 0x43, -0x18],
                's': [0x4, 0x5, 0xf],
                'l': 0x1
            }, {
                'p': [-0xe0, 0x0, -0x68],
                's': [0x1f, 0x18, 0x36],
                'c': 0x414141,
                't': 0x5
            }, {
                'p': [-0x12, 0x12, 0x24],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [-0x114, 0xa, -0x206],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [0x60, 0x8, -0x1a5],
                's': [0x2, 0x6, 0x4],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [0xdd, 0x0, -0x61],
                's': [0x4, 0xc, 0xc],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [0x140, 0x0, -0x78],
                's': [0x4, 0x7, 0x4],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [0x8a, 0x0, -0x96],
                's': [0x4, 0x8, 0x6],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [-0x9c, 0x1a, -0x202],
                's': [0x39, 0x1, 0x1a],
                'v': 0x1,
                'bo': 0x1
            }, {
                'p': [-0x132, 0xa, -0x1ff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.7, -3.14]
            }, {
                'p': [-0xfd, 0xa, -0x21e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.17, -3.14]
            }, {
                'p': [-0x130, 0xa, -0x21e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.17, -3.14]
            }, {
                'p': [-0xfc, 0xa, -0x1db],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.17, -3.14]
            }]
        }, {
            'name': 'Littletown',
            'ambInd': 0x1,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x1,
            'skyDomeCol0': '#3fb1b7',
            'skyDomeCol1': '#00cffc',
            'skyDomeCol2': '#1faedc',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0x7b7e8c,
            'light': 0x535566,
            'sky': 0x667a96,
            'fog': 0x7784a2,
            'fogD': 722.1829102596926,
            'dthY': -0x64,
            'nAmb': 0x1,
            'camPos': [0x24, 0x35, 0xfc],
            'spawns': [
                [0x1a8, 0x0, -0x66, 0x0, 0x2],
                [-0x114, 0x0, 0xc, 0x0, 0x3],
                [-0x112, 0x0, 0xba, 0x0, 0x3],
                [0x11f, 0x26, 0x20, 0x0, 0x2],
                [-0x9c, 0x26, 0x21, 0x0, 0x3],
                [-0x5f, 0x26, -0x4, 0x0],
                [0x180, 0x0, 0x57, 0x0, 0x2],
                [0x8d, 0x0, 0x151, 0x0, 0x2]
            ],
            'ambO': 0.7,
            'ambS': 0x5,
            'objects': [{
                'p': [0x8a, 0x2, 0x6],
                's': [0x4, 0x24, 0x3c],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0xcd, 0x24, 0x1e],
                's': [0x3e, 0x2, 0x6c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xee, 0x26, 0x2d],
                's': [0x4, 0x26, 0x4a],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xaa, 0x2, 0x7b],
                's': [0x1e, 0x74, 0x12],
                'c': 0x707070,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0x45],
                's': [0x4, 0x1e, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x130, 0x2, -0x7],
                's': [0x2, 0x34, 0xc],
                'i': 0x3,
                't': 0x2
            }, {
                'p': [0x8a, 0x26, 0x3],
                's': [0x4, 0x6, 0x26],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x26, 0x51],
                's': [0x4, 0x6, 0x22],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x26, 0x2b],
                's': [0x4, 0x2e, 0x2a],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x26, 0x68],
                's': [0x4, 0x28, 0xc],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x26, -0x14],
                's': [0x4, 0x33, 0x8],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x42, 0x3],
                's': [0x4, 0x15, 0x26],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x2, 0x51],
                's': [0x4, 0x24, 0x3a],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x1a, 0x2c],
                's': [0x4, 0xc, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xdc, 0x2, 0x70],
                's': [0xa8, 0x4a, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xcd, 0x2, -0x1a],
                's': [0x8a, 0x58, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x129, 0x2, -0x1a],
                's': [0xe, 0x58, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x11a, 0x1a, -0x1a],
                's': [0x10, 0x40, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x26, 0x10],
                's': [0x4, 0x2e, 0x50],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x4f, 0x4a],
                's': [0x4, 0x3, 0x4],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x12e, 0x3e, 0x40],
                's': [0x4, 0x14, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x2, 0x19],
                's': [0x4, 0x24, 0x62],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x12e, 0x2, 0x64],
                's': [0x4, 0x24, 0x14],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x1a, 0x52],
                's': [0x4, 0xc, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xee, 0x26, -0x10],
                's': [0x4, 0x26, 0x10],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x40, 0x0],
                's': [0x4, 0xc, 0x10],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xb0, 0x22, 0x62],
                's': [0x4, 0x2a, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x123, 0x26, 0x54],
                's': [0x12, 0x26, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x106, 0x26, 0x54],
                's': [0x8, 0x26, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x112, 0x3e, 0x54],
                's': [0x10, 0xe, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xd8, 0x2, 0x54],
                's': [0x54, 0x4a, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x100, 0x2, 0x62],
                's': [0x4, 0x24, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x2, 0x43],
                's': [0x4, 0x24, 0x1e],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x2, -0x5],
                's': [0x4, 0x24, 0x26],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x1a, 0x21],
                's': [0x4, 0xc, 0x26],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x9d, 0x24, 0x2b],
                's': [0x22, 0x2, 0x86],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x10e, 0x24, 0x1e],
                's': [0x3c, 0x2, 0x6c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x117, 0x24, 0x61],
                's': [0x2a, 0x2, 0x1a],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xdc, 0x0, 0x2b],
                's': [0xac, 0x2, 0x92],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xb7, 0x0, -0x4b],
                's': [0x96, 0x2, 0x62],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x9e, 0x2, -0x1f],
                's': [0x4, 0x1e, 0x6],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x2, -0x4a],
                's': [0x4, 0x1e, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x2, -0x75],
                's': [0x4, 0x1e, 0x2],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x20, -0x49],
                's': [0x4, 0xc, 0x5a],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xfe, 0x2, -0x3c],
                's': [0x4, 0x2a, 0x40],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xfe, 0x2, -0x71],
                's': [0x4, 0x2a, 0xa],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xfe, 0x1a, -0x64],
                's': [0x4, 0x12, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xce, 0x2, -0x78],
                's': [0x64, 0x2a, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x2, -0x60],
                's': [0x2, 0x1e, 0x2a],
                'pe': 0x1,
                'c': '#ffffff',
                't': 0xa
            }, {
                'p': [0xaa, 0x0, 0x7d],
                's': [0x22, 0x2, 0x12],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x104, 0x0, -0x64],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x134, 0x0, 0x52],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x29, 0x0, -0x18],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x11a, 0x0, -0x20],
                's': [0x14, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x1d, -0x1, 0x143],
                's': [0x6a, 0x2, 0x34d],
                'c': 0x393939,
                't': 0x5
            }, {
                'p': [-0x41, 0x20, 0x73],
                's': [0x4, 0xc, 0x66],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0x73],
                's': [0x4, 0x1e, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0xa1],
                's': [0x4, 0x1e, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x91, 0x2, 0xa1],
                's': [0x4, 0x2a, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x91, 0x2, 0x66],
                's': [0x4, 0x2a, 0x4c],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x69, 0x2, 0xa8],
                's': [0x54, 0x2a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x91, 0x1a, 0x94],
                's': [0x4, 0x12, 0x10],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0x8b],
                's': [0x2, 0x1e, 0x2a],
                'pe': 0x1,
                't': 0xa
            }, {
                'p': [-0x5b, 0x0, 0x76],
                's': [0x74, 0x2, 0x6c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x71, 0x0, -0x10],
                's': [0x8c, 0x2, 0xa4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x8e, 0x2, 0x3e],
                's': [0x1e, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x4e, 0x2, 0x3e],
                's': [0x42, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x71, 0x2, -0x5e],
                's': [0x88, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x42, -0x10],
                's': [0x4, 0xa, 0x98],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x26, -0x4d],
                's': [0x4, 0x1c, 0x1e],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x26, -0x3],
                's': [0x4, 0x1c, 0x2a],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x26, 0x23],
                's': [0x4, 0x6, 0x22],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x2f, 0x26, -0x2b],
                's': [0x4, 0x6, 0x26],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x2f, 0x26, 0x38],
                's': [0x4, 0x1c, 0x8],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x2, -0x3e],
                's': [0x4, 0x24, 0x3c],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x2f, 0x1a, -0x18],
                's': [0x4, 0xc, 0x10],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0xb1, 0x2, 0x3e],
                's': [0x8, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xb3, 0x2, 0x5],
                's': [0x4, 0x4a, 0x6e],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xb3, 0x2, -0x4f],
                's': [0x4, 0x4a, 0x1a],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x77, 0x1a, 0x3e],
                's': [0x10, 0x32, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xa5, 0x1a, 0x3e],
                's': [0x10, 0x32, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x8c, 0x2, -0x50],
                's': [0x4, 0x24, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x69, 0x2, -0x42],
                's': [0x4a, 0x4a, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x46, 0x22, -0x50],
                's': [0x4, 0x2a, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0xb3, 0x1a, -0x3a],
                's': [0x4, 0xc, 0x10],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x3a, 0x24, -0x10],
                's': [0x14, 0x2, 0x98],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x86, 0x2, 0x20],
                's': [0x4, 0x1c, 0x38],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x2, -0x31],
                's': [0x4, 0x1c, 0x1e],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x1e, -0x2],
                's': [0x4, 0x8, 0x7c],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x64, 0x24, -0x2],
                's': [0x40, 0x2, 0x7c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9d, 0x24, -0x3],
                's': [0x2a, 0x2, 0x7e],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xa0, 0x24, -0x4f],
                's': [0x24, 0x2, 0x1a],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xb3, 0x3e, -0x3a],
                's': [0x4, 0xe, 0x10],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x86, 0x26, -0x39],
                's': [0x4, 0x26, 0xe],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x26, 0xd],
                's': [0x4, 0x26, 0x5e],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x3c, -0x2a],
                's': [0x4, 0x10, 0x10],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x151, -0x2, 0x63],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x132, -0x2, 0x63],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x151, -0x2, 0x5],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x132, -0x2, 0x5],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x142, 0x22, 0x34],
                's': [0x24, 0x2, 0x64],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xc7, 0x22, -0x2f],
                's': [0x24, 0x2, 0x52],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xd6, -0x1, -0x9],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xd6, -0x1, -0x55],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xb7, -0x1, -0x55],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xb7, -0x1, -0x9],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x84, 0x0, 0x2c],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xb9, 0x0, -0x3a],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x97, 0x0, 0x94],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xa5, 0x0, 0x44],
                's': [0x12, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x71, 0x4c, -0x10],
                's': [0x92, 0x4, 0xaa],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x69, 0x2c, 0x77],
                's': [0x5e, 0x4, 0x70],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xdc, 0x4b, 0x2a],
                's': [0xa5, 0x4, 0x89],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xce, 0x2c, -0x4d],
                's': [0x6c, 0x4, 0x62],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x4f, 0x2, -0x69],
                's': [0x1e, 0x76, 0x12],
                'c': 0x707070,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x4f, 0x0, -0x6b],
                's': [0x22, 0x2, 0x12],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x20, 0x2, -0xcf],
                's': [0x7c, 0x4a, 0x96],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x20, 0x4a, -0xcf],
                's': [0x88, 0x4, 0xa2],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x20, 0x0, -0xcf],
                's': [0x80, 0x2, 0x9a],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5e, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x5e, -0x1, 0xd9],
                's': [0x2, 0x18, 0x71],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xf6, -0x1, 0x9f],
                's': [0x12e, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x25, -0x1, 0xeb],
                's': [0x2, 0x18, 0x3a],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x25, -0x1, 0xcd],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xa3, -0x1, 0xcd],
                's': [0xfe, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x18e, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x18f, -0x1, 0x3b],
                's': [0x2, 0x18, 0xce],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x18f, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x104, -0x1, -0x9d],
                's': [0x154, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xa1, -0x1, -0x9d],
                's': [0x106, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x122, -0x1, 0xcc],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x123, -0x1, 0x18],
                's': [0x2, 0x18, 0x166],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x122, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xb5, 0x2, 0x3],
                's': [0x2, 0x34, 0xc],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [0x20, 0x0, -0x79],
                's': [0x30, 0x2, 0x12],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x20, 0x27, -0x7b],
                's': [0x2e, 0x3, 0x13],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0xad],
                's': [0x2, 0x18, 0x3f],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa
            }, {
                'p': [-0x10b, 0x0, 0x49],
                's': [0x2e, 0x1e, 0x2a],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x10b, 0x1e, 0x49],
                's': [0x36, 0x2, 0x32],
                'c': 0x525252,
                't': 0x5
            }, {
                'p': [0x157, 0x0, -0x8a],
                's': [0x34, 0x20, 0x24],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x157, 0x20, -0x8a],
                's': [0x38, 0x2, 0x28],
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x18f, -0x1, -0x2e],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x1a0, -0x1, -0x2d],
                's': [0x1e, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x1af, -0x1, -0x2e],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x1b0, -0x1, -0x65],
                's': [0x2, 0x18, 0x6e],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x1af, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xfa, -0x1, 0x10],
                's': [0x8, 0x18, 0x48],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0xd5, -0x1, -0x78],
                's': [0x8, 0xa, 0x14],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0xe8, 0x1a, -0x8f],
                's': [0x3a, 0x2, 0x20],
                'c': 0x6b6b6b,
                't': 0x5
            }, {
                'p': [-0xe8, 0x0, -0x8f],
                's': [0x34, 0x1a, 0x1a],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0xe9, -0x1, 0x56],
                's': [0x16, 0xa, 0x8],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x139, -0x1, -0x86],
                's': [0x8, 0xa, 0x2c],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0x90, -0x1, -0x9a],
                's': [0x7c, 0xa, 0x5],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x1b3, 0x0, -0x10],
                's': [0x34, 0x20, 0x24],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x1b3, 0x20, -0x10],
                's': [0x38, 0x2, 0x28],
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x18f, -0x2, -0x64],
                's': [0x8, 0x14, 0x38],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x156, -0x1, 0x34],
                's': [0x6, 0xa, 0x68],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0xcd],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0x6a],
                's': [0x2, 0x18, 0x19],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa
            }, {
                'p': [0x97, 0x2, -0x63],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x154, 0x0, -0x72],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6c, 0x0, 0x98],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6c, 0xc, 0x98],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xbf, 0x2, -0x70],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf6, 0x2, -0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x89, 0x2, 0x74],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x68, 0x2, 0xa0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x38, 0x0, 0xc6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x38, 0xc, 0xc6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x8c, 0x2, 0x6a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xf9, 0x2, -0x3b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xca, 0x0, -0x94],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x5c, 0x2, 0xa0],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0xcb, 0x2, -0x70],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x82, 0x22, 0x4f],
                's': [0xc, 0x2, 0x2a],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x88, 0x2, 0x69],
                's': [0x2, 0x2a, 0x8],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [-0x2f, 0x2c, 0x23],
                's': [0x1, 0x16, 0x22],
                'pe': 0x1,
                'c': 0x91765b,
                't': 0xa
            }, {
                'p': [-0xdb, -0x1, 0xb0],
                's': [0x4, 0x20, 0x4],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xdb, 0x1e, 0xb0],
                's': [0x1a, 0x1a, 0x1c],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xdb, 0x14, 0xb5],
                's': [0x2, 0x2, 0x8],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xdb, 0x13, 0xbc],
                's': [0x6, 0x6, 0x8],
                'pe': 0x1,
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xe0, 0x12, 0xb0],
                's': [0x6, 0x2, 0x2],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xe5, 0x11, 0xb0],
                's': [0x6, 0x4, 0x6],
                'pe': 0x1,
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x177, -0x1, 0x8a],
                's': [0x4, 0x20, 0x4],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x177, 0x1d, 0x8a],
                's': [0x1a, 0x1a, 0x1c],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x177, 0x13, 0x85],
                's': [0x2, 0x2, 0x8],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x177, 0x12, 0x7f],
                's': [0x6, 0x6, 0x8],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x173, 0xf, 0x8a],
                's': [0x6, 0x2, 0x2],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x16d, 0xe, 0x8a],
                's': [0x6, 0x4, 0x6],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x25, 0x1, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x31, 0x1, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2c, 0x1, -0x42],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x29, 0xd, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x82, 0x2, 0x33],
                's': [0x10, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x27, 0x2, -0x1f],
                's': [0x10, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0xe1],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1
            }, {
                'p': [-0x7d, -0x1, 0xaf],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x71, 0x0, 0xaf],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x9a, 0x2, -0x2e],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x3c, 0x2, 0x73],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xa9, 0x0, -0x96],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x5a, 0x0, 0xaf],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x18b, 0x0, 0x1c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xf6, 0x0, 0x70],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x1d, 0x1, 0xe1],
                's': [0x30, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x22, 0x8, 0xe1],
                's': [0x18, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x94, 0x9, -0x2d],
                's': [0x18, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x9a, 0x3, -0x2d],
                's': [0x30, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x8a, 0x2c, 0x3],
                's': [0x1, 0x16, 0x26],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa
            }, {
                'p': [0x75, 0x15, 0xb4],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0x75, -0x1, 0xb4],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x40, -0x1, 0xeb],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x40, 0x15, 0xeb],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0x2a, 0x17, 0x120],
                's': [0x1b, 0x1c, 0x18],
                'pe': 0x1,
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x25, -0x1, 0x109],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x5e, -0x1, 0x113],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x2a, -0x1, 0x121],
                's': [0x4, 0x1f, 0x4],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x13b, -0x1, 0xd],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x141, -0x1, -0x84],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1cb, 0xe, -0x3e],
                's': [0x1a, 0x1b, 0x23],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0xcf, 0x11, -0xbc],
                's': [0x1a, 0x19, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x66, 0x10, -0xb5],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x140, 0x13, 0xaf],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [0x55, 0x0, 0xbc],
                's': [0x2, 0x49, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4f, 0x47, 0xbc],
                's': [0xa, 0x2, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x46, 0x1f2],
                's': [0xa, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x45, 0xbc],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x1b, 0x0, 0x14c],
                's': [0x2, 0x49, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x15, 0x47, 0x14c],
                's': [0xa, 0x2, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x46, 0x14c],
                's': [0xa, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x45, 0x14c],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x9, 0x0, -0x68],
                's': [0x2, 0x49, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9, 0x47, -0x63],
                's': [0x2, 0x2, 0x8],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9, 0x45, -0x60],
                's': [0x2, 0x1, 0x8],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x9, 0x46, -0x60],
                's': [0x3, 0x2, 0x9],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x117, 0xf, 0xb8],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x141, 0xb, -0x84],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [0xe6, 0x2, 0x2],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf6, 0x2, 0x3e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf6, 0x26, 0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xbe, 0x26, 0x4c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7e, 0x26, 0x24],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xab, 0x26, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7e, 0x2, -0x3a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x37, 0x2, -0x1],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x54, 0x26, 0x38],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x4c, 0x26, 0x38],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x60, 0x26, 0x38],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x72, 0x27, 0x1d],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x51, 0x27, 0x2f],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0xb1b1b1,
                't': 0x5
            }, {
                'p': [-0x90, 0x27, -0x39],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x6d, 0x3, -0x35],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0xaaaaaa,
                't': 0x5
            }, {
                'p': [0x3c, 0x2, -0x3e],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0x8, 0x2, 0xb2],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [-0x78, 0x26, 0x1c],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x43, 0x27, -0x3b],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.05, -3.14],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x78, 0x28, 0x1c],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x35, 0x26, 0x37],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x35, 0x28, 0x37],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x50, 0x26, -0x3e],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x50, 0x28, -0x3e],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x8a, 0x26, -0xb],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x8a, 0x28, -0xb],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x8e, 0x27, -0x5],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [3.14, -1.04, 3.14],
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x59, 0x26, -0x3a],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0x46, 0x3, 0x6c],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.05, -3.14],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x56, 0x2, 0x42],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x56, 0x4, 0x42],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x6a, 0x3, 0x7f],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.05, -3.14],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x67, 0x3, 0x77],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x5c, 0x4, 0x3a],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x5c, 0x2, 0x3a],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xad, 0x2, -0x14],
                's': [0x1, 0x8, 0x7],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xc3, 0x2, -0x14],
                's': [0x1, 0x8, 0x7],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xb8, 0x9, -0x14],
                's': [0xb, 0x1, 0x4],
                'pe': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [0xb8, 0x8, -0x14],
                's': [0x15, 0x1, 0x6],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xb8, 0xa, -0x14],
                's': [0x2, 0x1, 0x1],
                'pe': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [0xb8, 0xb, -0x14],
                's': [0x16, 0xb, 0x1],
                'pe': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [0xb8, 0xc, -0x13],
                's': [0x14, 0x9, 0x1],
                'pe': 0x1,
                'c': 0x343434,
                'e': 0xffffff,
                't': 0x5
            }, {
                'p': [0xa4, 0x3, -0xd],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xeb, 0x3, 0x30],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.4, -3.14],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0x8f, 0x2, 0x54],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x8f, 0x2, 0x50],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xe1, 0x3, 0x44],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0x102, 0x1e, -0x64],
                's': [0x8, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x105, 0x1c, -0x64],
                's': [0x5, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x105, 0x1b, -0x64],
                's': [0x4, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x98, 0x1b, 0x94],
                's': [0x5, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x96, 0x1d, 0x94],
                's': [0x6, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x98, 0x1a, 0x94],
                's': [0x4, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xf2, 0x1a, 0x49],
                's': [0x4, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xf0, 0x18, 0x49],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xf0, 0x17, 0x49],
                's': [0x3, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xea, 0x16, -0x80],
                's': [0x1, 0x1, 0x4],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xea, 0x14, -0x7e],
                's': [0x3, 0x2, 0x4],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xea, 0x13, -0x7e],
                's': [0x2, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x132, 0x41, 0x3f],
                's': [0x8, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x135, 0x3f, 0x3f],
                's': [0x5, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x135, 0x3e, 0x3f],
                's': [0x4, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xc6, 0x0, 0xf2],
                's': [0x7b, 0x2a, 0x78],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xc6, 0x2a, 0xf2],
                's': [0x82, 0x2, 0x80],
                'c': 0x828282,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xa7, 0x0, 0x137],
                's': [0x1e, 0x3d, 0x12],
                'c': 0x707070,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x6, 0xba],
                's': [0x17, 0x1b, 0x17],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x14b, 0xa, 0xcd],
                's': [0x1f, 0x1e, 0x1e],
                'l': 0x1,
                'c': 0x739b3b,
                't': 0x5
            }, {
                'p': [-0x79, 0x0, 0x142],
                's': [0x7b, 0x3c, 0x78],
                'c': 0xc5a15e,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x79, 0x3c, 0x142],
                's': [0x82, 0x2, 0x7e],
                'c': 0x696969,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x3a, 0x23, 0x164],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3a, 0x24, 0x164],
                's': [0x1, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x24, 0x16a],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x24, 0x15e],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x30, 0x164],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x24, 0x164],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x70, 0x23, 0x105],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x70, 0x24, 0x106],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x6a, 0x24, 0x106],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x76, 0x24, 0x106],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x70, 0x30, 0x106],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x70, 0x24, 0x106],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x4d, 0x31, -0x83],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x4d, 0x32, -0x84],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x47, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x53, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x4d, 0x3e, -0x84],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x4d, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5f, 0x2f, -0xa3],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5e, 0x30, -0xa3],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x5d, 0x30, -0x9d],
                's': [0x4, 0xd, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5e, 0x3c, -0xa3],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5d, 0x30, -0xa9],
                's': [0x4, 0xd, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5d, 0x30, -0xa3],
                's': [0x4, 0xd, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x20, 0x0, -0x6d],
                's': [0x17, 0x2, 0x6],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x71, -0x1, 0x12a],
                's': [0x4, 0x1c, 0x4],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x72, 0x16, 0x12a],
                's': [0x1a, 0x1c, 0x1c],
                'c': 0x4f6b27,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x79, 0x0, 0x142],
                's': [0x87, 0x8, 0x85],
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x7c, 0xb, -0xc6],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0x1a2, 0xf, -0xb7],
                's': [0x1a, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x6e9636,
                't': 0x5
            }, {
                'p': [0xa3, 0x2, 0x1a6],
                's': [0x71, 0x4e, 0x74],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xa5, 0x0, 0x1a3],
                's': [0x86, 0x8, 0x7e],
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x55, 0x0, 0x1f2],
                's': [0x2, 0x49, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4f, 0x47, 0x1f2],
                's': [0xa, 0x2, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x46, 0xbc],
                's': [0xa, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x45, 0x1f2],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xa3, 0x50, 0x1a6],
                's': [0x7b, 0x3, 0x7d],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x6a, 0x36, 0x183],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x69, 0x35, 0x183],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x69, 0x42, 0x183],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x189],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x17d],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x183],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1c4],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x69, 0x35, 0x1c4],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x69, 0x42, 0x1c4],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1be],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1ca],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1c4],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xfd, -0x1, 0x178],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xfd, 0x16, 0x178],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0xe0, 0x13, 0xf8],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0xe0, -0x1, 0xf8],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x59, 0x0, 0x1d6],
                's': [0x68, 0x87, 0x74],
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x1e, -0x1, 0x188],
                's': [0x4, 0x1f, 0x4],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x1e, 0x17, 0x188],
                's': [0x1b, 0x1c, 0x18],
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x59, 0x87, 0x1d6],
                's': [0x6e, 0x3, 0x7a],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x59, 0x41, 0x1d6],
                's': [0x6f, 0x5, 0x7c],
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x1b, 0x0, 0x28b],
                's': [0x2, 0x49, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x15, 0x47, 0x28b],
                's': [0xa, 0x2, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x46, 0x28b],
                's': [0xa, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x45, 0x28b],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x6b, -0x1, 0x1f8],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x6b, 0x15, 0x1f8],
                's': [0x1b, 0x1c, 0x18],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x9c, 0x0, 0x26d],
                's': [0x7b, 0x54, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [-0x61, 0x0, 0x2ae],
                's': [0x7b, 0x34, 0x78],
                'l': 0x1,
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x61, 0x34, 0x2ae],
                's': [0x83, 0x4, 0x84],
                'l': 0x1,
                'c': 0x575757,
                't': 0x5
            }, {
                'p': [0x9c, 0x54, 0x26d],
                's': [0x83, 0x5, 0x84],
                'l': 0x1,
                'c': 0x575757,
                't': 0x5
            }, {
                'p': [0x1e9, 0x16, 0x13],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1a8, 0x12, 0x65],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1ab, 0xf, 0x1a],
                's': [0x1b, 0x1e, 0x1e],
                'l': 0x1,
                'c': 0x739b3b,
                't': 0x5
            }, {
                'p': [0x183, 0xd, 0xbb],
                's': [0x17, 0x1b, 0x17],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x1ca, 0x12, 0x45],
                's': [0x17, 0x18, 0x1b],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x2d7, 0x0, -0x29],
                's': [0x68, 0x4a, 0x4f],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2af, 0x4a, -0x29],
                's': [0x18, 0x30, 0x1a],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2d7, 0x4a, -0x29],
                's': [0x69, 0x6, 0x4c],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2af, 0x79, -0x29],
                's': [0x1f, 0x6, 0x20],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2af, 0x7f, -0x29],
                's': [0x16, 0xd, 0x13],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2d7, 0x50, -0x29],
                's': [0x69, 0x6, 0x36],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2d7, 0x54, -0x3d],
                's': [0x73, 0x6, 0x35],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2a9, 0x9a, -0x29],
                's': [0x2, 0x19, 0x2],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2a9, 0xab, -0x29],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2af, 0x7c, -0x1e],
                's': [0x16, 0x21, 0xb],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2af, 0x7c, -0x34],
                's': [0x16, 0x21, 0xb],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2d7, 0x54, -0x16],
                's': [0x73, 0x6, 0x33],
                'l': 0x1,
                'r': [0.53, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2d7, 0x50, -0x29],
                's': [0x69, 0xc, 0x22],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2a2, 0x0, -0x29],
                's': [0x2, 0x39, 0x20],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2b4, 0x10, -0x6a],
                's': [0x1a, 0x1f, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2b3, -0x1, -0x6a],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x288, 0x11, 0x8],
                's': [0x1a, 0x22, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x288, -0x1, 0x9],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1ca, 0x11, -0x8c],
                's': [0x1a, 0x1f, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x26d, 0x12, -0x9a],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x26d, -0x1, -0x9a],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xd0, 0x0, -0x178],
                's': [0x79, 0x45, 0x53],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2a2, 0x6c, -0x29],
                's': [0x1, 0x9, 0x9],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x2a1, 0x71, -0x29],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'c': 0x2d2d2d,
                't': 0x5
            }, {
                'p': [0x2a1, 0x71, -0x29],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'r': [2.09, 0x0, 0x0],
                'c': 0x2d2d2d,
                't': 0x5
            }, {
                'p': [0x2a2, 0x40, -0x29],
                's': [0x2, 0x13, 0x4],
                'l': 0x1,
                'c': 0x202020,
                't': 0x5
            }, {
                'p': [0x2f0, 0x12, 0xa7],
                's': [0x27, 0x18, 0x49e],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x263, 0x12, -0x191],
                's': [0x101, 0x1f, 0x1b],
                'l': 0x1,
                'c': 0x5c7a34,
                't': 0x5
            }, {
                'p': [0x250, 0x1f, -0x18b],
                's': [0x26, 0x22, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2e1, 0xf, -0x17f],
                's': [0x2f, 0x24, 0x31],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, -0xc8],
                's': [0x26, 0x1c, 0x26],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, -0x124],
                's': [0x26, 0x21, 0x26],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ec, 0x0, -0x8e],
                's': [0x4, 0x17, 0x84],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x2f6, 0x0, -0x12a],
                's': [0x4, 0x17, 0xdb],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x2df, -0x1, -0x11f],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1b, 0x0, 0xac],
                's': [0x5e2, 0x0, 0x4bc],
                'i': 0x4,
                'c': '#728447',
                't': 0x5
            }, {
                'p': [0x280, 0x0, -0x195],
                's': [0x133, 0x17, 0x5],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x21e, -0x1, -0x187],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x262, 0x12, -0xeb],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x262, -0x1, -0xeb],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1cc, -0x1, -0x144],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1cc, 0x12, -0x144],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ec, 0x0, 0x14b],
                's': [0x4, 0x17, 0x354],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1f5, 0x11, -0x71],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1cb, 0x9, -0x66],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1c3, 0x16, 0x5d],
                's': [0x1a, 0x18, 0x19],
                'l': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x1ab, 0xa, 0x3c],
                's': [0x1a, 0x1c, 0x1d],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1a8, 0xf, 0x87],
                's': [0x1e, 0x1c, 0x1b],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x1f5, 0x10, -0x8],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x4b662d,
                't': 0x5
            }, {
                'p': [0x212, 0x9, -0x34],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x253, 0x9, 0x6b],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1a2, 0xd, 0xb7],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1dd, 0x14, 0xa6],
                's': [0x1b, 0x1e, 0x1e],
                'l': 0x1,
                'c': 0x739b3b,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, 0x4d],
                's': [0x26, 0x1c, 0x2c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, 0x8c],
                's': [0x26, 0x1d, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x1b7, 0x8, 0x2e],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x2ea, 0x17, 0xfe],
                's': [0x26, 0x1c, 0x22],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x12, 0x15d],
                's': [0x26, 0x1d, 0x4a],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1c2, 0xe, -0xb1],
                's': [0x19, 0x1e, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0xa6, 0x0, -0x1ad],
                's': [0x6fa, 0x17, 0x5],
                'l': 0x1,
                'c': 0x5a4b3b,
                't': 0x5
            }, {
                'p': [-0x51, 0x13, -0x1a2],
                's': [0x4d1, 0x1f, 0x1b],
                'l': 0x1,
                'c': 0x5c7a34,
                't': 0x5
            }, {
                'p': [0x1b4, 0x10, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x13f, 0x11, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x1b5, -0x1, -0x191],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x13e, -0x1, -0x191],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x123, -0x1, -0x19c],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x173, -0x1, -0x19c],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x178, 0x1f, -0x1b7],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x123, -0x1, -0xea],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x123, 0x8, -0xed],
                's': [0x1f, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0xd0, 0x45, -0x178],
                's': [0x80, 0x3, 0x59],
                'l': 0x1,
                'c': 0x616161,
                't': 0x5
            }, {
                'p': [0x18f, -0x1, 0x2d],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x198, -0x1, -0x19f],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xf2, 0x2f, -0x14e],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xad, 0x2f, -0x14e],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xad, 0x2e, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xad, 0x3b, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf2, 0x3b, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf2, 0x2e, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xa7, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xb3, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xec, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf8, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf2, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xad, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x18, 0x70, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x42, 0x1d6],
                's': [0xe, 0x39, 0x3],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x1e, 0x70, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x74, 0x1d4],
                's': [0x4, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x18, 0x65, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1e, 0x65, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x65, 0x1d4],
                's': [0x4, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x6c, 0x1d4],
                's': [0x4, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x5a, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x61, 0x1d4],
                's': [0x8, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x19, 0x4f, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x56, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x4f, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x52, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x19, 0x44, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1c, 0x44, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x25, 0x6c, 0x1d6],
                's': [0x6, 0x3, 0x3],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x25, 0x4d, 0x1d6],
                's': [0x6, 0x3, 0x3],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [0x41, 0x1, 0x28e],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x20, 0x0, 0x32e],
                's': [0x4f, 0x87, 0x74],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x20, 0x87, 0x32e],
                's': [0x57, 0x3, 0x7c],
                'l': 0x1,
                'c': 0x5c5c5c,
                't': 0x5
            }, {
                'p': [0x58, -0x1, 0x2c5],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x5a, 0x11, 0x2c4],
                's': [0x1b, 0x1c, 0x18],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x21, -0x1, 0x302],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x22, 0x10, 0x302],
                's': [0x1b, 0x1c, 0x18],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x73, -0x2, 0x3be],
                's': [0x71, 0x41, 0x74],
                'l': 0x1,
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x73, 0x3f, 0x3be],
                's': [0x7c, 0x5, 0x7e],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x5
            }, {
                'p': [-0x3f, -0x12, 0x3a0],
                's': [0x7b, 0x70, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [-0x3f, 0x5d, 0x3a0],
                's': [0x83, 0x4, 0x7f],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9b, -0x4b, 0x4e3],
                's': [0x4f, 0x121, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x97, -0x1f, 0x460],
                's': [0x6c, 0x8e, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x134, 0x0, 0x460],
                's': [0x4f, 0xdc, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x10d, -0x1f, 0x3f0],
                's': [0x6c, 0x8e, 0x71],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x1b5, 0x0, 0x2eb],
                's': [0x2a5, 0x17, 0x5],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x261, 0x15, 0x2ef],
                's': [0x13b, 0x18, 0x2c],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x10d, 0x15, 0x2ef],
                's': [0x176, 0x1b, 0x35],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x20d, 0x14, 0x2e8],
                's': [0x26, 0x1d, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x2e8, 0x12, 0x2e3],
                's': [0x2b, 0x23, 0x2e],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x14d, 0x16, 0x2e7],
                's': [0x26, 0x20, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x27c, 0x14, 0x2e8],
                's': [0x26, 0x1d, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x2ea, 0x17, 0x22d],
                's': [0x26, 0x1c, 0x22],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1bb, 0x18, 0x102],
                's': [0x17, 0x18, 0x17],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x167, 0xb, 0xc5],
                's': [0x18, 0x18, 0x1e],
                'l': 0x1,
                'c': 0x618234,
                't': 0x5
            }, {
                'p': [0x139, 0xd, 0xf5],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0x171, 0x3c, 0x143],
                's': [0x84, 0x3, 0x82],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x171, -0x4, 0x143],
                's': [0x7b, 0x40, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [0xfc, 0xc, -0xd1],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4b612b,
                't': 0x5
            }, {
                'p': [0xd0, -0x1, -0x172],
                's': [0x89, 0xa, 0x59],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x175, 0x12, -0x103],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0xf7, 0x18, 0x2e7],
                's': [0x26, 0x20, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x23b, -0x39, 0x4ee],
                's': [0x4f, 0xdc, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x233, 0xd, 0x35],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1b7, 0x5, 0xa],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x120, 0x9, -0xb9],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x151, 0xe, -0xb7],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x668c3c,
                't': 0x5
            }, {
                'p': [0xa4, 0x6, -0xdd],
                's': [0x19, 0x1e, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0xd5, 0xc, -0xfa],
                's': [0x15, 0x19, 0x15],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x170, 0xf, -0xb7],
                's': [0x1a, 0x1b, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x188, 0xb, -0xc2],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x567533,
                't': 0x5
            }, {
                'p': [0x13c, 0x5, -0xcb],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x567533,
                't': 0x5
            }, {
                'p': [0x1b7, 0x8, 0x53],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0xd4, 0x12, -0x13f],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x33, 0x1f, -0x1b7],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x6f, 0x11, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x19, -0x1, -0x19c],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x6f, -0x1, -0x191],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x49, -0x1, -0x197],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x5c, 0x11, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xaf, 0x1b, -0x1ab],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xaf, 0x1b, -0x1ab],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x5a, -0x1, -0x190],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xae, -0x1, -0x1a2],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x43, 0x16, -0x112],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x42, -0x1, -0x111],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xc, 0x32, -0x84],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xc, 0x31, -0x83],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xc, 0x3e, -0x84],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x12, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x6, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xc, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3f, 0xa, -0xb5],
                's': [0x19, 0x1e, 0x19],
                'l': 0x1,
                'c': 0x688c40,
                't': 0x5
            }, {
                'p': [0x20, 0x1a, -0x7e],
                's': [0x10, 0xd, 0x16],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x7d, -0x1, 0x2],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x80, 0x0, 0x59],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x58, -0x1, 0x52],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x8e, -0x1, 0x80],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x25, -0x1, -0x37],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xef, 0x3, -0x42],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0x26, 0x3, 0x9d],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0xf7, -0x1, -0x19e],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x155, -0x1, -0x19d],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xfc, 0xf, -0x1ab],
                's': [0x33, 0x3a, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x174, 0xf, -0x19b],
                's': [0x30, 0x29, 0x23],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xd4, 0xa, -0xb1],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x9c, -0x1, 0xeb],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x9d, 0xf, 0xeb],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [0xa5, -0x1, -0xd5],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xcb, -0x1, -0xba],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x7c, -0x1, -0xbc],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x11d, -0x1, -0xb9],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xfa, -0x1, -0xca],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x7d, -0x1, -0x69],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x106, -0x1, -0x11],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xf5, -0x1, 0xbe],
                's': [0x4, 0x2, 0x6],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x188, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x109, -0x1, -0x41],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x6d, -0x1, -0x92],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xd5, -0x1, -0x13e],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xd5, -0x1, -0xf8],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x37, -0x1, -0x197],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x18, 0x1, 0x18b],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [3.14, -1.22, 3.14]
            }, {
                'p': [-0x103, 0x11, 0xe7],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0xcb, 0x12, 0x123],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0xcb, -0x1, 0x124],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x9b, -0x4b, 0x4e3],
                's': [0x4, 0x155, 0x4],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x134, 0x55, 0x460],
                's': [0x4, 0xbd, 0x2],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x66, -0x1, -0xb4],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x40, -0x1, -0xb4],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x11d, -0x1, -0x4e],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x27, -0x1, -0x8d],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x15e, -0x1, 0x5],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x1ab, -0x1, -0x88],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x147, -0x1, 0x9a],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xc8, -0x1, 0x79],
                's': [0x4, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xb, 0x0, -0x4b],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x85, 0x0, 0xf],
                's': [0x1, 0xf, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x85, 0x0, 0xb],
                's': [0x1, 0xf, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x2f, 0x2, 0x16],
                's': [0x4, 0x24, 0x4c],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0xfd, 0x10, -0xb0],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0xb6, 0x0, -0xf5],
                's': [0x79, 0x33, 0x53],
                'c': 0xcfcfcf,
                't': 0x5
            }, {
                'p': [-0xd1, -0x1, -0xb0],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xb7, 0x42, -0x3a],
                's': [0x4, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xb9, 0x40, -0x3a],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xb9, 0x3f, -0x3a],
                's': [0x3, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xb6, 0x33, -0xf5],
                's': [0x82, 0x3, 0x5f],
                'c': 0x6b6b6b,
                't': 0x5
            }, {
                'p': [-0xad, 0x1f, -0xcb],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xb3, 0x1f, -0xcb],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xa7, 0x1f, -0xcb],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xad, 0x1f, -0xcb],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xad, 0x1e, -0xcb],
                's': [0xe, 0x1, 0x4],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xad, 0x2b, -0xcb],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x188, 0x0, 0x2eb],
                's': [0x2a5, 0x17, 0x5],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x181, 0x15, 0x2ef],
                's': [0x2b3, 0x1b, 0x35],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [-0x195, 0x0, -0x33],
                's': [0x7b, 0x3c, 0x78],
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [-0x193, 0x3c, -0x33],
                's': [0x82, 0x2, 0x82],
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [-0x13c, 0xf, 0xb],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0x140, -0x1, 0xad],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x2c3, 0x13, 0xa5],
                's': [0x2c, 0x1f, 0x514],
                'l': 0x1,
                'c': 0x5c7a34,
                't': 0x5
            }, {
                'p': [-0x2b6, 0x0, 0xb7],
                's': [0x1, 0x17, 0x4b8],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x157, 0x28, -0x53],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x158, 0x34, -0x53],
                's': [0x4, 0x1, 0xd],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x157, 0x27, -0x53],
                's': [0x4, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x158, 0x28, -0x59],
                's': [0x4, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x158, 0x28, -0x4d],
                's': [0x4, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x158, 0x28, -0x53],
                's': [0x4, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x13b, 0x5, -0x2d],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x678e30,
                't': 0x5
            }, {
                'p': [-0x173, -0x19, 0x10],
                's': [0x1b, 0x69, 0xf],
                'c': 0x646464,
                't': 0x5
            }, {
                'p': [-0x136, 0x10, -0xa6],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x136, -0x1, -0xa7],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x122, 0xb, -0xd5],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0x10e, 0x10, -0x112],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x10d, -0x1, -0x10f],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x14e, 0x10, -0xd8],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x148, -0x1, -0xdb],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x2a, 0x0, 0x19],
                's': [0x6, 0x9, 0x4e],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x11, 0x2, -0x7e],
                's': [0xe, 0x25, 0x16],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x20, 0x2, -0x77],
                's': [0x10, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x2f, 0x2, -0x7e],
                's': [0xe, 0x25, 0x16],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xff, -0x1, 0xe6],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x113, -0x1, 0xb7],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x20, 0x2a, -0x84],
                's': [0x1d, 0x12, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x11, 0x2a, -0x84],
                's': [0x1, 0x12, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x20, 0x2a, -0x84],
                's': [0x1, 0x12, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x20, 0x3c, -0x84],
                's': [0x1f, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xb, 0x2a, -0x74],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x2a, -0x74],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x2a, -0x83],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0xb, 0x2a, -0x83],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0xb, 0x2a, -0x7b],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x2a, -0x7c],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x2e, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x12, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x1b, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x24, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x20, 0x31, -0x74],
                's': [0x2a, 0x1, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x31, -0x7c],
                's': [0x2, 0x1, 0xe],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0xb, 0x31, -0x7b],
                's': [0x2, 0x1, 0xe],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [-0xb7, 0x24, -0x3a],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x132, 0x24, 0x40],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x2f, 0x2a, -0x84],
                's': [0x1, 0x12, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x154, -0x1, -0xb6],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x171, -0x1, -0xb6],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1a3, -0x1, -0xb7],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x187, -0x1, -0xc1],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x46, 0x2, 0xa0],
                's': [0x3, 0x6, 0x6],
                'l': 0x1,
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [-0x46, 0x7, 0xa2],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': 0x878787,
                't': 0x5
            }, {
                'p': [0x62, 0x2, -0xd4],
                's': [0xe, 0x64, 0x19],
                'c': 0x707070,
                't': 0xb
            }, {
                'p': [-0x18d, 0x10, -0x80],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x185, -0x1, -0x80],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x2b1, 0xf, -0x133],
                's': [0x30, 0x29, 0x3a],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x2b1, 0x11, -0xd0],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x23e, 0x11, -0x19d],
                's': [0x30, 0x29, 0x23],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x194, 0x11, -0xb0],
                's': [0x1a, 0x1f, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x195, -0x1, -0xb1],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x1cc, 0xf, -0x19b],
                's': [0x24, 0x2b, 0x23],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x171, 0x27, 0x107],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x171, 0x26, 0x106],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x171, 0x33, 0x107],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x177, 0x27, 0x107],
                's': [0x1, 0xc, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x16b, 0x27, 0x107],
                's': [0x1, 0xc, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x171, 0x27, 0x107],
                's': [0x1, 0xc, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x174, 0x0, 0x62],
                's': [0x68, 0x6a, 0x74],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x174, 0x69, 0x62],
                's': [0x73, 0x3, 0x7e],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x16e, 0x11, 0x2e1],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x1e9, 0x11, 0x2e1],
                's': [0x42, 0x24, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xcd, 0x11, 0x2e1],
                's': [0x42, 0x24, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x270, 0x11, 0x2e1],
                's': [0x42, 0x27, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x2b1, 0x11, 0xca],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x2b1, 0x11, 0x13e],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x132, 0x17, 0xcd],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x132, -0x1, 0xcd],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x122, 0xc, 0xf3],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x84af48,
                't': 0x5
            }, {
                'p': [-0x120, -0x1, 0xf9],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x7e, 0x0, 0x3c],
                's': [0x2, 0x25, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x7e, 0x0, 0x62],
                's': [0x2, 0x25, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xa1, -0x1, 0xcd],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x122, -0x1, -0x31],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xee, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xb6, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x128, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x3f1, 0xa, 0x86],
                's': [0x41, 0x4c, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x3e3, 0x15, -0x182],
                's': [0x41, 0x35, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x22b, 0x15, -0x22f],
                's': [0x89, 0x36, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x39c, 0xa, 0x25e],
                's': [0x4a, 0x4a, 0x57],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [-0x121, -0x7, 0x135],
                's': [0x52, 0x6a, 0x56],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x351, -0x8, -0x208],
                's': [0x41, 0x54, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x295, -0x4, 0xa5],
                's': [0x7b, 0x40, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [0x295, 0x3c, 0xa5],
                's': [0x84, 0x4, 0x83],
                'l': 0x1,
                'c': 0x616161,
                't': 0x5
            }, {
                'p': [-0x121, 0x63, 0x135],
                's': [0x59, 0x4, 0x5d],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x159, 0x12, 0xf7],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x1af, 0xe, 0xa6],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x10d, 0x4a, 0x10a],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x10d, 0x49, 0x109],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x10d, 0x56, 0x10a],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x107, 0x4a, 0x10a],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x113, 0x4a, 0x10a],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x10d, 0x4a, 0x10a],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x3e3, 0x11, -0x99],
                's': [0x41, 0x44, 0x2f],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [-0x88, 0x3, -0x50],
                's': [0x7, 0x20, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x82, 0x3, -0x50],
                's': [0x7, 0x1d, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x7c, 0x3, -0x50],
                's': [0x7, 0x1a, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x76, 0x3, -0x50],
                's': [0x7, 0x17, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x70, 0x3, -0x50],
                's': [0x7, 0x14, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x6a, 0x3, -0x50],
                's': [0x7, 0x11, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x64, 0x3, -0x50],
                's': [0x7, 0xe, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x5e, 0x3, -0x50],
                's': [0x7, 0xb, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x58, 0x3, -0x50],
                's': [0x7, 0x8, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x52, 0x3, -0x50],
                's': [0x7, 0x5, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x4c, 0x2, -0x50],
                's': [0x7, 0x3, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x66, 0x2, -0x50],
                's': [0x48, 0x24, 0x18],
                'i': 0x9,
                'v': 0x1,
                't': 0x5,
                'd': 0x2
            }, {
                'p': [-0x7d, 0x3, 0x36],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 1.04, 0x0],
                'c': 0xaaaaaa,
                't': 0x5
            }, {
                'p': [0xfb, 0x3, 0x62],
                's': [0x7, 0x20, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xf4, 0x3, 0x62],
                's': [0x7, 0x1d, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xed, 0x3, 0x62],
                's': [0x7, 0x1a, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xe6, 0x3, 0x62],
                's': [0x7, 0x17, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xdf, 0x3, 0x62],
                's': [0x7, 0x14, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xd8, 0x3, 0x62],
                's': [0x7, 0x11, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xd1, 0x3, 0x62],
                's': [0x7, 0xe, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xca, 0x3, 0x62],
                's': [0x7, 0xb, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xc3, 0x3, 0x62],
                's': [0x7, 0x8, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xbc, 0x3, 0x62],
                's': [0x7, 0x5, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xb5, 0x2, 0x62],
                's': [0x7, 0x3, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xd4, 0x2, 0x62],
                's': [0x54, 0x24, 0x18],
                'i': 0x9,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x43],
                's': [0x1, 0x14, 0x17],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x7d],
                's': [0x1, 0x14, 0x17],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x13f, 0x47, 0x43],
                's': [0x3, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x5c, 0x43],
                's': [0x2, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x37],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x4f],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x43],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x13f, 0x47, 0x7d],
                's': [0x3, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x5c, 0x7d],
                's': [0x2, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x89],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x71],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x7d],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x89, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x77, 0x0, -0xf],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2f, -0x1, 0x165],
                's': [0x26, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x74, -0x1, 0x113],
                's': [0x29, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x46, 0x2, 0x165],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -1.23, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [-0xc, 0x2, 0xf9],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [-0x31, -0x1, 0x109],
                's': [0x15, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x1d, -0x1, 0x165],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x29, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x3a, 0x9, 0x171],
                's': [0x28, 0x3, 0x1],
                'l': 0x1,
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x29, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x4b, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x4b, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x3, 0x9, 0x171],
                's': [0x28, 0x3, 0x1],
                'l': 0x1,
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [-0xe, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x14, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [-0xe, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x14, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x3a, 0x1, 0x17e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1f, 0x0, 0x171],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x5, 0x1, 0x179],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2f, 0x1, 0x17a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x22, 0x1, 0x170],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x59, 0x0, 0x175],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x49, 0x2, 0x196],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [3.14, -1.39, 3.14],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [0x4b, 0x2, 0x11a],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -1.4, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [0x5a, 0x0, 0x10a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x64, -0x1, 0x15c],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xa4, -0x1, 0x156],
                's': [0x2, 0x1b, 0x30],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x85, 0x0, 0x124],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x18, -0x1, 0x1ac],
                's': [0xa8, 0xd, 0x77],
                'v': 0x1,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, -0x1, 0x16b],
                's': [0x25, 0xd, 0xe],
                'v': 0x1,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x14, 0x1, 0x174],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xbc, -0x1, 0x153],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xbd, 0x16, 0x155],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0xdd, -0x1, 0x15f],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x121, -0x1, 0x16e],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x71, 0x3, -0x25],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xa7, 0x3, -0x4b],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xa4, 0x27, -0xd],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xf9, 0x27, 0x2f],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0x8e, 0x2, 0x19],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xaf, 0x2, -0x1c],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0xaf, 0x4, -0x1c],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xf3, 0x2, 0x8],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x81, 0x2, 0xc],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x8b, 0x2, 0x4a],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x8b, 0x2, 0x51],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x9e, 0x26, -0x16],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0x9e, 0x28, -0x16],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xca, 0x26, 0x4d],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xd1, 0x26, 0x4d],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x91, 0x2, -0x16],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0x91, 0x4, -0x16],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xbc, 0x8, 0x58],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xbc, 0xa, 0x58],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x5d, 0xe, -0x46],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x5d, 0x10, -0x46],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0x91, 0x27, 0x69],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 1.39, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xa8, 0x26, 0x6a],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x23, 0x1, 0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x17, 0x1, 0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1d, 0xd, 0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x5c, 0x20, -0x2],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x22, -0x2],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x1f, -0x2],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x5c, 0x4a, -0x2],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x48, -0x2],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x47, -0x2],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xb7, 0x4a, 0x27],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x48, 0x27],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x47, 0x27],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xb7, 0x22, 0x27],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x110, 0x20, 0x27],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x1f, 0x27],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x110, 0x22, 0x27],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x20, 0x27],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x110, 0x1f, 0x27],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x126, 0x2, 0x17],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x120, 0x3, 0x9],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.4, -3.14],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0xa3, 0x20, -0x2],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xa3, 0x22, -0x2],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xa3, 0x1f, -0x2],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x1c, 0x1, 0x131],
                's': [0x48, 0x32, 0x3f],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x59, 0x26, -0x8],
                's': [0x3d, 0x26, 0x41],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xb8, 0x2, 0x25],
                's': [0x3d, 0x21, 0x3b],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x16f, 0x0, 0x20],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [-0xd7, 0x0, 0x23],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [-0x64, 0xe, 0x46],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x64, 0x2, 0x46],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0x23, -0x1, -0x12],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x23, -0x1, -0x1c],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x23, -0x1, -0x17],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x1d, -0x1, -0x1c],
                's': [0x5, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x1d, -0x1, -0x12],
                's': [0x5, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x1d, -0x1, -0x17],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x7f, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x7f, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x7f, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x6d, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x79, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x73, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x67, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x79, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x6d, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x73, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x73, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x61, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x61, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5b, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x55, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x55, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x67, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5b, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5b, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x67, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0x8d],
                's': [0x4, 0x1a, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0x76],
                's': [0x4, 0x1a, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xdc, 0x52, 0x2b],
                's': [0xb2, 0x4, 0x98],
                'r': [0.09, 0x0, 0x0],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x54, -0x1],
                's': [0x4, 0x3, 0x2e],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x57, -0xd],
                's': [0x4, 0x3, 0x16],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x12e, 0x26, 0x5b],
                's': [0x4, 0x26, 0x26],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x4c, 0x5b],
                's': [0x4, 0x3, 0x26],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x42, 0x51],
                's': [0x4, 0xf, 0x22],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x57, -0xe],
                's': [0x4, 0x1, 0x4],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x38, 0x1, 0x73],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x38, 0x6, 0x6f],
                's': [0x1, 0x3, 0x1],
                'c': 0x878787,
                't': 0x5
            }, {
                'p': [0x38, 0x1, 0x6d],
                's': [0x3, 0x6, 0x6],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x28, 0xa, 0x30],
                's': [0x18, 0x2, 0x64],
                'pe': 0x1,
                'c': 0x2c3f55,
                't': 0x5
            }, {
                'p': [0x28, 0x25, 0x30],
                's': [0x1c, 0x2, 0x64],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x26],
                's': [0x1b, 0x4, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x16],
                's': [0x1b, 0x4, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x22, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x22, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x33, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x2e, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x33, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x2e, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x28, 0xc, 0x61],
                's': [0x18, 0x19, 0x2],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x28, 0x6, 0x3b],
                's': [0x5, 0x4, 0x55],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x28, 0x6, -0x1],
                's': [0x18, 0x4, 0x3],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x2f, 0xc, -0x2],
                's': [0xc, 0x19, 0x2],
                'pe': 0x1,
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x1a, 0xc, 0x3],
                's': [0x2, 0x19, 0xc],
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x28, 0x5, -0x1],
                's': [0x1b, 0x1, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x6e],
                's': [0x1b, 0x4, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x33, 0x1, 0x6e],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0x6e],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x32, 0x7, -0x2],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': 0xff4b00,
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x1e, 0x7, -0x2],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#ff4b00',
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x28, 0x5, 0x66],
                's': [0x18, 0x1c, 0x4],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x5, 0x76],
                's': [0x18, 0x18, 0x4],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x6, 0x6f],
                's': [0x11, 0x6, 0xe],
                'c': '#595959',
                't': 0x5
            }, {
                'p': [0x28, 0x5, 0x79],
                's': [0x19, 0x6, 0x3],
                'c': '#5c5c5c',
                't': 0x5
            }, {
                'p': [0x28, 0x11, 0x7a],
                's': [0x16, 0xa, 0x1],
                'l': 0x1,
                'c': '#22272d',
                't': 0x5
            }, {
                'p': [0x28, 0xb, 0x79],
                's': [0x18, 0x6, 0x2],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x11, 0x79],
                's': [0x18, 0xb, 0x2],
                'l': 0x1,
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x11, 0x79],
                's': [0x18, 0xb, 0x2],
                'v': 0x1,
                'c': '#213041',
                't': 0x5
            }, {
                'p': [0x32, 0xc, 0x7a],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'e': 0xffd100,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x1e, 0xc, 0x7a],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'e': 0xffd100,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x28, 0xc, 0x7a],
                's': [0xe, 0x4, 0x2],
                'c': '#6e6e6e',
                't': 0x5
            }, {
                'p': [0x28, 0x14, 0x76],
                's': [0x1c, 0x4, 0x1],
                'c': '#6e6e6e',
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x56],
                's': [0x16, 0x6, 0x16],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x1e, 0xc, 0x64],
                's': [0x1, 0x19, 0x1],
                'c': '#666666',
                'e': 0x181818,
                't': 0x5
            }, {
                'p': [0x32, 0xc, 0x64],
                's': [0x1, 0x19, 0x1],
                'c': '#666666',
                'e': 0x181818,
                't': 0x5
            }, {
                'p': [0x28, 0x8, 0x31],
                's': [0x1c, 0x2, 0x62],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x2c3f55,
                't': 0x5
            }, {
                'p': [0x28, 0x14, 0x71],
                's': [0x19, 0x8, 0x8],
                'c': '#22272d',
                't': 0x5
            }, {
                'p': [0x28, 0xc, 0x6f],
                's': [0x18, 0x12, 0xe],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x2d, 0xc, 0x2e],
                's': [0x6, 0x2, 0x5c],
                'l': 0x1,
                'c': 0x6b5946,
                't': 0x2
            }, {
                'p': [0x2f, 0xc, -0x3],
                's': [0x4, 0x19, 0x2],
                'i': 0x3,
                't': 0x2,
                'd': 0x3
            }, {
                'p': [0xb, 0x1, 0x16],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [0x38, 0x1, -0xc],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [0x17, 0x1, -0xc],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [0x23, 0xc, 0x57],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x1b, 0xa, 0x4e],
                's': [0x2, 0x1b, 0x28],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x1b, 0xa, 0x13],
                's': [0x2, 0x1b, 0x2a],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x35, 0xa, 0x59],
                's': [0x2, 0x1b, 0x12],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x35, 0xa, 0x1e],
                's': [0x2, 0x1b, 0x40],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x35, 0x20, 0x47],
                's': [0x1, 0x5, 0x12],
                'c': '#ffffff',
                't': 0xa
            }, {
                'p': [0x1b, 0x20, 0x31],
                's': [0x1, 0x5, 0x12],
                'c': '#ffffff',
                't': 0xa
            }, {
                'p': [0x35, 0xa, 0x47],
                's': [0x2, 0x2, 0x12],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x1b, 0xa, 0x31],
                's': [0x2, 0x2, 0x12],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x12, 0x1, 0x4b],
                's': [0x6, 0x2, 0x5c],
                'c': 0x846c53,
                't': 0x2
            }, {
                'p': [0xb, 0x1, 0x4a],
                's': [0x6, 0x2, 0x5c],
                'c': 0x755f47,
                't': 0x2
            }, {
                'p': [0x4, 0x1, 0x4c],
                's': [0x6, 0x2, 0x5c],
                'c': 0x503f2e,
                't': 0x2
            }, {
                'p': [0x6, 0x3, 0x4b],
                's': [0x6, 0x2, 0x5c],
                'c': 0x755f47,
                't': 0x2
            }, {
                'p': [0xe, 0x3, 0x4c],
                's': [0x6, 0x2, 0x5c],
                'c': 0x755f47,
                't': 0x2
            }, {
                'p': [0xa, 0x5, 0x4c],
                's': [0x6, 0x2, 0x5c],
                'c': 0x6b5946,
                't': 0x2
            }, {
                'p': [0xb, 0x1, 0x7d],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [-0x22, 0x0, 0x3d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x25, 0x0, -0x3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x1a, 0x0, 0x25],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x1a, 0x0, -0x2c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x27, 0x0, -0x60],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0xe, 0x0, -0x69],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x5, 0x0, -0x66],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x6, 0x0, -0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x24, -0x1, -0x65],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x3c, 0x0, -0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x5a, 0x0, -0x80],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x63, 0x0, -0x88],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.79, 0x0],
                'c': '#d1f777'
            }, {
                'p': [0x6a, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x6a, 0x0, -0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x55, 0x0, -0x1d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x83, -0x1, -0x16],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x54, 0x0, 0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x83, 0x0, 0x1b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x53, 0x0, 0x3b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x56, 0x0, 0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x9e, 0x0, -0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x5a, 0x0, 0xa6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x57, 0x0, 0xee],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1b, 0x0, 0xed],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x21, 0x0, 0xca],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1f, 0x0, 0x95],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x19, 0x0, 0x7a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x45, 0x0, 0xae],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x60, 0x0, 0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x43, 0x0, 0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xaa, 0x0, 0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x93, 0x0, 0xae],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd8, 0x0, 0xb4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd8, 0x0, 0xac],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf7, 0x0, 0xc6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf7, 0x0, 0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb4, 0x0, 0x44],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x97, 0x0, 0x45],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x97, 0x0, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf3, 0x0, 0x32],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf1, 0x0, 0x4f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd7, 0x0, -0x5],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb8, 0x0, -0x2e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x101, 0x0, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xfe, 0x0, -0x80],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xda, 0x0, -0x58],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xc4, 0x0, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xcc, 0x0, -0x8f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x86, 0x0, -0x95],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x63, 0x0, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x9e, 0x0, -0x64],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x23, 0x0, -0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x41, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1c, 0x0, 0x134],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x67, 0x0, 0x117],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x6d, 0x0, 0x12e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x55, 0x0, 0x152],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x5e, 0x0, 0x16a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x90, 0x0, 0x161],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xa0, 0x0, 0x143],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1a, -0x1, 0x17d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x21, -0x1, 0x19d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x54, -0x1, 0x19e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x85, 0x0, 0x45],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x84, 0x0, 0x70],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x97, 0x0, 0x83],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xbd, 0x0, 0x84],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xe5, 0x0, 0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x10f, 0x0, 0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x11e, 0x0, 0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x14e, 0x0, 0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x134, 0x0, 0x72],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x134, 0x0, 0x3b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x15d, 0x0, 0x26],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x173, 0x0, 0x87],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x18b, 0x0, 0x74],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x187, 0x0, 0x16],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x18c, 0x0, -0x1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x133, 0x0, -0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x128, 0x0, -0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x104, 0x0, -0x23],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x104, 0x0, -0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x18a, 0x0, -0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x194, 0x0, -0x31],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x1ad, 0x0, -0x3c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x195, 0x0, -0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x124, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xce, 0x0, -0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xb1, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xb1, 0x0, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xa, 0x0, -0x6c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x40, 0x0, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x11f, 0x0, -0x36],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x6c, -0x1, 0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x63, -0x1, 0x98],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x7c, 0x0, 0x97],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x6e, 0x0, 0x90],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x5a, 0x0, 0xb3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x58, 0x0, 0x108],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1f, 0x0, 0x109],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x20, 0x0, 0xff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x21, 0x0, 0xdf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x69, -0x1, 0x52],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x6d, 0x0, 0xa],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x5f, 0x0, -0x3e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x4a, -0x1, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x60, 0x0, -0x67],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x88, 0x0, -0x94],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x63, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.61, 0x0],
                'c': '#d1f777'
            }, {
                'p': [0xaa, 0x0, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xd3, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xf3, 0x0, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x106, 0x0, -0x98],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x134, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x11f, 0x0, -0x59],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x145, 0x0, -0x24],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x14d, 0x0, -0x69],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x133, 0x0, -0x40],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x167, 0x0, -0x4c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x16c, 0x0, -0x1e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x178, 0x0, 0x37],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x166, 0x0, 0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x182, 0x0, 0x9b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x16b, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x17a, 0x0, -0x94],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x1a7, 0x0, -0x94],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x1ad, 0x0, -0x69],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x195, 0x0, -0x62],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x188, 0x0, -0x79],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x187, 0x0, -0x63],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x187, 0x0, -0x4f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x154, 0x0, 0x0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x153, 0x0, 0x37],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x152, 0x0, 0x56],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x83, 0x0, 0xc8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd5, 0x0, 0xc8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xab, 0x0, 0xac],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xca, 0x0, 0x83],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb4, 0x0, 0x6b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd3, 0x0, 0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd7, 0x0, 0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x11c, 0x0, 0x66],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x104, 0x0, 0x66],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x120, 0x0, 0x8e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x121, 0x0, 0xbf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x108, 0x0, 0xca],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xfe, 0x0, 0xb3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x102, 0x0, 0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb7, 0x2, 0x2e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb9, 0x0, 0x6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x100, 0x0, 0xf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xff, 0x0, 0x26],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x120, 0x0, 0x24],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x11f, 0x0, 0x1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x11f, 0x0, -0x1e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x102, 0x0, -0x51],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xea, 0x0, -0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd0, 0x0, -0x2c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xc5, 0x0, -0x58],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x10c, 0x0, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x116, 0x0, -0x8b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xa5, 0x0, -0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x5b, 0x0, -0x86],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x2f, 0x0, 0x15e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x71, 0x55, -0x10],
                's': [0x89, 0xa, 0x9f],
                'i': 0xc,
                'l': 0x1
            }, {
                'p': [0xdb, 0x55, 0x2b],
                's': [0xaa, 0xa, 0x92],
                'i': 0xc,
                'l': 0x1
            }, {
                'p': [0xd0, 0x32, -0x4e],
                's': [0x5d, 0xa, 0x57],
                'i': 0xc,
                'l': 0x1
            }, {
                'p': [-0x69, 0x32, 0x77],
                's': [0x57, 0xa, 0x63],
                'i': 0xc,
                'l': 0x1
            }]
        }, {
            'name': 'Sandstorm',
            'ambInd': 0x3,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x0,
            'skyDomeCol0': '#7bd7ff',
            'skyDomeCol1': '#f7d4b4',
            'skyDomeCol2': '#dce8ed',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0xa29290,
            'light': 0xffffff,
            'sky': 0xdce8ed,
            'fog': 0xbb9999,
            'fogD': 633.4396002067896,
            'dthY': -0x64,
            'modes': [0x0],
            'camPos': [-0x7c, 0x3e, -0x10d],
            'spawns': [
                [0x0, 0xd, -0x3, 0x0],
                [-0x4d, 0x21, -0x15b, 0x0, 0x1],
                [0x116, 0x21, 0x7a, 0x0, 0x2],
                [-0x69, 0x30, 0x56, 0x0, 0x1],
                [0xf1, 0x21, -0x142, 0x0, 0x1],
                [-0x2a, 0x30, 0x30, 0x0],
                [-0x27, 0x21, -0xd2, 0x0, 0x3]
            ],
            'ambO': 0.7,
            'ambS': 0x5,
            'shadLength': 0x183,
            'shadWidth': 0x1a9,
            'objects': [{
                'p': [-0x5, 0xc, 0x0],
                's': [0x5e, 0x1, 0x72],
                't': 0x1
            }, {
                'p': [-0x43, 0xc, 0x0],
                's': [0x1e, 0x1, 0x2c],
                't': 0x1
            }, {
                'p': [-0xb2, 0x20, 0x0],
                's': [0x7a, 0x1, 0x96],
                't': 0x1
            }, {
                'p': [-0xa3, 0xe, 0x9d],
                's': [0x9a, 0x22, 0x38],
                't': 0x1
            }, {
                'p': [-0x1c, 0x9, 0x68],
                's': [0x138, 0x27, 0x32],
                't': 0x1
            }, {
                'p': [0x1, 0x2f, -0x1a],
                's': [0x68, 0x1, 0xd2],
                't': 0x1
            }, {
                'p': [0xc2, -0x4, 0x38],
                's': [0xd8, 0x25, 0xdd],
                't': 0x1
            }, {
                'p': [-0xaf, 0x13, -0x89],
                's': [0x35, 0x19, 0x40],
                't': 0x1
            }, {
                'p': [0x40, 0xd, -0x4],
                's': [0x2c, 0x14, 0x24],
                'i': 0x9,
                't': 0x1
            }, {
                'p': [-0xd0, 0x21, 0x65],
                's': [0x24, 0xf, 0x38],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0xae, 0x21, -0x59],
                's': [0x30, 0xb, 0x20],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0xaf, 0x21, -0xb9],
                's': [0x35, 0xb, 0x20],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [0x50, 0x21, -0x6a],
                's': [0x36, 0xf, 0x31],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [0x6e, 0x21, 0x36],
                's': [0x24, 0xf, 0x32],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0x8a, 0x1a, 0x4c],
                's': [0x68, 0x1d, 0x6],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xbb, 0x1a, 0x68],
                's': [0x6, 0x1d, 0x32],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x9f, 0x20, 0x67],
                's': [0x26, 0x1, 0x37],
                't': 0x1
            }, {
                'p': [-0x32, 0x10, -0xe1],
                's': [0x6, 0x16, 0x19],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0xf6],
                's': [0x6, 0x24, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x1f, -0xcf],
                's': [0x6, 0x13, 0xb],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x26, -0xd8],
                's': [0x6, 0x4, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xdc, 0x21, 0x7d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x67, 0x20, -0x80],
                's': [0x60, 0x2, 0x6f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x67, 0x6d, -0x81],
                's': [0x64, 0x3, 0x75],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x3d, 0x57, -0xf5],
                's': [0x57, 0x4, 0x4d],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x14, 0x57, -0xa7],
                's': [0xa9, 0x4, 0x4f],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x3d, 0x1e, -0xf2],
                's': [0x52, 0x4, 0x4f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x14, 0x1e, -0xa6],
                's': [0xa4, 0x4, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0x2
            }, {
                'p': [0x14, 0x20, -0xa6],
                's': [0xa2, 0x37, 0x47],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x21, 0x33, -0xca],
                's': [0xf, 0x1, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x28, 0x22, -0xca],
                's': [0x1, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x1a, 0x22, -0xca],
                's': [0x1, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x21, 0x22, -0xc9],
                's': [0xd, 0x11, 0x2],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0x93, 0x70, -0x78],
                's': [0x23, 0x3, 0xf],
                'c': 0x505050,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x85, 0x21, -0xc2],
                's': [0x24, 0x1, 0x15],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x9f, 0x28, -0x134],
                's': [0x57, 0x1, 0x39],
                't': 0x1
            }, {
                'p': [-0xbb, 0x21, -0x10c],
                's': [0x1f, 0x8, 0x17],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x8d, 0x28, -0x10e],
                's': [0x33, 0x1, 0x13],
                't': 0x1
            }, {
                'p': [-0xa9, 0x11, -0x10e],
                's': [0x5, 0x1d, 0x13],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x8d, 0x11, -0x102],
                's': [0x3d, 0x1d, 0x5],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x71, 0x11, -0x12b],
                's': [0x5, 0x1d, 0x4d],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x67, 0x11, -0x81],
                's': [0x5e, 0x5c, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x61, 0x21, -0x15d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xc5, 0x2c, -0x9b],
                's': [0x1, 0x13, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xe5, 0x20, -0xa2],
                's': [0x38, 0x2d, 0x6f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xe5, 0x4d, -0xa2],
                's': [0x3d, 0x3, 0x73],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf8, 0x20, -0x135],
                's': [0x5e, 0x5e, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xf8, 0x7e, -0x135],
                's': [0x66, 0x3, 0x75],
                'c': 0x575757,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf1, 0x20, -0xed],
                's': [0x38, 0x21, 0x6f],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf1, 0x41, -0xed],
                's': [0x3e, 0x3, 0x6f],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf1, 0x1f, -0xec],
                's': [0x3a, 0x3, 0x23],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0xe5, 0x1f, -0xa2],
                's': [0x3a, 0x3, 0x70],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x154, 0x20, -0xc7],
                's': [0x5b, 0x49, 0x74],
                'c': '#ffd5b1'
            }, {
                'p': [-0xc5, 0x2c, -0xa3],
                's': [0x1, 0x13, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x3f, 0x20, -0x19b],
                's': [0x51, 0x55, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x61, -0x188],
                's': [0x8c, 0x4, 0x78],
                'c': 0x434343,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x6e, 0x52, -0x14f],
                's': [0x4, 0x4, 0x8],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x20, -0x188],
                's': [0x85, 0x41, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x3f, 0x75, -0x19b],
                's': [0x57, 0x4, 0x77],
                'c': 0x4d4d4d,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x3f, 0x9a, -0x19b],
                's': [0x3a, 0x3, 0x38],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0x16, 0x3d, -0x17d],
                's': [0x5b, 0x20, 0x58],
                'c': '#ffd5b1'
            }, {
                'p': [-0xcb, 0x86, -0x1e3],
                's': [0x61, 0x5, 0x5e],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x67, 0x54, -0x81],
                's': [0x5f, 0x2, 0x71],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x67, 0x3b, -0x81],
                's': [0x60, 0x2, 0x71],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x3f, 0x7b, -0x19b],
                's': [0x34, 0x20, 0x31],
                'c': '#ffd5b1'
            }, {
                'p': [0x3d, 0x20, -0xf1],
                's': [0x50, 0x37, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x3f, 0x59, -0x19b],
                's': [0x53, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x3f, 0x3b, -0x19b],
                's': [0x53, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0xfa, 0x52, -0x135],
                's': [0x64, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x3d, 0x3b, -0xf2],
                's': [0x52, 0x2, 0x4f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x14, 0x3b, -0xa6],
                's': [0xa4, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x3f, 0x20, -0x19b],
                's': [0x53, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x97, 0x52, -0x14f],
                's': [0x4, 0x4, 0x9],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xbd, 0x52, -0x14f],
                's': [0x4, 0x4, 0xa],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x85, 0x20, -0xc2],
                's': [0x22, 0x1b, 0x12],
                'c': '#ffd5b1'
            }, {
                'p': [0xf, 0x2d, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf, 0x21, -0xdc],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xcc, 0x20, -0x1e5],
                's': [0x5b, 0x66, 0x57],
                'c': '#ffd5b1'
            }, {
                'p': [0x16, 0x5a, -0x17d],
                's': [0x62, 0x4, 0x5d],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x16, 0x3b, -0x17d],
                's': [0x5c, 0x2, 0x59],
                'l': 0x1,
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x16, 0x20, -0x17d],
                's': [0x5d, 0x2, 0x59],
                'l': 0x1,
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0xfd, 0x20, -0xa0],
                's': [0x40, 0x35, 0x48],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xc1, 0x5f, -0x125],
                's': [0x46, 0x3, 0x75],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xc1, 0x36, -0x124],
                's': [0x45, 0x2, 0x73],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xc1, 0x20, -0x11d],
                's': [0x46, 0x2, 0x65],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x9a, 0x3b, -0x111],
                's': [0x12, 0x2, 0x2c],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x93, 0x21, -0x125],
                's': [0x2, 0x1d, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x93, 0x21, -0xfd],
                's': [0x2, 0x1d, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x9e, 0x21, -0xf4],
                's': [0x1, 0x26, 0x4],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [0x81, 0x20, -0x193],
                's': [0x7c, 0x49, 0x5d],
                'c': '#ffd5b1'
            }, {
                'p': [0x81, 0x69, -0x194],
                's': [0x84, 0x4, 0x73],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xa8, 0x21, -0x194],
                's': [0x2c, 0x1, 0x73],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x81, 0x21, -0x163],
                's': [0x25, 0x24, 0x6],
                'c': 0x828282,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xec, 0x20, -0x16f],
                's': [0x5a, 0x20, 0x3d],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xec, 0x40, -0x16f],
                's': [0x61, 0x5, 0x44],
                'c': 0x525252,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xec, 0x1d, -0x16f],
                's': [0x5c, 0x5, 0x3f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x4a, 0x21, -0x155],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x39, 0x21, -0x120],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x105, 0x21, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x111, 0x21, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xd5, 0x3b, -0xf6],
                's': [0xa, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd5, 0x3b, -0xe1],
                's': [0xa, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x3b, 0x21, -0x150],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x3b, 0x21, -0x15c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x32, 0x10, -0x168],
                's': [0x6, 0x28, 0xf],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0x10e],
                's': [0x6, 0x28, 0x29],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0xf0],
                's': [0x6, 0x1d, 0x5],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x26, -0xea],
                's': [0x6, 0x2, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x32, -0xcc],
                's': [0x6, 0x6, 0x5],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x11e],
                's': [0x6, 0x3, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x10e],
                's': [0x6, 0x2, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0xfe],
                's': [0x6, 0x3, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0xc8],
                's': [0x6, 0x3, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x13f],
                's': [0x6, 0x2, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x14e],
                's': [0x6, 0x3, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xf, 0x21, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3, 0x21, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x9, 0x21, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x9e, 0x29, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x92, 0x29, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7c, 0x29, -0x10d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa9, 0x20, -0x160],
                's': [0x2c, 0x49, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x5a, 0x20, -0x160],
                's': [0x2e, 0x49, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x82, 0x45, -0x160],
                's': [0x22, 0x24, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x56, 0x21, -0x155],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x13f, 0x20, -0x13d],
                's': [0x4f, 0x3a, 0xb7],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x13f, 0x5a, -0x13d],
                's': [0x57, 0x4, 0xbd],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x13f, 0x3c, -0x119],
                's': [0x50, 0x2, 0x70],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x13f, 0x20, -0x119],
                's': [0x51, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x119, 0x46, -0xf0],
                's': [0x4, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x119, 0x46, -0x10e],
                's': [0x4, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x11a, 0x45, -0x10e],
                's': [0x7, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x11a, 0x45, -0xf0],
                's': [0x7, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x7e, 0x2b, -0x163],
                's': [0x3, 0x5, 0x8],
                'c': '#464646',
                't': 0x5
            }, {
                'p': [0x147, 0x20, -0x1d6],
                's': [0x8e, 0x63, 0x57],
                'c': '#ffd5b1'
            }, {
                'p': [0x148, 0x82, -0x1d6],
                's': [0x98, 0x4, 0x60],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0xbf, 0x20, -0x22b],
                's': [0x6d, 0x4c, 0x57],
                'c': '#ffd5b1'
            }, {
                'p': [0xbf, 0x69, -0x22d],
                's': [0x71, 0x5, 0x64],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [0x145, 0x20, -0xba],
                's': [0x50, 0x4d, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x146, 0x6d, -0xb9],
                's': [0x58, 0x3, 0x56],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x146, 0x56, -0xba],
                's': [0x53, 0x2, 0x50],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x146, 0x3c, -0xba],
                's': [0x53, 0x2, 0x50],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xa8, 0x3e, -0xa0],
                's': [0x14, 0x2, 0x2c],
                'c': '#7d7d7d',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb0, 0x40, -0xb4],
                's': [0x2, 0x7, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xb0, 0x47, -0xa0],
                's': [0x3, 0x1, 0x2c],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xab, 0x47, -0xb5],
                's': [0x7, 0x1, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa7, 0x40, -0xa0],
                's': [0x1, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0xa7, 0x51, -0xa0],
                's': [0x2, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xa7, 0x40, -0xa7],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0x12b, 0x20, -0x64],
                's': [0x34, 0x3f, 0x5d],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x146, 0x20, -0xb9],
                's': [0x54, 0x2, 0x4f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x12b, 0x5f, -0x64],
                's': [0x39, 0x3, 0x61],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x116, 0x1d, -0x64],
                's': [0xc, 0x5, 0x5f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x109, 0x27, -0x100],
                's': [0x3, 0x1, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x109, 0x21, -0x100],
                's': [0x1, 0x6, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xf1, 0x21, -0x119],
                's': [0x1, 0x6, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xf1, 0x27, -0x119],
                's': [0x3, 0x1, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xe9, 0x3f, -0x109],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x10d],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x115],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x125],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x111],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x119],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x121],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x129],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [-0x85, 0x3b, -0xc3],
                's': [0x24, 0x2, 0x13],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x85, 0x3c, -0xc2],
                's': [0x22, 0x1, 0x13],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x434343,
                't': 0x2
            }, {
                'p': [0xd7, 0x21, -0xb3],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd7, 0x21, -0xa7],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xc7, 0x21, -0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xad, 0x1e, -0x155],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x5b5f4c,
                't': 0x5
            }, {
                'p': [0x145, 0x20, -0xe],
                's': [0x50, 0x37, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x13f, 0x20, 0x87],
                's': [0x44, 0x4c, 0x73],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x145, 0x57, -0xe],
                's': [0x56, 0x3, 0x55],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x145, 0x1d, -0xe],
                's': [0x52, 0x5, 0x51],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x130, 0x20, 0x1e],
                's': [0xd, 0x2b, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x130, 0x20, 0x49],
                's': [0xd, 0x2b, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x130, 0x4b, 0x33],
                's': [0xd, 0x9, 0x35],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x12e, 0x2b, 0x2f],
                's': [0x3, 0x8, 0x3],
                'c': '#4d4d4d',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x21, 0x33],
                's': [0x1, 0x2a, 0x27],
                'c': 0x828282,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x145, 0x3c, -0xe],
                's': [0x51, 0x2, 0x50],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x130, 0x4d, 0x33],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x3e],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x48],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x28],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x1e],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1af, 0xc, -0x60],
                's': [0x5c, 0x66, 0xa0],
                'c': '#ffd5b1'
            }, {
                'p': [0x1af, 0x71, -0x60],
                's': [0x63, 0x4, 0xa5],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0x13f, 0x6c, 0x87],
                's': [0x4a, 0x3, 0x79],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x13f, 0x53, 0x87],
                's': [0x45, 0x2, 0x74],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x13f, 0x38, 0x87],
                's': [0x45, 0x2, 0x74],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x5e, -0x2, -0x34],
                's': [0x50, 0x72, 0x3c],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xb4, 0x20, -0x30],
                's': [0x5c, 0x28, 0x40],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xb4, 0x48, -0x30],
                's': [0x5f, 0x4, 0x42],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x5e, 0x6f, -0x34],
                's': [0x58, 0x4, 0x43],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x5e, 0x20, -0x34],
                's': [0x52, 0x2, 0x3d],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xb4, 0x20, -0x30],
                's': [0x5e, 0x2, 0x41],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x13f, 0x20, 0x87],
                's': [0x46, 0x2, 0x75],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x5c, 0x21, -0x194],
                's': [0x2c, 0x1, 0x73],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x90, 0x20, -0x159],
                's': [0x53, 0x2, 0x14],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x10d, 0x1d, -0x4c],
                's': [0x6, 0x5, 0x19],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x9c, 0x2c, -0x88],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x118, 0x21, 0x0],
                's': [0x1, 0x17, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x119, 0x21, 0xa],
                's': [0x1, 0x12, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0xf0, 0x20, 0xa3],
                's': [0x5c, 0x33, 0x40],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xf0, 0x53, 0xa3],
                's': [0x61, 0x3, 0x46],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xef, 0x38, 0xa3],
                's': [0x5b, 0x2, 0x41],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xf0, 0x20, 0xa3],
                's': [0x5a, 0x2, 0x42],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xeb, 0x39, 0x7b],
                's': [0x31, 0x2, 0x11],
                'pe': 0x1,
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0xd5, 0x20, 0x75],
                's': [0x2, 0x1c, 0x2],
                'pe': 0x1,
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0x101, 0x20, 0x75],
                's': [0x2, 0x1c, 0x2],
                'pe': 0x1,
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0xcd, 0x21, 0x82],
                's': [0x5, 0x22, 0x1],
                'i': 0x3,
                't': 0x2,
                'd': 0x3
            }, {
                'p': [0x5e, 0x3b, -0x34],
                's': [0x51, 0x2, 0x3d],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x5e, 0x56, -0x34],
                's': [0x51, 0x2, 0x3d],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xe2, 0x22, -0x43],
                's': [0x1, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0xe2, 0x22, -0x3c],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xe2, 0x33, -0x43],
                's': [0x2, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xe2, 0x22, -0x4a],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x9f, 0x4c, -0x78],
                's': [0x2, 0x26, 0x2],
                'l': 0x1,
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [0x9e, 0x20, 0x48],
                's': [0x3c, 0x44, 0x5d],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x9e, 0x43, 0x48],
                's': [0x3d, 0x2, 0x5e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x8e, 0x4b, 0x1f],
                's': [0x5, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x8e, 0x4a, 0x1f],
                's': [0x6, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xc2, 0x21, 0x22],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x95, 0x26, 0x9e],
                's': [0x46, 0x3c, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x4d, 0x20, 0xa9],
                's': [0x4a, 0x45, 0x50],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xc0, 0x21, 0x7d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x4d, 0x65, 0xa9],
                's': [0x51, 0x4, 0x57],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x4d, 0x4c, 0xa9],
                's': [0x4a, 0x2, 0x51],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x4d, 0x2f, 0xa9],
                's': [0x4a, 0x2, 0x51],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x9a, 0x21, 0x73],
                's': [0x2f, 0x1, 0x5],
                'l': 0x1,
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0x73, 0x21, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x7f, 0x21, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x4f, 0x3d, 0xe],
                's': [0xa, 0x1, 0x2],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xb6, 0x4f, 0x20],
                's': [0x5, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0xb6, 0x4e, 0x20],
                's': [0x6, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x61, 0x21, -0xc7],
                's': [0x1e, 0x6, 0x1],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x71, 0x21, -0xc7],
                's': [0x2, 0x19, 0x2],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x51, 0x21, -0xc7],
                's': [0x2, 0x19, 0x2],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x61, 0x27, -0xc7],
                's': [0x1e, 0x1, 0x3],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x51, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x71, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x55, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [-0x6d, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [-0x69, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x65, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [-0x61, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x59, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x5d, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [0x41, 0x5b, 0x33],
                's': [0x3a, 0x4, 0x50],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x85, 0x21, 0x16],
                's': [0x4, 0x11, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x8c, 0x21, 0x16],
                's': [0x4, 0x11, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x41, 0x36, 0x33],
                's': [0x37, 0x2, 0x4b],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x4f, 0x3e, 0x10],
                's': [0x9, 0xe, 0x5],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x66, 0x22, -0x11],
                's': [0x2a, 0x3d, 0x3e],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x66, 0x5c, -0x11],
                's': [0x2f, 0x4, 0x43],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x20, -0x12],
                's': [0x2c, 0x2, 0x3e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xce, 0xd, -0xf],
                's': [0xf, 0x4a, 0x7],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xce, 0x20, -0xd],
                's': [0x11, 0x2, 0x5],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xb4, 0x1e, 0x73],
                's': [0x2, 0x9, 0x2],
                'l': 0x1,
                'c': 0x5b5f4c,
                't': 0x5
            }, {
                'p': [-0x57, 0x64, 0x2f],
                's': [0x43, 0x4, 0x48],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x57, 0x66, 0x30],
                's': [0x2d, 0xa, 0x37],
                'c': '#ffd5b1'
            }, {
                'p': [-0x57, 0x70, 0x30],
                's': [0x33, 0x4, 0x3d],
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x57, 0x4c, 0x2f],
                's': [0x3f, 0x2, 0x43],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x57, 0x34, 0x2f],
                's': [0x3f, 0x2, 0x43],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x43, 0x54, 0x1a],
                's': [0x9, 0xe, 0x7],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x43, 0x53, 0x17],
                's': [0xa, 0x1, 0x2],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x49, 0x20, 0x34],
                's': [0x28, 0x2, 0x4e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x41, 0xd, 0x33],
                's': [0x36, 0x4f, 0x4a],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x1c, 0xc, -0x2e],
                's': [0xa9, 0x2, 0x36],
                'c': '#6e6e6e',
                't': 0x2
            }, {
                'p': [0x1b, 0xc, 0x25],
                's': [0xa7, 0x2, 0x34],
                'c': '#6e6e6e',
                't': 0x2
            }, {
                'p': [-0x34, 0x2e, -0x20],
                's': [0x8, 0x1f, 0xd2],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x2e, -0x1c],
                's': [0x8, 0x1f, 0x75],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0x50],
                's': [0x8, 0x2, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0x3a],
                's': [0x8, 0x3, 0xf],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0x24],
                's': [0x8, 0x5, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0xe],
                's': [0x8, 0x3, 0x10],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, 0x8],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x8],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x1e],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x4a],
                's': [0x8, 0x4, 0xe],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x34],
                's': [0x8, 0x3, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0xe],
                's': [0x8, 0x2, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x24],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x3a],
                's': [0x8, 0x3, 0x10],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x50],
                's': [0x8, 0x4, 0xa],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x66],
                's': [0x8, 0x3, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x7c],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1, 0xc, 0x13],
                's': [0x6e, 0x22, 0xe],
                'c': '#786555',
                't': 0xb
            }, {
                'p': [-0x1, 0xb, -0x33],
                's': [0x6e, 0x23, 0x3e],
                'c': '#786555',
                't': 0xb
            }, {
                'p': [-0x1, 0x2e, -0x2],
                's': [0x5e, 0x1, 0x39],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x33, 0x20, 0xbc],
                's': [0x49, 0x4c, 0x74],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x7c, 0x20, 0xd7],
                's': [0x49, 0x4c, 0x3e],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x20, 0xd9],
                's': [0x49, 0x34, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xd, 0x2f, 0xa3],
                's': [0x3c, 0x2, 0x51],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x34, 0x2f, 0x9d],
                's': [0x49, 0x2, 0x38],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x7e, 0x2f, 0xd3],
                's': [0x4b, 0x2, 0x37],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x109, -0x3, 0xb7],
                's': [0x3f, 0x68, 0x6c],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x10c, 0x3e, 0x4a],
                's': [0x54, 0x37, 0x6f],
                'c': '#ffd5b1'
            }, {
                'p': [-0x10c, 0x20, -0xa],
                's': [0x49, 0x38, 0x3c],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x3d, -0x49],
                's': [0x44, 0x31, 0x44],
                'c': '#ffd5b1'
            }, {
                'p': [-0x33, 0x6c, 0xbb],
                's': [0x51, 0x3, 0x79],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x80, 0x6c, 0xd6],
                's': [0x49, 0x3, 0x44],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x46, 0x20, 0x7f],
                's': [0x1c, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x46, 0x2f, 0x7d],
                's': [0x1e, 0x2, 0x8],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x33, 0x4d, 0x9d],
                's': [0x4b, 0x2, 0x38],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x7e, 0x4d, 0xd3],
                's': [0x4b, 0x2, 0x37],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x75, 0x32, 0x9a],
                's': [0x19, 0x1, 0x19],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [-0xe, 0x18, -0xf5],
                's': [0x1d, 0xd, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x75, 0x18, 0xa8],
                's': [0x1f, 0x1c, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x67, 0x18, 0x9a],
                's': [0x3, 0x1c, 0x19],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x83, 0x18, 0x9a],
                's': [0x3, 0x1c, 0x19],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xc4, 0x2f, 0xb4],
                's': [0x49, 0x2, 0x7],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xf2, 0x2f, 0x9a],
                's': [0x13, 0x2, 0x39],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xf2, 0x49, 0x9a],
                's': [0x13, 0x2, 0x39],
                'l': 0x1,
                'h': 0xbe,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xc4, 0x54, 0xd6],
                's': [0x50, 0x3, 0x51],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x43, 0x21, -0x11d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x109, 0x65, 0xb2],
                's': [0x46, 0x3, 0x7c],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xe4, 0x20, 0x31],
                's': [0x5, 0x2, 0x3e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xea, 0x20, -0x9],
                's': [0x7, 0x2, 0x3f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xd6, 0x20, -0x47],
                's': [0x22, 0x2, 0x41],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x109, 0x75, 0x4a],
                's': [0x56, 0x3, 0x77],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x1af, 0x28, -0x60],
                's': [0x42, 0x66, 0x7d],
                'c': '#ffd5b1'
            }, {
                'p': [0x1af, 0x8d, -0x60],
                's': [0x4d, 0x4, 0x87],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [-0x10a, 0x4e, -0xb],
                's': [0x4e, 0x3, 0x3b],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x6d, -0x49],
                's': [0x4a, 0x3, 0x48],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xef, 0x3e, 0x4a],
                's': [0x1b, 0x2, 0x70],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x10c, 0x58, 0x4a],
                's': [0x55, 0x2, 0x70],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe8, 0x3c, -0x49],
                's': [0x45, 0x2, 0x45],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe8, 0x54, -0x49],
                's': [0x45, 0x2, 0x45],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe3, 0x30, 0xab],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xd7, 0x30, 0xab],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x4e, 0x30, 0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xb0, 0x30, 0x57],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7d, 0x21, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x89, 0x21, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x5a, 0x30, 0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xe1, 0x21, -0x22],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xd5, 0x21, -0x22],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x81, 0x21, -0x21],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xb3, 0x30, 0xae],
                's': [0x6, 0x13, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xbd, 0x30, 0xae],
                's': [0x6, 0x13, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xe4, 0x78, 0x2a],
                's': [0x23, 0x3, 0xf],
                'c': 0x505050,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd9, 0x45, 0x2a],
                's': [0x2, 0x35, 0x2],
                'l': 0x1,
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [-0xe8, 0x22, 0x3],
                's': [0x2, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0xe7, 0x22, -0x4],
                's': [0x1, 0x11, 0x1],
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0xe7, 0x22, 0xa],
                's': [0x1, 0x11, 0x1],
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0xe7, 0x33, 0x3],
                's': [0x1, 0x1, 0xf],
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0xe8, 0x48, 0xe],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, -0xb],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, 0x1],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, -0x18],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, -0x23],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xde, 0x20, 0x3b],
                's': [0x1, 0x17, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xde, 0x21, 0x34],
                's': [0x1, 0x10, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x37, 0xd, -0x13],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x37, 0x2d, -0x4],
                's': [0x4, 0x2, 0x1c],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x2f, 0x30, 0x7b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6e, 0x30, 0x7d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x28, 0x30, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1d, 0x2f, -0x1c],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x1d, 0x2f, 0x4],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x24, 0x4e, 0x4],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x4],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, 0x0],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x8],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0xc],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x10],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x14],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x18],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x1c],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x1d, 0x2f, -0xc],
                's': [0x1, 0x7, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x1d, 0x36, -0xc],
                's': [0x3, 0x1, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x28, 0x30, -0x42],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2e, 0x2f, 0x4],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x2e, 0x2f, -0x1c],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, 0x8],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x26, 0x4e, 0x8],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0xc],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x14],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x10],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x18],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x1c],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x20],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x24],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x28],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x1e, 0x2f, 0x28],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, 0x18],
                's': [0x1, 0x7, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x36, 0x18],
                's': [0x3, 0x1, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, 0x8],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, 0x28],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, -0x3b],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x26, 0x4e, -0x3b],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x3f],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x43],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x47],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x4b],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x4f],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x53],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x57],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x5b],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x1e, 0x2f, -0x5b],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, -0x3b],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, -0x5b],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, -0x4b],
                's': [0x1, 0x7, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x36, -0x4b],
                's': [0x3, 0x1, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x2c, 0x2f, -0x11],
                's': [0x1, 0x17, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x2c, 0x2f, -0x8],
                's': [0x1, 0x17, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x23, 0x5b, -0x8f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [0x20, 0x30, 0x2b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x20, 0x30, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x20, 0x30, 0x37],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x28, 0x2e, 0x4d],
                's': [0x20, 0x1f, 0x8],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x1a, 0x2e, 0x4d],
                's': [0x18, 0x1f, 0x8],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x2e, 0x4d, 0x4d],
                's': [0x4, 0x4, 0x8],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1e, 0x4d, 0x4d],
                's': [0x8, 0x3, 0xc],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x14, 0x4d, 0x4d],
                's': [0x8, 0x2, 0xc],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x24, 0x4d, 0x4d],
                's': [0x4, 0x2, 0x8],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x2a, 0x30, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe3, 0x21, -0x129],
                's': [0x3, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xe3, 0x21, -0x109],
                's': [0x3, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x118, 0x21, -0xf0],
                's': [0x4, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x9f, 0x29, -0x134],
                's': [0x53, 0x32, 0x37],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xf0, 0x21, 0x6a],
                's': [0x57, 0x32, 0x2d],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x97, 0x30, 0x68],
                's': [0x40, 0x32, 0x30],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x1, 0x30, -0x17],
                's': [0x59, 0x32, 0x48],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x1, 0x30, -0x23],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1, 0x30, -0x17],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xc3, 0x29, -0x135],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xc3, 0x35, -0x135],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9e, 0x64, 0x48],
                's': [0x43, 0x3, 0x65],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x20, 0x48],
                's': [0x3e, 0x2, 0x5f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x7e, 0x29, 0x5e],
                's': [0x6, 0x30, 0x18],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xa9, 0x20, -0x155],
                's': [0x16, 0x2, 0xb],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x99, 0x21, -0x145],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xbc, 0x20, -0xde],
                's': [0x123, 0x1, 0x14f],
                't': 0x1
            }, {
                'p': [0x86, 0x20, -0xa0],
                's': [0x42, 0x4c, 0x48],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xc1, 0x36, -0x124],
                's': [0x44, 0x2b, 0x72],
                'c': '#ffd5b1'
            }, {
                'p': [0x111, 0x3f, -0xf0],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0xf4],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x111, 0x3f, -0xfc],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x111, 0x3f, -0xf8],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x100],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x108],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x104],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x111, 0x3f, -0x110],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x10c],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x118, 0x21, -0x110],
                's': [0x4, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x86, 0x6c, -0xa0],
                's': [0x47, 0x4, 0x4d],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xf6, 0x1d, -0xa0],
                's': [0x34, 0x5, 0x4a],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x116, 0x1d, -0xae],
                's': [0xc, 0x5, 0x2e],
                'l': 0x1,
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xfc, 0x3c, -0xa0],
                's': [0x3f, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x11c, 0x3c, -0xa0],
                's': [0x1, 0x2, 0x49],
                'l': 0x1,
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xfd, 0x55, -0xa0],
                's': [0x43, 0x3, 0x4b],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x87, 0x1d, -0xa0],
                's': [0x42, 0x5, 0x4a],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x87, 0x3b, -0xa0],
                's': [0x42, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x65, 0x3b, -0x7e],
                's': [0x2, 0x2, 0x5],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x65, 0x3b, -0x81],
                's': [0x2, 0x2, 0x1],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x86, 0x54, -0xa0],
                's': [0x43, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xb0, 0x40, -0x8c],
                's': [0x2, 0x7, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0xab, 0x47, -0x8b],
                's': [0x7, 0x1, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa7, 0x40, -0x99],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xab, 0x21, -0x9b],
                's': [0x1, 0x14, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0xab, 0x21, -0x8e],
                's': [0x1, 0x14, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0x90, 0x21, -0xca],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x90, 0x2d, -0xca],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xb5, 0x21, -0xe5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x10b, 0x21, -0x76],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x15, 0x21, -0x14b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x15, 0x2d, -0x14b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x29, 0x21, -0x15d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xe, 0x23, -0x102],
                's': [0x17, 0x1, 0x17],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [-0x75, 0x18, 0x8c],
                's': [0x1f, 0x1c, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1b, 0x18, -0x102],
                's': [0x3, 0xd, 0x17],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xe, 0x18, -0x10f],
                's': [0x1d, 0xd, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1, 0x18, -0x102],
                's': [0x3, 0xd, 0x17],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x119, 0x20, 0x50],
                's': [0x9, 0xe, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xda, 0x20, 0x50],
                's': [0x5, 0x10, 0x5],
                'c': '#9d8672'
            }, {
                'p': [0x94, 0x21, -0x76],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe9, 0x3f, -0x11d],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0x117, 0x21, 0x6c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xcb, 0x20, 0x50],
                's': [0x1e, 0xf, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xff, 0x20, 0x50],
                's': [0x5, 0x10, 0x5],
                'c': '#9d8672'
            }, {
                'p': [-0xa6, 0x30, 0x55],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe5, 0x30, 0x86],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe5, 0x30, 0x8d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe5, 0x30, 0x94],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x93, 0x21, 0x45],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x29, 0xd, 0x8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x22, 0xd, 0x8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x5c, 0x30, 0xb4],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x5c, 0x30, 0xad],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x99, 0x2c, -0x7f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x86, 0x29, -0x10b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xc6, 0x29, -0x12b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd0, 0x21, -0xf9],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd0, 0x21, -0xf2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x1e, 0x21, -0x15e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xb, 0x21, -0x14d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x60, 0x21, -0x157],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x9a, 0x21, -0x11a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x9a, 0x21, -0x113],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xbf, 0x21, -0xe7],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x118, 0x21, -0xc9],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x118, 0x21, -0xd0],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x101, 0x21, -0x78],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xbd, 0x21, -0x54],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xe6, 0x21, -0x24],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xe6, 0x21, -0x1d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xc1, 0x21, 0x2c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xe6, 0x21, 0x7f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xed, 0x21, 0x7f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x44, 0x30, 0x54],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x16, 0x30, 0x45],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x2c, 0x30, 0x39],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x2c, 0x30, -0x1a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x2c, 0x30, -0x72],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x9, 0x30, -0x18],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x18b, 0x7, 0x67],
                's': [0x50, 0x58, 0x3b],
                'c': '#ffd5b1'
            }, {
                'p': [0x18c, 0x5f, 0x68],
                's': [0x58, 0x4, 0x43],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0xb8, 0x20, 0xeb],
                's': [0x66, 0x4c, 0x31],
                'c': '#ffd5b1'
            }, {
                'p': [0xb8, 0x6c, 0xeb],
                's': [0x6d, 0x5, 0x39],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x59, 0x21, -0x89],
                's': [0x36, 0x1, 0x61],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x79, 0x20, 0xe],
                's': [0x6, 0x2, 0x2],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x44, 0x20, 0x2f],
                's': [0x1a, 0x2, 0x44],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x66, 0x3e, -0x11],
                's': [0x2b, 0x2, 0x3f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x7b, 0x22, 0x0],
                's': [0x1, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0x7a, 0x22, -0x7],
                's': [0x4, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x7a, 0x22, 0x7],
                's': [0x4, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x7a, 0x33, 0x0],
                's': [0x4, 0x1, 0xf],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x3c, 0x18, -0x45],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x54, 0x2b, -0x22],
                's': [0x7, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x54, 0x2a, -0x22],
                's': [0x8, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x6f, 0xa, -0x3e],
                's': [0xc, 0x17, 0x2b],
                't': 0x1
            }, {
                'p': [-0x5d, 0x18, -0x3e],
                's': [0x18, 0x9, 0x1c],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [0xf1, 0x21, -0x129],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xf1, 0x21, -0x109],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x109, 0x21, -0x110],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x109, 0x21, -0xf0],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x3d, 0x3, -0x3d],
                's': [0x28, 0x15, 0x1a],
                't': 0x1
            }, {
                'p': [-0x45, 0xd, -0x23],
                's': [0x1a, 0xb, 0x1a],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x55, 0x20, -0x13e],
                's': [0xff, 0x1, 0x119],
                'c': '#ffffff',
                't': 0x1
            }, {
                'p': [0x34, 0x21, -0x6a],
                's': [0x2, 0xe, 0x32],
                't': 0x1
            }, {
                'p': [0x12e, 0x2b, 0x39],
                's': [0x3, 0x8, 0x3],
                'c': '#4d4d4d',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x86, 0x2b, -0x163],
                's': [0x3, 0x5, 0x8],
                'c': '#464646',
                't': 0x5
            }, {
                'p': [-0x28, 0x21, -0xdb],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'r': [0x0, 0.52, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x3b, 0x21, -0xe6],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.52, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x40, 0x21, -0xdf],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [0x190, 0x7b, -0x44],
                's': [0x5, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x190, 0x7a, -0x44],
                's': [0x6, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xec, 0x21, 0x65],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [-0x90, 0x29, -0x12d],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [-0xcd, 0x20, -0xed],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.96, 0x0],
                'c': '#d2b559'
            }, {
                'p': [-0xd0, 0x20, -0xe0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.13, -3.14],
                'c': '#d2b559'
            }, {
                'p': [-0x41, 0x20, -0xbf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.13, -3.14]
            }, {
                'p': [-0x4e, 0x20, -0xc6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.62, -3.14]
            }, {
                'p': [-0x39, 0x20, -0xcd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.62, -3.14]
            }, {
                'p': [-0x64, 0x20, -0x154],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.62, -3.14]
            }, {
                'p': [-0x43, 0x20, -0x15f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.3, 0x0]
            }, {
                'p': [-0x57, 0x20, -0x160],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x32, 0x10, -0x146],
                's': [0x6, 0x28, 0x17],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0x159],
                's': [0x6, 0x22, 0xf],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1c, 0x20, -0x157],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [-0x13, 0x20, -0xce],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [-0x16, 0x23, -0xfc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.6, 0x0]
            }, {
                'p': [-0x9, 0x23, -0x109],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [-0xbf, 0x27, -0x12c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0xa7, 0x28, -0x14b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0x88, 0x29, -0x14c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0xc5, 0x28, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0x78, 0x28, -0x116],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0x86, 0x28, -0x111],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.05, -3.14]
            }, {
                'p': [-0x98, 0x20, -0xcd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.36, -3.14]
            }, {
                'p': [0x17, 0x20, -0x11e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x4, 0x20, -0xd9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x10, 0x20, -0xe5],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.16, 0x0]
            }, {
                'p': [-0x6b, 0x20, -0x102],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [-0x6a, 0x21, -0x128],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x5, 0x20, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0xc, 0x20, -0x146],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.1, 0x0]
            }, {
                'p': [0x1f, 0x20, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x30, 0x20, -0x123],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x44, 0x20, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x49, 0x20, -0x11c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x9c, 0x20, -0x13c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x95, 0x20, -0x116],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.8, 0x0]
            }, {
                'p': [0x9c, 0x20, -0x158],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x67, 0x20, -0x11a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.08, 0x0]
            }, {
                'p': [0x69, 0x20, -0xf9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.97, 0x0]
            }, {
                'p': [-0x46, 0x60, 0x82],
                's': [0x1e, 0x4, 0x17],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x46, 0x45, 0x7b],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x46, 0x44, 0x79],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x27, 0x20, -0x11b],
                's': [0x19, 0x2, 0x9],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x27, 0xe, -0x11a],
                's': [0x18, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x27, 0x4f, -0x116],
                's': [0x19, 0x3, 0x16],
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x26, 0x33, -0x11e],
                's': [0xf, 0x1, 0x7],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x26, 0x32, -0x120],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x107, 0xe, -0xc5],
                's': [0x18, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x107, 0x4f, -0xc1],
                's': [0x1a, 0x3, 0x16],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [0x106, 0x33, -0xc9],
                's': [0xf, 0x1, 0x7],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x106, 0x32, -0xcb],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x92, 0x57, 0xb9],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x92, 0x56, 0xb7],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x64, 0x52, 0x82],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x64, 0x51, 0x80],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x52, 0x5b, -0xb8],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x52, 0x5a, -0xba],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x85, 0x25, -0xbc],
                's': [0x1c, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x85, 0x34, -0xbe],
                's': [0x1e, 0x2, 0x8],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x85, 0x65, -0xb9],
                's': [0x1e, 0x4, 0x17],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x85, 0x4a, -0xc0],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x85, 0x49, -0xc2],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x57, 0x42, -0x119],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x57, 0x41, -0x11a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xd, 0x20, 0xa0],
                's': [0x37, 0x6e, 0x3c],
                'c': '#ffd5b1'
            }, {
                'p': [0xd, 0x25, 0x80],
                's': [0x38, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xd, 0x62, 0x7e],
                's': [0x3b, 0x4, 0xe],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [0x1b, 0x4a, 0x7c],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x1b, 0x49, 0x7a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xd, 0x8d, 0xa0],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x2, 0x49, 0x7a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x2, 0x4a, 0x7c],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x2b, 0x83, 0x95],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x2b, 0x6f, 0x95],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [-0x45, 0x6f, 0x87],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x11, 0x6f, 0x87],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x2c, 0x6f, 0x87],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x2c, 0x6f, 0xa4],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x45, 0x6f, 0xa3],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x11, 0x6f, 0xa3],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x1d, 0x74, 0x85],
                's': [0xb, 0x1, 0x3],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [-0x1d, 0x70, 0x83],
                's': [0xb, 0x5, 0x1],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [-0x3c, 0x7d, 0x83],
                's': [0x8, 0x8, 0x1],
                'l': 0x1,
                'c': '#b2d4b2',
                't': 0x2
            }, {
                'p': [-0x3c, 0x84, 0x85],
                's': [0x8, 0x1, 0x3],
                'l': 0x1,
                'c': '#b2d4b2',
                't': 0x2
            }, {
                'p': [-0x4b, 0x6f, 0x83],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x56, 0x6f, 0x84],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0xd, 0x71, 0x7e],
                's': [0x28, 0x2, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x1f, 0x71, 0x7b],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x5, 0x71, 0x7b],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0xd, 0x79, 0x7b],
                's': [0x28, 0x1, 0x3],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x1f, 0x79, 0x81],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x5, 0x79, 0x81],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x14, 0x74, 0x83],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0xd, 0x74, 0x82],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x1b, 0x74, 0x82],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x14, 0x85, 0x82],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x14, 0x73, 0x82],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x5, 0x6c, 0x79],
                's': [0x6, 0xe, 0x1],
                'l': 0x1,
                'c': '#dec28f',
                't': 0x2
            }, {
                'p': [0x1, 0x6c, 0x79],
                's': [0x2, 0xe, 0x1],
                'l': 0x1,
                'c': '#a4be8d',
                't': 0x2
            }, {
                'p': [0x1, 0x7a, 0x7b],
                's': [0x2, 0x1, 0x5],
                'l': 0x1,
                'c': '#a4be8d',
                't': 0x2
            }, {
                'p': [0x5, 0x7a, 0x7b],
                's': [0x6, 0x1, 0x5],
                'l': 0x1,
                'c': '#dec28f',
                't': 0x2
            }, {
                'p': [0x28, 0x66, 0x8f],
                's': [0x8, 0x32, 0xe],
                'c': '#ffd5b1'
            }, {
                'p': [-0x8, 0xa1, 0x9d],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x15, 0x84, 0x8e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x4c, 0x67, 0x8d],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x4c, 0x7b, 0x8d],
                's': [0x1, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x3b, 0x7b, 0x89],
                's': [0x21, 0x1, 0x1],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x41, 0x71, 0x8e],
                's': [0x6, 0xb, 0x1],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [0x34, 0x71, 0x88],
                's': [0x7, 0xb, 0x1],
                'l': 0x1,
                'c': '#7ec382',
                't': 0x2
            }, {
                'p': [0x41, 0x7c, 0x8b],
                's': [0x6, 0x1, 0x7],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [0x41, 0x79, 0x88],
                's': [0x6, 0x3, 0x1],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [0x34, 0x7c, 0x8b],
                's': [0x7, 0x1, 0x7],
                'l': 0x1,
                'c': '#7ec382',
                't': 0x2
            }, {
                'p': [0x34, 0x7a, 0x8e],
                's': [0x7, 0x2, 0x1],
                'c': '#7ec382',
                't': 0x2
            }, {
                'p': [0x3b, 0x7b, 0x8d],
                's': [0x21, 0x1, 0x1],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x3b, 0x7b, 0x91],
                's': [0x21, 0x1, 0x1],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0xd4, 0x77, 0xf7],
                's': [0x78, 0x3, 0x21],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xd4, 0x50, 0x101],
                's': [0x78, 0x23, 0x2d],
                'c': '#ffd5b1'
            }, {
                'p': [-0xd4, 0x73, 0x101],
                's': [0x78, 0x14, 0xf],
                'c': '#ffd5b1'
            }, {
                'p': [-0xd4, 0x88, 0x100],
                's': [0x79, 0x3, 0x11],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x84, 0x34, 0xfe],
                's': [0x28, 0x59, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x76, 0x8f, 0xfe],
                's': [0xc, 0xe, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x84, 0x9e, 0xfe],
                's': [0x28, 0x8, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x84, 0x8d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x84, 0xa5, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x92, 0x8f, 0xfe],
                's': [0xc, 0xe, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x91, 0xa7, 0xf1],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x91, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x77, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x77, 0xa7, 0xf0],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x84, 0x9d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x83, 0x89, 0xe4],
                's': [0x4, 0x4, 0xf],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x83, 0x86, 0xe8],
                's': [0x3, 0x2, 0xd],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x124, 0x34, 0xfe],
                's': [0x28, 0x5b, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8f, 0xfe],
                's': [0x28, 0x17, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x124, 0xa5, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0xf1],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0xf0],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x9d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [0x73, 0x61, -0x66],
                's': [0x2, 0x2, 0x45],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x7b, 0x61, -0x66],
                's': [0x2, 0x2, 0x42],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x83, 0x61, -0x66],
                's': [0x2, 0x2, 0x41],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x76, 0x63, -0x68],
                's': [0xb, 0x1, 0xc],
                'l': 0x1,
                'c': '#acb1af',
                'e': '#502323',
                't': 0x2
            }, {
                'p': [0x7f, 0x63, -0x5a],
                's': [0xb, 0x1, 0xc],
                'l': 0x1,
                'c': '#868785',
                'e': '#0e110b',
                't': 0x2
            }, {
                'p': [0x84, 0x51, -0x5a],
                's': [0x1, 0x12, 0xc],
                'l': 0x1,
                'c': '#868785',
                'e': '#0e110b',
                't': 0x2
            }, {
                'p': [0x7e, 0x63, -0x74],
                's': [0xb, 0x1, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [0x79, 0x56, -0x74],
                's': [0x1, 0xd, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [0x71, 0x5a, -0x68],
                's': [0x1, 0x9, 0xc],
                'l': 0x1,
                'c': '#acb1af',
                'e': '#502323',
                't': 0x2
            }, {
                'p': [-0x6f, 0x44, -0x40],
                's': [0x2, 0x2, 0x45],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x67, 0x44, -0x40],
                's': [0x2, 0x2, 0x42],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x6c, 0x46, -0x40],
                's': [0xb, 0x1, 0x8],
                'c': '#bb5d5d',
                't': 0x2
            }, {
                'p': [-0x64, 0x46, -0x52],
                's': [0xb, 0x1, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [-0x69, 0x41, -0x52],
                's': [0x1, 0x5, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [-0x71, 0x3d, -0x40],
                's': [0x1, 0x9, 0x8],
                'l': 0x1,
                'c': '#bb5d5d',
                't': 0x2
            }, {
                'p': [-0x10c, 0x21, 0x4a],
                's': [0x54, 0x1f, 0x6f],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x77, 0x1a, 0x9a],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': '#7f6e38'
            }, {
                'p': [-0xaf, 0x2f, 0xab],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xe5, 0x2f, 0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0x9b, 0x2f, 0xb3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x9f, 0x2f, 0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xb3, 0x2f, 0x61],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [-0x65, 0x2f, 0x57],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x58, 0x2f, 0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x34, 0x2f, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x3c, 0x2f, 0x53],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0]
            }, {
                'p': [0x1f, 0x2f, 0x55],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x24, 0x2f, 0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x13, 0x2f, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x38, 0x2d, -0x2f],
                's': [0x2, 0x2, 0x36],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe8, 0x20, -0x49],
                's': [0x44, 0x1c, 0x43],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x8, 0x8e, 0x9d],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x18, 0x2d, 0x81],
                's': [0x2, 0x3a, 0x2],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x29, 0x67, 0x81],
                's': [0x24, 0x2, 0x2],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x3a, 0x69, 0x81],
                's': [0x2, 0x9, 0x2],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x57, 0x22, 0x2f],
                's': [0x3e, 0x42, 0x42],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x57, 0xd, 0x2f],
                's': [0x3e, 0x13, 0x42],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x66, 0xd, -0x11],
                's': [0x2a, 0x13, 0x3e],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x154, 0x69, -0xc7],
                's': [0x5d, 0x4, 0x77],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x16, 0x20, -0x17d],
                's': [0x5b, 0x1b, 0x58],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x124, 0x34, 0x70],
                's': [0x28, 0x59, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8f, 0x62],
                's': [0x28, 0xe, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x9e, 0x70],
                's': [0x28, 0x8, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8d, 0x70],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x124, 0xa5, 0x70],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0x63],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0x7d],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0x7d],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0x62],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x9d, 0x70],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x10c, 0x89, 0x6f],
                's': [0xf, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x124, 0x8f, 0x7e],
                's': [0x28, 0xe, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x11d, 0x77, 0xb8],
                's': [0x78, 0x3, 0x21],
                'l': 0x1,
                'r': [-1.57, -1.05, -1.57],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x128, 0x73, 0xbe],
                's': [0xf, 0x14, 0x78],
                'c': '#ffd5b1'
            }, {
                'p': [-0x128, 0x88, 0xbb],
                's': [0x79, 0x3, 0x11],
                'l': 0x1,
                'r': [-1.57, -1.05, -1.57],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x127, 0x50, 0xbb],
                's': [0x2d, 0x23, 0x78],
                'c': '#ffd5b1'
            }, {
                'p': [-0xe2, 0x2d, 0x7a],
                's': [0x2, 0x3a, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe2, 0x67, 0x7c],
                's': [0x2, 0x2, 0x6],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe2, 0x69, 0x7e],
                's': [0x2, 0x12, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xa4, 0x22, 0x8e],
                's': [0x3c, 0x69, 0x30],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xa4, 0x8b, 0x8e],
                's': [0x3f, 0x5, 0x33],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [0xa4, 0x90, 0x8e],
                's': [0x38, 0x15, 0x28],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xa5, 0x8e],
                's': [0x1e, 0x23, 0x1e],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xc8, 0x8e],
                's': [0x22, 0x6, 0x22],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xce, 0x8e],
                's': [0x1d, 0x6, 0x1c],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xd4, 0x8e],
                's': [0x17, 0x6, 0x16],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xda, 0x8e],
                's': [0x11, 0x6, 0x10],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xe0, 0x8e],
                's': [0x5, 0xd, 0x9],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xed, 0x8e],
                's': [0x3, 0x20, 0x4],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xa5, 0x8e],
                's': [0x3a, 0x3, 0x2a],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [0xa4, 0xa5, 0x9d],
                's': [0xa, 0x14, 0x1],
                'c': '#3c3c3c'
            }, {
                'p': [0x8e, 0x81, 0x8e],
                's': [0x4, 0x4, 0x3a],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xba, 0x81, 0x8e],
                's': [0x4, 0x4, 0x3a],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x81, 0x80],
                's': [0x44, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x81, 0x9c],
                's': [0x44, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x32, 0xa5],
                's': [0x10, 0x2, 0x8],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x5e, 0xa5],
                's': [0x10, 0x2, 0x8],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x22, 0x1a],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0x9a, 0x22, 0x19],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0xa8, 0x22, 0x19],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0xa1, 0x33, 0x19],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0xa1, 0x21, 0x19],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x95, 0x60, 0x9e],
                's': [0x47, 0x4, 0x51],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [-0x77, 0x39, 0x1f],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x75, 0x3a, 0x1f],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x77, 0x39, 0x3e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x75, 0x3a, 0x3e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x97, 0x59, -0x5a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x95, 0x5a, -0x5a],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xd8, 0x5a, 0xe9],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xd8, 0x5b, 0xeb],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xb1, 0x5a, 0xe9],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xb1, 0x5b, 0xeb],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xd8, 0x59, -0x26],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xd8, 0x5a, -0x28],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xc5, 0x59, -0x5d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xc7, 0x5a, -0x5d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xe1, 0x20, 0xf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0xcb, 0x20, -0x23],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0x80, 0x20, -0x17],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x7b, 0x20, 0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x7b, 0x20, 0x37],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [-0x95, 0x20, 0x3d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [-0xbb, 0x20, 0x45],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xde, 0x20, 0x2c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x99, 0x20, -0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0]
            }, {
                'p': [-0x8c, 0x21, -0x48],
                's': [0x2, 0x2d, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x84, 0x59, -0x48],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x84, 0x5a, -0x4a],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x8f, 0x4e, -0x48],
                's': [0x8, 0x2, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x92, 0x50, -0x48],
                's': [0x2, 0x22, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc5, 0x21, -0x2c],
                's': [0x2, 0x52, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x23d, 0xd, -0xa2],
                's': [0x37, 0x28, 0x3c],
                'c': '#ffd5b1'
            }, {
                'p': [0x23d, 0x34, -0xa2],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x205, 0x2a, -0xad],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x205, 0x16, -0xad],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [0x1eb, 0x16, -0xbb],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x21f, 0x16, -0xbb],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x204, 0x16, -0xbb],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x204, 0x16, -0x9e],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x1eb, 0x16, -0x9f],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x21f, 0x16, -0x9f],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x213, 0x1b, -0xbd],
                's': [0xb, 0x1, 0x3],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0x213, 0x17, -0xbf],
                's': [0xb, 0x5, 0x1],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0x1f4, 0x24, -0xbf],
                's': [0x8, 0x8, 0x1],
                'c': '#a1e1a1',
                't': 0x2
            }, {
                'p': [0x1f4, 0x2b, -0xbd],
                's': [0x8, 0x1, 0x3],
                'c': '#a1e1a1',
                't': 0x2
            }, {
                'p': [0x1ff, 0x1b, -0xbb],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x23d, 0x18, -0xc4],
                's': [0x28, 0x2, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x24f, 0x18, -0xc7],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x22b, 0x18, -0xc7],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x23d, 0x20, -0xc7],
                's': [0x28, 0x1, 0x3],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x24f, 0x20, -0xc1],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x22b, 0x20, -0xc1],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x244, 0x1b, -0xbf],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0x23d, 0x1b, -0xc0],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x24b, 0x1b, -0xc0],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x244, 0x2c, -0xc0],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x244, 0x1a, -0xc0],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x235, 0x13, -0xc9],
                's': [0x6, 0xe, 0x1],
                'c': '#e6ab3e',
                't': 0x2
            }, {
                'p': [0x231, 0x13, -0xc9],
                's': [0x2, 0xe, 0x1],
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x231, 0x21, -0xc7],
                's': [0x2, 0x1, 0x5],
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x235, 0x21, -0xc7],
                's': [0x6, 0x1, 0x5],
                'c': '#e6ab3e',
                't': 0x2
            }, {
                'p': [0x228, 0x48, -0xa5],
                's': [0x1, 0x7, 0x1],
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x21b, 0x2b, -0xb4],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x228, 0x35, -0xa5],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x132, 0x58, -0xa9],
                's': [0x36, 0x2c, 0x38],
                'c': '#ffd5b1'
            }, {
                'p': [0x132, 0x82, -0xa9],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xfa, 0x6c, -0xb4],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xfa, 0x58, -0xb4],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [0xe0, 0x58, -0xc2],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x114, 0x58, -0xc2],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf9, 0x58, -0xc2],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf9, 0x58, -0xa5],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xe0, 0x58, -0xa6],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x114, 0x58, -0xa6],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x108, 0x5d, -0xc4],
                's': [0xb, 0x1, 0x3],
                'c': '#dc7c7c',
                't': 0x2
            }, {
                'p': [0x108, 0x55, -0xc6],
                's': [0xb, 0x9, 0x1],
                'c': '#d26262',
                't': 0x2
            }, {
                'p': [0xdd, 0x66, -0xad],
                's': [0x1, 0x8, 0x7],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0xf4, 0x5d, -0xc2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x11d, 0x95, -0xac],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x110, 0x6d, -0xbb],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x11d, 0x83, -0xac],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdf, 0x6d, -0xad],
                's': [0x3, 0x1, 0x7],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0x88, 0x54, -0xc6],
                's': [0x28, 0x2, 0x9],
                'c': '#7d7d7d',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9a, 0x54, -0xc9],
                's': [0x2, 0x8, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x76, 0x54, -0xc9],
                's': [0x2, 0x8, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x88, 0x5c, -0xc9],
                's': [0x28, 0x1, 0x3],
                'c': '#7d7d7d',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9a, 0x5c, -0xc3],
                's': [0x3, 0x1, 0x9],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x76, 0x5c, -0xc3],
                's': [0x3, 0x1, 0x9],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x7c, 0x4f, -0xcb],
                's': [0x5, 0xe, 0x1],
                'l': 0x1,
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x7c, 0x5d, -0xc9],
                's': [0x5, 0x1, 0x5],
                'l': 0x1,
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x110, 0x58, -0x9c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [0x110, 0x64, -0x9c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [0x88, 0x56, -0xc5],
                's': [0x1, 0x11, 0x1],
                'l': 0x1,
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x96, 0x56, -0xc5],
                's': [0x1, 0x11, 0x1],
                'l': 0x1,
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x8f, 0x67, -0xc5],
                's': [0xf, 0x1, 0x1],
                'l': 0x1,
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x8f, 0x56, -0xc4],
                's': [0xd, 0x11, 0x2],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0xe8, 0x50, 0x91],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xea, 0x51, 0x91],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xe1, 0x5f, 0x65],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xe3, 0x60, 0x65],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x7f, 0x58, 0x5e],
                's': [0x8, 0x3, 0x1a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x7a, 0x42, 0x5e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x7c, 0x43, 0x5e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xd, 0xb, -0x101],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -0.35, 3.14],
                'c': '#846d22'
            }, {
                'p': [0x6f, 0x4e, 0x1c],
                's': [0x2f, 0x2, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x6f, 0x4e, 0x24],
                's': [0x2f, 0x2, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x77, 0x50, 0x20],
                's': [0x8, 0x1, 0xb],
                'l': 0x1,
                'c': '#d28d8d',
                't': 0x2
            }, {
                'p': [0x77, 0x47, 0x1b],
                's': [0x8, 0x9, 0x1],
                'l': 0x1,
                'c': '#d28d8d',
                't': 0x2
            }, {
                'p': [0x63, 0x47, 0x25],
                's': [0x3, 0x9, 0x1],
                'l': 0x1,
                'c': '#bbd9bb',
                't': 0x2
            }, {
                'p': [0x63, 0x50, 0x20],
                's': [0x3, 0x1, 0xb],
                'l': 0x1,
                'c': '#bbd9bb',
                't': 0x2
            }, {
                'p': [0x63, 0x4b, 0x1b],
                's': [0x3, 0x5, 0x1],
                'l': 0x1,
                'c': '#bbd9bb',
                't': 0x2
            }, {
                'p': [0x77, 0x4d, 0x25],
                's': [0x8, 0x3, 0x1],
                'l': 0x1,
                'c': '#d28d8d',
                't': 0x2
            }, {
                'p': [-0xc8, 0x5f, -0x114],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xca, 0x60, -0x114],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xc8, 0x5f, -0x138],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xca, 0x60, -0x138],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x7c, 0x44, -0x21],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x7a, 0x45, -0x21],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x14, 0x41, -0xe1],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x16, 0x42, -0xe1],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x9e, 0x46, -0x13e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xa0, 0x47, -0x13e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x2a, 0x60, -0x162],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x2a, 0x61, -0x164],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x8, 0x43, -0x150],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x8, 0x44, -0x152],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x5a, 0x4e, -0x15a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x5a, 0x4f, -0x15c],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x37, 0xd, 0xb],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x35, 0xd, -0x13],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x35, 0xd, 0xb],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x35, 0x2d, -0x4],
                's': [0x4, 0x2, 0x1c],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x1, 0xd, 0xb],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x1, 0xd, -0x13],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x1, 0x2d, -0x4],
                's': [0x4, 0x2, 0x1c],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x70, 0x2d, 0x51],
                's': [0x2, 0x42, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe1, 0x67, -0x80],
                's': [0x2b, 0x2, 0x48],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe1, 0x50, -0x80],
                's': [0x2b, 0x8, 0x48],
                'c': '#ffd5b1'
            }, {
                'p': [-0xce, 0x58, -0xa2],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xce, 0x58, -0x6d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x58, -0xa2],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x58, -0x6d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x58, -0x88],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xce, 0x58, -0x88],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xc9, 0x7c, -0x68],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc9, 0x69, -0x68],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xd5, 0x69, -0x71],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xcd, 0x50, -0xa9],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xd8, 0x50, -0xaa],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0xcf, 0x69, -0x91],
                's': [0x9, 0x1, 0xd],
                'l': 0x1,
                'c': '#6383ed',
                't': 0x2
            }, {
                'p': [-0xcb, 0x5f, -0x91],
                's': [0x1, 0xa, 0xd],
                'l': 0x1,
                'c': '#6383ed',
                't': 0x2
            }, {
                'p': [-0xc8, 0x21, -0x102],
                's': [0x2, 0x53, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc8, 0x74, -0x106],
                's': [0x2, 0x12, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc8, 0x74, -0x103],
                's': [0x2, 0x2, 0x4],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe2, 0x44, -0xf4],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [-0xda, 0x44, -0xea],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0x10e, 0x22, -0x4c],
                's': [0x6, 0x30, 0x18],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x10f, 0x51, -0x4c],
                's': [0xc, 0x3, 0x1a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x10a, 0x3b, -0x4c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x10c, 0x3c, -0x4c],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x11c, 0x3e, 0x5e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x11e, 0x3f, 0x5e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x11c, 0x41, 0x3],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x11e, 0x42, 0x3],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xbd, 0x4b, 0x61],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0xbb, 0x4c, 0x61],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xbd, 0x4b, 0x33],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0xbb, 0x4c, 0x33],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xdc, 0x41, -0xb5],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xde, 0x42, -0xb5],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xc1, 0x22, -0x124],
                's': [0x44, 0x14, 0x71],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xa1, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x107, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0xc3, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0xe4, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x130, 0x8d, 0xe1],
                's': [0x5, 0x5, 0x11],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x130, 0x8d, 0x8d],
                's': [0x5, 0x5, 0x11],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x130, 0x8d, 0xb3],
                's': [0x5, 0x5, 0x11],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x13f, 0x22, -0x46],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.87, 0x0]
            }, {
                'p': [-0x14f, 0x2e, 0x4],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, 1.4, -3.14]
            }, {
                'p': [-0x181, 0x32, -0x2f],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.23, 0x0]
            }, {
                'p': [0xb5, 0x78, -0x128],
                's': [0x2b, 0x2, 0x48],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xb5, 0x61, -0x127],
                's': [0x2b, 0x8, 0x48],
                'c': '#ffd5b1'
            }, {
                'p': [0xc8, 0x69, -0x143],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x69, -0x106],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x69, -0x121],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x69, -0x13d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc2, 0x7a, -0x108],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0xc9, 0x61, -0x14a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0xbe, 0x61, -0x14b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa3, 0x7a, -0x132],
                's': [0x9, 0x1, 0xd],
                'l': 0x1,
                'c': '#3661f0',
                't': 0x2
            }, {
                'p': [0x9f, 0x70, -0x132],
                's': [0x1, 0xa, 0xd],
                'l': 0x1,
                'c': '#3661f0',
                't': 0x2
            }, {
                'p': [0xac, 0x7a, -0x10a],
                's': [0x9, 0x1, 0xd],
                'l': 0x1,
                'c': '#66b18e',
                't': 0x2
            }, {
                'p': [0xac, 0x6e, -0x104],
                's': [0x9, 0xc, 0x1],
                'l': 0x1,
                'c': '#66b18e',
                't': 0x2
            }, {
                'p': [0xb5, 0x5f, -0x15a],
                's': [0x2c, 0x20, 0x36],
                'c': '#ffd5b1'
            }, {
                'p': [0xb5, 0x7f, -0x15a],
                's': [0x2e, 0x2, 0x38],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0xc9, 0x69, -0x121],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc9, 0x69, -0x106],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc8, 0x69, -0x13d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc5, 0x62, -0xfd],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [0xa4, 0x69, -0x10a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [0x9e, 0x21, -0x155],
                's': [0x2, 0x50, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x9e, 0x71, -0x14b],
                's': [0x2, 0x13, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x9e, 0x71, -0x151],
                's': [0x2, 0x2, 0xa],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xb1, 0x7d, -0x15a],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xb1, 0x90, -0x15a],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xb1, 0x95, -0x158],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xa6, 0x30, -0x50],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xa6, 0x2f, -0x51],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x46, 0x5c, -0x52],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x46, 0x5b, -0x53],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x10c, 0x3e, 0x83],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x10c, 0x3d, 0x82],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x43, 0x52, 0xe],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x43, 0x51, 0xd],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x50, 0x47, -0x13],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0x52, 0x48, -0x13],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x87, 0x5a, -0x27],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x85, 0x5b, -0x27],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x66, 0x41, -0x106],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x64, 0x42, -0x106],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xe4, 0x46, -0x13c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0xe2, 0x47, -0x13c],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x97, 0x40, -0x7b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x97, 0x41, -0x7d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xe9, 0x41, -0x7b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xe9, 0x42, -0x7d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x97, 0x30, -0xf],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x97, 0x31, -0x11],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xd3, 0x43, -0xea],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xd2, 0x44, -0xec],
                's': [0x6, 0x1, 0x10],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xc8, 0x36, -0xcc],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xca, 0x37, -0xcc],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x44, 0x5b, -0x15],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x44, 0x5c, -0x17],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x35, 0x5b, -0x36],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x37, 0x5c, -0x36],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x3f, 0x40, -0x81],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x3f, 0x41, -0x83],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x10, 0x40, -0x81],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x10, 0x41, -0x83],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x4f, 0x40, -0x48],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x4f, 0x41, -0x4a],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x1c, 0x21, -0x82],
                's': [0x2, 0x3d, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x11c, 0x21, 0x17],
                's': [0x2, 0x2b, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x11c, 0x4e, 0x11],
                's': [0x2, 0xf, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x11c, 0x4c, 0x14],
                's': [0x2, 0x2, 0x8],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdb, 0x21, -0x51],
                's': [0x2, 0x2f, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdc, 0x20, -0x84],
                's': [0x2, 0x28, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdc, 0x48, -0x87],
                's': [0x2, 0x2, 0x8],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdc, 0x4a, -0x8a],
                's': [0x2, 0x10, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x8c, 0x22, -0xcb],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x7e, 0x22, -0xcb],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x85, 0x33, -0xcb],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x85, 0x22, -0xca],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0x161, 0x15, -0x4d],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [0x168, 0x1d, -0x7f],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-0.01, -1.4, -0.01]
            }, {
                'p': [0x10a, 0xb, 0xe7],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [0xe2, 0x0, -0x1b2],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [-0x9c, 0x2b, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.13, -3.14]
            }, {
                'p': [-0x9b, 0x2b, -0xa4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [-0xc6, 0x2b, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [-0xa0, 0x2b, -0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [-0xc4, 0x2b, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [0x69, 0x20, -0xcb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.97, 0x0]
            }, {
                'p': [0x84, 0x20, -0xcb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.08, -3.14]
            }, {
                'p': [0xac, 0x20, -0xe7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0x9a, 0x20, -0xc8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.8, 0x0]
            }, {
                'p': [0xbf, 0x20, -0xe1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.8, 0x0]
            }, {
                'p': [0xc7, 0x20, -0xe7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.45, 3.14]
            }, {
                'p': [0xd8, 0x20, -0xbf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.45, 3.14]
            }, {
                'p': [0xf7, 0x20, -0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [0x111, 0x20, -0xce],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [0x118, 0x20, -0xdd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [0x108, 0x20, -0xed],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.95, 0x0]
            }, {
                'p': [0xe6, 0x20, -0xea],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.47, -3.14]
            }, {
                'p': [0xef, 0x20, -0x106],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.47, -3.14]
            }, {
                'p': [0x113, 0x20, -0x10f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0xf0, 0x20, -0x12d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0x113, 0x20, -0x140],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0xfd, 0x20, -0x14b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.62, 0x0]
            }, {
                'p': [0xac, 0x20, -0xa1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.45, 3.14]
            }, {
                'p': [0xd8, 0x20, -0x9d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.77, 0x0]
            }, {
                'p': [0xab, 0x20, -0x89],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.59, -3.14]
            }, {
                'p': [0xbd, 0x20, -0x5b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.59, -3.14]
            }, {
                'p': [0xb6, 0x20, -0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [0x9e, 0x20, -0x78],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [0xe1, 0x20, -0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.59, -3.14]
            }, {
                'p': [0xd8, 0x20, -0x80],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.12, -1.5, -3.12]
            }, {
                'p': [0xfa, 0x20, -0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.59, 0x0]
            }, {
                'p': [0x101, 0x20, -0x70],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.11, 0x0]
            }, {
                'p': [0x10d, 0x20, -0x6d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.24, 0x0]
            }, {
                'p': [0x10a, 0x20, -0x5a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.41, 0x0]
            }, {
                'p': [0xe6, 0x20, -0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.41, -3.14]
            }, {
                'p': [0x10e, 0x20, -0x3d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.41, -3.14]
            }, {
                'p': [0x118, 0x20, -0x31],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.41, -3.14]
            }, {
                'p': [0x118, 0x20, -0x6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.11, 0x0]
            }, {
                'p': [0xe7, 0x20, -0x17],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.06, 0x0]
            }, {
                'p': [0xda, 0x20, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.81, 0x0]
            }, {
                'p': [0x126, 0x20, 0x1f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.76, 0x0]
            }, {
                'p': [0x126, 0x20, 0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.76, 0x0]
            }, {
                'p': [0xfb, 0x20, 0x4d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.28, 0x0]
            }, {
                'p': [0xc7, 0x20, 0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xbf, 0x20, 0x19],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xc0, 0x20, 0x4a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xc0, 0x20, 0x55],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xc2, 0x20, 0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xd2, 0x20, 0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.82, -3.14]
            }, {
                'p': [0xc5, 0x20, 0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.82, -3.14]
            }, {
                'p': [0xe4, 0x20, 0x78],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.34, -3.14]
            }, {
                'p': [0xf2, 0x20, 0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.75, 0x0]
            }, {
                'p': [0xd9, 0x20, 0x73],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.34, -3.14]
            }, {
                'p': [0x117, 0x20, 0x62],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.34, -3.14]
            }, {
                'p': [0x11a, 0x20, 0x56],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.75, 0x0]
            }, {
                'p': [0x89, 0x20, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0x90, 0x20, 0x15],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0x60, 0x20, 0x1a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.99, -3.14]
            }, {
                'p': [0x6a, 0x20, -0x11],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.99, -3.14]
            }, {
                'p': [0x39, 0x2f, 0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x67, 0x2f, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0]
            }, {
                'p': [0x7b, 0x2f, 0x74],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x5e, 0x2f, 0x57],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x30, 0x44, 0x18],
                's': [0x2, 0x2, 0x1e],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x2d, 0x37, -0x19],
                's': [0x2, 0x3, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x2e, 0x44, -0xc],
                's': [0x2, 0x2, 0x1e],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x17, 0x37, 0x46],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x15, 0x37, 0x46],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x16, 0x36, 0x44],
                's': [0x2, 0x3, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0xe, 0x5b, -0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x1c, 0x5b, -0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x7, 0x5c, -0x82],
                's': [0x2d, 0x14, 0x1],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [-0x2a, 0x30, -0x7c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2f, 0x5b, -0x87],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.17, 0x0]
            }, {
                'p': [-0x11, 0x5b, -0x87],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0]
            }, {
                'p': [0x7, 0x5c, -0x82],
                's': [0x2e, 0x1, 0x2],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [0x26, 0x67, -0x8f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.17, 0x0]
            }, {
                'p': [-0x10, 0x62, -0x88],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0]
            }, {
                'p': [-0x4c, 0x6a, -0x96],
                's': [0x22, 0x14, 0x28],
                'c': '#ffd5b1'
            }, {
                'p': [-0x4c, 0x7e, -0x96],
                's': [0x24, 0x3, 0x2a],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x3f, 0x7a, -0x87],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x3f, 0x8d, -0x87],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x3f, 0x92, -0x85],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x46, 0x6b, 0x19],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x46, 0x7e, 0x19],
                's': [0x1, 0x6, 0x1],
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x46, 0x83, 0x1b],
                's': [0x1, 0x3, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x1e, 0x5e, -0x82],
                's': [0x6, 0x2, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x20, 0x60, -0x82],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xfa, 0x62, -0x12],
                's': [0x1f, 0x2, 0x48],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xec, 0x58, -0x25],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xec, 0x58, 0x10],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xec, 0x58, -0xa],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x108, 0x58, -0xa],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x108, 0x58, 0x10],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x107, 0x58, -0x25],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x64, -0x1e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [-0xeb, 0x6f, -0x2b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xef, 0x58, 0xb],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xa6, 0x79, -0x15f],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xa6, 0x65, -0x15f],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [-0xc0, 0x65, -0x16d],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x8c, 0x65, -0x16d],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xa7, 0x65, -0x16d],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xa7, 0x65, -0x150],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xc0, 0x65, -0x151],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x8c, 0x65, -0x151],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x88, 0x73, -0x158],
                's': [0x1, 0x8, 0x7],
                'l': 0x1,
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [-0xb3, 0x6a, -0x153],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x90, 0x7a, -0x166],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x8a, 0x7a, -0x158],
                's': [0x3, 0x1, 0x7],
                'l': 0x1,
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [-0x5f, 0x79, -0x17f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0x6e, 0x65, -0x161],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0xde, 0x65, -0x16a],
                's': [0x36, 0x2c, 0x38],
                'c': '#ffd5b1'
            }, {
                'p': [-0xde, 0x8f, -0x16a],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x2b, 0x37, -0x19],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0x2d, 0x37, -0x1b],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0x2b, 0x37, -0x1b],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0xde, 0x55, 0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x108, 0x55, 0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf3, 0x57, 0x83],
                's': [0x2d, 0x14, 0x1],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [0xd9, 0x55, 0x86],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0]
            }, {
                'p': [0xf3, 0x57, 0x82],
                's': [0x2e, 0x1, 0x2],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [0xd5, 0x5d, 0x89],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 1.21, 0x0]
            }, {
                'p': [0x145, 0x39, -0x4],
                's': [0x12, 0x2e, 0x26],
                'c': '#ffd5b1'
            }, {
                'p': [0x145, 0x67, -0x4],
                's': [0x15, 0x3, 0x28],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x144, 0x5f, 0xa],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x144, 0x72, 0xa],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x144, 0x77, 0xc],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x53, 0x79, -0x17c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0xcc, 0x89, -0x131],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0]
            }, {
                'p': [-0xcb, 0x81, -0x130],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0xcc, 0x7f, -0x126],
                's': [0x2, 0x19, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xcb, 0x83, -0x116],
                's': [0x1, 0x14, 0x2c],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xcb, 0x83, -0x116],
                's': [0x3, 0x1, 0x2d],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xcc, 0x7f, -0x106],
                's': [0x2, 0x19, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xca, 0x81, -0x137],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0]
            }, {
                'p': [-0xd6, 0x81, -0x103],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [-0xe3, 0x81, -0xff],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0xc9, 0x88, -0x153],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc9, 0x9b, -0x153],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc9, 0xa0, -0x151],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xd2, 0x55, 0x8a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.34, 0x0]
            }, {
                'p': [0x27, 0xc, -0x10],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.16, 0x0]
            }, {
                'p': [-0x1b, 0xc, 0x7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.76, -3.14]
            }, {
                'p': [-0x3d, 0xc, 0xa],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.81, -3.14]
            }, {
                'p': [-0x3b, 0x16, -0x3f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.24, 0x0]
            }, {
                'p': [-0x4d, 0x16, -0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.41, 0x0]
            }, {
                'p': [-0x80, 0x20, -0x2a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x57, 0x20, 0x2f],
                's': [0x3f, 0x2, 0x43],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x76, 0x18, 0x99],
                's': [0x5, 0x7f, 0x6],
                'v': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xe, 0x24, -0x101],
                's': [0x5, 0x7b, 0x6],
                'v': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x1b6, 0x20, 0x42],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [0x18d, 0x20, 0xf],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0]
            }, {
                'p': [0x16, 0x2f, 0x3f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x22, 0x2f, 0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x20, 0x2f, 0x44],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x2d, 0x2f, 0x33],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [-0x1d, 0x2f, 0x2a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.06, 1.56, 3.06]
            }, {
                'p': [-0x2a, 0x2f, -0xd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.06, 1.56, 3.06]
            }, {
                'p': [-0x2a, 0x2f, -0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x9, 0x2f, -0x1f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [-0x2c, 0x2f, -0x5b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [-0x20, 0x2f, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x2a, 0x2f, -0x38],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x2a, 0x2f, -0x58],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x20, 0x2f, -0x1d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.23, 3.14]
            }, {
                'p': [0x8a, 0x20, -0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [0x8a, 0x20, -0x55],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [-0xa, 0x2f, -0x29],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.19, 3.14]
            }, {
                'p': [0xa, 0x2f, -0x11],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.06, 0x0]
            }, {
                'p': [0x105, 0x20, 0x50],
                's': [0x9, 0xe, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x10f, 0x20, 0x50],
                's': [0xc, 0x3, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x10f, 0x2c, 0x50],
                's': [0xb, 0x3, 0x4],
                'c': '#7a6a5d',
                't': 0xb
            }, {
                'p': [0x113, 0x23, 0x4e],
                's': [0x3, 0xa, 0x1],
                'pe': 0x1,
                'c': '#b4b4b4',
                't': 0x2
            }, {
                'p': [0x110, 0x22, 0x4e],
                's': [0x3, 0xc, 0x1],
                'pe': 0x1,
                'c': '#898989',
                't': 0x2
            }, {
                'p': [0x10d, 0x23, 0x4e],
                's': [0x3, 0xa, 0x1],
                'pe': 0x1,
                'c': '#cacaca',
                't': 0x2
            }, {
                'p': [0x10a, 0x23, 0x4e],
                's': [0x3, 0xb, 0x1],
                'pe': 0x1,
                'c': '#898989',
                't': 0x2
            }, {
                'p': [0xcb, 0x2f, 0x50],
                's': [0xb, 0x1, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x71, 0x2e, -0x13f],
                's': [0x5, 0x1, 0xb],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x71, 0x2e, -0x123],
                's': [0x5, 0x2, 0xb],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x68, 0x21, -0x149],
                's': [0x7, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.36, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x32, 0x4d, -0x24],
                's': [0x8, 0x1, 0x65],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1
            }, {
                'p': [-0x34, 0x4d, -0x19],
                's': [0x8, 0x1, 0xd4],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1,
                'd': 0x2
            }, {
                'p': [-0x29, 0x4d, 0x4d],
                's': [0x22, 0x1, 0x8],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1,
                'd': 0x1
            }, {
                'p': [0x1a, 0x4d, 0x4d],
                's': [0x18, 0x1, 0x8],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1,
                'd': 0x1
            }, {
                'p': [0xb0, 0x43, -0xea],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xb0, 0x44, -0xec],
                's': [0x6, 0x1, 0x10],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x2e, 0x5a, -0xc3],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x2e, 0x6d, -0xc3],
                's': [0x1, 0x5, 0x1],
                'l': 0x1,
                'r': [-0.44, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x34, 0xc, -0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.76, -3.14]
            }, {
                'p': [0x2, 0xc, -0xf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.16, 0x0]
            }, {
                'p': [-0xd9, 0x20, -0x19],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x95, 0x20, -0xfc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.62, 0x0],
                'c': '#d2b559'
            }, {
                'p': [-0x6e, 0x32, 0x92],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x7c, 0x32, 0xa1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.26, 0x0]
            }, {
                'p': [0xc3, 0x20, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.28, 0x0]
            }, {
                'p': [-0xe1, 0x2f, 0x84],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0x87, 0x20, -0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.97, 0x0]
            }, {
                'p': [0xa4, 0xc0, 0x8e],
                's': [0x4, 0x4, 0x28],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0xc0, 0x8e],
                's': [0x29, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf0, 0x21, -0xca],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x10b, 0x21, -0x65],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0xd8, 0x20, -0x7],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x11e, 0x20, 0x1f],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x10d, 0x20, -0x35],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x103, 0x20, 0x4a],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x15, 0xc, 0x7],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x8, 0xd, -0xf],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.27, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x9d, 0x20, 0x42],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0xdd, 0x21, 0x17],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [3.14, -1.49, 3.14],
                'c': '#9d8672'
            }, {
                'p': [-0x88, 0x30, 0x8a],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 1.14, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x81, 0x21, -0xe],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.04, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x8f, 0x21, -0xfb],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [-0xcc, 0x21, -0xe7],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [0x99, 0x21, -0x137],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x7c, 0x21, -0xcb],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.09, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0xd8, 0x21, -0x8d],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x96, 0x21, 0x15],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x16, 0x30, 0x55],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.34, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x24, 0x30, 0x39],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.34, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x36, 0x30, 0x55],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x28, 0x30, -0x15],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x11, 0x30, 0x47],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0xa, 0x37, -0x17],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0xa, 0x37, -0x19],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x8, 0x35, -0x18],
                's': [0x2, 0x3, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0xc1, 0x20, -0x29],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.87, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0xc3, 0x20, -0x23],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x85, 0x20, -0x14],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x97, 0x21, -0xd0],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [0xdf, 0x20, 0x4d],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0xf8, 0x20, 0x4b],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0xb9, 0x30, 0x84],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'r': [0x0, 1.14, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x14, 0x30, 0x4c],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 1.49, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x2c, 0x2f, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x7, 0x2f, -0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.32, 0x0]
            }]
        }, {
            'name': 'Subzero',
            'ambInd': 0x1,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x1,
            'skyDomeCol0': '#ffffff',
            'skyDomeCol1': '#7196a2',
            'skyDomeCol2': '#184452',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0x828c96,
            'light': 0xf5f8fa,
            'sky': 0xd3d9dc,
            'fog': 0xc6d3d9,
            'fogD': 601.943118216585,
            'dthY': -0x64,
            'camPos': [-0xd, 0x5d, -0x6],
            'spawns': [
                [-0x29, 0x43, -0x3a, 0x0],
                [-0xbb, 0x36, -0xee, 0x0, 0x2],
                [-0x12b, 0x36, 0x2, 0x0, 0x3],
                [0x83, 0x43, -0xcb, 0x0, 0x3],
                [0xba, 0x43, -0xfa, 0x0],
                [0x15e, 0x43, -0x109, 0x0, 0x2],
                [0x13f, 0x56, -0x3b, 0x0],
                [0xb2, 0x54, -0x31, 0x0],
                [0x8c, 0x54, -0xd, 0x0, 0x1],
                [-0xa2, 0x43, 0x3f, 0x0]
            ],
            'ambO': 0x1,
            'ambS': 0x5,
            'objects': [{
                'p': [-0x1, 0x40, 0x0],
                's': [0x8c, 0x2, 0x8e],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x64, 0x40, 0x32],
                's': [0x3a, 0x2, 0x2a],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x95, 0x35, 0x8],
                's': [0x28, 0xd, 0x7e],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x8b, 0x33, -0x6f],
                's': [0xac, 0x2, 0x82],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x115, 0x33, -0x4d],
                's': [0x68, 0x2, 0xca],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x5, 0x40, -0x7b],
                's': [0x3c, 0x2, 0x68],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x36, 0x33, -0x8f],
                's': [0x3a, 0xf, 0x2a],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xf0, 0x41, -0x145],
                's': [0x84, 0x2, 0x26],
                'c': 0x575757,
                't': 0xb
            }, {
                'p': [0xd5, 0x40, -0xcf],
                's': [0x28, 0x2, 0x3f],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xd5, 0x40, -0x70],
                's': [0x27, 0x14, 0x25],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x7c, 0x33, -0x11d],
                's': [0xcb, 0x2, 0x32],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc6, 0x32, -0xda],
                's': [0x26, 0x2, 0x54],
                'c': 0x737373,
                't': 0x1
            }, {
                'p': [0x157, 0x40, -0xfc],
                's': [0x4d, 0x2, 0x2b],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x157, 0x40, -0x7a],
                's': [0x52, 0x2, 0xd9],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x147, 0x40, -0xb],
                's': [0x8c, 0x14, 0x81],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x146, 0xb, -0x4d],
                's': [0x9, 0x2f, 0x278],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [-0xaab, 0xb, -0x4d],
                's': [0x14f2, 0x1f, 0x2d05],
                'l': 0x1,
                'c': 0x4f677d,
                't': 0x5
            }, {
                'p': [-0x122, 0x33, -0xd9],
                's': [0x4e, 0x38, 0x50],
                'c': 0x8e8d7a,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x33, -0xb2],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x148, 0x38, -0xb2],
                's': [0x4, 0x33, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x33, -0x100],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x122, 0x4c, -0xb2],
                's': [0x48, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x122, 0x67, -0xb2],
                's': [0x48, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x122, 0x33, -0xb2],
                's': [0x4, 0x46, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x4c, -0xd9],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0xfc, 0x67, -0xd9],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x10c, 0x71, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [-0x138, 0x71, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [-0x122, 0x6b, -0xd9],
                's': [0x4d, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x122, 0x78, -0xd9],
                's': [0x5, 0x5, 0x59],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x10b, 0x73, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x139, 0x73, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x122, 0x7d, -0xd9],
                's': [0x5, 0x2, 0x59],
                't': 0x5
            }, {
                'p': [-0x114, 0x33, -0xb2],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x108, 0x33, -0xb2],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x10e, 0x47, -0xb2],
                's': [0xe, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x122, 0x6f, -0xd9],
                's': [0x37, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x122, 0x73, -0xd9],
                's': [0x22, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x122, 0x77, -0xd9],
                's': [0xd, 0x2, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x13f, 0x38, -0xc6],
                's': [0x9, 0x48, 0x14],
                'c': 0x7f7f7f,
                't': 0xb
            }, {
                'p': [-0xea, 0x33, -0xd4],
                's': [0x22, 0x28, 0x60],
                'c': 0x878787,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x97, 0x33, -0xd4],
                's': [0x3c, 0x28, 0x60],
                'c': 0x7f7f7f,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xba, 0x5a, -0xd4],
                's': [0x80, 0x1f, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xf9, 0x5b, -0xa6],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xcf, 0x5b, -0xa6],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa5, 0x5b, -0xa6],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x7b, 0x5b, -0xa6],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xd9, 0x35, -0xa4],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb5, 0x35, -0xa4],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc7, 0x51, -0xa4],
                's': [0x21, 0x3, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xdd, 0x83, -0xd4],
                's': [0x46, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x787777,
                't': 0x2
            }, {
                'p': [-0xba, 0x8d, -0xd4],
                's': [0x7, 0x7, 0x6c],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x96, 0x83, -0xd4],
                's': [0x49, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x787777,
                't': 0x2
            }, {
                'p': [-0x95, 0x86, -0xd4],
                's': [0x49, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0xba, 0x94, -0xd4],
                's': [0x7, 0x3, 0x6c],
                't': 0x5
            }, {
                'p': [-0xa5, 0x79, -0xa6],
                's': [0x4, 0x10, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xcf, 0x79, -0xa6],
                's': [0x4, 0x11, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xba, 0x79, -0xd4],
                's': [0x7d, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0xba, 0x7f, -0xd4],
                's': [0x5d, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0xba, 0x85, -0xd4],
                's': [0x3c, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0xba, 0x8b, -0xd4],
                's': [0x20, 0x4, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x87, 0x4c, -0xec],
                's': [0x9, 0x48, 0x14],
                'c': 0x575757,
                't': 0xb
            }, {
                'p': [-0x102, 0x33, -0x11e],
                's': [0x42, 0x3a, 0x38],
                'c': 0x7a858c,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x7b, 0x5b, -0x102],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xf9, 0x5b, -0x102],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xcf, 0x5b, -0x102],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa5, 0x5b, -0x102],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xcf, 0x79, -0x102],
                's': [0x4, 0x11, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xa5, 0x79, -0x102],
                's': [0x4, 0x11, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xe2, 0x35, -0x105],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe2, 0x4d, -0x120],
                's': [0x4, 0x4, 0x32],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0xe2, 0x69, -0x120],
                's': [0x4, 0x4, 0x32],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x101, 0x76, -0x11f],
                's': [0x48, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x101, 0x71, -0x12f],
                's': [0x44, 0x2, 0x20],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x101, 0x70, -0x10b],
                's': [0x44, 0x2, 0x28],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x102, 0x6d, -0x11f],
                's': [0x42, 0x3, 0x38],
                'c': 0x7a858c,
                't': 0xa
            }, {
                'p': [-0x101, 0x73, -0x12f],
                's': [0x44, 0x2, 0x21],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x101, 0x7a, -0x11f],
                's': [0x48, 0x2, 0x4],
                't': 0x5
            }, {
                'p': [-0x102, 0x70, -0x11e],
                's': [0x42, 0x4, 0x26],
                'c': 0x7a858c,
                't': 0xa
            }, {
                'p': [-0x102, 0x74, -0x11f],
                's': [0x42, 0x3, 0x15],
                'c': 0x7a858c,
                't': 0xa
            }, {
                'p': [-0x101, 0x72, -0x10a],
                's': [0x44, 0x2, 0x29],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xe1, 0x33, -0x10f],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x33, -0x11b],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x47, -0x115],
                's': [0x2, 0x2, 0xe],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc1, 0x33, -0x149],
                's': [0x42, 0x26, 0x38],
                'c': 0x6c7f76,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xdf, 0x35, -0x12e],
                's': [0x4, 0x2a, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa1, 0x35, -0x12e],
                's': [0x4, 0x2a, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc0, 0x57, -0x12e],
                's': [0x3a, 0x8, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe2, 0x35, -0x13b],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc0, 0x60, -0x147],
                's': [0x44, 0x2, 0x39],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x555555,
                't': 0x2
            }, {
                'p': [-0xc0, 0x62, -0x147],
                's': [0x44, 0x2, 0x39],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xc1, 0x59, -0x149],
                's': [0x42, 0x6, 0x38],
                'c': 0x6c7f76,
                't': 0xa
            }, {
                'p': [-0xc1, 0x5c, -0x153],
                's': [0x42, 0x3, 0x24],
                'c': 0x6c7f76,
                't': 0x5
            }, {
                'p': [-0xc1, 0x5f, -0x15b],
                's': [0x42, 0x3, 0x14],
                'c': 0x6c7f76,
                't': 0xa
            }, {
                'p': [-0xba, 0x33, -0x12e],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xae, 0x33, -0x12e],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb4, 0x47, -0x12e],
                's': [0xe, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd8, 0x33, -0xfe],
                's': [0x13, 0x2, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc3, 0x33, -0x101],
                's': [0xc, 0x2, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xb9, 0x33, -0xfe],
                's': [0x8, 0x2, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xd3, 0x33, -0xb7],
                's': [0xc, 0x2, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc9, 0x33, -0xb3],
                's': [0x8, 0x2, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xb7, 0x33, -0xb6],
                's': [0x8, 0x2, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc5, 0x33, -0x3e],
                's': [0x38, 0x39, 0x50],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xe0, 0x33, -0x65],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe0, 0x33, -0x17],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x33, -0x17],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x33, -0x65],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x4d, -0x65],
                's': [0x32, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0xc5, 0x69, -0x65],
                's': [0x32, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x69, -0x3e],
                's': [0x3a, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x79, -0x3e],
                's': [0x41, 0x6, 0x6],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x74, -0x54],
                's': [0x3f, 0x2, 0x2b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x666666,
                't': 0x2
            }, {
                'p': [-0xc5, 0x74, -0x28],
                's': [0x3f, 0x2, 0x2c],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x666666,
                't': 0x2
            }, {
                'p': [-0xc5, 0x76, -0x27],
                's': [0x3f, 0x2, 0x2c],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xc5, 0x76, -0x55],
                's': [0x3f, 0x2, 0x2b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xc5, 0x7f, -0x3e],
                's': [0x41, 0x2, 0x6],
                't': 0x5
            }, {
                'p': [-0xc5, 0x6d, -0x3e],
                's': [0x38, 0x3, 0x52],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xba, 0x75, -0xd4],
                's': [0x7a, 0x4, 0x60],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x70, -0x3e],
                's': [0x38, 0x3, 0x42],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xc5, 0x73, -0x3e],
                's': [0x38, 0x4, 0x32],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xc5, 0x77, -0x3e],
                's': [0x38, 0x4, 0x1c],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xe0, 0x33, -0x3e],
                's': [0x5, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x33, -0x3e],
                's': [0x5, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb0, 0x5c, -0x5a],
                's': [0x7, 0x27, 0xc],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [-0xe1, 0x33, -0x24],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x33, -0x30],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x47, -0x2a],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x33, 0xe],
                's': [0x4a, 0x48, 0x46],
                'c': 0x607060,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xe9, 0x33, -0x14],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe9, 0x33, 0x30],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0xa1, 0x33, 0x30],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa1, 0x33, -0x14],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x35, 0xe],
                's': [0x4d, 0xc, 0x49],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [-0xa0, 0x5b, 0xe],
                's': [0x2, 0x4, 0x40],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0xc5, 0x78, 0xe],
                's': [0x4c, 0x4, 0x40],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa0, 0x42, -0x9],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa0, 0x42, 0x3],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa0, 0x54, -0x3],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x78, -0x14],
                's': [0x44, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x78, 0x30],
                's': [0x44, 0x4, 0x4],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0xc5, 0x88, 0xe],
                's': [0x5, 0x5, 0x50],
                'c': 0x969696,
                't': 0x2
            }, {
                'p': [-0xdb, 0x82, 0xe],
                's': [0x2a, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0xb0, 0x82, 0xe],
                's': [0x29, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0xc5, 0x7c, 0xe],
                's': [0x4a, 0x4, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xb0, 0x84, 0xe],
                's': [0x2b, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0xdb, 0x84, 0xe],
                's': [0x2c, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0xc5, 0x8d, 0xe],
                's': [0x5, 0x2, 0x50],
                't': 0x5
            }, {
                'p': [-0xc5, 0x80, 0xe],
                's': [0x35, 0x4, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xc5, 0x88, 0xe],
                's': [0xb, 0x3, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xc5, 0x84, 0xe],
                's': [0x1f, 0x4, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xc5, 0x5b, -0x14],
                's': [0x44, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x119, 0x33, 0x40],
                's': [0x60, 0x3a, 0x50],
                'c': 0x735656,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x11a, 0x4e, 0x19],
                's': [0x58, 0x4, 0x4],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [-0x11a, 0x78, 0x40],
                's': [0x66, 0x7, 0x7],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x11a, 0x74, 0x2b],
                's': [0x64, 0x2, 0x30],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x11a, 0x73, 0x57],
                's': [0x64, 0x2, 0x31],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x11a, 0x76, 0x2a],
                's': [0x64, 0x2, 0x30],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x11a, 0x75, 0x58],
                's': [0x64, 0x2, 0x31],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x11a, 0x7f, 0x40],
                's': [0x66, 0x2, 0x7],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x119, 0x6d, 0x40],
                's': [0x60, 0x4, 0x50],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x119, 0x71, 0x40],
                's': [0x60, 0x4, 0x3a],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x119, 0x75, 0x40],
                's': [0x60, 0x4, 0x23],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x119, 0x79, 0x40],
                's': [0x60, 0x3, 0xf],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x108, 0x33, 0x19],
                's': [0x2, 0x16, 0x4],
                'c': 0x898888,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x33, 0x19],
                's': [0x2, 0x16, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x102, 0x47, 0x19],
                's': [0xa, 0x2, 0x4],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x146, 0x3a, -0x4d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x3d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x5d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x6d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x7e],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x8f],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0xa0],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0xb1],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x2c],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x1b],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0xa],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, 0x7],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, 0x18],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3d, -0x4f],
                's': [0x2, 0x2, 0xcd],
                'c': 0xcfcfcf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x78, 0x33, -0x9f],
                's': [0x4, 0x37, 0x4],
                'c': 0x939393,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x33, -0x9f],
                's': [0x4, 0x37, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x33, -0x109],
                's': [0x4, 0x37, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x78, 0x33, -0x109],
                's': [0x4, 0x37, 0x4],
                'c': 0x7a7a7a,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x109],
                's': [0x4, 0x48, 0x5],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x9f],
                's': [0x4, 0x48, 0x5],
                'c': 0x8c8c8c,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x64, 0x72, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0x48, 0x7a, -0xd4],
                's': [0x6, 0x6, 0x77],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x2d, 0x72, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0x48, 0x4e, -0x109],
                's': [0x5c, 0x4, 0x4],
                'c': 0x757575,
                't': 0x2
            }, {
                'p': [-0x18, 0x4e, -0xd4],
                's': [0x4, 0x4, 0x66],
                'c': 0x7f7f7f,
                't': 0x2
            }, {
                'p': [-0x48, 0x4e, -0x9f],
                's': [0x5c, 0x4, 0x4],
                'c': 0x8c8c8c,
                't': 0x2
            }, {
                'p': [-0x78, 0x4e, -0xd4],
                's': [0x4, 0x4, 0x66],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x48, 0x66, -0x9f],
                's': [0x5c, 0x4, 0x4],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x66, -0x109],
                's': [0x5c, 0x4, 0x4],
                'c': 0x939393,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x33, -0xd4],
                's': [0x5, 0x37, 0x4],
                'c': 0x7f7f7f,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x66, -0xd4],
                's': [0x4, 0x4, 0x66],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x78, 0x66, -0xd4],
                's': [0x4, 0x4, 0x66],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x2c, 0x75, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x65, 0x75, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x48, 0x80, -0xd4],
                's': [0x6, 0x2, 0x77],
                't': 0x5
            }, {
                'p': [-0x6f, 0x33, -0x109],
                's': [0x2, 0x17, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x63, 0x33, -0x109],
                's': [0x2, 0x17, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x69, 0x48, -0x109],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x6c, 0x33, -0x164],
                's': [0x66, 0x3c, 0x5c],
                'c': 0x7d6565,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x3a, 0x35, -0x137],
                's': [0x4, 0x3b, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9e, 0x35, -0x137],
                's': [0x4, 0x3b, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9e, 0x35, -0x165],
                's': [0x4, 0x37, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x7c, 0x35, -0x137],
                's': [0x4, 0x4a, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x5c, 0x35, -0x137],
                's': [0x4, 0x4b, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x6c, 0x4f, -0x137],
                's': [0x60, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x6c, 0x6c, -0x137],
                's': [0x60, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x6c, 0x81, -0x164],
                's': [0x6, 0x6, 0x69],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x88, 0x79, -0x164],
                's': [0x39, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x595959,
                't': 0x2
            }, {
                'p': [-0x3a, 0x6c, -0x166],
                's': [0x4, 0x4, 0x5a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9e, 0x6c, -0x163],
                's': [0x4, 0x4, 0x54],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x89, 0x7c, -0x164],
                's': [0x39, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x6c, 0x87, -0x164],
                's': [0x6, 0x2, 0x69],
                't': 0x5
            }, {
                'p': [-0x4f, 0x7c, -0x164],
                's': [0x39, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x50, 0x79, -0x164],
                's': [0x39, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x5c5c5c,
                't': 0x2
            }, {
                'p': [-0x6c, 0x70, -0x164],
                's': [0x66, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x75, -0x164],
                's': [0x4d, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x7a, -0x164],
                's': [0x31, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x7f, -0x164],
                's': [0x16, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x94, 0x33, -0x137],
                's': [0x2, 0x16, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x88, 0x33, -0x137],
                's': [0x2, 0x16, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x8e, 0x47, -0x137],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x65, 0x33, -0x14],
                's': [0x3c, 0x3e, 0x64],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x82, -0x14],
                's': [0x5, 0x5, 0x6c],
                'c': 0x969696,
                't': 0x2
            }, {
                'p': [-0x82, 0x33, 0x1d],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, 0x1d],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x47],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x33, -0x47],
                's': [0x4, 0x46, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x33, -0x79],
                's': [0x4, 0x46, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x80, 0x33, -0x79],
                's': [0x4, 0x46, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x4e, 0x33, -0x79],
                's': [0x4, 0x46, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x13],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x57, 0x1d],
                's': [0x36, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x65, 0x6e, 0x1d],
                's': [0x36, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x67, 0x5b, -0x79],
                's': [0x2e, 0x4, 0x4],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x34, 0x5b, -0x79],
                's': [0x30, 0x4, 0x4],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x31, 0x5b, -0x47],
                's': [0x2a, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x34, 0x75, -0x79],
                's': [0x30, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x67, 0x75, -0x79],
                's': [0x2e, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x57, 0x5],
                's': [0x3e, 0x4, 0x2c],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x80, 0x5b, -0x5f],
                's': [0x4, 0x4, 0x30],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x1a, 0x75, -0x60],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x5b, -0x60],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x54, 0x7a, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [-0x76, 0x7a, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, 0.53],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [-0x34, 0x75, -0x47],
                's': [0x30, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x82, 0x33, -0x45],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x82, 0x33, -0x13],
                's': [0x5, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x72, -0x14],
                's': [0x3d, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x76, -0x14],
                's': [0x32, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [-0x65, 0x7a, -0x14],
                's': [0x23, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [-0x65, 0x7e, -0x14],
                's': [0x16, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [-0x65, 0x82, -0x14],
                's': [0x9, 0x1, 0x64],
                'c': 0x6a686e,
                't': 0x5
            }, {
                'p': [-0x77, 0x7c, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, 0.53],
                't': 0x5
            }, {
                'p': [-0x53, 0x7c, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [-0x65, 0x87, -0x14],
                's': [0x5, 0x2, 0x6c],
                't': 0x5
            }, {
                'p': [-0x4d, 0x33, -0x60],
                's': [0x68, 0x44, 0x34],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x80, 0x75, -0x5f],
                's': [0x4, 0x4, 0x30],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x4d, 0x77, -0x60],
                's': [0x68, 0x5, 0x34],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [-0x4d, 0x81, -0x60],
                's': [0x72, 0x5, 0x5],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x4d, 0x7d, -0x70],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x4d, 0x7d, -0x50],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x4d, 0x7f, -0x71],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x4d, 0x7f, -0x4f],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x4d, 0x86, -0x60],
                's': [0x72, 0x2, 0x5],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x4d, 0x7c, -0x60],
                's': [0x68, 0x4, 0x26],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [-0x4d, 0x80, -0x60],
                's': [0x68, 0x4, 0x10],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [-0x2e, 0x41, -0x4b],
                's': [0xc, 0x4d, 0x6],
                'c': 0xa2a2a2,
                't': 0xb
            }, {
                'p': [-0x19, 0x40, -0x66],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x19, 0x40, -0x5a],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x19, 0x54, -0x60],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x5c, 0x35, -0x57],
                's': [0x4d, 0xc, 0x49],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [0xaf, 0x42, -0xfe],
                's': [0x6, 0x29, 0x2e],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x67, -0x14e],
                's': [0x6, 0x15, 0x1b],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xf2, 0x42, -0x15b],
                's': [0x80, 0x3e, 0x7],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x10b, 0x42, -0xec],
                's': [0x4e, 0x31, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x42, -0x148],
                's': [0x6, 0x25, 0x2e],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xb7, 0x42, -0xd4],
                's': [0x26, 0x66, 0x26],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xef, 0x41, -0x103],
                's': [0x7d, 0x2, 0x26],
                'c': 0x575757,
                't': 0xb
            }, {
                'p': [0xf0, 0x41, -0x124],
                's': [0x7b, 0x2, 0x1c],
                'c': 0x662828,
                't': 0x5
            }, {
                'p': [-0x66, 0x42, 0x76],
                's': [0x7e, 0x26, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xa4, 0x42, 0x48],
                's': [0x4, 0x26, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x28, 0x42, 0x48],
                's': [0x4, 0x26, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x42, 0x48],
                's': [0x4, 0x3e, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x64, 0x48],
                's': [0x78, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x7e, 0x75],
                's': [0x6, 0x6, 0x66],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x43, 0x73, 0x75],
                's': [0x47, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x505050,
                't': 0x2
            }, {
                'p': [-0x89, 0x73, 0x75],
                's': [0x45, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x505050,
                't': 0x2
            }, {
                'p': [-0x89, 0x76, 0x75],
                's': [0x47, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x66, 0x84, 0x75],
                's': [0x6, 0x2, 0x66],
                't': 0x5
            }, {
                'p': [-0x42, 0x76, 0x75],
                's': [0x47, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x66, 0x68, 0x76],
                's': [0x82, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x6e, 0x76],
                's': [0x61, 0x5, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x66, 0x73, 0x76],
                's': [0x46, 0x5, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x66, 0x78, 0x76],
                's': [0x2b, 0x5, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x66, 0x7d, 0x76],
                's': [0x11, 0x3, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x7f, 0x42, 0x48],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x8b, 0x42, 0x48],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x85, 0x55, 0x48],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc2, 0x33, 0x4d],
                's': [0x38, 0x31, 0x41],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xb3, 0x69, 0x3b],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [-0xb2, 0x6b, 0x3b],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [-0xa7, 0x5d, 0x3c],
                's': [0x4, 0x4, 0x16],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x33, -0x8d],
                's': [0x54, 0x3e, 0x8e],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x3e, -0x81],
                's': [0x52, 0x32, 0x80],
                'c': 0x7d6565,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x30, 0x5c, 0x58],
                's': [0x7, 0x22, 0xc],
                'c': 0x666666,
                't': 0xb
            }, {
                'p': [0x23, 0x42, -0xd3],
                's': [0x4, 0x30, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x75, 0x42, -0xd3],
                's': [0x4, 0x30, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x42, -0x47],
                's': [0x4, 0x30, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x42, -0xa5],
                's': [0x5, 0x45, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x42, -0x75],
                's': [0x5, 0x45, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x42, -0xd3],
                's': [0x4, 0x30, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x4d, -0x3e],
                's': [0x3a, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x4c, 0x57, -0xd3],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x4c, 0x6e, -0xd3],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x6e, -0x8d],
                's': [0x4, 0x4, 0x88],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x57, -0x8d],
                's': [0x4, 0x4, 0x88],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x4c, 0x57, -0x47],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x4c, 0x6e, -0x47],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x8a, -0x8d],
                's': [0x66, 0x6, 0x6],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x7e, -0xb3],
                's': [0x5c, 0x3, 0x51],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x464545,
                't': 0x2
            }, {
                'p': [0x4c, 0x7e, -0x67],
                's': [0x5c, 0x3, 0x51],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x464545,
                't': 0x2
            }, {
                'p': [0x4c, 0x81, -0x66],
                's': [0x5c, 0x2, 0x51],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x4c, 0x90, -0x8d],
                's': [0x66, 0x2, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4c, 0x72, -0x8d],
                's': [0x54, 0x14, 0x2f],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x86, -0x8d],
                's': [0x54, 0x5, 0x21],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x81, -0xb4],
                's': [0x5c, 0x2, 0x51],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xdd, 0x86, -0xd4],
                's': [0x48, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x75, 0x6e, -0x8d],
                's': [0x4, 0x4, 0x88],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xc6, 0x42, -0xc0],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xc6, 0x42, -0x42],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9f, 0x54, -0x42],
                's': [0x4, 0x33, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xc6, 0x42, -0x81],
                's': [0x5, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x42, -0x9e],
                's': [0x55, 0x11, 0x4a],
                'c': 0x6e665e,
                't': 0xb
            }, {
                'p': [0x75, 0x57, -0xbc],
                's': [0x4, 0x4, 0x2a],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x9f, 0x86, -0x81],
                's': [0x5, 0x5, 0x8c],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb5, 0x7c, -0x81],
                's': [0x32, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0x9f, 0x6d, -0x42],
                's': [0x4a, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9f, 0x53, -0xc0],
                's': [0x4, 0x33, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9f, 0x6d, -0xc0],
                's': [0x4a, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x78, 0x42, -0xc0],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x88, 0x7e, -0x81],
                's': [0x33, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                't': 0x5
            }, {
                'p': [0x88, 0x7c, -0x81],
                's': [0x30, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xb6, 0x7e, -0x81],
                's': [0x33, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [0x9f, 0x8b, -0x81],
                's': [0x5, 0x2, 0x8c],
                't': 0x5
            }, {
                'p': [0xc6, 0x6d, -0x81],
                's': [0x4, 0x4, 0x7a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x70, -0x81],
                's': [0x52, 0x5, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x75, -0x81],
                's': [0x45, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x79, -0x81],
                's': [0x37, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x7d, -0x81],
                's': [0x28, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x81, -0x81],
                's': [0x1a, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x85, -0x81],
                's': [0xd, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x22, 0x3f, -0x87],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x22, 0x3f, -0x93],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x22, 0x53, -0x8d],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x66, 0x40, -0xd4],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x60, 0x54, -0xd4],
                's': [0xa, 0x2, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x5a, 0x40, -0xd4],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb7, 0x76, -0xd4],
                's': [0x21, 0x66, 0x21],
                'c': 0xd2c2b8,
                't': 0xb
            }, {
                'p': [0xb7, 0xdb, -0xd4],
                's': [0x26, 0x7, 0x26],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0x100, -0xd4],
                's': [0x3, 0x3, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xe3, -0xe7],
                's': [0x26, 0x27, 0x3],
                'l': 0x1,
                'r': [0.52, 0x0, 0x0],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xb7, 0xe3, -0xc0],
                's': [0x26, 0x27, 0x3],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xcb, 0xe3, -0xd4],
                's': [0x3, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xa3, 0xe3, -0xd4],
                's': [0x3, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xb7, 0xe3, -0xd4],
                's': [0x25, 0xb, 0x1d],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xee, -0xd4],
                's': [0x25, 0x6, 0x17],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xf4, -0xd4],
                's': [0x25, 0x6, 0x10],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xfa, -0xd4],
                's': [0x25, 0x6, 0x9],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0x100, -0xd4],
                's': [0x25, 0x5, 0x3],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xe3, -0xd4],
                's': [0x1f, 0xb, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xee, -0xd4],
                's': [0x18, 0x6, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xf4, -0xd4],
                's': [0x11, 0x6, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xfa, -0xd4],
                's': [0xa, 0x6, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0x76, -0xd4],
                's': [0x24, 0x66, 0xa],
                'c': 0x8e8b89,
                't': 0x2
            }, {
                'p': [0xb7, 0x76, -0xd4],
                's': [0xb, 0x66, 0x24],
                'c': 0x8e8b89,
                't': 0x2
            }, {
                'p': [0xb7, 0x103, -0xd4],
                's': [0x3, 0x3, 0x29],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xb7, 0x103, -0xd4],
                's': [0x28, 0x3, 0x3],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xa1, 0xe4, -0xd4],
                's': [0x2, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [0xcd, 0xe4, -0xd4],
                's': [0x2, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                't': 0x5
            }, {
                'p': [0xb7, 0xe4, -0xe9],
                's': [0x26, 0x27, 0x2],
                'l': 0x1,
                'r': [0.52, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0xb7, 0xe4, -0xbe],
                's': [0x26, 0x27, 0x2],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0xb7, 0x106, -0xd4],
                's': [0x3, 0x2, 0x29],
                't': 0x5
            }, {
                'p': [0xb7, 0x106, -0xd4],
                's': [0x28, 0x2, 0x3],
                't': 0x5
            }, {
                'p': [0xb7, 0xa2, -0xd4],
                's': [0x2a, 0x7, 0x2a],
                'c': 0x7d7068,
                'bo': 0x1
            }, {
                'p': [0xb7, 0xa9, -0xd4],
                's': [0x2a, 0x2, 0x2a],
                't': 0x5
            }, {
                'p': [0xb7, 0x41, -0xd4],
                's': [0x28, 0x45, 0x28],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x41, -0x15b],
                's': [0x9, 0x44, 0xa],
                'c': 0x5c514a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x41, -0xed],
                's': [0x9, 0x43, 0xa],
                'c': 0x615751,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x78, -0x149],
                's': [0x9, 0x5, 0x1a],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xc7, 0x73, -0xec],
                's': [0x27, 0x9, 0xc],
                'c': 0x645750,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xef, 0x78, -0x15b],
                's': [0x77, 0x9, 0xa],
                'c': 0x736760,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x42, -0x130],
                's': [0x6, 0x2c, 0x50],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x42, -0xf5],
                's': [0x6, 0x28, 0x6],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x11f, 0x41, -0x124],
                's': [0x1d, 0xa, 0x31],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x10f, 0x41, -0x124],
                's': [0x3, 0x8, 0x18],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x109, 0x41, -0x124],
                's': [0x3, 0x4, 0x18],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x10c, 0x41, -0x124],
                's': [0x3, 0x6, 0x18],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x111, 0x41, -0x13c],
                's': [0x3, 0xb, 0x3],
                'l': 0x1,
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0x111, 0x41, -0x10c],
                's': [0x3, 0xb, 0x3],
                'l': 0x1,
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0xea, 0x46, -0x104],
                's': [0x7, 0x1, 0x19],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xea, 0x43, -0x111],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xea, 0x43, -0xf7],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xef, 0x46, -0x144],
                's': [0x7, 0x1, 0x19],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xcf, 0x47, -0x144],
                's': [0x1, 0x5, 0x19],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xe7, 0x47, -0x104],
                's': [0x1, 0x5, 0x19],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xef, 0x43, -0x137],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xef, 0x43, -0x151],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xd2, 0x46, -0x144],
                's': [0x7, 0x1, 0x19],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xd2, 0x43, -0x137],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xd2, 0x43, -0x151],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xec, 0x47, -0x144],
                's': [0x1, 0x5, 0x19],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xc3, 0x42, -0xec],
                's': [0x22, 0x34, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x41, -0x15b],
                's': [0x9, 0x45, 0xa],
                'c': 0x5a524e,
                't': 0xb
            }, {
                'p': [0x12f, 0x41, -0xec],
                's': [0x9, 0x3f, 0xc],
                'c': 0x5f5149,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x130, 0x42, -0x100],
                's': [0x5, 0x1, 0x13],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0xdc, 0x42, -0xeb],
                's': [0x13, 0x1, 0xa],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0xaf, 0x41, -0x131],
                's': [0x7, 0x22, 0x5],
                'c': 0x756961,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x41, -0x117],
                's': [0x7, 0x22, 0x5],
                'c': 0x6e625b,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x63, -0x12e],
                's': [0x7, 0x5, 0xb],
                'c': 0x6e6159,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x42, -0x124],
                's': [0x7, 0x1, 0x15],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x150, 0x33, -0x12e],
                's': [0x3a, 0x47, 0x3a],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x16c, 0x42, -0x112],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x42, -0x112],
                's': [0x4, 0x41, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x134, 0x42, -0x112],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x5c, -0x112],
                's': [0x34, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x158, 0x40, -0x111],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x82, -0x12e],
                's': [0x6, 0x6, 0x44],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x7f, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x595959,
                't': 0x2
            }, {
                'p': [0x150, 0x76, -0x112],
                's': [0x34, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x164, 0x40, -0x111],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x15e, 0x54, -0x111],
                's': [0xa, 0x2, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x7a, -0x12e],
                's': [0x3a, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x150, 0x7d, -0x12e],
                's': [0x2d, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x150, 0x80, -0x12e],
                's': [0x1c, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x150, 0x83, -0x12e],
                's': [0xf, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x13f, 0x81, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x162, 0x81, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x161, 0x7f, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x595959,
                't': 0x2
            }, {
                'p': [0x150, 0x88, -0x12e],
                's': [0x6, 0x2, 0x44],
                't': 0x5
            }, {
                'p': [0xb9, 0x54, -0x41],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xad, 0x54, -0x41],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xb3, 0x66, -0x41],
                's': [0xa, 0x2, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x115, 0x33, -0xbe],
                's': [0x58, 0x3f, 0x56],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x140, 0x33, -0xe8],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x33, -0x6e],
                's': [0x6a, 0x48, 0x50],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14d, 0x42, -0x95],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x33, -0x98],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x33, -0xc0],
                's': [0x5, 0x4d, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x33, -0xc0],
                's': [0x5, 0x4d, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x33, -0x98],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x33, -0xe8],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe5, 0x42, -0x95],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x118, 0x42, 0x26],
                's': [0x4, 0x41, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe5, 0x42, -0x47],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14d, 0x42, -0x6e],
                's': [0x5, 0x48, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x58, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x140, 0x6e, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x58, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xea, 0x6e, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x12d, 0x6e, -0xe8],
                's': [0x22, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x12d, 0x58, -0xe8],
                's': [0x22, 0x4, 0x4],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x115, 0x7f, -0xc0],
                's': [0x66, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x115, 0x77, -0xa6],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0x115, 0x79, -0xd6],
                's': [0x61, 0x2, 0x2f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0x115, 0x72, -0xbe],
                's': [0x58, 0x3, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x75, -0xbe],
                's': [0x58, 0x3, 0x44],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x78, -0xbe],
                's': [0x58, 0x3, 0x32],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x7b, -0xbe],
                's': [0x58, 0x3, 0x1e],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x7e, -0xbe],
                's': [0x58, 0x2, 0x10],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x79, -0xa5],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x115, 0x7b, -0xd7],
                's': [0x61, 0x2, 0x2f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x115, 0x84, -0xc0],
                's': [0x66, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x14d, 0x5d, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x14d, 0x78, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb, 0x89, -0x1bc],
                's': [0x64, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xb, 0x8e, -0x1bc],
                's': [0x64, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0xa, 0x80, -0x1a0],
                's': [0x61, 0x2, 0x3d],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xa, 0x82, -0x1a0],
                's': [0x61, 0x2, 0x3e],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x2b, 0x45, -0x190],
                's': [0xd, 0x46, 0x7],
                'c': 0x616161,
                't': 0xb
            }, {
                'p': [0xe5, 0x42, -0x6e],
                's': [0x5, 0x48, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe5, 0x5d, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xe5, 0x78, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x78, -0x95],
                's': [0x64, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x78, -0x47],
                's': [0x64, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x5d, -0x95],
                's': [0x64, 0x4, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x119, 0x89, -0x6e],
                's': [0x78, 0x5, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x83, -0x84],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x646464,
                't': 0x2
            }, {
                'p': [0x119, 0x85, -0x85],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x119, 0x83, -0x59],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x646464,
                't': 0x2
            }, {
                'p': [0x119, 0x85, -0x58],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x119, 0x8e, -0x6e],
                's': [0x78, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x119, 0x7c, -0x6e],
                's': [0x6a, 0x4, 0x50],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x119, 0x80, -0x6e],
                's': [0x6a, 0x3, 0x3c],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x119, 0x83, -0x6e],
                's': [0x6a, 0x4, 0x2b],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x119, 0x87, -0x6e],
                's': [0x6a, 0x3, 0x15],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x107, 0x33, -0x2b],
                's': [0x3c, 0x3e, 0x48],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x107, 0x7d, -0x28],
                's': [0x47, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0x106, 0x7f, -0x28],
                's': [0x47, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x119, 0x5d, -0x47],
                's': [0x64, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x124, 0x42, -0x44],
                's': [0x4, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x124, 0x42, -0x8],
                's': [0x4, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x42, -0x8],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x42, -0x44],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x107, 0x6d, -0x8],
                's': [0x36, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x6d, -0x26],
                's': [0x4, 0x4, 0x38],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x124, 0x6d, -0x26],
                's': [0x4, 0x4, 0x38],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x106, 0x71, -0x2b],
                's': [0x3b, 0x4, 0x48],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x10b, 0x75, -0x2b],
                's': [0x32, 0x4, 0x48],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x110, 0x79, -0x2b],
                's': [0x26, 0x4, 0x48],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x115, 0x7d, -0x26],
                's': [0x1c, 0x4, 0x3e],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x11b, 0x81, -0x26],
                's': [0x11, 0x4, 0x3e],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x120, 0x85, -0x26],
                's': [0x6, 0x3, 0x3e],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x124, 0x71, -0x25],
                's': [0x2, 0x17, 0x3d],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xe9, 0x54, -0x20],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe9, 0x54, -0x2c],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe9, 0x66, -0x26],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x141, 0x42, -0xa6],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x141, 0x42, -0xb2],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x141, 0x54, -0xac],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19b, 0x42, -0xd4],
                's': [0x5a, 0x26, 0x8a],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x19d, 0x42, -0x6],
                's': [0x5a, 0x32, 0x58],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xd0, 0x42, 0x5a],
                's': [0x8c, 0x50, 0x58],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14, 0x42, 0x60],
                's': [0x74, 0x35, 0x50],
                'c': 0x8e8d7a,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x1a9, 0x33, -0x60],
                's': [0x5a, 0x47, 0x5c],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14e, 0x33, 0x50],
                's': [0x6e, 0x4f, 0x56],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x25, 0x33, 0x39],
                's': [0x4, 0x45, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x33, 0x39],
                's': [0x4, 0x59, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x5b, 0x39],
                's': [0x6e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x14, 0x8b, 0x60],
                's': [0x5, 0x5, 0x5c],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb, 0x82, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [0x33, 0x82, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [0x14, 0x90, 0x60],
                's': [0x5, 0x2, 0x5c],
                't': 0x5
            }, {
                'p': [-0xc, 0x84, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x34, 0x84, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x14, 0x74, 0x39],
                's': [0x6e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x25, 0x5b, 0x60],
                's': [0x4, 0x4, 0x4a],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x25, 0x74, 0x60],
                's': [0x4, 0x4, 0x4a],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x77, 0x60],
                's': [0x71, 0x6, 0x50],
                'c': 0x8e8d7a,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14, 0x7d, 0x60],
                's': [0x5b, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x14, 0x81, 0x60],
                's': [0x45, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x14, 0x85, 0x60],
                's': [0x2e, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x14, 0x89, 0x60],
                's': [0x19, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0xf, 0x42, 0x39],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x3, 0x42, 0x39],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9, 0x55, 0x39],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16f, 0x42, -0x90],
                's': [0x4, 0x26, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16f, 0x42, -0xd4],
                's': [0x5, 0x3e, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16f, 0x64, -0xd4],
                's': [0x4, 0x4, 0x84],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x179, 0x64, -0x90],
                's': [0x10, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19c, 0x7f, -0xd4],
                's': [0x6a, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19c, 0x74, -0xf8],
                's': [0x62, 0x2, 0x4b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x19c, 0x76, -0xf9],
                's': [0x62, 0x2, 0x4b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19c, 0x76, -0xae],
                's': [0x62, 0x2, 0x4d],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19c, 0x74, -0xaf],
                's': [0x62, 0x2, 0x4d],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x19c, 0x84, -0xd4],
                's': [0x6a, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x19b, 0x68, -0xd4],
                's': [0x5a, 0x4, 0x8a],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x6c, -0xd4],
                's': [0x5a, 0x4, 0x75],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x70, -0xd4],
                's': [0x5a, 0x4, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x74, -0xd4],
                's': [0x5a, 0x4, 0x49],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x7c, -0xd4],
                's': [0x5a, 0x4, 0x1d],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x78, -0xd4],
                's': [0x5a, 0x4, 0x33],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x80, -0xd4],
                's': [0x5a, 0x1, 0xb],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x16e, 0x42, -0xed],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x16e, 0x42, -0xf9],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x16e, 0x54, -0xf3],
                's': [0x2, 0x2, 0xa],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x17d, 0x42, -0x8d],
                's': [0x4, 0x39, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x42, -0x33],
                's': [0x4, 0x39, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x42, -0x60],
                's': [0x5, 0x49, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x77, -0x60],
                's': [0x4, 0x4, 0x56],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1ab, 0x77, -0x60],
                's': [0x58, 0x4, 0x5e],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x1ab, 0x8a, -0x60],
                's': [0x6c, 0x6, 0x6],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1ab, 0x83, -0x79],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x5c5c5c,
                't': 0x2
            }, {
                'p': [0x1ab, 0x83, -0x46],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x5c5c5c,
                't': 0x2
            }, {
                'p': [0x1ab, 0x85, -0x45],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x1ab, 0x85, -0x7a],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x1ab, 0x90, -0x60],
                's': [0x6c, 0x2, 0x6],
                't': 0x5
            }, {
                'p': [0x1a9, 0x7b, -0x60],
                's': [0x5a, 0x5, 0x5b],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x1a9, 0x80, -0x60],
                's': [0x5a, 0x4, 0x45],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x1a9, 0x84, -0x60],
                's': [0x5a, 0x4, 0x2f],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x1a9, 0x88, -0x60],
                's': [0x5a, 0x4, 0x19],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x171, 0x42, -0x31],
                's': [0x4, 0x33, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x171, 0x42, 0x23],
                's': [0x4, 0x33, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x171, 0x42, -0x7],
                's': [0x5, 0x41, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x171, 0x71, -0x7],
                's': [0x4, 0x4, 0x50],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x178, 0x71, -0x31],
                's': [0xa, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14d, 0x42, -0x47],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x184, 0x42, 0x26],
                's': [0x4, 0x41, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x14e, 0x42, 0x26],
                's': [0x4, 0x53, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14e, 0x5f, 0x26],
                's': [0x68, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x14e, 0x7f, 0x26],
                's': [0x68, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x118, 0x7f, 0x31],
                's': [0x4, 0x4, 0x12],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x118, 0x5f, 0x31],
                's': [0x4, 0x4, 0x12],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x115, 0x42, 0x2f],
                's': [0x4, 0x51, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x8b, 0x42, 0x2f],
                's': [0x4, 0x51, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x42, -0xc],
                's': [0x5c, 0x13, 0x91],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [0x40, 0x55, 0x1c],
                's': [0x2, 0x26, 0x3b],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x40, 0x55, -0x2b],
                's': [0x2, 0x26, 0x35],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x96, 0x55, -0x1b],
                's': [0x2, 0x26, 0x4d],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x96, 0x55, 0x22],
                's': [0x2, 0x26, 0x13],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xd0, 0x42, 0x2f],
                's': [0x4, 0x68, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xd0, 0x70, 0x2f],
                's': [0x86, 0x4, 0x4],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xd0, 0x8f, 0x2f],
                's': [0x86, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xfc, 0x42, 0x51],
                's': [0x55, 0x11, 0x49],
                'c': 0x5f5f5f
            }, {
                'p': [0x115, 0x8f, 0x57],
                's': [0x4, 0x4, 0x4c],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x19d, 0x82, -0x7],
                's': [0x6b, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19d, 0x7c, -0x1d],
                's': [0x63, 0x2, 0x33],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x19d, 0x7c, 0x10],
                's': [0x63, 0x2, 0x36],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x19d, 0x7e, 0x11],
                's': [0x63, 0x2, 0x36],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19d, 0x7e, -0x1e],
                's': [0x63, 0x2, 0x33],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19d, 0x87, -0x7],
                's': [0x6b, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x19d, 0x75, -0x6],
                's': [0x5a, 0x3, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x78, -0x6],
                's': [0x5a, 0x3, 0x47],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x7b, -0x6],
                's': [0x5a, 0x3, 0x3a],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x7e, -0x6],
                's': [0x5a, 0x3, 0x25],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x81, -0x6],
                's': [0x5a, 0x3, 0x16],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x14e, 0x95, 0x50],
                's': [0x5, 0x5, 0x6a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16c, 0x8c, 0x50],
                's': [0x3d, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0x12f, 0x8c, 0x50],
                's': [0x3d, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0x14e, 0x9a, 0x50],
                's': [0x5, 0x2, 0x6a],
                't': 0x5
            }, {
                'p': [0x130, 0x8f, 0x50],
                's': [0x3f, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x16c, 0x8e, 0x50],
                's': [0x3f, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x14e, 0x82, 0x50],
                's': [0x6e, 0x5, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x87, 0x50],
                's': [0x59, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x8b, 0x50],
                's': [0x43, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x8f, 0x50],
                's': [0x2d, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x93, 0x50],
                's': [0x17, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xd0, 0xa9, 0x5a],
                's': [0x6, 0x6, 0x68],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xf6, 0x9e, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0xaa, 0x9f, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0xa9, 0xa1, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0xf7, 0xa0, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0xd0, 0xaf, 0x5a],
                's': [0x6, 0x2, 0x68],
                't': 0x5
            }, {
                'p': [0xd0, 0x93, 0x5a],
                's': [0x8c, 0x3, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0x96, 0x5a],
                's': [0x7c, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0x9a, 0x5a],
                's': [0x66, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0x9e, 0x5a],
                's': [0x51, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0xa2, 0x5a],
                's': [0x3a, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0xa6, 0x5a],
                's': [0x24, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0xaa, 0x5a],
                's': [0xf, 0x3, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x48, 0x57, -0x2d],
                's': [0x4, 0x4, 0x30],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x65, 0x6e, 0x5],
                's': [0x3e, 0x4, 0x2c],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x170, 0x54, -0x16],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x170, 0x54, -0x22],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x170, 0x68, -0x1c],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb3, 0x54, 0x2f],
                's': [0x2, 0x15, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xa7, 0x54, 0x2f],
                's': [0x2, 0x15, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xad, 0x67, 0x2f],
                's': [0xa, 0x2, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x6b, 0x92, -0x9],
                's': [0x65, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x86, 0x1a],
                's': [0x5d, 0x2, 0x4a],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0x96, 0x42, -0x40],
                's': [0x4, 0x3a, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x97, 0x42, -0x9],
                's': [0x3, 0x51, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x96, 0x42, 0x2c],
                's': [0x4, 0x3a, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x55, 0x32],
                's': [0x54, 0x26, 0x13],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x55, -0x2c],
                's': [0x54, 0x26, 0x33],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x40, 0x42, -0x2],
                's': [0x5, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x42, -0x10],
                's': [0x5, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x69, -0x9],
                's': [0x5, 0x2, 0xc],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x96, 0x42, 0xb],
                's': [0x4, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x96, 0x42, 0x19],
                's': [0x4, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x96, 0x69, 0x12],
                's': [0x4, 0x2, 0xc],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x96, 0x6a, 0x12],
                's': [0x2, 0xf, 0xd],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x40, 0x6b, -0x9],
                's': [0x2, 0x10, 0xf],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x3f, 0x7b, -0x9],
                's': [0x2, 0x18, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x40, 0x55, -0x44],
                's': [0x5, 0x27, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x55, 0x36],
                's': [0x5, 0x27, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x78, -0x9],
                's': [0x5, 0x4, 0x72],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x78, 0x32],
                's': [0x5, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x87, -0x29],
                's': [0x5d, 0x2, 0x46],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0x96, 0x78, -0xa],
                's': [0x4, 0x4, 0x68],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x73, 0xa],
                's': [0x55, 0x1, 0x47],
                'c': 0x5f5f5f,
                't': 0x2
            }, {
                'p': [0x6b, 0x7c, -0x9],
                's': [0x58, 0x4, 0x7a],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x88, 0x1b],
                's': [0x5d, 0x2, 0x4a],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x6b, 0x97, -0x9],
                's': [0x65, 0x2, 0x5],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x6b, 0x89, -0x2a],
                's': [0x5d, 0x2, 0x46],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x6b, 0x80, -0x9],
                's': [0x58, 0x4, 0x68],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x84, -0x9],
                's': [0x58, 0x4, 0x52],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x88, -0x9],
                's': [0x58, 0x4, 0x3c],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x8c, -0x9],
                's': [0x58, 0x4, 0x26],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x90, -0x9],
                's': [0x58, 0x3, 0x10],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x32, 0x53, -0x9],
                's': [0x16, 0x2, 0x58],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x29, 0x42, -0x33],
                's': [0x2, 0x14, 0x2],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x29, 0x42, 0x21],
                's': [0x2, 0x14, 0x2],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x5c, 0x42, 0x28],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x50, 0x42, 0x28],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x79, 0x42, -0x12],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x85, 0x42, -0x12],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x7f, 0x69, -0x12],
                's': [0xe, 0x2, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x56, 0x69, 0x28],
                's': [0xe, 0x2, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xa, 0x80, -0x1d7],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xa, 0x82, -0x1d8],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0xa, 0x33, -0x1bc],
                's': [0x5c, 0x43, 0x6b],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x76, -0x1bc],
                's': [0x5c, 0x2, 0x6b],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x7b, -0x1bc],
                's': [0x5c, 0x5, 0x4b],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x80, -0x1bc],
                's': [0x5c, 0x5, 0x31],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x85, -0x1bc],
                's': [0x5c, 0x5, 0x16],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x37, 0x72, -0x1bc],
                's': [0x4, 0x4, 0x6b],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x33, -0x189],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xcf, 0x33, -0x189],
                's': [0x4, 0x40, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x74, 0x33, -0x189],
                's': [0x4, 0x4d, 0x5],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x33, -0x1bd],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x33, -0x1ef],
                's': [0x4, 0x3e, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x8b, 0x6f, -0x189],
                's': [0x84, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x6e, -0x1bc],
                's': [0x4, 0x4, 0x62],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x8b, 0x86, -0x1bb],
                's': [0x7, 0x7, 0x79],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x65, 0x79, -0x1bb],
                's': [0x4f, 0x3, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x64, 0x7c, -0x1bb],
                's': [0x4f, 0x2, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x8b, 0x8d, -0x1bb],
                's': [0x7, 0x2, 0x79],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xb2, 0x7c, -0x1bb],
                's': [0x4e, 0x3, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x8b, 0x42, -0x1bc],
                's': [0x88, 0x31, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x73, -0x1bc],
                's': [0x6b, 0x5, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x78, -0x1bc],
                's': [0x53, 0x5, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x7d, -0x1bc],
                's': [0x37, 0x5, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x82, -0x1bc],
                's': [0x1c, 0x4, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0xa1, 0x33, -0x189],
                's': [0x4, 0x4d, 0x5],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xd6, 0x71, -0x181],
                's': [0x30, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xd5, 0x73, -0x181],
                's': [0x30, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                't': 0x5
            }, {
                'p': [0xe9, 0x7d, -0x182],
                's': [0x5, 0x5, 0x47],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xe9, 0x82, -0x182],
                's': [0x5, 0x2, 0x47],
                't': 0x5
            }, {
                'p': [0x37, 0x41, 0xd],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x37, 0x41, -0x40],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x41, 0x41, -0x40],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x41, 0x41, -0x34],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x48, 0x6e, -0x2d],
                's': [0x4, 0x4, 0x30],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x82, 0x57, -0x2c],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x82, 0x6e, -0x2c],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1c, 0x41, -0x5f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x58, 0x41, 0x24],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1c, 0x41, 0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1c, 0x4d, 0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x92, 0x55, 0x23],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x3c, 0x55, -0x24],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x3c, 0x55, -0x1c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x11, 0x41, -0xb2],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x38, 0x41, -0x80],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa4, 0x34, -0x9e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x98, 0x34, -0x9e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, -0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, -0x4a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, 0x12],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, 0x6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x40, 0x12],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xe7, 0x34, -0x5d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x119, 0x34, -0x31],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x10d, 0x34, -0x31],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x80, 0x34, -0x10a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x74, 0x34, -0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x74, 0x40, -0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa2, 0x41, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13, 0x41, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd8, 0x53, 0x28],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9d, 0x53, -0x38],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x12c, 0x53, -0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x12c, 0x53, -0x3e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x169, 0x53, 0x1f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x168, 0x41, -0xdc],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2d, 0x41, -0x42],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x37, 0x41, -0x42],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x44, 0x41, 0x16],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x44, 0x41, 0xe],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xa3, 0x41, 0x36],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xa5, 0x41, -0x26],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x10d, 0x34, -0x3b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x13d, 0x34, -0x40],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x13d, 0x34, -0x38],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x13d, 0x34, -0xad],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x131, 0x34, 0x14],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb8, 0x34, -0xcc],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb8, 0x34, -0xc4],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x4b, 0x47, -0x137],
                's': [0x1f, 0x3, 0x7],
                'c': 0x7d7068
            }, {
                'p': [0x5e, 0x42, -0x124],
                's': [0x6, 0x7, 0x2c],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x38, 0x42, -0x124],
                's': [0x6, 0x7, 0x2c],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x42, -0x111],
                's': [0x20, 0x7, 0x6],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x42, -0x137],
                's': [0x20, 0x7, 0x6],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x47, -0x111],
                's': [0x1f, 0x3, 0x7],
                'c': 0x7d7068
            }, {
                'p': [0x38, 0x47, -0x124],
                's': [0x7, 0x3, 0x2d],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x5e, 0x47, -0x124],
                's': [0x7, 0x3, 0x2d],
                'c': 0x7d7068
            }, {
                'p': [0x4b, 0x42, -0x124],
                's': [0x20, 0x1, 0x21],
                'c': 0xa7988e
            }, {
                'p': [0x4b, 0x42, -0x124],
                's': [0x9, 0x17, 0x9],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x4d, -0x124],
                's': [0x14, 0x3, 0x14],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x4b, 0x56, -0x124],
                's': [0xe, 0x3, 0xe],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x4b, 0x4a, -0x137],
                's': [0x1f, 0x1, 0x7],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x4a, -0x111],
                's': [0x1f, 0x1, 0x7],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x5e, 0x4a, -0x124],
                's': [0x7, 0x1, 0x2d],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x38, 0x4a, -0x124],
                's': [0x7, 0x1, 0x2d],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x50, -0x124],
                's': [0x14, 0x1, 0x14],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x59, -0x124],
                's': [0xe, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x43, -0x124],
                's': [0x20, 0x2, 0x21],
                'c': 0x8bd9d4,
                'o': 0.7000000000000001,
                't': 0x5
            }, {
                'p': [0x3f, 0x3e, -0x235],
                's': [0xad, 0x3f, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x15f, 0x53, 0x22],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x128, 0x53, -0x19],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x128, 0x53, -0x11],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x177, 0x41, -0x8b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x145, 0x41, -0xca],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x145, 0x41, -0xd2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xce, 0x41, -0xe3],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xce, 0x41, -0xdc],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xde, 0x34, -0x127],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x11, 0x41, -0xbe],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9d, 0x41, -0xc9],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9d, 0x41, -0xd5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xb, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x17, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1, 0x4d, -0x16b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x4d, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x59, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x87, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x87, 0x4d, -0x16b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x68, 0x41, -0x12d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x41, 0x41, -0xda],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xb, 0x42, -0x16d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x91, 0x41, -0x16d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x98, 0x41, -0x16d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x66, 0x41, -0x123],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x93, 0x41, -0xc6],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x37, 0x41, -0xd7],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x43, 0x41, -0x9],
                's': [0x1, 0x12, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x1f, 0x41, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1f, 0x41, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x27, 0x42, -0x23],
                's': [0x1, 0x13, 0x5],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x27, 0x42, -0x23],
                's': [0x1, 0x13, 0x3],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [-0xa1, 0x57, -0x135],
                's': [0x4, 0x8, 0xa],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x5b, -0x60],
                's': [0x4, 0x4, 0x56],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xca, 0x52, -0xb],
                's': [0x6e, 0x2, 0xa5],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xb1, 0x79, -0x1bb],
                's': [0x4f, 0x3, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x17f, 0x41, 0x1a],
                's': [0xc, 0x46, 0x6],
                'c': 0xac5353
            }, {
                'p': [0x3f, 0x79, -0x1f6],
                's': [0xae, 0x4, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [-0x16, 0x60, -0x1f6],
                's': [0x4, 0x22, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0x9c, -0x238],
                's': [0x6, 0x6, 0x91],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x12, 0x8c, -0x238],
                's': [0x61, 0x3, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x6c, 0x8c, -0x238],
                's': [0x66, 0x3, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0xa2, -0x238],
                's': [0x6, 0x2, 0x91],
                't': 0x5
            }, {
                'p': [0x6d, 0x8f, -0x238],
                's': [0x66, 0x2, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x11, 0x8f, -0x238],
                's': [0x61, 0x2, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x5d, 0x60, -0x1f6],
                's': [0x4, 0x32, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0x7d, -0x235],
                's': [0xad, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x85, -0x235],
                's': [0x83, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x81, -0x235],
                's': [0x99, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x89, -0x235],
                's': [0x6d, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x8d, -0x235],
                's': [0x56, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x91, -0x235],
                's': [0x41, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x95, -0x235],
                's': [0x2b, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x99, -0x235],
                's': [0x16, 0x3, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x6b, -0x1bf],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0x6c, 0x6c, -0x1be],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x6c, 0x74, -0x1db],
                's': [0x64, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x6c, 0x79, -0x1db],
                's': [0x64, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0xa, 0x72, -0x188],
                's': [0x5e, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x37, 0x33, -0x188],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x23, 0x33, -0x188],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xb, 0x33, -0x188],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x1e, 0x60, -0x1f6],
                's': [0x4, 0x34, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0x6d, -0x1f6],
                's': [0xae, 0x4, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0xa, 0x78, -0x1bc],
                's': [0x5c, 0x3, 0x66],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x37, 0x33, -0x1bc],
                's': [0x4, 0x56, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x128, 0x42, -0x124],
                's': [0x9, 0x13, 0x22],
                'c': 0x786b62,
                't': 0xb
            }, {
                'p': [0x12a, 0x65, -0x124],
                's': [0x3, 0x9, 0xc],
                'c': 0x5c5551,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12a, 0x55, -0x12d],
                's': [0x4, 0x16, 0x6],
                'c': 0x5c5551,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12a, 0x55, -0x11b],
                's': [0x4, 0x17, 0x6],
                'c': 0x5c5551,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12c, 0x55, -0x124],
                's': [0x1, 0x16, 0x17],
                'c': 0x554f4c,
                't': 0xb
            }, {
                'p': [0x125, 0x55, -0x129],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x126, 0x55, -0x12d],
                's': [0x1, 0x2, 0x1],
                'l': 0x1,
                'r': [0x0, -0.35, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x125, 0x55, -0x132],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x126, 0x55, -0x120],
                's': [0x1, 0x2, 0x1],
                'l': 0x1,
                'r': [0x0, -0.17, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x125, 0x55, -0x11b],
                's': [0x1, 0x2, 0x1],
                'l': 0x1,
                'r': [0x0, 1.05, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x126, 0x55, -0x116],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x128, 0x55, -0x124],
                's': [0x1, 0x1, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0xc0b896,
                't': 0x5
            }, {
                'p': [0x129, 0x55, -0x124],
                's': [0x3, 0x4, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0xc0b896,
                't': 0x5
            }, {
                'p': [0x129, 0x56, -0x125],
                's': [0x3, 0x1, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x0,
                't': 0x5
            }, {
                'p': [0x129, 0x56, -0x123],
                's': [0x3, 0x1, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x0,
                't': 0x5
            }, {
                'p': [-0xe0, 0x35, -0x4a],
                's': [0xd8, 0x0, 0xe5],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x115, 0x33, -0x4d],
                's': [0x68, 0x2, 0xca],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x8b, 0x33, -0x6f],
                's': [0xac, 0x2, 0x82],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xd3, 0x33, -0xb7],
                's': [0xc, 0x2, 0xe],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xc9, 0x33, -0xb3],
                's': [0x8, 0x2, 0x6],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xb7, 0x33, -0xb6],
                's': [0x8, 0x2, 0xc],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x16, 0x42, -0x30],
                's': [0xd2, 0x0, 0x102],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x1, 0x40, 0x0],
                's': [0x8c, 0x2, 0x8e],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x64, 0x40, 0x32],
                's': [0x3a, 0x2, 0x2a],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x95, 0x35, 0x8],
                's': [0x28, 0xd, 0x7e],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x36, 0x33, -0x8f],
                's': [0x3a, 0xf, 0x2a],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x5, 0x40, -0x7b],
                's': [0x3c, 0x2, 0x68],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x7c, 0x33, -0x11d],
                's': [0xcb, 0x2, 0x32],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x157, 0x40, -0xfc],
                's': [0x4d, 0x2, 0x2b],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x157, 0x40, -0x7a],
                's': [0x52, 0x2, 0xd9],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x147, 0x40, -0xb],
                's': [0x8c, 0x14, 0x81],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xca, 0x52, -0xb],
                's': [0x6e, 0x2, 0xa5],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xd5, 0x40, -0x70],
                's': [0x27, 0x14, 0x25],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xd5, 0x40, -0xcf],
                's': [0x28, 0x2, 0x3f],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x83, 0x42, 0x32],
                's': [0x77, 0x0, 0xd2],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0x4a, 0x42, -0x10f],
                's': [0xd6, 0x0, 0xdf],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0x50, 0x33, -0x110],
                's': [0xe2, 0xf, 0xc2],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x50, 0x33, -0x110],
                's': [0xe2, 0xf, 0xc2],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xb9, 0x33, -0xfe],
                's': [0x8, 0x2, 0xc],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xc3, 0x33, -0x101],
                's': [0xc, 0x2, 0x6],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xd8, 0x33, -0xfe],
                's': [0x13, 0x2, 0xc],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xc3, 0x35, -0x130],
                's': [0xc9, 0x0, 0x61],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x41, 0x35, -0x121],
                's': [0x40, 0xd, 0xc3],
                'i': 0x9,
                't': 0x5
            }, {
                'p': [-0x95, 0x35, -0x4e],
                's': [0x91, 0xd, 0x2e],
                'i': 0x9,
                't': 0x5,
                'd': 0x1
            }, {
                'p': [-0x65, 0x35, -0x8c],
                's': [0x24, 0xd, 0xb6],
                'i': 0x9,
                't': 0x5
            }, {
                'p': [0xd8, 0x42, -0x9d],
                's': [0xc5, 0x12, 0x35],
                'i': 0x9,
                't': 0x5,
                'd': 0x1
            }, {
                'p': [0x165, 0x42, -0x67],
                's': [0xf4, 0x12, 0x37],
                'i': 0x9,
                't': 0x5,
                'd': 0x1
            }, {
                'p': [0x158, 0x42, -0xf6],
                's': [0x52, 0x0, 0xea],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0xdc, 0x42, -0xd0],
                's': [0x58, 0x0, 0x34],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0x156, 0x54, 0x24],
                's': [0xaa, 0x0, 0xdf],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0xd0, 0x54, -0xa],
                's': [0x83, 0x0, 0xf0],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x48, 0x34, -0xd4],
                's': [0x62, 0x32, 0x6c],
                'c': 0x827256,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x41, 0x4d, -0xda],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x9d, 0x4d, -0xcf],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x53, 0x4d, -0x16b],
                's': [0x18, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x11, 0x4d, -0x16b],
                's': [0x18, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1, 0x59, -0x16b],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x87, 0x59, -0x16b],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x68, 0x4d, -0x12d],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x11, 0x4d, -0xb8],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x1c, 0x4d, -0x5f],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x37, 0x4d, -0x40],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1f, 0x4d, -0x16],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13, 0x4d, -0x1c],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x41, 0x4d, -0x3a],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x1c, 0x59, 0x32],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x58, 0x4d, 0x24],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xa2, 0x4d, -0x1c],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x9e, 0x40, -0x9e],
                's': [0x18, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x113, 0x40, -0x31],
                's': [0x18, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13b, 0x40, 0x6],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13b, 0x40, -0x50],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13b, 0x4c, 0x12],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xe7, 0x40, -0x5d],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x80, 0x40, -0x10a],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x74, 0x4c, -0x130],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xd8, 0x5f, 0x28],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x9d, 0x5f, -0x38],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x169, 0x5f, 0x1f],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x5f, -0x32],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x168, 0x4d, -0xdc],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x38, 0x4d, -0x80],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x11a, 0x69, 0x19],
                's': [0x58, 0x4, 0x4],
                'c': 0x7d7d7d,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x11a, 0x35, 0x19],
                's': [0x5, 0x39, 0x5],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xec, 0x35, 0x19],
                's': [0x4, 0x38, 0x4],
                'c': 0x828282,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x148, 0x35, 0x19],
                's': [0x4, 0x38, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xea, 0x5b, 0xe],
                's': [0x2, 0x4, 0x40],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [0x4c, 0x72, -0xbc],
                's': [0x54, 0x6, 0x2b],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x72, -0x5e],
                's': [0x54, 0x6, 0x2b],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x78, -0x65],
                's': [0x54, 0x5, 0x1d],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x7d, -0x6c],
                's': [0x54, 0x3, 0x10],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x80, -0x70],
                's': [0x54, 0x3, 0x7],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x78, -0xb5],
                's': [0x54, 0x5, 0x1d],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x7d, -0xaf],
                's': [0x54, 0x3, 0x10],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x80, -0xaa],
                's': [0x54, 0x3, 0x7],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0x10e, 0x33, -0xb1],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x102, 0x33, 0x18],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xe1, 0x33, -0x2a],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xa0, 0x40, -0x3],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [-0x85, 0x41, 0x47],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x22, 0x3f, -0x8d],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x19, 0x40, -0x60],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [-0x9, 0x41, 0x38],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x38, 0x55, -0x2],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x9d, 0x55, 0xb],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xad, 0x53, 0x2e],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x56, 0x55, 0x28],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xb3, 0x52, -0x41],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xe9, 0x52, -0x26],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x170, 0x54, -0x1c],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x60, 0x40, -0xd4],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x69, 0x34, -0x10a],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x8e, 0x33, -0x136],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xb4, 0x33, -0x12d],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xe1, 0x33, -0x115],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x16e, 0x40, -0xf3],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x15e, 0x40, -0x111],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x141, 0x40, -0xac],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [-0x48, 0x68, -0xd4],
                's': [0x63, 0x8, 0x6c],
                'c': 0x827256,
                't': 0xa
            }, {
                'p': [-0x48, 0x70, -0xd4],
                's': [0x41, 0x6, 0x6c],
                'c': 0x827256,
                't': 0xa
            }, {
                'p': [-0x48, 0x76, -0xd4],
                's': [0x23, 0x6, 0x6c],
                'c': 0x827256,
                't': 0xa
            }, {
                'p': [0x7f, 0x55, -0x12],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x103, 0x55, 0x17],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x131, 0x55, 0x17],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xeb, 0x46, 0x4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xe2, 0x54, -0x2c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xe2, 0x54, -0x51],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x10f, 0x53, -0xb0],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x134, 0x53, -0xb0],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xe4, 0x60, -0xa4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x91, 0x60, -0xa4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xc5, 0x54, -0x67],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x66, 0x61, -0x7b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x82, 0x61, -0x60],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x84, 0x5c, 0x4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x9f, 0x63, 0xe],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xa8, 0x55, -0x2c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0x32, 0x54, -0x9d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x16, 0x53, -0xb9],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0x18, 0x62, -0x61],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xe0, 0x54, -0x116],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xbb, 0x60, -0x104],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xcc, 0x40, -0x12c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x8d, 0x57, -0x135],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x4c, 0x57, -0x135],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x31, 0x53, -0x10b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x8c, 0x58, -0xc2],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x38, 0x5c, -0xd5],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x21, 0x5c, -0xbc],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x21, 0x5c, -0x5d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x49, 0x4c, 0x46],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x46, 0x5c, 0x5],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x2a, 0x61, 0x37],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xf2, 0x79, 0x2d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xe3, 0x64, -0x5a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xe8, 0x5c, -0xd3],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xc8, 0x58, -0xa1],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x134, 0x69, 0x24],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x142, 0x62, -0x110],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x16f, 0x5c, 0xd],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [0x126, 0x74, -0x19],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x14f, 0x64, -0x5c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x142, 0x5c, -0xd4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x17b, 0x63, -0x76],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [0x16d, 0x4e, -0xb3],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [0xaf, 0x63, -0x119],
                's': [0x7, 0x5, 0x9],
                'c': 0x5f544e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x67, -0x138],
                's': [0x6, 0xa, 0x11],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xa6, 0x41, -0x151],
                's': [0x7, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xa5, 0x41, -0x15c],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xaf, 0x6b, -0xf6],
                's': [0x6, 0x5, 0xc],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xaf, 0x6b, -0x109],
                's': [0x6, 0x3, 0xe],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xaf, 0x78, -0xf4],
                's': [0x9, 0x5, 0x4],
                'c': 0x5f5651,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xa5, 0x41, -0xed],
                's': [0x7, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xb7, 0x41, -0x12c],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xa7, 0x41, -0x118],
                's': [0x5, 0x2, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x30, 0x40, -0x10f],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x66, 0x40, -0x115],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xe5, 0x40, -0xe0],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x10b, 0x81, -0x15b],
                's': [0x16, 0x3, 0xa],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xd6, 0x69, -0xec],
                's': [0x4, 0x5, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x11f, 0x73, -0xec],
                's': [0x17, 0x5, 0xc],
                'c': 0x5a4f48,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xed, 0x73, -0xec],
                's': [0x1e, 0x4, 0x9],
                'c': 0x736860,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x40, 0x40, -0x16c],
                's': [0x6, 0x3, 0x3],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [-0x14, 0x40, -0x148],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xaf, 0x78, -0x163],
                's': [0x9, 0x5, 0x6],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xb0, 0x4d, -0x16b],
                's': [0x5, 0x1f, 0x16],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x82, 0x4d, -0x173],
                's': [0x5a, 0x1f, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x44, 0x4d, -0x173],
                's': [0x22, 0x18, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xc, 0x4d, -0x173],
                's': [0x4e, 0x1b, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x1c, 0x4d, -0x159],
                's': [0x5, 0x1d, 0x3a],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x2c, 0x4d, -0x13b],
                's': [0x1b, 0x1d, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x1c, 0x6a, -0x147],
                's': [0x5, 0x3, 0xe],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [-0x1c, 0x6a, -0x16b],
                's': [0x5, 0x2, 0x16],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [-0x24, 0x6a, -0x13b],
                's': [0xf, 0x3, 0x4],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x45, 0x65, -0x173],
                's': [0x10, 0x3, 0x4],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb1, 0x41, -0x167],
                's': [0x9, 0xc, 0x18],
                'c': 0x645750,
                't': 0xb
            }, {
                'p': [0x40, 0x41, -0x174],
                's': [0xdc, 0xc, 0x8],
                'c': 0x615852,
                't': 0xb
            }, {
                'p': [-0x2b, 0x33, -0x155],
                's': [0x25, 0x1a, 0x3a],
                'c': 0x645851,
                't': 0xb
            }, {
                'p': [-0x1d, 0x4d, -0x13d],
                's': [0x9, 0x25, 0xa],
                'c': 0x5f554f,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x6e, -0x14f],
                's': [0x6, 0x4, 0x17],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x123, 0x4a, -0x139],
                's': [0x7, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x126, 0x41, -0xf6],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x12f, 0x6e, -0x10e],
                's': [0x6, 0x4, 0x18],
                'c': 0x665c56,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xb6, 0x41, -0x107],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x126, 0x41, -0x14f],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x10e, 0x41, -0x153],
                's': [0x8, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x12f, 0x7b, -0x154],
                's': [0x9, 0x6, 0x4],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xe3, 0x5f, -0xec],
                's': [0x2, 0x5, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x5f, -0xf9],
                's': [0x6, 0x5, 0x2],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x65, -0x107],
                's': [0x6, 0x4, 0x2],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x61, 0x68, -0xd9],
                's': [0x2, 0x2, 0xd],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x61, 0x61, -0xda],
                's': [0x1, 0x6, 0x9],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x61, 0x67, -0xdd],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x61, 0x67, -0xd7],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x70, 0x40, -0xda],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [-0x60, 0x62, -0x10f],
                's': [0x2, 0x2, 0xd],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x60, 0x5b, -0x110],
                's': [0x1, 0x6, 0x9],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x60, 0x61, -0x113],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x60, 0x61, -0x10d],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x8, 0x6b, 0x34],
                's': [0x2, 0x2, 0x11],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x8, 0x64, 0x31],
                's': [0x1, 0x6, 0x9],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x8, 0x6a, 0x2e],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x8, 0x6a, 0x34],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0xd5, 0x32, -0xc5],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5
            }, {
                'p': [-0xb9, 0x32, -0xed],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5
            }, {
                'p': [-0xc7, 0x51, -0x104],
                's': [0x21, 0x3, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb5, 0x35, -0x104],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd9, 0x35, -0x104],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x82, 0x6c, -0x173],
                's': [0x5a, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xc, 0x68, -0x173],
                's': [0x4e, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x45, 0x68, -0x173],
                's': [0x10, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x7d, -0x163],
                's': [0x9, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1c, 0x6a, -0x157],
                's': [0x5, 0x1, 0x12],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1c, 0x6c, -0x16b],
                's': [0x5, 0x1, 0x16],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1c, 0x6d, -0x147],
                's': [0x5, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x26, 0x6d, -0x13b],
                's': [0xb, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x32, 0x6a, -0x13b],
                's': [0xd, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xb0, 0x6c, -0x169],
                's': [0x5, 0x1, 0x19],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x7d, -0x149],
                's': [0x9, 0x1, 0x1a],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x85, -0x15b],
                's': [0x9, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x71, -0x138],
                's': [0x6, 0x1, 0x11],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x6e, -0x109],
                's': [0x6, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x70, -0xf5],
                's': [0x6, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x72, -0x10b],
                's': [0x6, 0x1, 0x12],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x80, -0xec],
                's': [0x9, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xc7, 0x7c, -0xec],
                's': [0x27, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x84, -0xec],
                's': [0x9, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x86, -0x15b],
                's': [0x9, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x124, 0x81, -0x15b],
                's': [0xd, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xd3, 0x81, -0x15b],
                's': [0x3f, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x6e, -0x124],
                's': [0x7, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x6b, -0x12d],
                's': [0x8, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x9d, 0x55, 0xb],
                's': [0xa, 0x14, 0x1],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x38, 0x55, -0x2],
                's': [0xa, 0x14, 0x1],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x12f, 0x72, -0x14d],
                's': [0x6, 0x1, 0x13],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x81, -0x154],
                's': [0x9, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x5f, -0x3e],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x128, 0x5a, -0x19],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x128, 0x5a, -0x11],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x15f, 0x5a, 0x22],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x177, 0x48, -0x8b],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x145, 0x48, -0xd2],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x145, 0x48, -0xca],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x66, 0x48, -0x123],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x93, 0x48, -0xc6],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x98, 0x48, -0x16d],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x91, 0x48, -0x16d],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x2d, 0x48, -0x42],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x37, 0x48, -0x42],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x44, 0x48, 0xe],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x44, 0x48, 0x16],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xa3, 0x48, 0x36],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xa5, 0x48, -0x26],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13d, 0x3b, -0xad],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13d, 0x3b, -0x38],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13d, 0x3b, -0x40],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x131, 0x3b, 0x14],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x10d, 0x3b, -0x3b],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xde, 0x3b, -0x127],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xce, 0x48, -0xe3],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xce, 0x48, -0xdc],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xcd, 0x33, -0x102],
                's': [0x3, 0x2, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xbd, 0x33, -0xb4],
                's': [0x4, 0x2, 0x8],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xbd, 0x33, -0xb4],
                's': [0x4, 0x2, 0x8],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x3d, 0x59, -0x2],
                's': [0x1, 0x2, 0x1],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x3d, 0x63, -0x2],
                's': [0x1, 0x2, 0x1],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x8, 0x6d, 0x34],
                's': [0x2, 0x1, 0x11],
                'l': 0x1,
                'c': '#ffffff',
                't': 0x5
            }, {
                'p': [-0x60, 0x64, -0x10f],
                's': [0x2, 0x1, 0xd],
                'l': 0x1,
                'c': '#ffffff',
                't': 0x5
            }, {
                'p': [0x61, 0x6a, -0xd9],
                's': [0x2, 0x1, 0xd],
                'l': 0x1,
                'c': '#ffffff',
                't': 0x5
            }, {
                'p': [-0xea, 0x5f, 0xe],
                's': [0x3, 0x19, 0x40],
                'v': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [0x37, 0x48, -0xd7],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x5a, -0x124],
                's': [0x3, 0x10, 0x3],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x63, -0x124],
                's': [0x2, 0x3, 0xc],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x66, -0x124],
                's': [0x2, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x6a, -0x124],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x114, 0x35, -0x10],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [0xf5, 0x43, -0x125],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [0x61, 0x61, -0xd9],
                's': [0x2, 0x10, 0xd],
                'v': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x60, 0x5b, -0x10f],
                's': [0x2, 0x10, 0xd],
                'v': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x8, 0x64, 0x32],
                's': [0x2, 0x10, 0xd],
                'v': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xee, 0x42, -0x124],
                's': [0x72, 0x32, 0x5f],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x111, 0x35, -0x16],
                's': [0x5b, 0x32, 0x56],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x4a, 0x42, -0x124],
                's': [0x5b, 0x32, 0x56],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xc0, 0x54, -0x9],
                's': [0x49, 0x32, 0x67],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0xc7, 0x53, -0xd4],
                's': [0x24, 0x8, 0x60],
                'c': 0x7f7f7f,
                't': 0xb,
                'bo': 0x1
            }]
        }], bIj = 0x0; bIj < bIi['length']; ++bIj)
        for (var bIk = 0x0; bIk < bIi[bIj]['objects']['length']; ++bIk) bIi[bIj]['objects'][bIk]['i'] = bHj['prefabIDS'][bIi[bIj]['objects'][bIk]['i'] || bIi[bIj]['objects'][bIk]['id'] || 0x0], bIi[bIj]['objects'][bIk]['t'] = bHj['textureIDS'][bIi[bIj]['objects'][bIk]['t'] || ('LADDER' == bIi[bIj]['objects'][bIk]['i'] ? 0x2 : 0x0)];
    bHg['exports']['maps'] = bIi, bHg['exports']['manager'] = function(bHg, bHh, bHj, bIj) {
        var bIk, bIq;
        this['manager'] = new(bHi(0x44))['manager'](bHg, bHj, bIj), this['maps'] = bIi, this['modes'] = bHo, this['rotationModes'] = bHp, this['spawns'] = [], this['lastGen'] = null, this['terrain'] = null, this['zone'] = null, this['deathY'] = bIj['deathY'], this['setMaps'] = function(bHg) {
            this['maps'] = bHg || bIi;
        }, this['getRandomMap'] = function() {
            return bHj['randInt'](0x0, this['maps']['length'] - 0x1);
        };
        var bIs = '';
        this['generate'] = function(bHi, bHo, bHp) {
            var bIi = this['maps'][bHi];
            if (bIi['dthY'] && bHj['isNumber'](bIi['dthY']) && (this['deathY'] = bIi['dthY']), bHg) try {
                mapInfo['innerHTML'] = bHo['alias'] + '_' + bIi['name'], gameMessage['innerHTML'] = specGameMessage['innerHTML'] = '', curGameInfo['innerHTML'] = bHo['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.6)\x27>on\x20' + bIi['name'] + '</div>' + (bIi['creator'] ? '<div\x20style=\x27color:#fff\x27><span\x20style=\x27color:rgba(255,255,255,0.6)\x27>by</span>\x20' + bIi['creator'] + '</div>' : ''), specGameInfo['innerHTML'] = bHo['name'];
            } catch (bIx) {}
            bHg && bIs != bIi['modURL'] && ((bIs = bIi['modURL']) && '' != bIs && loadModPack(bIs, !0x0));
            var bIy = bHi + (bHo['genID'] ? '_' + bHo['genID'] : '');
            if (bHp || this['lastGen'] !== bIy) {
                this['lastGen'] = bIy, this['manager']['removeAll'](), bHg && bHg['init'](bIi), bHh && (bHh['reset'](), bHg['scene']['add'](bHh['ExplosionManager'])), bIi['terrainSeed'] && bIi['terrainWidth'] && bIi['terrainHeight'] ? (this['terrain'] = bHk['fromConfig'](bIi), this['terrain']['rotation']['x'] = -Math['PI'] / 0x2, bHg && bHg['scene']['add'](this['terrain'])) : this['terrain'] = null, bIi['zone'] && bIi['zoneSize'] && bIi['zoneSpeed'] ? (this['zone'] = bHl['fromConfig'](bIi, bHg), bHg && bHg['scene']['add'](this['zone'])) : this['zone'] = null;
                for (var bIz = 0x0, bIA = 0x0, bIB = 0x0, bIC = 0x0, bID = 0x0; bID < bIi['objects']['length']; ++bID) {
                    var bIE = (bIk = bIi['objects'][bID])['p'][0x0],
                        bIF = bIk['p'][0x1],
                        bIG = bIk['p'][0x2];
                    if (bIk['l'] || bIk['col'] || 'CUBE' != bIk['i'] || (bIE - bIk['s'][0x0] < bIz && (bIz = bIE - bIk['s'][0x0]), bIE + bIk['s'][0x0] > bIA && (bIA = bIE + bIk['s'][0x0]), bIG - bIk['s'][0x2] < bIB && (bIB = bIG - bIk['s'][0x2]), bIG + bIk['s'][0x2] > bIC && (bIC = bIG + bIk['s'][0x2])), 'CUBE' == bIk['i']) {
                        for (var bIH = 0x1, bII = 0x0; bII < bIi['objects']['length']; ++bII)
                            if ('CUBE' == (bIq = bIi['objects'][bII])['i'] && bIk != bIq && bIF <= bIq['p'][0x1] + bIq['s'][0x1] && bIF >= bIq['p'][0x1] && bIE + bIk['s'][0x0] / 0x2 < bIq['p'][0x0] + bIq['s'][0x0] / 0x2 && bIE - bIk['s'][0x0] / 0x2 > bIq['p'][0x0] - bIq['s'][0x0] / 0x2 && bIG + bIk['s'][0x2] / 0x2 < bIq['p'][0x2] + bIq['s'][0x2] / 0x2 && bIG - bIk['s'][0x2] / 0x2 > bIq['p'][0x2] - bIq['s'][0x2] / 0x2) {
                                bIH = 0x0;
                                break;
                            }
                        this['manager']['addBlock'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1], [0x1, 0x1, 0x1, bIH, 0x1, 0x1], {
                            'src': bIk['t']['toLowerCase']() + '_' + ('GRASS' == bIk['t'] ? 0x1 : 0x0),
                            'colr': bIk['c'],
                            'emissive': bIk['e'] || 0x0,
                            'opacity': 0x1 != bIk['o'] && null != bIk['o'] ? bIk['o'] : 0x1,
                            'transparent': 0x1 != bIk['o'] && null != bIk['o'],
                            'penetrable': bIk['pe'],
                            'health': bIk['h'] || bIk['hp'],
                            'amb': bIi['nAmb'] || null != bIk['ab'] ? null : bIj['ambientVal'],
                            'yR': bIk['r'] ? bIk['r'][0x0] : 0x0,
                            'xR': bIk['r'] ? bIk['r'][0x1] : 0x0,
                            'zR': bIk['r'] ? bIk['r'][0x2] : 0x0,
                            'noCol': bIk['l'] || bIk['col'],
                            'isBorder': bIk['bo'],
                            'noVis': bIk['v'],
                            'movT': null != bIk['ts'] && bIk['ts'] / 0x2710,
                            'movD': bIk['td'],
                            'noAmb': null != bIk['ab'],
                            'tRadius': 'CHECK' == bIk['t'] ? 0xa : 0x0
                        });
                    } else if ('POINT_GATE' == bIk['i']) this['manager']['addGate'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1], {
                        'src': bIk['t']['toLowerCase']() + '_' + ('GRASS' == bIk['t'] ? 0x1 : 0x0),
                        'colr': bIk['c'],
                        'emissive': bIk['e'] || 0x0,
                        'opacity': 0x1 != bIk['o'] && null != bIk['o'] ? bIk['o'] : 0x1,
                        'transparent': 0x1 != bIk['o'] && null != bIk['o'],
                        'penetrable': bIk['pe'],
                        'amb': bIi['nAmb'] || null != bIk['ab'] ? null : bIj['ambientVal'],
                        'yR': bIk['r'] ? bIk['r'][0x0] : 0x0,
                        'xR': bIk['r'] ? bIk['r'][0x1] : 0x0,
                        'zR': bIk['r'] ? bIk['r'][0x2] : 0x0,
                        'isBorder': bIk['bo'],
                        'noVis': bIk['v'],
                        'movT': null != bIk['ts'] && bIk['ts'] / 0x2710,
                        'movD': bIk['td'],
                        'noAmb': null != bIk['ab'],
                        'scoreP': parseInt(bIk['sp']) || 0x0,
                        'noMsg': null != bIk['nm'],
                        'method': parseInt(bIk['md']) || 0x0,
                        'closeable': null != bIk['cl']
                    });
                    else if ('TRIGGER' == bIk['i']) this['manager']['addTrigger'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1], {
                        'src': bIk['t']['toLowerCase']() + '_' + ('GRASS' == bIk['t'] ? 0x1 : 0x0),
                        'colr': bIk['c'],
                        'emissive': bIk['e'] || 0x0,
                        'opacity': 0x1 != bIk['o'] && null != bIk['o'] ? bIk['o'] : 0x1,
                        'transparent': 0x1 != bIk['o'] && null != bIk['o'],
                        'amb': bIi['nAmb'] || null != bIk['ab'] ? null : bIj['ambientVal'],
                        'yR': bIk['r'] ? bIk['r'][0x0] : 0x0,
                        'xR': bIk['r'] ? bIk['r'][0x1] : 0x0,
                        'zR': bIk['r'] ? bIk['r'][0x2] : 0x0,
                        'noVis': bIk['v'],
                        'movT': null != bIk['ts'] && bIk['ts'] / 0x2710,
                        'movD': bIk['td'],
                        'noAmb': null != bIk['ab'],
                        'constant': parseInt(bIk['tc']) || 0x0,
                        'event': parseInt(bIk['te']) || 0x0,
                        'eventN': bHn['events'][parseInt(bIk['te']) || 0x0],
                        'action': parseInt(bIk['ta']) || 0x0
                    });
                    else if ('OBJECTIVE' == bIk['i']) this['manager']['addObjective'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1]);
                    else if ('FLAG' == bIk['i']) this['manager']['addFlag'](bIE, bIF, bIG, parseInt(bIk['tm'] || 0x0) + 0x1);
                    else if ('WEAPON_PICKUP' == bIk['i']) this['manager']['addWeapon'](bIE, bIF, bIG, {
                        'scoreP': parseInt(bIk['sp']) || 0x0,
                        'noMsg': null != bIk['nm'],
                        'method': parseInt(bIk['md']) || 0x0,
                        'noRep': bIk['wr'],
                        'weapon': bHm[parseInt(bIk['w'] || bIk['wid'] || 0x0)],
                        'weaponId': parseInt(bIk['w'] || bIk['wid'] || 0x0)
                    }, bIk['r'] ? bIk['r'][0x2] : 0x0, bIk['r'] ? bIk['r'][0x0] : 0x0, bIk['r'] ? bIk['r'][0x1] : 0x0);
                    else if ('PARTICLES' != bIk['i']) 'PLANE' == bIk['i'] || 'BILLBOARD' == bIk['i'] ? this['manager']['addPlane'](bIE, bIF, bIG, bIk['s'][0x2] / 0x2, bIk['s'][0x0] / 0x2, {
                        'src': 'BILLBOARD' == bIk['i'] ? 'pubs/b_' + (bIk['bb'] || bHj['randInt'](0x1, bIj['billboardCnt'])) : bIk['t']['toLowerCase']() + '_0',
                        'emissive': bIk['e'] || 0x0,
                        'noise': bIk['en'] || 0x0,
                        'opacity': 0x1 != bIk['o'] && null != bIk['o'] ? bIk['o'] : 0x1,
                        'penetrable': bIk['pe'],
                        'health': bIk['h'] || bIk['hp'],
                        'colr': bIk['c'],
                        'noCol': bIk['l'] || bIk['col'],
                        'noVis': bIk['v'],
                        'side': 'BILLBOARD' == bIk['i'] ? 0x2 : 0x0,
                        'movT': null != bIk['ts'] && bIk['ts'] / 0x2710,
                        'movD': bIk['td'],
                        'noAmb': null != bIk['ab']
                    }, bIk['r'] ? bIk['r'][0x2] : 0x0, (bIk['r'] ? bIk['r'][0x0] : 0x0) - Math['PI'] / 0x2, bIk['r'] ? bIk['r'][0x1] : 0x0) : 'SIGN' == bIk['i'] ? this['manager']['addCanvas'](bIE, bIF, bIG, bIk['s'][0x2] / 0x2, bIk['s'][0x0] / 0x2, {
                        'noCol': bIk['l'] || bIk['col'],
                        'fontSize': parseInt(bIk['sf']) || 0xa,
                        'text': bIk['st'],
                        'tAlign': parseInt(bIk['sa']) || 0x0,
                        'fcolr': bIk['sc'],
                        'bcolr': bIk['sb'],
                        'noBVis': bIk['bv'],
                        'movT': null != bIk['ts'] && bIk['ts'] / 0x2710,
                        'movD': bIk['td']
                    }, bIk['r'] ? -bIk['r'][0x2] : 0x0, (bIk['r'] ? bIk['r'][0x0] : 0x0) - Math['PI'] / 0x2, bIk['r'] ? bIk['r'][0x1] : 0x0) : 'RAMP' == bIk['i'] ? this['manager']['addRamp'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x1], bIk['s'][0x2], (bIk['d'] || 0x0) * Math['PI'] / 0x2, bIk['b'], bIk['t'] ? bIk['t']['toLowerCase']() + '_0' : 'grey_0', bIk['v'], bIk['c'], bIj['ambScale'], null != bIk['ts'] && bIk['ts'] / 0x2710, bIk['td'], null != bIk['ab']) : 'SCORE_ZONE' == bIk['i'] ? this['manager']['addScoreZone'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1], parseInt(bIk['sp']) || 0x1) : 'DEATH_ZONE' == bIk['i'] ? this['manager']['addDeathZone'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1]) : 'CHECK_POINT' == bIk['i'] ? this['manager']['addCheckPoint'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1], bIk['su'] || !0x1, bIk['d'] || 0x0) : 'TELEPORTER' == bIk['i'] ? this['manager']['addTeleporter'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x2], bIk['s'][0x1], parseInt(bIk['ch'] || 0x0), parseInt(bIk['n'] || 0x0), null != bIk['m']) : 'LADDER' == bIk['i'] ? this['manager']['addLadder'](bIE, bIF, bIG, bIk['s'][0x1], (bIk['d'] || 0x0) * Math['PI'] / 0x2, bIk['v'], bIk['t'] ? bIk['t']['toLowerCase']() + '_0' : 'floor_0', bIk['c']) : this['manager']['addMesh'](bIE, bIF, bIG, bIk['r'], bIk['s'][0x0] / 0x2, bIk['s'][0x1] / 0x2, bIk['s'][0x2] / 0x2, {
                        'src': bIk['i']['toLowerCase'](),
                        'health': bIk['h'] || bIk['hp'],
                        'colr': bIk['c'],
                        'noCol': bIk['l'] || bIk['col'],
                        'noVis': bIk['v'],
                        'noAmb': null != bIk['ab']
                    });
                    else if (bHh) {
                        var bIJ = bHh['prefabs'][parseInt(bIk['pr'] || 0x0)];
                        bIJ['count'] = Math['round']((bIk['s'][0x0] + bIk['s'][0x2] + bIk['s'][0x1]) / bIJ['cnt']), bHh['area'](bIE, bIF, bIG, bIk['s'][0x0], bIk['s'][0x1], bIk['s'][0x2], bIJ);
                    }
                }
                if (this['manager']['addNoisePlanes'](), bIi['shadLength'] = Math['round'](Math['abs'](bIA - bIz) / 2.5), bIi['shadWidth'] = Math['round'](Math['abs'](bIC - bIB) / 2.5), bHg && bHg['updateLightMap'](bIi), this['manager']['aoOpac'] = 0x1, bHg) {
                    var bIK, bIL = bIj['ambScale'];
                    for (bID = 0x0; bID < this['manager']['objects']['length']; ++bID)
                        if (!((bIk = this['manager']['objects'][bID])['noVis'] || 'prop' == bHo['id'] && bIk['propID'] || bIk['complexMesh'] || bIk['health'] || bIk['noAmb'] || bIk['gate']))
                            for (bII = bID + 0x1; bII < this['manager']['objects']['length']; ++bII)
                                if (!(bIq = this['manager']['objects'][bII])['noVis'] && ('prop' != bHo['id'] || !bIq['propID']) && !bIq['health'] && !bIq['noAmb'] && !bIq['gate'] && !bIq['complexMesh'] && this['manager']['collision'](bIk, bIq, 0x0)) {
                                    if (bIK = bHj['boxIntersection'](bIk, bIq, 'x', 'z', [Math['PI'], 0x0, Math['PI'] / 0x2, -Math['PI'] / 0x2]))
                                        for (var bIM = 0x0; bIM < bIK['length']; ++bIM)
                                            if (!bIK[bIM]['dontUse']) {
                                                for (var bIN = bHj['getIntersection'](bIk, bIq, 'y'), bIO = bIL * (bIk['aoMlt'] || 0x1) * (bIq['aoMlt'] || 0x1), bIP = 0x0; 0x2 > bIP; bIP++) bIR = (bIK[bIM]['d'] + Math['PI'] / 0x2 * bIP) % (0x2 * Math['PI']), bIO = Math['min'](bIO, this['manager']['limitAmb'](bIL, bIK[bIM], bIR, 'x', 'z', bIk, bIq));
                                                for (bIP = 0x0; 0x2 > bIP; bIP++)
                                                    if (bIR = (bIK[bIM]['d'] + Math['PI'] / 0x2 * bIP) % (0x2 * Math['PI']), this['manager']['addAmbient'](bIK[bIM]['x'] + bIO * Math['cos'](bIR), bIN['y'], bIK[bIM]['z'] + bIO * Math['sin'](bIR), -bIR + Math['PI'], 0x0, 0x0, bIN['height'], bIO + bIj['ambOff'], 0x1), bIR == Math['PI'] / 0x2 || bIR == -Math['PI'] / 0x2 || bIR == 1.5 * Math['PI']) {
                                                        var bIQ = bHj['limitRect'](bIK[bIM]['z'] + bIO * Math['sin'](bIR), bIN['y'] + bIO + bIN['height'] + bIj['ambOff'], bIO, bIO, 0x0, [bIk, bIq], 'z', 'y');
                                                        this['manager']['addAmbient'](bIK[bIM]['x'] + bIO * Math['cos'](bIR), bIQ['y'], bIQ['z'], -bIR + Math['PI'], Math['PI'], 0x0, bIQ['length'], bIQ['height'], 0x0, [bIk, bIq], 'g1-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIN['y'] + bIN['height'], bIK[bIM]['z']]), bIQ = bHj['limitRect'](bIK[bIM]['z'] + bIO * Math['sin'](bIR), bIN['y'] - bIO - bIN['height'] - bIj['ambOff'], bIO, bIO, 0x0, [bIk, bIq], 'z', 'y'), this['manager']['addAmbient'](bIK[bIM]['x'] + bIO * Math['cos'](bIR), bIQ['y'], bIQ['z'], -bIR + Math['PI'], 0x0, 0x0, bIQ['length'], bIQ['height'], 0x0, [bIk, bIq], 'g2-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIN['y'] - bIN['height'], bIK[bIM]['z']]);
                                                    } else {
                                                        bIQ = bHj['limitRect'](bIK[bIM]['x'] + bIO * Math['cos'](bIR), bIN['y'] + bIO + bIN['height'] + bIj['ambOff'], bIO, bIO, 0x0, [bIk, bIq], 'x', 'y');
                                                        this['manager']['addAmbient'](bIQ['x'], bIQ['y'], bIK[bIM]['z'] + bIO * Math['sin'](bIR), -bIR + Math['PI'], Math['PI'], 0x0, bIQ['width'], bIQ['height'], 0x0, [bIk, bIq], 'g1-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIN['y'] + bIN['height'], bIK[bIM]['z']]), bIQ = bHj['limitRect'](bIK[bIM]['x'] + bIO * Math['cos'](bIR), bIN['y'] - bIO - bIN['height'] - bIj['ambOff'], bIO, bIO, 0x0, [bIk, bIq], 'x', 'y'), this['manager']['addAmbient'](bIQ['x'], bIQ['y'], bIK[bIM]['z'] + bIO * Math['sin'](bIR), -bIR + Math['PI'], 0x0, 0x0, bIQ['width'], bIQ['height'], 0x0, [bIk, bIq], 'g2-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIN['y'] - bIN['height'], bIK[bIM]['z']]);
                                                    }
                                            }
                                    if (bIK = bHj['boxIntersection'](bIk, bIq, 'z', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                                        for (bIM = 0x0; bIM < bIK['length']; ++bIM)
                                            if (!bIK[bIM]['dontUse']) {
                                                for (bIN = bHj['getIntersection'](bIk, bIq, 'x'), bIO = bIL * (bIk['aoMlt'] || 0x1) * (bIq['aoMlt'] || 0x1), bIP = 0x0; 0x2 > bIP; bIP++) bIR = bIK[bIM]['d'] + Math['PI'] / 0x2 * (bIP ? 0x0 : 0x1), bIO = Math['min'](bIO, this['manager']['limitAmb'](bIL, bIK[bIM], -bIR + Math['PI'] / 0x2, 'z', 'y', bIk, bIq));
                                                for (bIP = 0x0; 0x2 > bIP; bIP++) {
                                                    bIR = bIK[bIM]['d'] + Math['PI'] / 0x2 * (bIP ? 0x0 : 0x1), this['manager']['addAmbient'](bIN['x'], bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIK[bIM]['z'] + bIO * Math['sin'](bIR), 0x0, bIR, -Math['PI'] / 0x2, bIN['width'], bIO + bIj['ambOff'], 0x1);
                                                    bIQ = bHj['limitRect'](bIN['x'] + bIN['width'] + bIO + bIj['ambOff'], bIK[bIM]['z'] + bIO * Math['sin'](bIR), bIO, bIO, 0x0, [bIk, bIq], 'x', 'z');
                                                    this['manager']['addAmbient'](bIQ['x'], bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIK[bIM]['z'] + bIO * Math['sin'](bIR), Math['PI'], bIR == Math['PI'] ? bIR : -bIR % Math['PI'], bIR == 1.5 * Math['PI'] ? 0x0 : -Math['PI'] / 0x2, bIR == 1.5 * Math['PI'] ? bIO : bIQ['length'], bIR == 1.5 * Math['PI'] ? bIQ['length'] : bIO, 0x0, [bIk, bIq], 'g3-' + bIP + '-' + bIM, [bIN['x'] + bIN['width'], bIK[bIM]['y'], bIK[bIM]['z']]), bIQ = bHj['limitRect'](bIN['x'] - bIN['width'] - bIO - bIj['ambOff'], bIK[bIM]['z'] + bIO * Math['sin'](bIR), bIO, bIO, Math['PI'] / 0x2, [bIk, bIq], 'x', 'z'), this['manager']['addAmbient'](bIQ['x'], bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIK[bIM]['z'] + bIO * Math['sin'](bIR), Math['PI'], -bIR % Math['PI'], bIR == Math['PI'] || bIR == 1.5 * Math['PI'] ? Math['PI'] / 0x2 : Math['PI'], bIR == Math['PI'] || bIR == 1.5 * Math['PI'] ? bIQ['width'] : bIO, bIR == Math['PI'] || bIR == 1.5 * Math['PI'] ? bIO : bIQ['width'], 0x0, [bIk, bIq], 'g4-' + bIP + '-' + bIM, [bIN['x'] - bIN['width'], bIK[bIM]['y'], bIK[bIM]['z']]);
                                                }
                                            }
                                    if (bIK = bHj['boxIntersection'](bIk, bIq, 'x', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                                        for (bIM = 0x0; bIM < bIK['length']; ++bIM)
                                            if (!bIK[bIM]['dontUse']) {
                                                for (bIN = bHj['getIntersection'](bIk, bIq, 'z'), bIO = bIL * (bIk['aoMlt'] || 0x1) * (bIq['aoMlt'] || 0x1), bIP = 0x0; 0x2 > bIP; bIP++) bIR = bIK[bIM]['d'] + Math['PI'] / 0x2 * (bIP ? 0x0 : 0x1), bIO = Math['min'](bIO, this['manager']['limitAmb'](bIL, bIK[bIM], -bIR + Math['PI'] / 0x2, 'x', 'y', bIk, bIq));
                                                var bIR;
                                                for (bIP = 0x0; 0x2 > bIP; bIP++)
                                                    if (bIR = bIK[bIM]['d'] + Math['PI'] / 0x2 * (bIP ? 0x0 : 0x1), this['manager']['addAmbient'](bIK[bIM]['x'] + bIO * Math['sin'](bIR), bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIN['z'], Math['PI'] / 0x2, bIR, -Math['PI'] / 0x2, bIN['length'], bIO + bIj['ambOff'], 0x1), bIR == Math['PI'] || 0x0 == bIR) {
                                                        bIQ = bHj['limitRect'](bIK[bIM]['z'] + bIO * Math['sin'](bIR), bIN['z'] + bIN['length'] + bIO + bIj['ambOff'], bIO, bIO, Math['PI'] / 0x2, [bIk, bIq], 'x', 'z');
                                                        this['manager']['addAmbient'](bIK[bIM]['x'] + bIO * Math['sin'](bIR), bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIQ['z'], Math['PI'] / 0x2, bIR, -Math['PI'] / 0x2, bIQ['length'], bIQ['width'], 0x0, [bIk, bIq], 'g5-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIK[bIM]['y'], bIN['z'] + bIN['length']]), bIQ = bHj['limitRect'](bIK[bIM]['z'] + bIO * Math['sin'](bIR), bIN['z'] - bIN['length'] - bIO - bIj['ambOff'], bIO, bIO, Math['PI'] / 0x2, [bIk, bIq], 'x', 'z'), this['manager']['addAmbient'](bIK[bIM]['x'] + bIO * Math['sin'](bIR), bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIQ['z'], Math['PI'] / 0x2, bIR, Math['PI'], bIQ['width'], bIQ['length'], 0x0, [bIk, bIq], 'g6-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIK[bIM]['y'], bIN['z'] - bIN['length']]);
                                                    } else {
                                                        bIQ = bHj['limitRect'](bIK[bIM]['x'] + bIO * Math['sin'](bIR), bIN['z'] + bIN['length'] + bIO + bIj['ambOff'], bIO, bIO, Math['PI'] / 0x2, [bIk, bIq], 'x', 'z');
                                                        this['manager']['addAmbient'](bIQ['x'], bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIQ['z'], Math['PI'] / 0x2, bIR, -Math['PI'] / 0x2, bIQ['length'], bIQ['width'], 0x0, [bIk, bIq], 'g5-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIK[bIM]['y'], bIN['z'] + bIN['length']]), bIQ = bHj['limitRect'](bIK[bIM]['x'] + bIO * Math['sin'](bIR), bIN['z'] - bIN['length'] - bIO - bIj['ambOff'], bIO, bIO, Math['PI'] / 0x2, [bIk, bIq], 'x', 'z'), this['manager']['addAmbient'](bIQ['x'], bIK[bIM]['y'] + bIO * Math['cos'](bIR), bIQ['z'], Math['PI'] / 0x2, bIR, Math['PI'], bIQ['width'], bIQ['length'], 0x0, [bIk, bIq], 'g6-' + bIP + '-' + bIM, [bIK[bIM]['x'], bIK[bIM]['y'], bIN['z'] - bIN['length']]);
                                                    }
                                            }
                                }
                    this['manager']['addPendingAOs']();
                }
                this['spawns']['length'] = 0x0;
                for (bID = 0x0; bID < bIi['spawns']['length']; ++bID) this['spawns']['push']({
                    'x': bIi['spawns'][bID][0x0],
                    'y': bIi['spawns'][bID][0x1],
                    'z': bIi['spawns'][bID][0x2],
                    'team': bIi['spawns'][bID][0x3],
                    'dir': parseInt(bIi['spawns'][bID][0x4]) || 0x0
                });
                bHg && bHg['addMeshGroups']();
            }
            this['manager']['resetAll']();
        };
    };
}, function(bIS, bIT) {
    bIS['exports']['events'] = ['onShoot', 'onMelee', 'onDamage', 'onEnter'], bIS['exports']['actions'] = ['Give\x20Score', 'Kill', 'Respawn', 'Change\x20Health'];
}, function(bIU, bIV, bIW) {
    bIV['encode'] = bIW(0x19)['encode'], bIV['decode'] = bIW(0x1e)['decode'], bIV['Encoder'] = bIW(0x35)['Encoder'], bIV['Decoder'] = bIW(0x36)['Decoder'], bIV['createCodec'] = bIW(0x37)['createCodec'], bIV['codec'] = bIW(0x38)['codec'];
}, function(bIX, bIY, bIZ) {
    (function(bIY) {
        function bIZ(bIX) {
            return bIX && bIX['isBuffer'] && bIX;
        }
        bIX['exports'] = bIZ(void 0x0 !== bIY && bIY) || bIZ(this['Buffer']) || bIZ('undefined' != typeof window && window['Buffer']) || this['Buffer'];
    }['call'](this, bIZ(0x1b)['Buffer']));
}, function(bJ3, bJ4, bJ5) {
    bJ4['byteLength'] = function(bJ3) {
        var bJ4 = bJA(bJ3),
            bJ5 = bJ4[0x0],
            bJ9 = bJ4[0x1];
        return 0x3 * (bJ5 + bJ9) / 0x4 - bJ9;
    }, bJ4['toByteArray'] = function(bJ3) {
        for (var bJ4, bJ5 = bJA(bJ3), bJd = bJ5[0x0], bJe = bJ5[0x1], bJf = new bJw(function(bJ3, bJ4, bJ5) {
                return 0x3 * (bJ4 + bJ5) / 0x4 - bJ5;
            }(0x0, bJd, bJe)), bJg = 0x0, bJh = 0x0 < bJe ? bJd - 0x4 : bJd, bJi = 0x0; bJi < bJh; bJi += 0x4) bJ4 = bJv[bJ3['charCodeAt'](bJi)] << 0x12 | bJv[bJ3['charCodeAt'](bJi + 0x1)] << 0xc | bJv[bJ3['charCodeAt'](bJi + 0x2)] << 0x6 | bJv[bJ3['charCodeAt'](bJi + 0x3)], bJf[bJg++] = 0xff & bJ4 >> 0x10, bJf[bJg++] = 0xff & bJ4 >> 0x8, bJf[bJg++] = 0xff & bJ4;
        return 0x2 === bJe && (bJ4 = bJv[bJ3['charCodeAt'](bJi)] << 0x2 | bJv[bJ3['charCodeAt'](bJi + 0x1)] >> 0x4, bJf[bJg++] = 0xff & bJ4), 0x1 === bJe && (bJ4 = bJv[bJ3['charCodeAt'](bJi)] << 0xa | bJv[bJ3['charCodeAt'](bJi + 0x1)] << 0x4 | bJv[bJ3['charCodeAt'](bJi + 0x2)] >> 0x2, bJf[bJg++] = 0xff & bJ4 >> 0x8, bJf[bJg++] = 0xff & bJ4), bJf;
    }, bJ4['fromByteArray'] = function(bJ3) {
        for (var bJ4, bJ5 = bJ3['length'], bJp = bJ5 % 0x3, bJq = [], bJr = 0x3fff, bJs = 0x0, bJt = bJ5 - bJp; bJs < bJt; bJs += bJr) bJq['push'](bJG(bJ3, bJs, bJs + bJr > bJt ? bJt : bJs + bJr));
        return 0x1 === bJp ? (bJ4 = bJ3[bJ5 - 0x1], bJq['push'](bJu[bJ4 >> 0x2] + bJu[0x3f & bJ4 << 0x4] + '==')) : 0x2 === bJp && (bJ4 = (bJ3[bJ5 - 0x2] << 0x8) + bJ3[bJ5 - 0x1], bJq['push'](bJu[bJ4 >> 0xa] + bJu[0x3f & bJ4 >> 0x4] + bJu[0x3f & bJ4 << 0x2] + '=')), bJq['join']('');
    };
    for (var bJu = [], bJv = [], bJw = 'undefined' == typeof Uint8Array ? Array : Uint8Array, bJx = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', bJy = 0x0, bJz = bJx['length']; bJy < bJz; ++bJy) bJu[bJy] = bJx[bJy], bJv[bJx['charCodeAt'](bJy)] = bJy;

    function bJA(bJ3) {
        var bJ4 = bJ3['length'];
        if (0x0 < bJ4 % 0x4) throw new Error('Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204');
        var bJ5 = bJ3['indexOf']('=');
        return -0x1 === bJ5 && (bJ5 = bJ4), [bJ5, bJ5 === bJ4 ? 0x0 : 0x4 - bJ5 % 0x4];
    }

    function bJE(bJ3) {
        return bJu[0x3f & bJ3 >> 0x12] + bJu[0x3f & bJ3 >> 0xc] + bJu[0x3f & bJ3 >> 0x6] + bJu[0x3f & bJ3];
    }

    function bJG(bJ3, bJ4, bJ5) {
        for (var bJu, bJv = [], bJw = bJ4; bJw < bJ5; bJw += 0x3) bJu = (0xff0000 & bJ3[bJw] << 0x10) + (0xff00 & bJ3[bJw + 0x1] << 0x8) + (0xff & bJ3[bJw + 0x2]), bJv['push'](bJE(bJu));
        return bJv['join']('');
    }
    bJv[0x2d] = 0x3e, bJv[0x5f] = 0x3f;
}, function(bJN, bJO, bJP) {
    var bJQ = bJP(0x3);

    function bJR(bJN) {
        return Array(bJN);
    }(bJO = bJN['exports'] = bJR(0x0))['alloc'] = bJR, bJO['concat'] = bJQ['concat'], bJO['from'] = function(bJN) {
        if (!bJQ['isBuffer'](bJN) && bJQ['isView'](bJN)) bJN = bJQ['Uint8Array']['from'](bJN);
        else if (bJQ['isArrayBuffer'](bJN)) bJN = new Uint8Array(bJN);
        else {
            if ('string' == typeof bJN) return bJQ['from']['call'](bJO, bJN);
            if ('number' == typeof bJN) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
        }
        return Array['prototype']['slice']['call'](bJN);
    };
}, function(bJU, bJV, bJW) {
    var bJX = bJW(0x3),
        bJY = bJX['global'];

    function bJZ(bJU) {
        return new bJY(bJU);
    }(bJV = bJU['exports'] = bJX['hasBuffer'] ? bJZ(0x0) : [])['alloc'] = bJX['hasBuffer'] && bJY['alloc'] || bJZ, bJV['concat'] = bJX['concat'], bJV['from'] = function(bJU) {
        if (!bJX['isBuffer'](bJU) && bJX['isView'](bJU)) bJU = bJX['Uint8Array']['from'](bJU);
        else if (bJX['isArrayBuffer'](bJU)) bJU = new Uint8Array(bJU);
        else {
            if ('string' == typeof bJU) return bJX['from']['call'](bJV, bJU);
            if ('number' == typeof bJU) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
        }
        return bJY['from'] && 0x1 !== bJY['from']['length'] ? bJY['from'](bJU) : new bJY(bJU);
    };
}, function(bK2, bK3, bK4) {
    var bK5 = bK4(0x3);

    function bK6(bK2) {
        return new Uint8Array(bK2);
    }(bK3 = bK2['exports'] = bK5['hasArrayBuffer'] ? bK6(0x0) : [])['alloc'] = bK6, bK3['concat'] = bK5['concat'], bK3['from'] = function(bK2) {
        if (bK5['isView'](bK2)) {
            var bK4 = bK2['byteOffset'],
                bK6 = bK2['byteLength'];
            (bK2 = bK2['buffer'])['byteLength'] !== bK6 && (bK2['slice'] ? bK2 = bK2['slice'](bK4, bK4 + bK6) : (bK2 = new Uint8Array(bK2))['byteLength'] !== bK6 && (bK2 = Array['prototype']['slice']['call'](bK2, bK4, bK4 + bK6)));
        } else {
            if ('string' == typeof bK2) return bK5['from']['call'](bK3, bK2);
            if ('number' == typeof bK2) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
        }
        return new Uint8Array(bK2);
    };
}, function(bKb, bKc) {
    bKc['copy'] = function(bKb, bKc, bKf, bKg) {
        var bKh;
        bKf || (bKf = 0x0), bKg || 0x0 === bKg || (bKg = this['length']), bKc || (bKc = 0x0);
        var bKi = bKg - bKf;
        if (bKb === this && bKf < bKc && bKc < bKg)
            for (bKh = bKi - 0x1; 0x0 <= bKh; bKh--) bKb[bKh + bKc] = this[bKh + bKf];
        else
            for (bKh = 0x0; bKh < bKi; bKh++) bKb[bKh + bKc] = this[bKh + bKf];
        return bKi;
    }, bKc['toString'] = function(bKb, bKc, bKl) {
        var bKm = this,
            bKn = 0x0 | bKc;
        bKl || (bKl = bKm['length']);
        for (var bKo = '', bKp = 0x0; bKn < bKl;) 0x80 > (bKp = bKm[bKn++]) ? bKo += String['fromCharCode'](bKp) : (0xc0 == (0xe0 & bKp) ? bKp = (0x1f & bKp) << 0x6 | 0x3f & bKm[bKn++] : 0xe0 == (0xf0 & bKp) ? bKp = (0xf & bKp) << 0xc | (0x3f & bKm[bKn++]) << 0x6 | 0x3f & bKm[bKn++] : 0xf0 == (0xf8 & bKp) && (bKp = (0x7 & bKp) << 0x12 | (0x3f & bKm[bKn++]) << 0xc | (0x3f & bKm[bKn++]) << 0x6 | 0x3f & bKm[bKn++]), 0x10000 <= bKp ? (bKp -= 0x10000, bKo += String['fromCharCode'](0xd800 + (bKp >>> 0xa), 0xdc00 + (0x3ff & bKp))) : bKo += String['fromCharCode'](bKp));
        return bKo;
    }, bKc['write'] = function(bKb, bKc) {
        for (var bKs = this, bKt = bKc || (bKc |= 0x0), bKu = bKb['length'], bKv = 0x0, bKw = 0x0; bKw < bKu;) 0x80 > (bKv = bKb['charCodeAt'](bKw++)) ? bKs[bKt++] = bKv : 0x800 > bKv ? (bKs[bKt++] = 0xc0 | bKv >>> 0x6, bKs[bKt++] = 0x80 | 0x3f & bKv) : 0xd800 > bKv || 0xdfff < bKv ? (bKs[bKt++] = 0xe0 | bKv >>> 0xc, bKs[bKt++] = 0x80 | 0x3f & bKv >>> 0x6, bKs[bKt++] = 0x80 | 0x3f & bKv) : (bKv = 0x10000 + (bKv - 0xd800 << 0xa | bKb['charCodeAt'](bKw++) - 0xdc00), bKs[bKt++] = 0xf0 | bKv >>> 0x12, bKs[bKt++] = 0x80 | 0x3f & bKv >>> 0xc, bKs[bKt++] = 0x80 | 0x3f & bKv >>> 0x6, bKs[bKt++] = 0x80 | 0x3f & bKv);
        return bKt - bKc;
    };
}, function(bKx, bKy, bKz) {
    bKy['setExtPackers'] = function(bKx) {
        bKx['addExtPacker'](0xe, Error, [bKN, bKG]), bKx['addExtPacker'](0x1, EvalError, [bKN, bKG]), bKx['addExtPacker'](0x2, RangeError, [bKN, bKG]), bKx['addExtPacker'](0x3, ReferenceError, [bKN, bKG]), bKx['addExtPacker'](0x4, SyntaxError, [bKN, bKG]), bKx['addExtPacker'](0x5, TypeError, [bKN, bKG]), bKx['addExtPacker'](0x6, URIError, [bKN, bKG]), bKx['addExtPacker'](0xa, RegExp, [bKK, bKG]), bKx['addExtPacker'](0xb, Boolean, [bKI, bKG]), bKx['addExtPacker'](0xc, String, [bKI, bKG]), bKx['addExtPacker'](0xd, Date, [Number, bKG]), bKx['addExtPacker'](0xf, Number, [bKI, bKG]), 'undefined' != typeof Uint8Array && (bKx['addExtPacker'](0x11, Int8Array, bKE), bKx['addExtPacker'](0x12, Uint8Array, bKE), bKx['addExtPacker'](0x13, Int16Array, bKE), bKx['addExtPacker'](0x14, Uint16Array, bKE), bKx['addExtPacker'](0x15, Int32Array, bKE), bKx['addExtPacker'](0x16, Uint32Array, bKE), bKx['addExtPacker'](0x17, Float32Array, bKE), 'undefined' != typeof Float64Array && bKx['addExtPacker'](0x18, Float64Array, bKE), 'undefined' != typeof Uint8ClampedArray && bKx['addExtPacker'](0x19, Uint8ClampedArray, bKE), bKx['addExtPacker'](0x1a, ArrayBuffer, bKE), bKx['addExtPacker'](0x1d, DataView, bKE)), bKC['hasBuffer'] && bKx['addExtPacker'](0x1b, bKD, bKC['from']);
    };
    var bKB, bKC = bKz(0x3),
        bKD = bKC['global'],
        bKE = bKC['Uint8Array']['from'],
        bKF = {
            'name': 0x1,
            'message': 0x1,
            'stack': 0x1,
            'columnNumber': 0x1,
            'fileName': 0x1,
            'lineNumber': 0x1
        };

    function bKG(bKx) {
        return bKB || (bKB = bKz(0x19)['encode']), bKB(bKx);
    }

    function bKI(bKx) {
        return bKx['valueOf']();
    }

    function bKK(bKx) {
        (bKx = RegExp['prototype']['toString']['call'](bKx)['split']('/'))['shift']();
        var bKy = [bKx['pop']()];
        return bKy['unshift'](bKx['join']('/')), bKy;
    }

    function bKN(bKx) {
        var bKy = {};
        for (var bKz in bKF) bKy[bKz] = bKx[bKz];
        return bKy;
    }
}, function(bKR, bKS, bKT) {
    var bKU = bKT(0xb),
        bKV = bKT(0x13),
        bKW = bKV['Uint64BE'],
        bKX = bKV['Int64BE'],
        bKY = bKT(0x3),
        bKZ = bKT(0x12),
        bL0 = bKT(0x32),
        bL1 = bKT(0x1c)['uint8'],
        bL2 = bKT(0x10)['ExtBuffer'],
        bL3 = 'undefined' != typeof Uint8Array,
        bL4 = 'undefined' != typeof Map,
        bL5 = [];
    bL5[0x1] = 0xd4, bL5[0x2] = 0xd5, bL5[0x4] = 0xd6, bL5[0x8] = 0xd7, bL5[0x10] = 0xd8, bKS['getWriteType'] = function(bKR) {
        function bKS(bKR, bKS) {
            if (null === bKS) return bKT(bKR, bKS);
            if (bLI(bKS)) return bLJ(bKR, bKS);
            if (bKU(bKS)) return function(bKR, bKS) {
                var bKT = bKS['length'];
                bLF[0x10 > bKT ? 0x90 + bKT : 0xffff >= bKT ? 0xdc : 0xdd](bKR, bKT);
                for (var bKU = bKR['codec']['encode'], bKV = 0x0; bKV < bKT; bKV++) bKU(bKR, bKS[bKV]);
            }(bKR, bKS);
            if (bKW['isUint64BE'](bKS)) return function(bKR, bKS) {
                bLF[0xcf](bKR, bKS['toArray']());
            }(bKR, bKS);
            if (bKX['isInt64BE'](bKS)) return function(bKR, bKS) {
                bLF[0xd3](bKR, bKS['toArray']());
            }(bKR, bKS);
            var bKV = bKR['codec']['getExtPacker'](bKS);
            return bKV && (bKS = bKV(bKS)), bKS instanceof bL2 ? function(bKR, bKS) {
                var bKT = bKS['buffer'],
                    bKU = bKT['length'],
                    bKV = bL5[bKU] || (0xff > bKU ? 0xc7 : 0xffff >= bKU ? 0xc8 : 0xc9);
                bLF[bKV](bKR, bKU), bL1[bKS['type']](bKR), bKR['send'](bKT);
            }(bKR, bKS) : void bLK(bKR, bKS);
        }

        function bKT(bKR, bKS) {
            bLF[0xc0](bKR, bKS);
        }

        function bKV(bKR, bKS) {
            var bKT = bKS['length'],
                bKU = 0xff > bKT ? 0xc4 : 0xffff >= bKT ? 0xc5 : 0xc6;
            bLF[bKU](bKR, bKT), bKR['send'](bKS);
        }

        function bLx(bKR, bKS) {
            var bKT = Object['keys'](bKS),
                bKU = bKT['length'],
                bKV = 0x10 > bKU ? 0x80 + bKU : 0xffff >= bKU ? 0xde : 0xdf;
            bLF[bKV](bKR, bKU);
            var bKW = bKR['codec']['encode'];
            bKT['forEach'](function(bKT) {
                bKW(bKR, bKT), bKW(bKR, bKS[bKT]);
            });
        }
        var bLF = bL0['getWriteToken'](bKR),
            bLG = bKR && bKR['useraw'],
            bLH = bL3 && bKR && bKR['binarraybuffer'],
            bLI = bLH ? bKY['isArrayBuffer'] : bKY['isBuffer'],
            bLJ = bLH ? function(bKR, bKS) {
                bKV(bKR, new Uint8Array(bKS));
            } : bKV,
            bLK = bL4 && bKR && bKR['usemap'] ? function(bKR, bKS) {
                if (!(bKS instanceof Map)) return bLx(bKR, bKS);
                var bKT = bKS['size'],
                    bKU = 0x10 > bKT ? 0x80 + bKT : 0xffff >= bKT ? 0xde : 0xdf;
                bLF[bKU](bKR, bKT);
                var bKV = bKR['codec']['encode'];
                bKS['forEach'](function(bKS, bKT) {
                    bKV(bKR, bKT), bKV(bKR, bKS);
                });
            } : bLx;
        return {
            'boolean': function(bKR, bKS) {
                var bKT = bKS ? 0xc3 : 0xc2;
                bLF[bKT](bKR, bKS);
            },
            'function': bKT,
            'number': function(bKR, bKS) {
                var bKT = 0x0 | bKS;
                bKS === bKT ? bLF[-0x20 <= bKT && 0x7f >= bKT ? 0xff & bKT : 0x0 <= bKT ? 0xff >= bKT ? 0xcc : 0xffff >= bKT ? 0xcd : 0xce : -0x80 <= bKT ? 0xd0 : -0x8000 <= bKT ? 0xd1 : 0xd2](bKR, bKT) : bLF[0xcb](bKR, bKS);
            },
            'object': bLG ? function(bKR, bKT) {
                return bLI(bKT) ? function(bKR, bKS) {
                    var bKT = bKS['length'];
                    bLF[0x20 > bKT ? 0xa0 + bKT : 0xffff >= bKT ? 0xda : 0xdb](bKR, bKT), bKR['send'](bKS);
                }(bKR, bKT) : void bKS(bKR, bKT);
            } : bKS,
            'string': function(bKR) {
                return function(bKS, bKT) {
                    var bKU = bKT['length'],
                        bKV = 0x5 + 0x3 * bKU;
                    bKS['offset'] = bKS['reserve'](bKV);
                    var bKW = bKS['buffer'],
                        bKX = bKR(bKU),
                        bKY = bKS['offset'] + bKX;
                    bKU = bKZ['write']['call'](bKW, bKT, bKY);
                    var bL0 = bKR(bKU);
                    if (bKX !== bL0) {
                        var bL1 = bKY + bKU;
                        bKZ['copy']['call'](bKW, bKW, bKY + bL0 - bKX, bKY, bL1);
                    }
                    var bL2 = 0x1 === bL0 ? 0xa0 + bKU : 0x3 >= bL0 ? 0xd7 + bL0 : 0xdb;
                    bLF[bL2](bKS, bKU), bKS['offset'] += bKU;
                };
            }(bLG ? function(bKR) {
                return 0x20 > bKR ? 0x1 : 0xffff >= bKR ? 0x3 : 0x5;
            } : function(bKR) {
                return 0x20 > bKR ? 0x1 : 0xff >= bKR ? 0x2 : 0xffff >= bKR ? 0x3 : 0x5;
            }),
            'symbol': bKT,
            'undefined': bKT
        };
    };
}, function(bMi, bMj, bMk) {
    var bMl = bMk(0x11),
        bMm = bMk(0x13),
        bMn = bMm['Uint64BE'],
        bMo = bMm['Int64BE'],
        bMp = bMk(0x1c)['uint8'],
        bMq = bMk(0x3),
        bMr = bMq['global'],
        bMs = bMq['hasBuffer'] && 'TYPED_ARRAY_SUPPORT' in bMr && !bMr['TYPED_ARRAY_SUPPORT'],
        bMt = bMq['hasBuffer'] && bMr['prototype'] || {};

    function bMu() {
        var bMi = bMp['slice']();
        return bMi[0xc4] = bMw(0xc4), bMi[0xc5] = bMC(0xc5), bMi[0xc6] = bMI(0xc6), bMi[0xc7] = bMw(0xc7), bMi[0xc8] = bMC(0xc8), bMi[0xc9] = bMI(0xc9), bMi[0xca] = bMO(0xca, 0x4, bMt['writeFloatBE'] || bN2, !0x0), bMi[0xcb] = bMO(0xcb, 0x8, bMt['writeDoubleBE'] || bN5, !0x0), bMi[0xcc] = bMw(0xcc), bMi[0xcd] = bMC(0xcd), bMi[0xce] = bMI(0xce), bMi[0xcf] = bMO(0xcf, 0x8, bMW), bMi[0xd0] = bMw(0xd0), bMi[0xd1] = bMC(0xd1), bMi[0xd2] = bMI(0xd2), bMi[0xd3] = bMO(0xd3, 0x8, bMZ), bMi[0xd9] = bMw(0xd9), bMi[0xda] = bMC(0xda), bMi[0xdb] = bMI(0xdb), bMi[0xdc] = bMC(0xdc), bMi[0xdd] = bMI(0xdd), bMi[0xde] = bMC(0xde), bMi[0xdf] = bMI(0xdf), bMi;
    }

    function bMw(bMi) {
        return function(bMj, bMk) {
            var bMl = bMj['reserve'](0x2),
                bMm = bMj['buffer'];
            bMm[bMl++] = bMi, bMm[bMl] = bMk;
        };
    }

    function bMC(bMi) {
        return function(bMj, bMk) {
            var bMl = bMj['reserve'](0x3),
                bMm = bMj['buffer'];
            bMm[bMl++] = bMi, bMm[bMl++] = bMk >>> 0x8, bMm[bMl] = bMk;
        };
    }

    function bMI(bMi) {
        return function(bMj, bMk) {
            var bMl = bMj['reserve'](0x5),
                bMm = bMj['buffer'];
            bMm[bMl++] = bMi, bMm[bMl++] = bMk >>> 0x18, bMm[bMl++] = bMk >>> 0x10, bMm[bMl++] = bMk >>> 0x8, bMm[bMl] = bMk;
        };
    }

    function bMO(bMi, bMj, bMk, bMl) {
        return function(bMm, bMn) {
            var bMo = bMm['reserve'](bMj + 0x1);
            bMm['buffer'][bMo++] = bMi, bMk['call'](bMm['buffer'], bMn, bMo, bMl);
        };
    }

    function bMW(bMi, bMj) {
        new bMn(this, bMj, bMi);
    }

    function bMZ(bMi, bMj) {
        new bMo(this, bMj, bMi);
    }

    function bN2(bMi, bMj) {
        bMl['write'](this, bMi, bMj, !0x1, 0x17, 0x4);
    }

    function bN5(bMi, bMj) {
        bMl['write'](this, bMi, bMj, !0x1, 0x34, 0x8);
    }
    bMj['getWriteToken'] = function(bMi) {
        return bMi && bMi['uint8array'] ? function() {
            var bMi = bMu();
            return bMi[0xca] = bMO(0xca, 0x4, bN2), bMi[0xcb] = bMO(0xcb, 0x8, bN5), bMi;
        }() : bMs || bMq['hasBuffer'] && bMi && bMi['safe'] ? function() {
            var bMi = bMp['slice']();
            return bMi[0xc4] = bMO(0xc4, 0x1, bMr['prototype']['writeUInt8']), bMi[0xc5] = bMO(0xc5, 0x2, bMr['prototype']['writeUInt16BE']), bMi[0xc6] = bMO(0xc6, 0x4, bMr['prototype']['writeUInt32BE']), bMi[0xc7] = bMO(0xc7, 0x1, bMr['prototype']['writeUInt8']), bMi[0xc8] = bMO(0xc8, 0x2, bMr['prototype']['writeUInt16BE']), bMi[0xc9] = bMO(0xc9, 0x4, bMr['prototype']['writeUInt32BE']), bMi[0xca] = bMO(0xca, 0x4, bMr['prototype']['writeFloatBE']), bMi[0xcb] = bMO(0xcb, 0x8, bMr['prototype']['writeDoubleBE']), bMi[0xcc] = bMO(0xcc, 0x1, bMr['prototype']['writeUInt8']), bMi[0xcd] = bMO(0xcd, 0x2, bMr['prototype']['writeUInt16BE']), bMi[0xce] = bMO(0xce, 0x4, bMr['prototype']['writeUInt32BE']), bMi[0xcf] = bMO(0xcf, 0x8, bMW), bMi[0xd0] = bMO(0xd0, 0x1, bMr['prototype']['writeInt8']), bMi[0xd1] = bMO(0xd1, 0x2, bMr['prototype']['writeInt16BE']), bMi[0xd2] = bMO(0xd2, 0x4, bMr['prototype']['writeInt32BE']), bMi[0xd3] = bMO(0xd3, 0x8, bMZ), bMi[0xd9] = bMO(0xd9, 0x1, bMr['prototype']['writeUInt8']), bMi[0xda] = bMO(0xda, 0x2, bMr['prototype']['writeUInt16BE']), bMi[0xdb] = bMO(0xdb, 0x4, bMr['prototype']['writeUInt32BE']), bMi[0xdc] = bMO(0xdc, 0x2, bMr['prototype']['writeUInt16BE']), bMi[0xdd] = bMO(0xdd, 0x4, bMr['prototype']['writeUInt32BE']), bMi[0xde] = bMO(0xde, 0x2, bMr['prototype']['writeUInt16BE']), bMi[0xdf] = bMO(0xdf, 0x4, bMr['prototype']['writeUInt32BE']), bMi;
        }() : bMu();
    };
}, function(bNb, bNc, bNd) {
    bNc['setExtUnpackers'] = function(bNb) {
        bNb['addExtUnpacker'](0xe, [bNj, bNn(Error)]), bNb['addExtUnpacker'](0x1, [bNj, bNn(EvalError)]), bNb['addExtUnpacker'](0x2, [bNj, bNn(RangeError)]), bNb['addExtUnpacker'](0x3, [bNj, bNn(ReferenceError)]), bNb['addExtUnpacker'](0x4, [bNj, bNn(SyntaxError)]), bNb['addExtUnpacker'](0x5, [bNj, bNn(TypeError)]), bNb['addExtUnpacker'](0x6, [bNj, bNn(URIError)]), bNb['addExtUnpacker'](0xa, [bNj, bNl]), bNb['addExtUnpacker'](0xb, [bNj, bNs(Boolean)]), bNb['addExtUnpacker'](0xc, [bNj, bNs(String)]), bNb['addExtUnpacker'](0xd, [bNj, bNs(Date)]), bNb['addExtUnpacker'](0xf, [bNj, bNs(Number)]), 'undefined' != typeof Uint8Array && (bNb['addExtUnpacker'](0x11, bNs(Int8Array)), bNb['addExtUnpacker'](0x12, bNs(Uint8Array)), bNb['addExtUnpacker'](0x13, [bNv, bNs(Int16Array)]), bNb['addExtUnpacker'](0x14, [bNv, bNs(Uint16Array)]), bNb['addExtUnpacker'](0x15, [bNv, bNs(Int32Array)]), bNb['addExtUnpacker'](0x16, [bNv, bNs(Uint32Array)]), bNb['addExtUnpacker'](0x17, [bNv, bNs(Float32Array)]), 'undefined' != typeof Float64Array && bNb['addExtUnpacker'](0x18, [bNv, bNs(Float64Array)]), 'undefined' != typeof Uint8ClampedArray && bNb['addExtUnpacker'](0x19, bNs(Uint8ClampedArray)), bNb['addExtUnpacker'](0x1a, bNv), bNb['addExtUnpacker'](0x1d, [bNv, bNs(DataView)])), bNg['hasBuffer'] && bNb['addExtUnpacker'](0x1b, bNs(bNh));
    };
    var bNf, bNg = bNd(0x3),
        bNh = bNg['global'],
        bNi = {
            'name': 0x1,
            'message': 0x1,
            'stack': 0x1,
            'columnNumber': 0x1,
            'fileName': 0x1,
            'lineNumber': 0x1
        };

    function bNj(bNb) {
        return bNf || (bNf = bNd(0x1e)['decode']), bNf(bNb);
    }

    function bNl(bNb) {
        return RegExp['apply'](null, bNb);
    }

    function bNn(bNb) {
        return function(bNc) {
            var bNd = new bNb();
            for (var bNf in bNi) bNd[bNf] = bNc[bNf];
            return bNd;
        };
    }

    function bNs(bNb) {
        return function(bNc) {
            return new bNb(bNc);
        };
    }

    function bNv(bNb) {
        return new Uint8Array(bNb)['buffer'];
    }
}, function(bNx, bNy, bNz) {
    var bNA = bNz(0x20);

    function bNB(bNx) {
        var bNy, bNz = Array(0x100);
        for (bNy = 0x0; 0x7f >= bNy; bNy++) bNz[bNy] = bNF(bNy);
        for (bNy = 0x80; 0x8f >= bNy; bNy++) bNz[bNy] = bNM(bNy - 0x80, bNx['map']);
        for (bNy = 0x90; 0x9f >= bNy; bNy++) bNz[bNy] = bNM(bNy - 0x90, bNx['array']);
        for (bNy = 0xa0; 0xbf >= bNy; bNy++) bNz[bNy] = bNM(bNy - 0xa0, bNx['str']);
        for (bNz[0xc0] = bNF(null), bNz[0xc1] = null, bNz[0xc2] = bNF(!0x1), bNz[0xc3] = bNF(!0x0), bNz[0xc4] = bNH(bNx['uint8'], bNx['bin']), bNz[0xc5] = bNH(bNx['uint16'], bNx['bin']), bNz[0xc6] = bNH(bNx['uint32'], bNx['bin']), bNz[0xc7] = bNH(bNx['uint8'], bNx['ext']), bNz[0xc8] = bNH(bNx['uint16'], bNx['ext']), bNz[0xc9] = bNH(bNx['uint32'], bNx['ext']), bNz[0xca] = bNx['float32'], bNz[0xcb] = bNx['float64'], bNz[0xcc] = bNx['uint8'], bNz[0xcd] = bNx['uint16'], bNz[0xce] = bNx['uint32'], bNz[0xcf] = bNx['uint64'], bNz[0xd0] = bNx['int8'], bNz[0xd1] = bNx['int16'], bNz[0xd2] = bNx['int32'], bNz[0xd3] = bNx['int64'], bNz[0xd4] = bNM(0x1, bNx['ext']), bNz[0xd5] = bNM(0x2, bNx['ext']), bNz[0xd6] = bNM(0x4, bNx['ext']), bNz[0xd7] = bNM(0x8, bNx['ext']), bNz[0xd8] = bNM(0x10, bNx['ext']), bNz[0xd9] = bNH(bNx['uint8'], bNx['str']), bNz[0xda] = bNH(bNx['uint16'], bNx['str']), bNz[0xdb] = bNH(bNx['uint32'], bNx['str']), bNz[0xdc] = bNH(bNx['uint16'], bNx['array']), bNz[0xdd] = bNH(bNx['uint32'], bNx['array']), bNz[0xde] = bNH(bNx['uint16'], bNx['map']), bNz[0xdf] = bNH(bNx['uint32'], bNx['map']), bNy = 0xe0; 0xff >= bNy; bNy++) bNz[bNy] = bNF(bNy - 0x100);
        return bNz;
    }

    function bNF(bNx) {
        return function() {
            return bNx;
        };
    }

    function bNH(bNx, bNy) {
        return function(bNz) {
            var bNA = bNx(bNz);
            return bNy(bNz, bNA);
        };
    }

    function bNM(bNx, bNy) {
        return function(bNz) {
            return bNy(bNz, bNx);
        };
    }
    bNy['getReadToken'] = function(bNx) {
        var bNy = bNA['getReadFormat'](bNx);
        return bNx && bNx['useraw'] ? function(bNx) {
            var bNy, bNz = bNB(bNx)['slice']();
            for (bNz[0xd9] = bNz[0xc4], bNz[0xda] = bNz[0xc5], bNz[0xdb] = bNz[0xc6], bNy = 0xa0; 0xbf >= bNy; bNy++) bNz[bNy] = bNM(bNy - 0xa0, bNx['bin']);
            return bNz;
        }(bNy) : bNB(bNy);
    };
}, function(bNV, bNW, bNX) {
    bNW['Encoder'] = bO0;
    var bNY = bNX(0x21),
        bNZ = bNX(0x1a)['EncodeBuffer'];

    function bO0(bNV) {
        return this instanceof bO0 ? void bNZ['call'](this, bNV) : new bO0(bNV);
    }
    bO0['prototype'] = new bNZ(), bNY['mixin'](bO0['prototype']), bO0['prototype']['encode'] = function(bNV) {
        this['write'](bNV), this['emit']('data', this['read']());
    }, bO0['prototype']['end'] = function(bNV) {
        arguments['length'] && this['encode'](bNV), this['flush'](), this['emit']('end');
    };
}, function(bO4, bO5, bO6) {
    bO5['Decoder'] = bO9;
    var bO7 = bO6(0x21),
        bO8 = bO6(0x1f)['DecodeBuffer'];

    function bO9(bO4) {
        return this instanceof bO9 ? void bO8['call'](this, bO4) : new bO9(bO4);
    }
    bO9['prototype'] = new bO8(), bO7['mixin'](bO9['prototype']), bO9['prototype']['decode'] = function(bO4) {
        arguments['length'] && this['write'](bO4), this['flush']();
    }, bO9['prototype']['push'] = function(bO4) {
        this['emit']('data', bO4);
    }, bO9['prototype']['end'] = function(bO4) {
        this['decode'](bO4), this['emit']('end');
    };
}, function(bOe, bOf, bOg) {
    bOg(0x14), bOg(0xf), bOf['createCodec'] = bOg(0xc)['createCodec'];
}, function(bOh, bOi, bOj) {
    bOj(0x14), bOj(0xf), bOi['codec'] = {
        'preset': bOj(0xc)['preset']
    };
}, function(bOk, bOl, bOm) {
    var bOn, bOo = bOm(0x7),
        bOp = bOm(0x4),
        bOq = bOm(0x3a);
    bOk['exports'] = function(bOl, bOo, bOp, bOu) {
        bOl['ImageUtils']['crossOrigin'] = '';
        var bOv = bOm(0x17),
            bOw = new bOl['LoadingManager'](),
            bOx = new bOl['OBJLoader'](bOw);
        this['cubeGeo'] = new bOl['BoxGeometry'](0x1, 0x1, 0x1), this['getCubeMesh'] = function() {
            return new bOl['Mesh'](this['cubeGeo']);
        };
        var bOy = new bOl['PlaneGeometry'](0x1, 0x1);
        new bOl['CylinderGeometry'](0.1, 0x1, 0x1, 0x4, 0x1, !0x1, Math['PI'] / 0x4)['computeFlatVertexNormals']();
        var bOz = new bOl['TextureLoader'](),
            bOA = new bOl['MeshBasicMaterial']({
                'color': 0xffffff
            }),
            bOB = new bOl['MeshBasicMaterial']({
                'color': 0xff00
            }),
            bOC = {},
            bOD = {},
            bOE = {};
        this['movTextures'] = [];
        var bOF, bOG = this,
            bOH = {};
        this['frustum'] = new bOl['Frustum']();
        var bOI = new bOl['Matrix4']();
        this['camera'] = new bOl['PerspectiveCamera'](0x0, window['innerWidth'] / window['innerHeight'], 0.1, 0x1770), this['fpsCamera'] = new bOl['PerspectiveCamera'](bOp['fov'], window['innerWidth'] / window['innerHeight'], 0.1, 0x12c), this['fpsCamera']['layers']['set'](0x1), this['camera']['add'](this['fpsCamera']), this['weaponLean'] = 0x1, this['weaponOffX'] = 0x1, this['weaponOffY'] = 0x1, this['weaponBob'] = 0x1, this['init'] = function(bOm) {
            this['clearPendingMeshes'](), this['scene'] = new bOl['Scene'](), this['backgroundScene'] = new bOl['Scene'](), bOm['skyDome'] && (this['skyDome'] = bOq['fromConfig'](bOm), this['backgroundScene']['add'](this['skyDome'])), bOk['exports']['initScene']['call'](this, bOm);
        };
        var bOK = 0x0;
        this['flash'] = function(bOk, bOl) {
            bOu['showFlash'] = !0x0, bOu['flashX'] = bOk, bOu['flashY'] = 0x1 - bOl, bOK = 0x1;
        }, this['updateLightMap'] = function(bOk) {
            this['skyLight'] && (this['skyLight']['shadow']['camera']['right'] = bOk['shadWidth'], this['skyLight']['shadow']['camera']['left'] = -bOk['shadWidth'], this['skyLight']['shadow']['camera']['top'] = bOk['shadLength'], this['skyLight']['shadow']['camera']['bottom'] = -bOk['shadLength']);
        }, this['useDepthMap'] = 0x0, this['toggleDepthMap'] = function(bOm) {
            if (this['useDepthMap'] = bOm, this['scene']) {
                var bOo = bOm && '0' != bOm;
                this['scene']['overrideMaterial'] = bOo ? bOA : null, bOo ? (this['scene']['fog'] = new bOl['Fog'](0x0, 0x0, bOm), this['renderer']['setClearColor'](0x0)) : bOk['exports']['initScene']['call'](this, bOn);
            }
        }, this['greenScreen'] = !0x1, this['updateGreenScreen'] = function(bOk) {
            bOG['greenScreen'] && !bOk['noGreen'] ? (bOk['realMat'] = bOk['material'], bOk['material'] = bOB) : bOk['material'] = bOk['realMat'] || bOk['material'];
        }, this['toggleGreenscreen'] = function(bOk) {
            this['greenScreen'] = bOk, this['scene'] && (bOk ? (this['renderer']['setClearColor'](0xff00), this['scene']['fog']['near'] = 0.1, this['scene']['fog']['far'] = 0x0) : (this['scene']['fog']['near'] = 0x1, this['scene']['fog']['far'] = bOn['fogD'], this['renderer']['setClearColor'](bOn['sky'])), this['scene']['traverse'](function(bOk) {
                bOG['updateGreenScreen'](bOk);
            }));
        }, this['renderer'] = new bOl['WebGLRenderer']({
            'precision': 'mediump',
            'powerPreference': 'high-performance',
            'antialias': !0x1
        }), this['renderer']['shadowMap']['enabled'] = !0x0, this['renderer']['shadowMap']['autoUpdate'] = !0x1, this['renderer']['shadowMap']['type'] = bOl['BasicShadowMap'], this['renderer']['setPixelRatio'](window['devicePixelRatio']), this['renderer']['setSize'](window['innerWidth'], window['innerHeight']), this['renderer']['autoClear'] = !0x1, document['body']['appendChild'](this['renderer']['domElement']), this['updateShadowMap'] = function() {
            this['renderer']['shadowMap']['needsUpdate'] = !0x0;
        }, window['effectComposer'], this['bloomPass'], this['postprocessing'] = {
            'enabled': !0x1
        }, this['initShaders'] = function() {
            var bOk = new bOl['RenderPass'](this['scene'], this['camera']);
            this['bloomPass'] = new bOl['UnrealBloomPass'](new bOl['Vector2'](window['innerWidth'], window['innerHeight']), 1.5, 0.4, 0.85), this['bloomPass']['renderToScreen'] = !0x0, this['bloomPass']['strength'] = this['postprocessing']['bloomStrength'], this['bloomPass']['radius'] = this['postprocessing']['bloomRadius'], this['bloomPass']['threshold'] = this['postprocessing']['bloomTresh'], window['effectComposer'] = new bOl['EffectComposer'](this['renderer']), window['effectComposer']['addPass'](bOk), window['effectComposer']['addPass'](this['bloomPass']), this['resizeShaders']();
        }, this['resizeShaders'] = function() {
            if (this['bloomPass'] && this['bloomPass']['setSize'](window['innerWidth'], window['innerHeight']), window['effectComposer']) {
                var bOk = this['renderer']['getPixelRatio'](),
                    bOl = Math['floor'](window['innerWidth'] / bOk) || 0x1,
                    bOm = Math['floor'](window['innerHeight'] / bOk) || 0x1;
                window['effectComposer']['setSize'](bOl, bOm);
            }
        }, this['zoomVal'] = 0x1, this['zoom'] = function(bOk) {
            this['zoomVal'] = bOk, this['updateCamFOV'](), this['fpsCamera']['fov'] = this['fpsFov'] / bOk, this['fpsCamera']['updateProjectionMatrix']();
        }, this['setFPSFov'] = function(bOk) {
            this['fpsFov'] = bOk, this['fpsCamera']['fov'] = bOk, this['fpsCamera']['updateProjectionMatrix']();
        }, this['setFPSFov'](bOp['fov']), this['fovMult'] = function(bOk) {
            this['fovMlt'] != bOk && (this['fovMlt'] = bOk, this['updateCamFOV']());
        }, this['fovMlt'] = 0x1, this['updateCamFOV'] = function() {
            this['camera']['fov'] = this['fov'] / this['zoomVal'] * this['fovMlt'], this['camera']['updateProjectionMatrix']();
        }, this['setFov'] = function(bOk) {
            this['fov'] = bOk, this['updateCamFOV']();
        }, this['setFov'](bOp['fov']), this['resize'] = function() {
            this['camera']['aspect'] = window['innerWidth'] / window['innerHeight'], this['camera']['updateProjectionMatrix'](), this['fpsCamera']['aspect'] = window['innerWidth'] / window['innerHeight'], this['fpsCamera']['updateProjectionMatrix'](), this['renderer']['setSize'](window['innerWidth'], window['innerHeight']), this['resizeShaders']();
        }, this['resMltV'] = 0x1, this['setResMlt'] = function(bOk) {
            this['resMltV'] = bOk, this['renderer']['setPixelRatio'](window['devicePixelRatio'] * this['resMltV']), this['renderer']['setSize'](window['innerWidth'], window['innerHeight']);
        }, this['updateFrustum'] = function() {
            this['frustum']['setFromMatrix'](bOI['multiplyMatrices'](this['camera']['projectionMatrix'], this['camera']['matrixWorldInverse']));
        };
        var bP2 = 0x0,
            bP3 = 0x0;
        this['shakeX'] = 0x0, this['shakeY'] = 0x0, this['updateShake'] = function(bOk) {
            bP2 && (bP2 *= Math['pow'](0.99, bOk), bP3 += bOo['randFloat'](-Math['PI'], Math['PI']), this['shakeX'] = Math['cos'](bP3) * bP2, this['shakeY'] = Math['sin'](bP3) * bP2, 0.01 >= bP2 && (bP2 = 0x0, this['shakeX'] = this['shakeY'] = 0x0));
        }, this['shake'] = function(bOk) {
            bP2 = bOk;
        }, this['render'] = function(bOk) {
            if (this['scene']) {
                for (var bOl = 0x0; bOl < this['movTextures']['length']; ++bOl)(bOF = this['movTextures'][bOl])['tex']['offset'] && (bOF['tex']['offset'][0x0 == bOF['movD'] ? 'x' : 'y'] += bOF['mov'] * bOk);
                this['postprocessing']['enabled'] || (this['renderer']['clear'](), this['camera']['layers']['set'](0x0), this['skyDome'] && (this['camera']['getWorldPosition'](this['skyDome']['position']), this['renderer']['render'](this['backgroundScene'], this['camera']), this['renderer']['clearDepth']()), this['renderer']['render'](this['scene'], this['camera']), this['camera']['layers']['set'](0x2), this['renderer']['clearDepth'](), this['renderer']['render'](this['scene'], this['camera']), this['renderer']['clearDepth'](), this['renderer']['render'](this['scene'], this['fpsCamera'])), bOu['showFlash'] && (0x0 >= bOK && (bOK = 0x0, bOu['showFlash'] = !0x1), bOK -= bOk), this['updateShake'](bOk);
            }
        }, this['updateTexture'] = function(bOk, bOm, bOn) {
            bOn = bOn || {};
            var bOo = 0x0;
            for (var bOp in bOE) bOp['substring'](0x0, bOk['length'] + 0x2) == bOk + 'mt' && (bOo++, bOE[bOp]['image'] = bOm, bOE[bOp]['needsUpdate'] = !0x0);
            if (!bOo) {
                var bOq = bOk + (null == bOn['movT'] ? 'mt' : 'mt' + bOn['movT']) + (null == bOn['movD'] ? 'md' : bOn['movD']) + (bOn['fontSize'] || 'fs') + (bOn['fcolr'] || 'fc') + (bOn['bcolr'] || 'bc') + (bOn['noBVis'] || 'bv') + (bOn['text'] || 'txt') + (bOn['tAlign'] || 'ta'),
                    bOu = bOE[bOq];
                bOu = new bOl['Texture'](bOm), bOE[bOq] = bOu, bOE[bOq]['needsUpdate'] = !0x0;
            }
        }, this['loadTexture'] = function(bOk, bOm, bOn, bOp) {
            var bOq = bOm + (null == (bOn = bOn || {})['movT'] ? 'mt' : 'mt' + bOn['movT']) + (null == bOn['movD'] ? 'md' : bOn['movD']) + (bOn['fontSize'] || 'fs') + (bOn['fcolr'] || 'fc') + (bOn['bcolr'] || 'bc') + (bOn['noBVis'] || 'bv') + (bOn['text'] || 'txt') + (bOn['tAlign'] || 'ta');
            if (bOE[bOq]) bOE[bOq]['mats'] ? bOE[bOq]['mats']['push']({
                't': bOp,
                'm': bOk
            }) : (bOk[bOp || 'map'] = bOE[bOq], bOk['needsUpdate'] = !0x0);
            else if (bOE[bOq] = {
                    'mats': [{
                        't': bOp,
                        'm': bOk
                    }]
                }, bOn['canvas']) {
                var bOu = new bOl['Texture'](bOn['canvas']);
                bOu['wrapS'] = bOl['RepeatWrapping'], bOu['wrapT'] = bOl['RepeatWrapping'], bOu['repeat']['set'](bOn['repeatX'] || 0x1, bOn['repeatY'] || 0x1), bOu['minFilter'] = bOn['tFilter'] || bOl['NearestFilter'], bOu['magFilter'] = bOn['tFilter'] || bOl['NearestFilter'], bOu['needsUpdate'] = !0x0;
                for (var bOv = 0x0; bOv < bOE[bOq]['mats']['length']; ++bOv) bOE[bOq]['mats'][bOv]['m'][bOE[bOq]['mats'][bOv]['t'] || 'map'] = bOu, bOE[bOq]['mats'][bOv]['m']['needsUpdate'] = !0x0;
                bOE[bOq] = bOu, bOn['movT'] && this['movTextures']['push']({
                    'tex': bOu,
                    'mov': bOn['movT'],
                    'movD': bOn['movD'] || 0x0
                });
            } else bOm['includes']('default') || bOz['load'](bOo['versionifyUrl']('/textures/' + bOm + '.png'), bOk => {
                bOk['wrapS'] = bOl['RepeatWrapping'], bOk['wrapT'] = bOl['RepeatWrapping'], bOk['repeat']['set'](bOn['repeatX'] || 0x1, bOn['repeatY'] || 0x1), bOk['minFilter'] = bOn['tFilter'] || bOl['NearestFilter'], bOk['magFilter'] = bOn['tFilter'] || bOl['NearestFilter'], bOk['needsUpdate'] = !0x0;
                for (var bOm = 0x0; bOm < bOE[bOq]['mats']['length']; ++bOm) bOE[bOq]['mats'][bOm]['m'][bOE[bOq]['mats'][bOm]['t'] || 'map'] = bOk, bOE[bOq]['mats'][bOm]['m']['needsUpdate'] = !0x0;
                bOE[bOq] = bOk, bOn['movT'] && this['movTextures']['push']({
                    'tex': bOk,
                    'mov': bOn['movT'],
                    'movD': bOn['movD'] || 0x0
                });
            });
            return bOk;
        }, this['getMat'] = function(bOk, bOm) {
            var bOn = (bOm && bOm['texSrc'] || bOk) + (bOm ? (bOm['rotation'] || 'x') + (bOm['noFog'] || 'y') + (bOm['opacity'] || 'z') + (bOm['color'] || 'b') + (bOm['mat'] ? 'ma' : 'nm') + (bOm['ao'] || 'a') + (bOm['emissive'] || 'e') + (bOm['glowText'] || 'g') + (null == bOm['movT'] ? 'mt' : bOm['movT']) + (null == bOm['movD'] ? 'md' : bOm['movD']) + (null == bOm['canvas'] ? '' : 'canvas') + (null == bOm['depthWrite'] ? 'd' : bOm['depthWrite']) + (bOm['fontSize'] || 'fs') + (bOm['fcolr'] || 'fc') + (bOm['bcolr'] || 'bc') + (bOm['noBVis'] || 'bv') + (bOm['text'] || 'txt') + (bOm['tAlign'] || 'ta') : ''),
                bOo = bOD[bOn];
            return bOo || (bOo = new((bOm = bOm || {})['mat'] ? bOm['mat'] : bOl['StrippedLambertMaterial'])(bOm), bOm['canvas'] && this['loadTexture'](bOo, bOn, bOm), bOk && 'default' != bOk && this['loadTexture'](bOo, bOm['texSrc'] || bOk, bOm), bOm && bOm['emissive'] && this['loadTexture'](bOo, (bOm['glowText'] && bOm['texSrc'] || bOk) + (bOm['sameGlow'] ? '' : '_e'), bOm, 'emissiveMap'), bOm && bOm['ao'] && (this['loadTexture'](bOo, bOk + '_ao', bOm, 'aoMap'), bOo['aoMapIntensity'] = 1.3), bOm && bOm['normal'] && this['loadTexture'](bOo, bOk + '_n', bOm, 'normalMap'), 'default' == bOk && (bOo['vertexColors'] = bOl['VertexColors']), bOm && bOm['noFog'] && (bOo['fog'] = !0x1), bOo['shading'] = bOl['SmoothShading'], bOD[bOn] = bOo), bOo;
        }, this['genColorCube'] = function(bOk, bOm, bOn, bOo, bOp, bOq) {
            for (var bOu = (bOq = bOq || {})['us'] ? 'us' : 'ns', bOw = 0x0; bOw < bOo['length']; ++bOw) {
                for (var bOx = 0x0; bOx < bOo[bOw]['length']; ++bOx) bOu += bOo[bOw][bOx] + '_';
                bOu += '|';
            }
            var bOy = bOC[bOu];
            if (!bOy) {
                bOy = new bOl['Geometry']();
                var bOz = 0.5 + (bOp || 0x0);
                for (bOw = 0x0; bOw < bOo['length']; ++bOw) {
                    var bOA = bOo[bOw][0x1],
                        bOB = bOo[bOw][0x2] || 0x1;
                    if (bOq['us']) {
                        bOD = bOv['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x1, 0x1, 0x1, {
                            'colr': bOo[bOw][0x0],
                            'fAmb': bOo[bOw][0x4],
                            'amb': bOo[bOw][0x3]
                        });
                        (bOE = new bOl['Mesh'](bOD))['scale']['set'](bOB, bOA, bOB), this['moveMesh'](bOE, 0x0, bOz - bOA, 0x0);
                    } else {
                        var bOD = new bOl['BoxGeometry'](bOB, bOA, bOB);
                        bOv['colorize'](bOD, bOo[bOw][0x0]), bOE = new bOl['Mesh'](bOD), this['moveMesh'](bOE, 0x0, bOz - bOA / 0x2, 0x0);
                    }
                    this['merge'](bOy, bOE), bOz -= bOA;
                }
                bOC[bOu] = bOy;
            }
            var bOE = new bOl['Mesh'](bOy, this['getMat']('default'));
            return this['scaleMesh'](bOE, bOk, bOm, bOn), bOE;
        };
        var bPH = {};
        this['genBody'] = function(bOk, bOm, bOn, bOo, bOq) {
            var bOu = bOk + '-' + bOm + '-' + bOn + '-' + bOo,
                bOv = bPH[bOu];
            if (!bOv) {
                bOv = new bOl['Geometry']();
                var bOw = bOp['playerHeight'] - bOp['headScale'] - bOp['legHeight'],
                    bOx = this['genColorCube'](bOp['chestWidth'], bOw, bOp['chestScale'], [
                        [bOk, 0.8, 0x1, 0.8],
                        [bOm, 0.2, 1.05]
                    ], 0x0, {
                        'us': bOq
                    });
                this['moveMesh'](bOx, 0x0, bOw / 0x2, 0x0), this['merge'](bOv, bOx);
                var bOy = this['genColorCube'](bOp['headScale'], bOp['headScale'], bOp['headScale'], [
                    [bOn, 0.2, 0x1, 0.6],
                    [bOo, 0.8]
                ], 0x0, {
                    'us': bOq
                });
                this['moveMesh'](bOy, 0x0, bOp['playerHeight'] - bOp['headScale'] / 0x2 - bOp['legHeight'], 0x0), this['merge'](bOv, bOy), bOv = new bOl['BufferGeometry']()['fromGeometry'](bOv), bPH[bOu] = bOv;
            }
            var bOz = new bOl['Mesh'](bOv, this['getMat']('default'));
            return bOz['receiveShadow'] = !0x0, bOz['noGreen'] = !0x0, bOz;
        };
        var bPT = {};
        this['genLeg'] = function(bOk, bOm, bOn, bOo, bOq) {
            var bOu = bOp['legScale'],
                bOv = null;
            if (bOo) {
                var bOw = bOm + '-' + (bOo || '');
                if (!(bOv = bPT[bOw])) {
                    var bOx = bOp['legHeight'] / 0x2,
                        bOy = bOu / 0x2,
                        bOz = [0.5, 0x2],
                        bOA = this['genColorCube'](bOu, bOx, bOu, [
                            [bOm, 0x1]
                        ], 0x0, {
                            'us': bOq
                        });
                    this['moveMesh'](bOA, 0x0, -bOx / 0x2 * Math['cos'](bOz[0x1]), -bOx / 0x2 * Math['sin'](bOz[0x1])), this['rotateMesh'](bOA, 0x0, bOz[0x1], 0x0);
                    var bOB = Math['sqrt'](bOy * bOy + bOy * bOy - 0x2 * bOy * bOy * Math['cos'](bOz[0x0] - bOz[0x1])),
                        bOC = 0x2 * Math['sqrt'](bOy * bOy - bOB / 0x2 * (bOB / 0x2)),
                        bOD = this['genColorCube'](bOu, bOB, bOC, [
                            [bOm, 0x1]
                        ], 0x0, {
                            'us': bOq
                        });
                    this['moveMesh'](bOD, 0x0, -bOx * Math['cos'](bOz[0x1]), -bOx * Math['sin'](bOz[0x1])), this['rotateMesh'](bOD, 0x0, (bOz[0x1] + bOz[0x0]) / 0x2, 0x0);
                    var bOE = this['genColorCube'](bOu, bOx, bOu, [
                        [bOm, 0.5, 0x1, 0.8],
                        [bOn, 0.5]
                    ], 0x0, {
                        'us': bOq
                    });
                    this['moveMesh'](bOE, 0x0, -bOx * Math['cos'](bOz[0x1]) - bOx / 0x2 * Math['cos'](bOz[0x0]), -bOx * Math['sin'](bOz[0x1]) - bOx / 0x2 * Math['sin'](bOz[0x0])), this['rotateMesh'](bOE, 0x0, bOz[0x0], 0x0);
                    bOv = new bOl['Geometry']();
                    this['merge'](bOv, bOA), this['merge'](bOv, bOD), this['merge'](bOv, bOE), bPT[bOw] = bOv;
                }
                bOv = new bOl['BufferGeometry']()['fromGeometry'](bOv), bOv = new bOl['Mesh'](bOv, this['getMat']('default')), this['moveMesh'](bOv, bOp['legScale'] / 0x2 * (bOk ? -0x1 : 0x1), bOp['legHeight'] - bOp['crouchDst'] + 0.5, 0x0);
            } else bOv = this['genColorCube'](bOu, bOp['legHeight'], bOu, [
                [bOm, 0.75, 0x1],
                [bOn, 0.25]
            ], -0.5, {
                'us': bOq
            }), this['moveMesh'](bOv, bOp['legScale'] / 0x2 * (bOk ? -0x1 : 0x1), bOp['legHeight'], 0x0);
            return bOv['receiveShadow'] = !0x0, bOv['noGreen'] = !0x0, bOv;
        };
        var bQa = {};
        this['genArms'] = function(bOk, bOm, bOn, bOo, bOq, bOu) {
            var bOv = bQa[bOk['name'] + '-' + bOn + '-' + bOo + '-' + bOu + '-' + (bOq || 0x0)];
            if (!bOv) {
                bOv = new bOl['Geometry']();
                var bOw = (-bOp['chestWidth'] + bOp['armScale'] / 0x2 - bOp['armInset']) * (bOu ? bOk['holdW'] || 0.4 : 0x1);
                bOq && 0x1 != bOq || this['merge'](bOv, this['genArm'](bOw, bOp['armOff'], bOk, !0x0, bOm, bOn, bOo, bOu)), bOq && 0x2 != bOq || this['merge'](bOv, this['genArm'](-bOw, bOp['armOff'], bOk, !0x1, bOm, bOn, bOo, bOu)), bOv = new bOl['BufferGeometry']()['fromGeometry'](bOv), bQa[bOk['name'] + '-' + bOn + '-' + bOu + '-' + (bOq || 0x0)] = bOv;
            }
            return (bOv = new bOl['Mesh'](bOv, this['getMat']('default')))['noGreen'] = !0x0, bOv['receiveShadow'] = !0x0, bOv;
        }, this['genArm'] = function(bOk, bOm, bOn, bOq, bOu, bOv, bOw, bOx) {
            var bOy = bOq ? bOn['leftHoldY'] : bOn['rightHoldY'],
                bOz = bOq ? bOn['leftHoldZ'] : bOn['rightHoldZ'],
                bOA = bOq ? bOn['leftHoldX'] || 0x0 : bOn['rightHoldX'] || 0x0,
                bOB = bOp['armScale'] * (bOx ? 0.7 : 0x1),
                bOC = Math['min'](bOp['uArmLength'] + bOp['lArmLength'] - 0.01, bOo['getDistance3D'](bOk, bOm, 0x0, (bOn['xOff'] - bOA) * (bOq && bOn['akimbo'] ? -0x1 : 0x1), bOn['yOff'] + bOy, bOn['zOff'] - bOz)),
                bOD = bOo['getAnglesSSS'](bOC, bOp['uArmLength'], bOp['lArmLength']),
                bOE = Math['PI'] / 0x2;
            if (!bOx) {
                var bOF = this['genColorCube'](bOB, bOp['uArmLength'], bOB, [
                    [bOu, 0x1]
                ], 0x0, {
                    'us': bOx
                });
                this['moveMesh'](bOF, 0x0, -bOp['uArmLength'] / 0x2 * Math['cos'](bOE), -bOp['uArmLength'] / 0x2 * Math['sin'](bOE)), this['rotateMesh'](bOF, 0x0, bOE, 0x0);
                var bOG = bOB / 0x2,
                    bOH = Math['sqrt'](bOG * bOG + bOG * bOG - 0x2 * bOG * bOG * Math['cos'](Math['PI'] + bOD[0x0] + Math['PI'] / 0x2)),
                    bOI = 0x2 * Math['sqrt'](bOG * bOG - bOH / 0x2 * (bOH / 0x2)),
                    bOK = this['genColorCube'](bOB, bOH, bOI, [
                        [bOu, 0x1]
                    ], 0x0, {
                        'us': bOx
                    });
                this['moveMesh'](bOK, 0x0, -bOp['uArmLength'] * Math['cos'](bOE), -bOp['uArmLength'] * Math['sin'](bOE)), this['rotateMesh'](bOK, 0x0, (bOE + bOD[0x0]) / 0x2, 0x0);
            }
            var bP2 = this['genColorCube'](bOB, bOp['lArmLength'], bOB, [
                    [bOu, 0.65, 0x1, 0.6],
                    [bOv, 0.15, 1.1],
                    [bOw, 0.2, 0x1, 0.5, !0x0]
                ], 0x0, {
                    'us': bOx
                }),
                bP3 = bOp['lArmLength'] / 0x2;
            this['moveMesh'](bP2, 0x0, -bOp['uArmLength'] * Math['cos'](bOE) - bP3 * Math['cos'](bOD[0x0]), -bOp['uArmLength'] * Math['sin'](bOE) - bP3 * Math['sin'](bOD[0x0])), this['rotateMesh'](bP2, 0x0, bOD[0x0], 0x0);
            var bPH = new bOl['Geometry']();
            if (bOx) {
                var bPT = this['genColorCube'](bOB, 0x14, bOB, [
                    [bOu, 0x1]
                ], 0x0, {
                    'us': bOx
                });
                this['moveMesh'](bPT, 0x0, -bOp['uArmLength'] * Math['cos'](bOE) - -0xa * Math['cos'](bOD[0x0]), -bOp['uArmLength'] * Math['sin'](bOE) - -0xa * Math['sin'](bOD[0x0])), this['rotateMesh'](bPT, 0x0, bOD[0x0], 0x0), this['merge'](bPH, bPT);
            } else this['merge'](bPH, bOF), this['merge'](bPH, bOK);
            return this['merge'](bPH, bP2), bPH = new bOl['Mesh'](bPH), this['moveMesh'](bPH, bOk - bOn['xOff'], bOm - bOn['yOff'], -bOn['zOff']), bPH['rotation']['order'] = 'YXZ', bPH['rotation']['x'] = -bOD[0x1] - bOo['getDirection'](0x0, bOm, bOn['zOff'] - bOz, bOn['yOff'] + bOy), bPH['rotation']['y'] = bOo['getDirection'](-bOk, 0x0, (bOq && bOn['akimbo'] ? 0x1 : -0x1) * (bOn['xOff'] - bOA), bOn['zOff'] - bOz) - Math['PI'] / 0x2, bPH;
        }, this['addCube'] = function(bOk, bOm, bOn, bOo, bOp, bOq, bOu, bOw) {
            bOw = bOw || {};
            var bOx = new bOl['Mesh'](bOv['generateCube'](bOu, bOo, bOp, bOq, bOw));
            return this['moveMesh'](bOx, bOk, bOm, bOn), bOx['rotation']['set'](bOw['yR'] || 0x0, bOw['xR'] || 0x0, bOw['zR'] || 0x0), bOx['scale']['set'](bOo, bOp, bOq), bOw['src'] && !bOw['noGroup'] ? this['meshGroup'](bOx, bOw) : this['add'](bOx, bOw), bOx;
        };
        var bQQ = [];
        this['addSpray'] = function(bOk, bOm, bOn, bOq, bOu, bOv, bOw, bOx) {
            bOF = null;
            for (var bOz = 0x0; bOz < bQQ['length']; ++bOz)
                if (bQQ[bOz]['sid'] == bOk) {
                    bOF = bQQ[bOz];
                    break;
                }
            bOF || ((bOF = new bOl['Mesh'](bOy))['sid'] = bOk, bOF['scale']['set'](bOp['sprayScale'], bOp['sprayScale'], 0x1), bOF['receiveShadow'] = !0x0, bQQ['push'](bOF), this['add'](bOF)), this['moveMesh'](bOF, bOn, bOq, bOu), bOF['rotation']['y'] = bOo['toRad'](bOv), bOF['rotation']['x'] = bOo['toRad'](bOw), bOF['material'] = this['getMat']('sprays/' + bOm, {
                'depthWrite': !0x1,
                'opacity': bOx,
                'transparent': !0x0
            });
        }, this['clearSprays'] = function() {
            for (var bOk = 0x0; bOk < bQQ['length']; ++bOk) bQQ[bOk] && bQQ[bOk]['material']['map'] && bQQ[bOk]['material']['map']['dispose'](), this['scene']['remove'](bQQ[bOk]);
            bQQ['length'] = 0x0;
        }, this['addPlane'] = function(bOk, bOm, bOn, bOo, bOp, bOq, bOu, bOw, bOx) {
            (bOq = bOq || {})['premultipliedAlpha'] = !0x0;
            var bOy = new bOl['Mesh'](bOv['generatePlane'](bOp, bOo, bOq, bOk, bOm, bOn));
            return bOq['euler'] && (bOy['rotation']['order'] = bOq['euler']), this['moveMesh'](bOy, bOk, bOm, bOn), bOy['rotateY'](bOu || 0x0), bOy['rotateX']((bOw || 0x0) - Math['PI'] / 0x2), bOy['rotateZ'](bOx || 0x0), bOy['scale']['set'](0x2 * bOo, 0x2 * bOp, 0x1), bOq['dontAdd'] ? bOq['src'] && (bOy['material'] = this['getMat'](bOq['src'], bOq)) : bOq['src'] && !bOq['noGroup'] ? this['meshGroup'](bOy, bOq, 0x1) : this['add'](bOy, bOq), bOy;
        }, this['addRamp'] = function(bOk, bOm, bOn, bOo, bOp, bOq, bOu, bOw, bOx) {
            bOw = bOw || {};
            var bOy = new bOl['Mesh'](bOv['generatePlane'](0x2 * bOq, bOo, bOw));
            this['moveMesh'](bOy, bOk, bOm + bOp / 0x2, bOn), bOq *= 0x2;
            var bOz = Math['sqrt'](bOp * bOp + bOq * bOq);
            return bOy['scale']['set'](bOo, bOz, 0x2), bOy['rotateY'](-Math['PI'] / 0x2 - bOu), bOy['rotateX'](Math['asin'](bOp / bOz) - Math['PI'] / 0x2), bOy['rotateZ'](bOx || 0x0), bOw['src'] ? this['meshGroup'](bOy, bOw, 0x1) : this['add'](bOy, bOw), bOy;
        }, this['addGrass'] = function(bOk, bOm, bOn, bOo, bOp, bOq, bOu) {
            bOu = bOu || {};
            let bOw = new bOl['Geometry'](),
                bOx = 0x2 * Math['PI'] * Math['random'](),
                bOy = new bOl['Mesh'](bOv['generatePlane'](bOo, bOp, bOu));
            bOy['rotateY'](bOx * (Math['PI'] / 0x2)), this['merge'](bOw, bOy);
            let bOz = new bOl['Mesh'](bOv['generatePlane'](bOo, bOp, bOu));
            bOz['rotateY']((bOx + 0x1) * (Math['PI'] / 0x2)), this['merge'](bOw, bOz);
            let bOA = new bOl['Mesh'](bOw);
            return this['moveMesh'](bOA, bOk, bOm + bOp / 0x2, bOn), bOA['rotation']['set'](bOu['yR'] || 0x0, bOu['xR'] || 0x0, bOu['zR'] || 0x0), bOA['scale']['set'](bOo, bOp, bOq), bOu['src'] && !bOu['noGroup'] ? this['meshGroup'](bOA, bOu) : this['add'](bOA, bOu), bOA;
        };
        var bRy = [],
            bRz = [];
        this['loadMesh'] = function(bOk, bOm, bOn, bOp, bOq, bOu, bOv, bOw) {
            var bOy = this['getMat'](bOk['src'], bOk),
                bOz = bRy[bOk['src']];
            if (bOz) {
                if (bOk['centerZ']) {
                    bOz['computeBoundingBox']();
                    var bOA = bOz['boundingBox']['getCenter']();
                    bOv['translateZ'](bOA['x'] * bOu);
                }
            } else bOz = bOw ? new bOl['Geometry']() : new bOl['BufferGeometry'](), bRy[bOk['src']] = bOz, bOx['load'](bOo['versionifyUrl']('/models/' + bOk['src'] + '.obj'), function(bOm) {
                if (bOz['copy'](bOw ? new bOl['Geometry']()['fromBufferGeometry'](bOm['children'][0x0]['geometry']) : bOm['children'][0x0]['geometry']), bOk['uv2'] && bOz['addAttribute']('uv2', new bOl['BufferAttribute'](bOz['attributes']['uv']['array'], 0x2)), bOw) {
                    for (var bOn = new bOl['Geometry'](), bOo = 0x0; bOo < bRz[bOk['src']]['length']; ++bOo) bOG['merge'](bOn, bRz[bOk['src']][bOo]);
                    bOG['add'](new bOl['Mesh'](new bOl['BufferGeometry']()['fromGeometry'](bOn), bOy), bOk), bRz[bOk['src']]['length'] = 0x0, bRz[bOk['src']]['loaded'] = !0x0;
                }
                if (bOk['centerZ']) {
                    bOz['computeBoundingBox']();
                    var bOp = bOz['boundingBox']['getCenter']();
                    bOv['translateZ'](bOp['x'] * bOu);
                }
            });
            var bOB = new bOl['Mesh'](bOz, bOy);
            return bOB['receiveShadow'] = !bOk['noShadow'], bOB['noGreen'] = bOk['noGreen'], bOB['castShadow'] = bOk['shadows'], 'object' == typeof bOq ? (bOB['rotation']['x'] = bOB['xR'] = bOq[0x0] || 0x0, bOB['rotation']['y'] = bOB['yR'] = bOq[0x1] || 0x0, bOB['rotation']['z'] = bOB['zR'] = bOq[0x2] || 0x0) : bOB['rotation']['y'] = bOq || 0x0, bOB['xP'] = bOm, bOB['yP'] = bOn, bOB['zP'] = bOp, bOG['moveMesh'](bOB, bOm, bOn, bOp), bOG['scaleMesh'](bOB, bOu || 0x1, bOu || 0x1, bOu || 0x1), bOw ? bRz[bOk['src']] ? bRz[bOk['src']]['loaded'] ? this['meshGroup'](bOB, bOk) : bRz[bOk['src']]['push'](bOB) : bRz[bOk['src']] = [bOB] : bOv['add'](bOB), bOB;
        }, this['clearPendingMeshes'] = function() {
            for (var bOk in bRz) bRz['hasOwnProperty'](bOk) && bRz[bOk] && (bRz[bOk]['length'] = 0x0);
        }, this['updateMesh'] = function(bOk, bOm) {
            var bOn = bOx['parse'](bOm),
                bOo = new bOl['BufferGeometry']();
            bRy[bOk] = bOo, bOo['copy'](bOn['children'][0x0]['geometry']), bOo['needsUpdate'] = !0x0;
        }, this['genObj3D'] = function(bOk, bOm, bOn) {
            var bOo = new bOl['Object3D']();
            return this['moveMesh'](bOo, bOk || 0x0, bOm || 0x0, bOn || 0x0), bOo;
        }, this['merge'] = function(bOk, bOl, bOm) {
            bOl['updateMatrix'](), bOk['merge'](bOl['geometry'], bOl['matrix'], bOm);
        }, this['meshGroup'] = function(bOk, bOm) {
            var bOn = bOm['src'] + '-' + (bOm['shadowsR'] || 'a') + (bOm['emissive'] || 'e') + (bOm['opacity'] || 'o') + (null == bOm['movT'] ? 'mt' : bOm['movT']) + (null == bOm['movD'] ? 'md' : bOm['movD']);
            bOH[bOn] || (bOH[bOn] = new bOl['Geometry'](), bOH[bOn]['data'] = bOm), bOk['updateMatrix'](), bOH[bOn]['merge'](bOk['geometry'], bOk['matrix']);
        }, this['addMeshGroups'] = function() {
            for (var bOk in bOH)
                if (bOH['hasOwnProperty'](bOk)) {
                    var bOm = new bOl['Mesh'](new bOl['BufferGeometry']()['fromGeometry'](bOH[bOk]));
                    bOm['groupSrc'] = bOH[bOk]['data']['src'], bOm['visible'] = !bS7[bOm['groupSrc']], bOm['matrixAutoUpdate'] = !0x1, this['add'](bOm, bOH[bOk]['data']);
                }
            bOH = {};
        };
        var bS7 = {};
        this['toggleMeshGroup'] = function(bOk, bOm) {
            bS7[bOk] = !bOm, this['scene'] && this['scene']['traverse'](function(bOn) {
                bOn instanceof bOl['Mesh'] && bOn['groupSrc'] == bOk && (bOn['visible'] = bOm);
            });
        }, this['add'] = function(bOk, bOl) {
            bOl && (bOk['castShadow'] = bOl['shadows'], bOk['receiveShadow'] = bOl['shadows'] || bOl['shadowsR'], bOk['material'] = this['getMat'](bOl['src'], bOl)), this['updateGreenScreen'](bOk), this['scene']['add'](bOk), this['updateShadowMap']();
        }, this['remove'] = function(bOk) {
            this['scene']['remove'](bOk);
        }, this['moveMesh'] = function(bOk, bOl, bOm, bOn) {
            bOk && (null != bOl && (bOk['position']['x'] = bOl), null != bOm && (bOk['position']['y'] = bOm), null != bOn && (bOk['position']['z'] = bOn));
        }, this['scaleMesh'] = function(bOk, bOl, bOm, bOn) {
            bOk['scale']['set'](bOl, bOm, bOn);
        }, this['rotateMesh'] = function(bOk, bOl, bOm, bOn) {
            bOk && ((bOl || 0x0 == bOl) && (bOk['rotation']['y'] = bOl), (bOm || 0x0 == bOm) && (bOk['rotation']['x'] = bOm), (bOn || 0x0 == bOn) && (bOk['rotation']['z'] = bOn));
        }, this['reset'] = function() {
            bRy = [], bRz = [], bOH = {}, bOD = {}, bOE = {}, this['movTextures'] = [];
        };
    }, bOk['exports']['initScene'] = function(bOk) {
        if (bOn = bOk, bOk['ambient'] && (this['ambientLight'] = new bOp['AmbientLight'](bOk['ambient']), this['ambientLight']['layers']['enable'](0x1), this['ambientLight']['layers']['enable'](0x2), this['ambientLight']['name'] = 'ambLight', !this['scene']['getObjectByName']('ambLight') && this['scene']['add'](this['ambientLight'])), bOk['light']) {
            this['skyLight'] = new bOp['DirectionalLight'](bOk['light'], 1.3), this['skyLight']['name'] = 'skyLight', this['skyLight']['layers']['enable'](0x1), this['skyLight']['layers']['enable'](0x2), this['scene']['getObjectByName']('skyLight') || this['scene']['add'](this['skyLight']);
            var bOl = -0.3 * Math['PI'],
                bOm = 0x2 * Math['PI'] * -0.25;
            this['skyLight']['position']['x'] = bOo['lightDistance'] * Math['cos'](bOm), this['skyLight']['position']['y'] = bOo['lightDistance'] * Math['sin'](bOm) * Math['sin'](bOl), this['skyLight']['position']['z'] = bOo['lightDistance'] * Math['sin'](bOm) * Math['cos'](bOl), this['skyLight']['castShadow'] = !0x0, this['skyLight']['shadow']['mapSize']['width'] = bOk['shadowR'] || bOo['shadowRes'], this['skyLight']['shadow']['mapSize']['height'] = bOk['shadowR'] || bOo['shadowRes'], this['skyLight']['shadow']['camera']['far'] = bOo['shadowDst'];
        }
        this['scene']['fog'] = new bOp['Fog'](bOk['fog'], 0x1, bOk['fogD']), this['renderer']['setClearColor'](bOk['sky']), this['useDepthMap'] && '0' != this['useDepthMap'] && this['toggleDepthMap'](this['useDepthMap']), this['greenScreen'] && this['toggleGreenscreen'](this['greenScreen']);
    };
}, function(bSt, bSu, bSv) {
    const bSw = bSv(0x4),
        bSx = new bSw['MeshBasicMaterial']({
            'color': 0xffffff,
            'flatShading': !0x1,
            'vertexColors': bSw['VertexColors'],
            'side': bSw['BackSide']
        }),
        bSy = 0x20,
        bSz = !0x0,
        bSA = 'y',
        bSB = [{
            'stp': 0x0,
            'col': null
        }, {
            'stp': 0.5,
            'col': null
        }, {
            'stp': 0x1,
            'col': null
        }];
    class bSC extends bSw['Object3D'] {
        static['fromConfig'](bSt) {
            return new bSC(bSt['skyDomeCol0'], bSt['skyDomeCol1'], bSt['skyDomeCol2']);
        }
        constructor(bSt, bSu, bSv) {
            super(), bSB[0x0]['col'] = new bSw['Color'](bSt || '#3FB1B7'), bSB[0x1]['col'] = new bSw['Color'](bSu || '#6FE1CD'), bSB[0x2]['col'] = new bSw['Color'](bSv || '#FFFFFF');
            let bSC = new bSw['SphereGeometry'](0x32, bSy, bSy);
            bSC['computeBoundingBox']();
            let bSI = bSC['boundingBox'],
                bSJ = new bSw['Vector3']()['subVectors'](bSI['max'], bSI['min']),
                bSK = ['a', 'b', 'c'],
                bSL = new bSw['Vector3'](),
                bSM = 0x0;
            for (let bSt, bSu = 0x0; bSu < bSB['length'] - 0x1; bSu++) {
                bSt = bSB[bSu + 0x1]['stp'] - bSB[bSu]['stp'];
                for (let bSv, bSw = 0x0; bSw < bSC['faces']['length']; bSw++) {
                    bSv = bSC['faces'][bSw];
                    for (var bSR = 0x0; 0x3 > bSR; bSR++) bSM = bSL['subVectors'](bSC['vertices'][bSv[bSK[bSR]]], bSI['min'])['divide'](bSJ)[bSA], bSz && (bSM = 0x1 - bSM), bSM >= bSB[bSu]['stp'] && bSM <= bSB[bSu + 0x1]['stp'] && (bSv['vertexColors'][bSR] = bSB[bSu]['col']['clone']()['lerp'](bSB[bSu + 0x1]['col'], (bSM - bSB[bSu]['stp']) / bSt));
                }
            }
            bSC['computeVertexNormals'](!0x0), bSC['computeFaceNormals'](), this['baseMesh'] = new bSw['Mesh'](bSC, bSx), this['baseMesh']['doubleSided'] = !0x1, this['add'](this['baseMesh']);
        }
    }
    bSt['exports'] = bSC;
}, function(bSS, bST, bSU) {
    const bSV = bSU(0x4),
        bSW = (bSU(0x8), bSU(0x42)),
        bSX = bSU(0x43)['easing'];
    let bSY, bSZ = 'undefined' != typeof location;
    bSZ && (bSY = new bSV['StrippedLambertMaterial']({
        'color': 0x8c8c8c,
        'flatShading': !0x1,
        'vertexColors': bSV['VertexColors']
    }));
    const bT0 = {
            'GRASS': 0x0,
            'MOUNTAIN': 0x1
        },
        bT1 = Object['keys'](bT0)['length'],
        bT2 = {
            [bT0['GRASS']]: [0x38, 0xe2, 0x66],
            [bT0['MOUNTAIN']]: [0xa0, 0xa0, 0xa0]
        },
        bT3 = {
            'DIRT': [0x8c, 0x68, 0x35],
            'GRASS': [0x9b, 0xba, 0x2e],
            'MOUNTAIN': [0xa0, 0xa0, 0xa0]
        },
        bT4 = bSS => bSS['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (bSS, bST, bSU, bSV) => '#' + bST + bST + bSU + bSU + bSV + bSV)['substring'](0x1)['match'](/.{2}/g)['map'](bSS => parseInt(bSS, 0x10)),
        bT5 = 0x3c,
        bT6 = 0x3;
    class bTd extends bSV['Object3D'] {
        static['fromConfig'](bSS) {
            return new bTd(bSS['terrainSeed'], bSS['terrainWidth'], bSS['terrainHeight'], bSS['sizeMlt'], bSS['terrainMntMlt'], bSS['terrainDrtCol'], bSS['terrainGrsCol'], bSS['terrainMntCol']);
        }
        constructor(bSS, bST, bSU, bSX, bT0, bT2, bTd, bTm) {
            super(), bSX = bT6, this['sizeMlt'] = bSX, this['sizeX'] = bST, this['sizeY'] = bSU, this['edgeSize'] = 0x1f4, this['mntMlt'] = bT0, bT3['DIRT'] = bT4(bT2), bT3['MOUNTAIN'] = bT4(bTm), bT3['GRASS'] = bT4(bTd), this['simplex'] = new bSW(bSS);
            let bTn = Math['floor'](bST / bT5),
                bTo = Math['floor'](bSU / bT5);
            this['xSegmentCount'] = bTn, this['ySegmentCount'] = bTo;
            let bTp = bST / bTn,
                bTq = bSU / bTo;
            this['xSegmentSize'] = bTp, this['ySegmentSize'] = bTq;
            let bTr = new bSV['BufferGeometry'](),
                bTs = bTn * bTo * 0x6,
                bTt = new bSV['BufferAttribute'](new Float32Array(0x3 * bTs), 0x3);
            bTr['addAttribute']('position', bTt);
            let bTu = new bSV['BufferAttribute'](new Uint8Array(0x3 * bTs), 0x3, !0x0);
            bTr['addAttribute']('color', bTu), this['vertPositions'] = bTt, this['terrainPoints'] = (bTn + 0x1) * (bTo + 0x1), this['terrainHeights'] = new Float32Array(this['terrainPoints']), this['terrainBiomes'] = new Float32Array(this['terrainPoints'] * bT1);
            for (let bSS = 0x0; bSS < bTn + 0x1; bSS++)
                for (let bSV = 0x0; bSV < bTo + 0x1; bSV++) {
                    let bSW = bSS + bSV * (bTn + 0x1),
                        bSX = this['_vertPos'](bSS, bTp, bST),
                        bSY = this['_vertPos'](bSV, bTq, bSU),
                        [bSZ, bT0] = this['evaluate'](bSX, bSY);
                    this['terrainHeights'][bSW] = bSZ, this['terrainBiomes']['set'](bT0, bSW * bT1);
                }
            for (let bSS = 0x0; bSS < bTn; bSS++)
                for (let bSV = 0x0; bSV < bTo; bSV++) {
                    let bSW = 0x6 * (bSS + bSV * bTn),
                        bSX = this['_vertPos'](bSS, bTp, bST),
                        bSY = this['_vertPos'](bSV, bTq, bSU),
                        bSZ = [bSX, bSY, this['terrainHeight'](bSS, bSV)],
                        bT0 = [bSX + bTp, bSY, this['terrainHeight'](bSS + 0x1, bSV)],
                        bT1 = [bSX + bTp, bSY + bTq, this['terrainHeight'](bSS + 0x1, bSV + 0x1)],
                        bT2 = [bSX, bSY + bTq, this['terrainHeight'](bSS, bSV + 0x1)],
                        bT3 = this['calcAOWeight'](bSS, bSV),
                        bT4 = this['calcAOWeight'](bSS + 0x1, bSV),
                        bT5 = this['calcAOWeight'](bSS + 0x1, bSV + 0x1),
                        bT6 = this['calcAOWeight'](bSS, bSV + 0x1);
                    bTt['setXYZ'](bSW, ...bSZ), bTt['setXYZ'](bSW + 0x1, ...bT0), bTt['setXYZ'](bSW + 0x2, ...bT1), bTt['setXYZ'](bSW + 0x3, ...bT1), bTt['setXYZ'](bSW + 0x4, ...bT2), bTt['setXYZ'](bSW + 0x5, ...bSZ);
                    let bTd = this['_centroid3D'](bSZ, bT0, bT1),
                        bTm = this['_centroid3D'](bT1, bT2, bSZ),
                        bTo = this['_normal3D'](bSZ, bT0, bT1),
                        bTr = this['_normal3D'](bT1, bT2, bSZ),
                        bTs = this['terrainBiomeAt'](bTd),
                        bTU = this['terrainBiomeAt'](bTm),
                        bTV = this['evaluateColor'](bTd, bTo, bTs),
                        bTW = this['evaluateColor'](bTm, bTr, bTU);
                    bTu['setXYZ'](bSW, ...this['_weightColor'](bTV, bT3)), bTu['setXYZ'](bSW + 0x1, ...this['_weightColor'](bTV, bT4)), bTu['setXYZ'](bSW + 0x2, ...this['_weightColor'](bTV, bT5)), bTu['setXYZ'](bSW + 0x3, ...this['_weightColor'](bTW, bT5)), bTu['setXYZ'](bSW + 0x4, ...this['_weightColor'](bTW, bT6)), bTu['setXYZ'](bSW + 0x5, ...this['_weightColor'](bTW, bT3));
                }
            bSZ && (bTr['computeVertexNormals'](!0x0), bTr['computeFaceNormals'](), this['baseMesh'] = new bSV['Mesh'](bTr, bSY), this['baseMesh']['receiveShadow'] = !0x0, this['baseMesh']['scale']['set'](bSX, bSX, 0x1), this['add'](this['baseMesh'])), this['_raycastRay'] = new bSV['Ray'](), this['_raycastTriA'] = new bSV['Vector3'](), this['_raycastTriB'] = new bSV['Vector3'](), this['_raycastTriC'] = new bSV['Vector3'](), this['_raycastTriangle'] = new bSV['Triangle'](), this['_raycastNormal'] = new bSV['Vector3'](), this['_raycastTarget'] = new bSV['Vector3'](), this['_raycastClosestTarget'] = new bSV['Vector3']();
        }['terrainIndex'](bSS, bST) {
            let bSU = bSS + bST * (this['xSegmentCount'] + 0x1);
            return 0x0 > bSU || bSU >= this['terrainHeights']['length'] ? 0x0 : bSU;
        }['terrainHeight'](bSS, bST) {
            return this['terrainHeights'][this['terrainIndex'](bSS, bST)];
        }['terrainBiome'](bSS, bST) {
            let bSU = this['terrainIndex'](bSS, bST) * bT1;
            return this['terrainBiomes']['slice'](bSU, bSU + bT1);
        }['terrainBiomeAt'](bSS, bST) {
            let bSU = Math['floor'](bSS / this['xSegmentSize']),
                bSV = Math['ceil'](bSS / this['xSegmentSize']),
                bSW = Math['floor'](bST / this['ySegmentSize']),
                bSX = Math['ceil'](bST / this['ySegmentSize']);
            return (this['terrainBiome'](bSU, bSW) + this['terrainBiome'](bSV, bSW) + this['terrainBiome'](bSU, bSX) + this['terrainBiome'](bSV, bSX)) / 0x4;
        }['calcAOWeight'](bSS, bST) {
            let bSU = this['_vertPos'](bSS, this['xSegmentSize'], this['sizeX']),
                bSV = this['_vertPos'](bST, this['ySegmentSize'], this['sizeY']),
                bSW = this['_topAngleOnTerrain'](bSU - this['xSegmentSize'], this['terrainHeight'](bSS - 0x1, bST), bSU, this['terrainHeight'](bSS, bST), bSU + this['xSegmentSize'], this['terrainHeight'](bSS + 0x1, bST)),
                bSX = this['_topAngleOnTerrain'](bSV - this['xSegmentSize'], this['terrainHeight'](bSS, bST - 0x1), bSV, this['terrainHeight'](bSS, bST), bSV + this['ySegmentSize'], this['terrainHeight'](bSS, bST + 0x1)),
                bSY = Math['PI'],
                bSZ = 0x1 - (0x1 - Math['max'](bSY - bSW, 0x0) / bSY) * (0x1 - Math['max'](bSY - bSX, 0x0) / bSY);
            return 0.5 <= bSZ ? bSZ = 0.65 : 0.2 <= bSZ ? bSZ = 0.3 : 0.1 <= bSZ && (bSZ = 0.25), bSZ;
        }['_worldToLocal'](bSS, bST, bSU) {
            return (bSS + bST / 0x2) / bSU;
        }['raycast'](bSS, bST, bSU, bSV, bSW, bSX, bSY = !0x1) {
            bSS /= this['sizeMlt'], bST /= this['sizeMlt'], bSV /= this['sizeMlt'], bSW /= this['sizeMlt'];
            let bSZ = Math['sqrt'](bSV * bSV + bSW * bSW + bSX * bSX);
            this['_raycastRay']['origin']['set'](bSS, bST, bSU), this['_raycastRay']['direction']['set'](bSV, bSW, bSX);
            let bT0, bT1, bT2, bT3 = this['_worldToLocal'](bSS, this['sizeX'], this['xSegmentSize']),
                bT4 = this['_worldToLocal'](bST, this['sizeY'], this['ySegmentSize']),
                bT5 = bT3 + bSV / this['xSegmentSize'],
                bT6 = bT4 + bSW / this['ySegmentSize'],
                bTd = Math['abs'](bT5 - bT3),
                bUC = Math['abs'](bT6 - bT4),
                bUD = Math['floor'](bT3),
                bUE = Math['floor'](bT4),
                bUF = 0x1;
            for (0x0 == bTd ? (bT0 = 0x0, bT2 = Number['POSITIVE_INFINITY']) : bT5 > bT3 ? (bT0 = 0x1, bUF += Math['floor'](bT5) - bUD, bT2 = (Math['floor'](bT3) + 0x1 - bT3) * bUC) : (bT0 = -0x1, bUF += bUD - Math['floor'](bT5), bT2 = (bT3 - Math['floor'](bT3)) * bUC), 0x0 == bUC ? (bT1 = 0x0, bT2 -= Number['POSITIVE_INFINITY']) : bT6 > bT4 ? (bT1 = 0x1, bUF += Math['floor'](bT6) - bUE, bT2 -= (Math['floor'](bT4) + 0x1 - bT4) * bTd) : (bT1 = -0x1, bUF += bUE - Math['floor'](bT6), bT2 -= (bT4 - Math['floor'](bT4)) * bTd); 0x0 < bUF; bUF--) {
                if (this['_raycastVisit'](bUD, bUE, bSS, bST, bSU, bSV, bSW, bSX, bSZ, bSY)) {
                    let bSS = this['_raycastClosestTarget'];
                    return bSS['x'] *= this['sizeMlt'], bSS['y'] *= this['sizeMlt'], bSS;
                }
                0x0 < bT2 ? (bUE += bT1, bT2 -= bTd) : (bUD += bT0, bT2 += bUC);
            }
        }['_raycastVisit'](bSS, bST, bSU, bSV, bSW, bSX, bSY, bSZ, bT0, bT1) {
            let bT2 = bSS + bST * this['xSegmentCount'],
                bT3 = Number['POSITIVE_INFINITY'],
                bT4 = !0x1;
            for (let bSS, bST = 0x0; 0x2 > bST; bST++) {
                bSS = 0x6 * bT2 + 0x3 * bST, this['_raycastTriA']['set'](this['vertPositions']['getX'](bSS), this['vertPositions']['getY'](bSS), this['vertPositions']['getZ'](bSS)), this['_raycastTriB']['set'](this['vertPositions']['getX'](bSS + 0x1), this['vertPositions']['getY'](bSS + 0x1), this['vertPositions']['getZ'](bSS + 0x1)), this['_raycastTriC']['set'](this['vertPositions']['getX'](bSS + 0x2), this['vertPositions']['getY'](bSS + 0x2), this['vertPositions']['getZ'](bSS + 0x2));
                let bSU = this['_raycastRay']['intersectTriangle'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC'], !0x0, this['_raycastTarget']);
                if (bSU) {
                    let bSS = bSU['distanceTo'](this['_raycastRay']['origin']);
                    bSS < bT3 && bSS < bT0 && (bT3 = bSS, bT4 = !0x0, this['_raycastClosestTarget']['copy'](bSU), this['_raycastTriangle']['set'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC']));
                }
            }
            return bT1 && bT4 && this['_raycastTriangle']['getNormal'](this['_raycastNormal']), bT4;
        }['evaluate'](bSS, bST) {
            let bSU = 0x0;
            this['sampleIndex'] = 0x0;
            let bSV = [];
            for (let bSU = 0x0; bSU < bT1; bSU++) bSV['push'](this['_sample'](bSS, bST, 0x514));
            let bSW = bSV['reduce']((bSS, bST) => bSS + bST, 0x0);
            bSV = (bSV = bSV['map']((bSS, bST) => [bST, bSS / bSW]))['sort']((bSS, bST) => bST[0x1] - bSS[0x1]);
            let bSX = {},
                [bSY, bSZ] = bSV[0x0];
            bSX[bSY] = this['_easeTerrain'](bSZ / (bSZ + bSV[0x1][0x1]));
            for (let bSS = 0x1; bSS < bSV['length']; bSS++) {
                let [bST, bSU] = bSV[bSS];
                bSX[bST] = this['_easeTerrain'](bSU / (bSZ + bSU));
            }
            let bT2 = this['_sample'](bSS, bST, 0x12c);
            bSU += 0x19 * (bT2 = Math['floor'](0x3 * bT2) / 0x3) * bSX[bT0['GRASS']] * this['sizeMlt'];
            let bT3 = 0.4 + 0.3 * this['_sample'](bSS, bST, 0xc8);
            bSU += (0x1 - 0x2 * Math['abs'](bT3 - this['_sample'](bSS, bST, 0x1f4))) * (0.4 + 1.4 * this['_sample'](bSS, bST, 0x190)) * (0xdc * this['mntMlt']) * bSX[bT0['MOUNTAIN']] * this['sizeMlt'];
            let bT4 = this['_calcEdgeFade'](bSS, this['sizeX']) * this['_calcEdgeFade'](bST, this['sizeY']);
            return bSU *= bT4, bSU += 0x7d0 * (bT4 - 0x1), (Math['abs'](bSS) >= this['sizeX'] / 0x2 || Math['abs'](bST) >= this['sizeY'] / 0x2) && (bSU = -0x3e8), [bSU, bSX];
        }['evaluateColor'](bSS, bST, bSU) {
            let bSV, bSW = bSS[0x2],
                bSX = Math['atan2'](Math['abs'](bST[0x0]), Math['abs'](bST[0x2])),
                bSY = Math['atan2'](Math['abs'](bST[0x1]), Math['abs'](bST[0x2]));
            return bSV = 0.85 >= (0x1 - bSX / (0x2 * Math['PI'])) * (0x1 - bSY / (0x2 * Math['PI'])) ? bT3['MOUNTAIN'] : 0x64 < bSW ? bT3['MOUNTAIN'] : 0x5 < bSW ? bT3['GRASS'] : bT3['DIRT'];
        }['_sample'](bSS, bST, bSU) {
            return this['sampleIndex']++, this['simplex']['noise3D'](bSS / bSU, bST / bSU, 0x2710 * this['sampleIndex']) / 0x2 + 0.5;
        }['_easeTerrain'](bSS) {
            return bSX['easeInOutQuint'](bSX['easeInOutQuint'](bSS));
        }['_calcEdgeFade'](bSS, bST) {
            if (Math['abs'](bSS) >= bST / 0x2) return 0x0;
            let bSU = (Math['abs'](bSS) - bST / 0x2 + this['edgeSize']) / this['edgeSize'];
            return bSU = 0x1 - Math['max'](bSU, 0x0), bSX['easeOutQuint'](bSU);
        }['_blendColors'](bSS) {
            let bST = Object['values'](bSS)['reduce']((bSS, bST) => bSS + bST, 0x0),
                bSU = [0x0, 0x0, 0x0];
            for (let bSV in bSS) {
                let bSW = bT2[bSV],
                    bSX = bSS[bSV] / bST;
                for (let bSS = 0x0; 0x3 > bSS; bSS++) bSU[bSS] += bSW[bSS] * bSX;
            }
            return bSU;
        }['_vertPos'](bSS, bST, bSU) {
            return bSS * bST - bSU / 0x2;
        }['_avgPos'](bSS, bST) {
            return [(bSS[0x0] + bST[0x0]) / 0x2, (bSS[0x1] + bST[0x1]) / 0x2, (bSS[0x2] + bST[0x2]) / 0x2];
        }['_centroid3D'](bSS, bST, bSU) {
            return [(bSS[0x0] + bST[0x0] + bSU[0x0]) / 0x3, (bSS[0x1] + bST[0x1] + bSU[0x1]) / 0x3, (bSS[0x2] + bST[0x2] + bSU[0x2]) / 0x3];
        }['_normal3D'](bSS, bST, bSU) {
            let bSV = bSU[0x0] - bST[0x0],
                bSW = bSU[0x1] - bST[0x1],
                bSX = bSU[0x2] - bST[0x2],
                bSY = bSS[0x0] - bST[0x0],
                bSZ = bSS[0x1] - bST[0x1],
                bT0 = bSS[0x2] - bST[0x2],
                bT1 = bSW * bT0 - bSX * bSZ,
                bT2 = bSX * bSY - bSV * bT0,
                bT3 = bSV * bSZ - bSW * bSY,
                bT4 = Math['sqrt'](bT1 * bT1 + bT2 * bT2 + bT3 + bT3);
            return [bT1 / bT4, bT2 / bT4, bT3 / bT4];
        }['_topAngleOnTerrain'](bSS, bST, bSU, bSV, bSW, bSX) {
            let bSY = Math['atan2'](bST - bSV, bSS - bSU),
                bSZ = Math['atan2'](bSX - bSV, bSW - bSU);
            return 0x0 > bSY && (bSY += 0x2 * Math['PI']), bSY - bSZ;
        }['_weightColor'](bSS, bST) {
            return bSS['map'](bSS => bSS * (0x1 - bST));
        }
    }
    bSS['exports'] = bTd;
}, function(bWc, bWd, bWe) {
    const bWf = bWe(0x4),
        bWg = bWe(0x8),
        bWh = 0x20;
    var bWi, bWj;
    const bWk = !0x0,
        bWl = 'y',
        bWm = [{
            'stp': 0x0,
            'col': null
        }, {
            'stp': 0.5,
            'col': null
        }, {
            'stp': 0x1,
            'col': null
        }],
        bWn = 2.5,
        bWo = 0x3e8;
    class bWp extends bWf['Object3D'] {
        static['fromConfig'](bWc, bWd) {
            return new bWp(bWc['zoneSize'], bWc['zoneSpeed'], bWc['zoneCol0'], bWc['zoneCol1'], bWc['zoneCol2'], bWd);
        }
        constructor(bWc, bWd, bWe, bWo, bWp, bWx) {
            if (super(), this['_size'] = bWc || 0x32, this['_shrink'] = bWn * (bWd || 0x1), bWx) {
                bWi || (bWi = new bWf['TextureLoader']()['load'](bWg['versionifyUrl']('/textures/zone_0.png'), bWc => {
                    bWc['wrapS'] = bWf['RepeatWrapping'], bWc['wrapT'] = bWf['RepeatWrapping'], bWc['minFilter'] = bWf['NearestFilter'], bWc['magFilter'] = bWf['NearestFilter'], bWc['repeat']['set'](0x14, 0x14), bWc['needsUpdate'] = !0x0;
                })), bWj || (bWj = new bWf['MeshBasicMaterial']({
                    'color': 0xffffff,
                    'depthWrite': !0x1,
                    'flatShading': !0x1,
                    'map': bWi,
                    'vertexColors': bWf['VertexColors'],
                    'side': bWf['DoubleSide'],
                    'transparent': !0x0,
                    'opacity': 0.5
                })), bWm[0x0]['col'] = new bWf['Color'](bWe || '#3FB1B7'), bWm[0x1]['col'] = new bWf['Color'](bWo || '#6FE1CD'), bWm[0x2]['col'] = new bWf['Color'](bWp || '#FFFFFF');
                let bWc = new bWf['SphereGeometry'](0x1, bWh, bWh);
                bWc['computeBoundingBox']();
                let bWd = bWc['boundingBox'],
                    bWn = new bWf['Vector3']()['subVectors'](bWd['max'], bWd['min']),
                    bWx = ['a', 'b', 'c'],
                    bWD = new bWf['Vector3'](),
                    bWE = 0x0;
                for (let bWe, bWf = 0x0; bWf < bWm['length'] - 0x1; bWf++) {
                    bWe = bWm[bWf + 0x1]['stp'] - bWm[bWf]['stp'];
                    for (let bWg, bWh = 0x0; bWh < bWc['faces']['length']; bWh++) {
                        bWg = bWc['faces'][bWh];
                        for (var bWJ = 0x0; 0x3 > bWJ; bWJ++) bWE = bWD['subVectors'](bWc['vertices'][bWg[bWx[bWJ]]], bWd['min'])['divide'](bWn)[bWl], bWk && (bWE = 0x1 - bWE), bWE >= bWm[bWf]['stp'] && bWE <= bWm[bWf + 0x1]['stp'] && (bWg['vertexColors'][bWJ] = bWm[bWf]['col']['clone']()['lerp'](bWm[bWf + 0x1]['col'], (bWE - bWm[bWf]['stp']) / bWe));
                    }
                }
                bWc['computeVertexNormals'](!0x0), bWc['computeFaceNormals'](), this['baseMesh'] = new bWf['Mesh'](bWc, bWj);
            }
            this['reset'](), bWx && this['add'](this['baseMesh']);
        }['shrink']() {
            0x0 >= this['scale']['x'] ? this['visible'] = !0x1 : (this['scale']['x'] -= this['_shrink'], this['scale']['z'] -= this['_shrink']);
        }['animate'](bWc) {
            this['baseMesh'] && this['baseMesh']['material']['map'] && (this['baseMesh']['material']['map']['offset']['y'] += 0.00003 * bWc);
        }['update'](bWc) {
            this['scale']['set'](bWc['x'], bWo, bWc['z']), 0x0 >= this['scale']['x'] && (this['visible'] = !0x1);
        }['reset']() {
            this['scale']['set'](this['_size'], bWo, this['_size']), this['visible'] = !0x0;
        }['isOutside'](bWc) {
            return bWg['getDistance'](bWc['x'], bWc['z'], this['position']['x'], this['position']['z']) > this['scale']['x'];
        }
    }
    bWc['exports'] = bWp;
}, , function(bWN, bWO, bWP) {
    bWP(0x48);
}, function(bWQ, bWR) {
    bWQ['exports'] = function(bWQ) {
        if (!bWQ['webpackPolyfill']) {
            var bWR = Object['create'](bWQ);
            bWR['children'] || (bWR['children'] = []), Object['defineProperty'](bWR, 'loaded', {
                'enumerable': !0x0,
                'get': function() {
                    return bWR['l'];
                }
            }), Object['defineProperty'](bWR, 'id', {
                'enumerable': !0x0,
                'get': function() {
                    return bWR['i'];
                }
            }), Object['defineProperty'](bWR, 'exports', {
                'enumerable': !0x0
            }), bWR['webpackPolyfill'] = 0x1;
        }
        return bWR;
    };
}, function(bWU, bWV) {
    bWU['exports'] = function(bWU) {
        return function() {
            function bWV() {
                var bWU = {
                    'objects': [],
                    'object': {},
                    'vertices': [],
                    'normals': [],
                    'colors': [],
                    'uvs': [],
                    'materialLibraries': [],
                    'startObject': function(bWU, bWV) {
                        if (this['object'] && !0x1 === this['object']['fromDeclaration']) return this['object']['name'] = bWU, void(this['object']['fromDeclaration'] = !0x1 !== bWV);
                        var bX1 = this['object'] && 'function' == typeof this['object']['currentMaterial'] ? this['object']['currentMaterial']() : void 0x0;
                        if (this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0), this['object'] = {
                                'name': bWU || '',
                                'fromDeclaration': !0x1 !== bWV,
                                'geometry': {
                                    'vertices': [],
                                    'normals': [],
                                    'colors': [],
                                    'uvs': []
                                },
                                'materials': [],
                                'smooth': !0x0,
                                'startMaterial': function(bWU, bWV) {
                                    var bX1 = this['_finalize'](!0x1);
                                    bX1 && (bX1['inherited'] || 0x0 >= bX1['groupCount']) && this['materials']['splice'](bX1['index'], 0x1);
                                    var bX5 = {
                                        'index': this['materials']['length'],
                                        'name': bWU || '',
                                        'mtllib': Array['isArray'](bWV) && 0x0 < bWV['length'] ? bWV[bWV['length'] - 0x1] : '',
                                        'smooth': void 0x0 === bX1 ? this['smooth'] : bX1['smooth'],
                                        'groupStart': void 0x0 === bX1 ? 0x0 : bX1['groupEnd'],
                                        'groupEnd': -0x1,
                                        'groupCount': -0x1,
                                        'inherited': !0x1,
                                        'clone': function(bWU) {
                                            var bWV = {
                                                'index': 'number' == typeof bWU ? bWU : this['index'],
                                                'name': this['name'],
                                                'mtllib': this['mtllib'],
                                                'smooth': this['smooth'],
                                                'groupStart': 0x0,
                                                'groupEnd': -0x1,
                                                'groupCount': -0x1,
                                                'inherited': !0x1
                                            };
                                            return bWV['clone'] = this['clone']['bind'](bWV), bWV;
                                        }
                                    };
                                    return this['materials']['push'](bX5), bX5;
                                },
                                'currentMaterial': function() {
                                    return 0x0 < this['materials']['length'] ? this['materials'][this['materials']['length'] - 0x1] : void 0x0;
                                },
                                '_finalize': function(bWU) {
                                    var bWV = this['currentMaterial']();
                                    if (bWV && -0x1 === bWV['groupEnd'] && (bWV['groupEnd'] = this['geometry']['vertices']['length'] / 0x3, bWV['groupCount'] = bWV['groupEnd'] - bWV['groupStart'], bWV['inherited'] = !0x1), bWU && 0x1 < this['materials']['length'])
                                        for (var bX1 = this['materials']['length'] - 0x1; 0x0 <= bX1; bX1--) 0x0 >= this['materials'][bX1]['groupCount'] && this['materials']['splice'](bX1, 0x1);
                                    return bWU && 0x0 === this['materials']['length'] && this['materials']['push']({
                                        'name': '',
                                        'smooth': this['smooth']
                                    }), bWV;
                                }
                            }, bX1 && bX1['name'] && 'function' == typeof bX1['clone']) {
                            var bXb = bX1['clone'](0x0);
                            bXb['inherited'] = !0x0, this['object']['materials']['push'](bXb);
                        }
                        this['objects']['push'](this['object']);
                    },
                    'finalize': function() {
                        this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0);
                    },
                    'parseVertexIndex': function(bWU, bWV) {
                        var bXe = parseInt(bWU, 0xa);
                        return 0x3 * (0x0 <= bXe ? bXe - 0x1 : bXe + bWV / 0x3);
                    },
                    'parseNormalIndex': function(bWU, bWV) {
                        var bXh = parseInt(bWU, 0xa);
                        return 0x3 * (0x0 <= bXh ? bXh - 0x1 : bXh + bWV / 0x3);
                    },
                    'parseUVIndex': function(bWU, bWV) {
                        var bXk = parseInt(bWU, 0xa);
                        return 0x2 * (0x0 <= bXk ? bXk - 0x1 : bXk + bWV / 0x2);
                    },
                    'addVertex': function(bWU, bWV, bXn) {
                        var bXo = this['vertices'],
                            bXp = this['object']['geometry']['vertices'];
                        bXp['push'](bXo[bWU + 0x0], bXo[bWU + 0x1], bXo[bWU + 0x2]), bXp['push'](bXo[bWV + 0x0], bXo[bWV + 0x1], bXo[bWV + 0x2]), bXp['push'](bXo[bXn + 0x0], bXo[bXn + 0x1], bXo[bXn + 0x2]);
                    },
                    'addVertexPoint': function(bWU) {
                        var bWV = this['vertices'];
                        this['object']['geometry']['vertices']['push'](bWV[bWU + 0x0], bWV[bWU + 0x1], bWV[bWU + 0x2]);
                    },
                    'addVertexLine': function(bWU) {
                        var bWV = this['vertices'];
                        this['object']['geometry']['vertices']['push'](bWV[bWU + 0x0], bWV[bWU + 0x1], bWV[bWU + 0x2]);
                    },
                    'addNormal': function(bWU, bWV, bXw) {
                        var bXx = this['normals'],
                            bXy = this['object']['geometry']['normals'];
                        bXy['push'](bXx[bWU + 0x0], bXx[bWU + 0x1], bXx[bWU + 0x2]), bXy['push'](bXx[bWV + 0x0], bXx[bWV + 0x1], bXx[bWV + 0x2]), bXy['push'](bXx[bXw + 0x0], bXx[bXw + 0x1], bXx[bXw + 0x2]);
                    },
                    'addColor': function(bWU, bWV, bXB) {
                        var bXC = this['colors'],
                            bXD = this['object']['geometry']['colors'];
                        bXD['push'](bXC[bWU + 0x0], bXC[bWU + 0x1], bXC[bWU + 0x2]), bXD['push'](bXC[bWV + 0x0], bXC[bWV + 0x1], bXC[bWV + 0x2]), bXD['push'](bXC[bXB + 0x0], bXC[bXB + 0x1], bXC[bXB + 0x2]);
                    },
                    'addUV': function(bWU, bWV, bXG) {
                        var bXH = this['uvs'],
                            bXI = this['object']['geometry']['uvs'];
                        bXI['push'](bXH[bWU + 0x0], bXH[bWU + 0x1]), bXI['push'](bXH[bWV + 0x0], bXH[bWV + 0x1]), bXI['push'](bXH[bXG + 0x0], bXH[bXG + 0x1]);
                    },
                    'addUVLine': function(bWU) {
                        var bWV = this['uvs'];
                        this['object']['geometry']['uvs']['push'](bWV[bWU + 0x0], bWV[bWU + 0x1]);
                    },
                    'addFace': function(bWU, bWV, bXN, bXO, bXP, bXQ, bXR, bXS, bXT) {
                        var bXU = this['vertices']['length'],
                            bXV = this['parseVertexIndex'](bWU, bXU),
                            bXW = this['parseVertexIndex'](bWV, bXU),
                            bXX = this['parseVertexIndex'](bXN, bXU);
                        if (this['addVertex'](bXV, bXW, bXX), void 0x0 !== bXO && '' !== bXO) {
                            var bXY = this['uvs']['length'];
                            bXV = this['parseUVIndex'](bXO, bXY), bXW = this['parseUVIndex'](bXP, bXY), bXX = this['parseUVIndex'](bXQ, bXY), this['addUV'](bXV, bXW, bXX);
                        }
                        if (void 0x0 !== bXR && '' !== bXR) {
                            var bXZ = this['normals']['length'];
                            bXV = this['parseNormalIndex'](bXR, bXZ), bXW = bXR === bXS ? bXV : this['parseNormalIndex'](bXS, bXZ), bXX = bXR === bXT ? bXV : this['parseNormalIndex'](bXT, bXZ), this['addNormal'](bXV, bXW, bXX);
                        }
                        0x0 < this['colors']['length'] && this['addColor'](bXV, bXW, bXX);
                    },
                    'addPointGeometry': function(bWU) {
                        this['object']['geometry']['type'] = 'Points';
                        for (var bWV = this['vertices']['length'], bY2 = 0x0, bY3 = bWU['length']; bY2 < bY3; bY2++) this['addVertexPoint'](this['parseVertexIndex'](bWU[bY2], bWV));
                    },
                    'addLineGeometry': function(bWU, bWV) {
                        this['object']['geometry']['type'] = 'Line';
                        for (var bY6 = this['vertices']['length'], bY7 = this['uvs']['length'], bY8 = 0x0, bY9 = bWU['length']; bY8 < bY9; bY8++) this['addVertexLine'](this['parseVertexIndex'](bWU[bY8], bY6));
                        var bYa = 0x0;
                        for (bY9 = bWV['length']; bYa < bY9; bYa++) this['addUVLine'](this['parseUVIndex'](bWV[bYa], bY7));
                    }
                };
                return bWU['startObject']('', !0x1), bWU;
            }

            function bYb(bWV) {
                this['manager'] = void 0x0 === bWV ? bWU['DefaultLoadingManager'] : bWV, this['materials'] = null;
            }
            var bYd = /^[og]\s*(.+)?/,
                bYe = /^mtllib /,
                bYf = /^usemtl /;
            return bYb['prototype'] = {
                'constructor': bYb,
                'load': function(bWV, bYb, bYd, bYe) {
                    var bYf = this,
                        bYl = new bWU['FileLoader'](bYf['manager']);
                    bYl['setPath'](this['path']), bYl['load'](bWV, function(bWU) {
                        bYb(bYf['parse'](bWU));
                    }, bYd, bYe);
                },
                'setPath': function(bWU) {
                    return this['path'] = bWU, this;
                },
                'setMaterials': function(bWU) {
                    return this['materials'] = bWU, this;
                },
                'parse': function(bYb) {
                    console['time']('OBJLoader');
                    var bYq = new bWV(); - 0x1 !== bYb['indexOf']('\x0d\x0a') && (bYb = bYb['replace'](/\r\n/g, '\x0a')), -0x1 !== bYb['indexOf']('\x5c\x0a') && (bYb = bYb['replace'](/\\\n/g, ''));
                    for (var bYr = bYb['split']('\x0a'), bYs = '', bYt = '', bYu = [], bYv = 'function' == typeof '' ['trimLeft'], bYw = 0x0, bYx = bYr['length']; bYw < bYx; bYw++)
                        if (bYs = bYr[bYw], 0x0 !== (bYs = bYv ? bYs['trimLeft']() : bYs['trim']())['length'] && '#' !== (bYt = bYs['charAt'](0x0)))
                            if ('v' === bYt) {
                                var bYy = bYs['split'](/\s+/);
                                switch (bYy[0x0]) {
                                    case 'v':
                                        bYq['vertices']['push'](parseFloat(bYy[0x1]), parseFloat(bYy[0x2]), parseFloat(bYy[0x3])), 0x7 <= bYy['length'] && bYq['colors']['push'](parseFloat(bYy[0x4]), parseFloat(bYy[0x5]), parseFloat(bYy[0x6]));
                                        break;
                                    case 'vn':
                                        bYq['normals']['push'](parseFloat(bYy[0x1]), parseFloat(bYy[0x2]), parseFloat(bYy[0x3]));
                                        break;
                                    case 'vt':
                                        bYq['uvs']['push'](parseFloat(bYy[0x1]), parseFloat(bYy[0x2]));
                                }
                            } else if ('f' === bYt) {
                        for (var bYz, bYA = bYs['substr'](0x1)['trim']()['split'](/\s+/), bYB = [], bYC = 0x0, bYD = bYA['length']; bYC < bYD; bYC++)
                            if (0x0 < (bYz = bYA[bYC])['length']) {
                                var bYE = bYz['split']('/');
                                bYB['push'](bYE);
                            }
                        var bYF = bYB[0x0];
                        for (bYC = 0x1, bYD = bYB['length'] - 0x1; bYC < bYD; bYC++) {
                            var bYG = bYB[bYC],
                                bYH = bYB[bYC + 0x1];
                            bYq['addFace'](bYF[0x0], bYG[0x0], bYH[0x0], bYF[0x1], bYG[0x1], bYH[0x1], bYF[0x2], bYG[0x2], bYH[0x2]);
                        }
                    } else if ('l' === bYt) {
                        var bYI = bYs['substring'](0x1)['trim']()['split']('\x20'),
                            bYJ = [],
                            bYK = [];
                        if (-0x1 === bYs['indexOf']('/')) bYJ = bYI;
                        else
                            for (var bYL, bYM = 0x0, bYN = bYI['length']; bYM < bYN; bYM++) '' !== (bYL = bYI[bYM]['split']('/'))[0x0] && bYJ['push'](bYL[0x0]), '' !== bYL[0x1] && bYK['push'](bYL[0x1]);
                        bYq['addLineGeometry'](bYJ, bYK);
                    } else if ('p' === bYt) {
                        var bYO = bYs['substr'](0x1)['trim']()['split']('\x20');
                        bYq['addPointGeometry'](bYO);
                    } else if (null !== (bYu = bYd['exec'](bYs))) {
                        var bYP = ('\x20' + bYu[0x0]['substr'](0x1)['trim']())['substr'](0x1);
                        bYq['startObject'](bYP);
                    } else if (bYf['test'](bYs)) bYq['object']['startMaterial'](bYs['substring'](0x7)['trim'](), bYq['materialLibraries']);
                    else if (bYe['test'](bYs)) bYq['materialLibraries']['push'](bYs['substring'](0x7)['trim']());
                    else {
                        if ('s' !== bYt) {
                            if (' ' === bYs) continue;
                            throw new Error('THREE.OBJLoader:\x20Unexpected\x20line:\x20\x22' + bYs + '\x22');
                        }
                        if (0x1 < (bYu = bYs['split']('\x20'))['length']) {
                            var bYQ = bYu[0x1]['trim']()['toLowerCase']();
                            bYq['object']['smooth'] = '0' !== bYQ && 'off' !== bYQ;
                        } else bYq['object']['smooth'] = !0x0;
                        (bZ4 = bYq['object']['currentMaterial']()) && (bZ4['smooth'] = bYq['object']['smooth']);
                    }
                    bYq['finalize']();
                    var bYR = new bWU['Group']();
                    bYR['materialLibraries'] = []['concat'](bYq['materialLibraries']);
                    for (bYw = 0x0, bYx = bYq['objects']['length']; bYw < bYx; bYw++) {
                        var bYS = bYq['objects'][bYw],
                            bYT = bYS['geometry'],
                            bYU = bYS['materials'],
                            bYV = 'Line' === bYT['type'],
                            bYW = 'Points' === bYT['type'],
                            bYX = !0x1;
                        if (0x0 !== bYT['vertices']['length']) {
                            var bYY, bYZ = new bWU['BufferGeometry']();
                            bYZ['addAttribute']('position', new bWU['Float32BufferAttribute'](bYT['vertices'], 0x3)), 0x0 < bYT['normals']['length'] ? bYZ['addAttribute']('normal', new bWU['Float32BufferAttribute'](bYT['normals'], 0x3)) : bYZ['computeVertexNormals'](), 0x0 < bYT['colors']['length'] && (bYX = !0x0, bYZ['addAttribute']('color', new bWU['Float32BufferAttribute'](bYT['colors'], 0x3))), 0x0 < bYT['uvs']['length'] && bYZ['addAttribute']('uv', new bWU['Float32BufferAttribute'](bYT['uvs'], 0x2));
                            for (var bZ0 = [], bZ1 = 0x0, bZ2 = bYU['length']; bZ1 < bZ2; bZ1++) {
                                var bZ3 = bYU[bZ1],
                                    bZ4 = void 0x0;
                                if (null !== this['materials'])
                                    if (bZ4 = this['materials']['create'](bZ3['name']), !bYV || !bZ4 || bZ4 instanceof bWU['LineBasicMaterial']) {
                                        if (bYW && bZ4 && !(bZ4 instanceof bWU['PointsMaterial'])) {
                                            var bZ5 = new bWU['PointsMaterial']({
                                                'size': 0xa,
                                                'sizeAttenuation': !0x1
                                            });
                                            bZ6['copy'](bZ4), bZ4 = bZ5;
                                        }
                                    } else {
                                        var bZ6 = new bWU['LineBasicMaterial']();
                                        bZ6['copy'](bZ4), bZ6['lights'] = !0x1, bZ4 = bZ6;
                                    }
                                bZ4 || ((bZ4 = bYV ? new bWU['LineBasicMaterial']() : bYW ? new bWU['PointsMaterial']({
                                    'size': 0x1,
                                    'sizeAttenuation': !0x1
                                }) : new bWU['MeshPhongMaterial']())['name'] = bZ3['name']), bZ4['flatShading'] = !bZ3['smooth'], bZ4['vertexColors'] = bYX ? bWU['VertexColors'] : bWU['NoColors'], bZ0['push'](bZ4);
                            }
                            if (0x1 < bZ0['length']) {
                                for (bZ1 = 0x0, bZ2 = bYU['length']; bZ1 < bZ2; bZ1++) bZ3 = bYU[bZ1], bYZ['addGroup'](bZ3['groupStart'], bZ3['groupCount'], bZ1);
                                bYY = bYV ? new bWU['LineSegments'](bYZ, bZ0) : bYW ? new bWU['Points'](bYZ, bZ0) : new bWU['Mesh'](bYZ, bZ0);
                            } else bYY = bYV ? new bWU['LineSegments'](bYZ, bZ0[0x0]) : bYW ? new bWU['Points'](bYZ, bZ0[0x0]) : new bWU['Mesh'](bYZ, bZ0[0x0]);
                            bYY['name'] = bYS['name'], bYR['add'](bYY);
                        }
                    }
                    return console['timeEnd']('OBJLoader'), bYR;
                }
            }, bYb;
        }();
    };
}, function(bZ7, bZ8) {
    bZ7['exports'] = function(bZ7) {
        bZ7['THREEx'] = {}, bZ7['THREEx']['RendererStats'] = function() {
            var bZ8 = document['createElement']('div');
            bZ8['style']['cssText'] = 'width:80px;opacity:0.9;cursor:pointer';
            var bZb = document['createElement']('div');
            bZb['style']['cssText'] = 'padding:0\x200\x203px\x203px;text-align:left;background-color:#200;', bZ8['appendChild'](bZb);
            var bZc = document['createElement']('div');
            bZc['style']['cssText'] = 'color:#f00;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px', bZc['innerHTML'] = 'WebGLRenderer', bZb['appendChild'](bZc);
            var bZd = [];
            for (bZc = 0x0; 0x9 > bZc; bZc++) bZd[bZc] = document['createElement']('div'), bZd[bZc]['style']['cssText'] = 'color:#f00;background-color:#311;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px', bZb['appendChild'](bZd[bZc]), bZd[bZc]['innerHTML'] = '-';
            var bZe = Date['now']();
            return {
                'domElement': bZ8,
                'update': function(bZ8) {
                    if (console['assert'](bZ8 instanceof bZ7['WebGLRenderer']), !(Date['now']() - bZe < 0x3e8 / 0x1e)) {
                        bZe = Date['now']();
                        var bZb = 0x0;
                        bZd[bZb++]['textContent'] = '==\x20Memory\x20=====', bZd[bZb++]['textContent'] = 'Programs:\x20' + bZ8['info']['memory']['programs'], bZd[bZb++]['textContent'] = 'Geometries:\x20' + bZ8['info']['memory']['geometries'], bZd[bZb++]['textContent'] = 'Textures:\x20' + bZ8['info']['memory']['textures'], bZd[bZb++]['textContent'] = '==\x20Render\x20=====', bZd[bZb++]['textContent'] = 'Calls:\x20' + bZ8['info']['render']['calls'], bZd[bZb++]['textContent'] = 'Vertices:\x20' + bZ8['info']['render']['vertices'], bZd[bZb++]['textContent'] = 'Faces:\x20' + bZ8['info']['render']['faces'], bZd[bZb++]['textContent'] = 'Points:\x20' + bZ8['info']['render']['points'];
                    }
                }
            };
        }, bZ7['SSAOShader'] = {
            'uniforms': {
                'tDiffuse': {
                    'value': null
                },
                'tDepth': {
                    'value': null
                },
                'size': {
                    'value': new bZ7['Vector2'](0x40, 0x40)
                },
                'cameraNear': {
                    'value': 0x1
                },
                'cameraFar': {
                    'value': 0x64
                },
                'radius': {
                    'value': 0x28
                },
                'onlyAO': {
                    'value': 0x0
                },
                'aoClamp': {
                    'value': 0x1
                },
                'lumInfluence': {
                    'value': 0.7
                }
            },
            'vertexShader': 'varying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avUv\x20=\x20uv;\x0agl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
            'fragmentShader': 'uniform\x20float\x20cameraNear;\x0auniform\x20float\x20cameraFar;\x0a#ifdef\x20USE_LOGDEPTHBUF\x0auniform\x20float\x20logDepthBufFC;\x0a#endif\x0auniform\x20float\x20radius;\x0auniform\x20bool\x20onlyAO;\x0auniform\x20vec2\x20size;\x0auniform\x20float\x20aoClamp;\x0auniform\x20float\x20lumInfluence;\x0auniform\x20sampler2D\x20tDiffuse;\x0auniform\x20sampler2D\x20tDepth;\x0avarying\x20vec2\x20vUv;\x0a#define\x20DL\x202.399963229728653\x0a#define\x20EULER\x202.718281828459045\x0aconst\x20int\x20samples\x20=\x208;\x0aconst\x20bool\x20useNoise\x20=\x20true;\x0aconst\x20float\x20noiseAmount\x20=\x200.0004;\x0aconst\x20float\x20diffArea\x20=\x200.4;\x0aconst\x20float\x20gDisplace\x20=\x200.4;\x0a#include\x20<packing>\x0avec2\x20rand(\x20const\x20vec2\x20coord\x20)\x20{\x0avec2\x20noise;\x0aif\x20(\x20useNoise\x20)\x20{\x0afloat\x20nx\x20=\x20dot\x20(\x20coord,\x20vec2(\x2012.9898,\x2078.233\x20)\x20);\x0afloat\x20ny\x20=\x20dot\x20(\x20coord,\x20vec2(\x2012.9898,\x2078.233\x20)\x20*\x202.0\x20);\x0anoise\x20=\x20clamp(\x20fract\x20(\x2043758.5453\x20*\x20sin(\x20vec2(\x20nx,\x20ny\x20)\x20)\x20),\x200.0,\x201.0\x20);\x0a}\x20else\x20{\x0afloat\x20ff\x20=\x20fract(\x201.0\x20-\x20coord.s\x20*\x20(\x20size.x\x20/\x202.0\x20)\x20);\x0afloat\x20gg\x20=\x20fract(\x20coord.t\x20*\x20(\x20size.y\x20/\x202.0\x20)\x20);\x0anoise\x20=\x20vec2(\x200.25,\x200.75\x20)\x20*\x20vec2(\x20ff\x20)\x20+\x20vec2(\x200.75,\x200.25\x20)\x20*\x20gg;\x0a}\x0areturn\x20(\x20noise\x20*\x202.0\x20\x20-\x201.0\x20)\x20*\x20noiseAmount;\x0a}\x0afloat\x20readDepth(\x20const\x20in\x20vec2\x20coord\x20)\x20{\x0afloat\x20cameraFarPlusNear\x20=\x20cameraFar\x20+\x20cameraNear;\x0afloat\x20cameraFarMinusNear\x20=\x20cameraFar\x20-\x20cameraNear;\x0afloat\x20cameraCoef\x20=\x202.0\x20*\x20cameraNear;\x0a#ifdef\x20USE_LOGDEPTHBUF\x0afloat\x20logz\x20=\x20unpackRGBAToDepth(\x20texture2D(\x20tDepth,\x20coord\x20)\x20);\x0afloat\x20w\x20=\x20pow(2.0,\x20(logz\x20/\x20logDepthBufFC))\x20-\x201.0;\x0afloat\x20z\x20=\x20(logz\x20/\x20w)\x20+\x201.0;\x0a#else\x0afloat\x20z\x20=\x20unpackRGBAToDepth(\x20texture2D(\x20tDepth,\x20coord\x20)\x20);\x0a#endif\x0areturn\x20cameraCoef\x20/\x20(\x20cameraFarPlusNear\x20-\x20z\x20*\x20cameraFarMinusNear\x20);\x0a}\x0afloat\x20compareDepths(\x20const\x20in\x20float\x20depth1,\x20const\x20in\x20float\x20depth2,\x20inout\x20int\x20far\x20)\x20{\x0afloat\x20garea\x20=\x208.0;\x0afloat\x20diff\x20=\x20(\x20depth1\x20-\x20depth2\x20)\x20*\x20100.0;\x0aif\x20(\x20diff\x20<\x20gDisplace\x20)\x20{\x0agarea\x20=\x20diffArea;\x0a}\x20else\x20{\x0afar\x20=\x201;\x0a}\x0afloat\x20dd\x20=\x20diff\x20-\x20gDisplace;\x0afloat\x20gauss\x20=\x20pow(\x20EULER,\x20-2.0\x20*\x20(\x20dd\x20*\x20dd\x20)\x20/\x20(\x20garea\x20*\x20garea\x20)\x20);\x0areturn\x20gauss;\x0a}\x0afloat\x20calcAO(\x20float\x20depth,\x20float\x20dw,\x20float\x20dh\x20)\x20{\x0avec2\x20vv\x20=\x20vec2(\x20dw,\x20dh\x20);\x0avec2\x20coord1\x20=\x20vUv\x20+\x20radius\x20*\x20vv;\x0avec2\x20coord2\x20=\x20vUv\x20-\x20radius\x20*\x20vv;\x0afloat\x20temp1\x20=\x200.0;\x0afloat\x20temp2\x20=\x200.0;\x0aint\x20far\x20=\x200;\x0atemp1\x20=\x20compareDepths(\x20depth,\x20readDepth(\x20coord1\x20),\x20far\x20);\x0aif\x20(\x20far\x20>\x200\x20)\x20{\x0atemp2\x20=\x20compareDepths(\x20readDepth(\x20coord2\x20),\x20depth,\x20far\x20);\x0atemp1\x20+=\x20(\x201.0\x20-\x20temp1\x20)\x20*\x20temp2;\x0a}\x0areturn\x20temp1;\x0a}\x0avoid\x20main()\x20{\x0avec2\x20noise\x20=\x20rand(\x20vUv\x20);\x0afloat\x20depth\x20=\x20readDepth(\x20vUv\x20);\x0afloat\x20tt\x20=\x20clamp(\x20depth,\x20aoClamp,\x201.0\x20);\x0afloat\x20w\x20=\x20(\x201.0\x20/\x20size.x\x20)\x20/\x20tt\x20+\x20(\x20noise.x\x20*\x20(\x201.0\x20-\x20noise.x\x20)\x20);\x0afloat\x20h\x20=\x20(\x201.0\x20/\x20size.y\x20)\x20/\x20tt\x20+\x20(\x20noise.y\x20*\x20(\x201.0\x20-\x20noise.y\x20)\x20);\x0afloat\x20ao\x20=\x200.0;\x0afloat\x20dz\x20=\x201.0\x20/\x20float(\x20samples\x20);\x0afloat\x20l\x20=\x200.0;\x0afloat\x20z\x20=\x201.0\x20-\x20dz\x20/\x202.0;\x0afor\x20(\x20int\x20i\x20=\x200;\x20i\x20<=\x20samples;\x20i\x20++\x20)\x20{\x0afloat\x20r\x20=\x20sqrt(\x201.0\x20-\x20z\x20);\x0afloat\x20pw\x20=\x20cos(\x20l\x20)\x20*\x20r;\x0afloat\x20ph\x20=\x20sin(\x20l\x20)\x20*\x20r;\x0aao\x20+=\x20calcAO(\x20depth,\x20pw\x20*\x20w,\x20ph\x20*\x20h\x20);\x0az\x20=\x20z\x20-\x20dz;\x0al\x20=\x20l\x20+\x20DL;\x0a}\x0aao\x20/=\x20float(\x20samples\x20);\x0aao\x20=\x201.0\x20-\x20ao;\x0avec3\x20color\x20=\x20texture2D(\x20tDiffuse,\x20vUv\x20).rgb;\x0avec3\x20lumcoeff\x20=\x20vec3(\x200.299,\x200.587,\x200.114\x20);\x0afloat\x20lum\x20=\x20dot(\x20color.rgb,\x20lumcoeff\x20);\x0avec3\x20luminance\x20=\x20vec3(\x20lum\x20);\x0avec3\x20final\x20=\x20vec3(\x20color\x20*\x20mix(\x20vec3(\x20ao\x20),\x20vec3(\x201.0\x20),\x20luminance\x20*\x20lumInfluence\x20)\x20);\x0aif\x20(\x20onlyAO\x20)\x20{\x0afinal\x20=\x20vec3(\x20mix(\x20vec3(\x20ao\x20),\x20vec3(\x201.0\x20),\x20luminance\x20*\x20lumInfluence\x20)\x20);\x0a}\x0agl_FragColor\x20=\x20vec4(\x20final,\x200.5\x20);\x0a}'
        }, bZ7['CopyShader'] = {
            'uniforms': {
                'tDiffuse': {
                    'value': null
                },
                'opacity': {
                    'value': 0x1
                }
            },
            'vertexShader': 'varying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avUv\x20=\x20uv;\x0agl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
            'fragmentShader': 'uniform\x20float\x20opacity;\x0auniform\x20sampler2D\x20tDiffuse;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avec4\x20texel\x20=\x20texture2D(\x20tDiffuse,\x20vUv\x20);\x0agl_FragColor\x20=\x20opacity\x20*\x20texel;\x0a}'
        }, bZ7['EffectComposer'] = function(bZ8, bZi) {
            if (this['renderer'] = bZ8, void 0x0 === bZi) {
                var bZj = {
                        'minFilter': bZ7['LinearFilter'],
                        'magFilter': bZ7['LinearFilter'],
                        'format': bZ7['RGBAFormat'],
                        'stencilBuffer': !0x1
                    },
                    bZk = bZ8['getDrawingBufferSize']();
                (bZi = new bZ7['WebGLRenderTarget'](bZk['width'], bZk['height'], bZj))['texture']['name'] = 'EffectComposer.rt1';
            }
            this['renderTarget1'] = bZi, this['renderTarget2'] = bZi['clone'](), this['renderTarget2']['texture']['name'] = 'EffectComposer.rt2', this['writeBuffer'] = this['renderTarget1'], this['readBuffer'] = this['renderTarget2'], this['passes'] = [], void 0x0 === bZ7['CopyShader'] && console['error']('THREE.EffectComposer\x20relies\x20on\x20THREE.CopyShader'), void 0x0 === bZ7['ShaderPass'] && console['error']('THREE.EffectComposer\x20relies\x20on\x20THREE.ShaderPass'), this['copyPass'] = new bZ7['ShaderPass'](bZ7['CopyShader']);
        }, Object['assign'](bZ7['EffectComposer']['prototype'], {
            'swapBuffers': function() {
                var bZ7 = this['readBuffer'];
                this['readBuffer'] = this['writeBuffer'], this['writeBuffer'] = bZ7;
            },
            'addPass': function(bZ7) {
                this['passes']['push'](bZ7);
                var bZ8 = this['renderer']['getDrawingBufferSize']();
                bZ7['setSize'](bZ8['width'], bZ8['height']);
            },
            'insertPass': function(bZ7, bZ8) {
                this['passes']['splice'](bZ8, 0x0, bZ7);
            },
            'render': function(bZ8) {
                var bZr, bZs = !0x1,
                    bZt = this['passes']['length'];
                for (bZr = 0x0; bZr < bZt; bZr++) {
                    var bZu = this['passes'][bZr];
                    if (!0x1 !== bZu['enabled']) {
                        if (bZu['render'](this['renderer'], this['writeBuffer'], this['readBuffer'], bZ8, bZs), bZu['needsSwap']) {
                            if (bZs) {
                                var bZv = this['renderer']['context'];
                                bZv['stencilFunc'](bZv['NOTEQUAL'], 0x1, 0xffffffff), this['copyPass']['render'](this['renderer'], this['writeBuffer'], this['readBuffer'], bZ8), bZv['stencilFunc'](bZv['EQUAL'], 0x1, 0xffffffff);
                            }
                            this['swapBuffers']();
                        }
                        void 0x0 !== bZ7['MaskPass'] && (bZu instanceof bZ7['MaskPass'] ? bZs = !0x0 : bZu instanceof bZ7['ClearMaskPass'] && (bZs = !0x1));
                    }
                }
            },
            'reset': function(bZ7) {
                if (void 0x0 === bZ7) {
                    var bZ8 = this['renderer']['getDrawingBufferSize']();
                    (bZ7 = this['renderTarget1']['clone']())['setSize'](bZ8['width'], bZ8['height']);
                }
                this['renderTarget1']['dispose'](), this['renderTarget2']['dispose'](), this['renderTarget1'] = bZ7, this['renderTarget2'] = bZ7['clone'](), this['writeBuffer'] = this['renderTarget1'], this['readBuffer'] = this['renderTarget2'];
            },
            'setSize': function(bZ7, bZ8) {
                this['renderTarget1']['setSize'](bZ7, bZ8), this['renderTarget2']['setSize'](bZ7, bZ8);
                for (var bZA = 0x0; bZA < this['passes']['length']; bZA++) this['passes'][bZA]['setSize'](bZ7, bZ8);
            }
        }), bZ7['Pass'] = function() {
            this['needsSwap'] = this['enabled'] = !0x0, this['renderToScreen'] = this['clear'] = !0x1;
        }, Object['assign'](bZ7['Pass']['prototype'], {
            'setSize': function() {},
            'render': function() {
                console['error']('THREE.Pass:\x20.render()\x20must\x20be\x20implemented\x20in\x20derived\x20pass.');
            }
        }), bZ7['RenderPass'] = function(bZ8, bZC, bZD, bZE, bZF) {
            bZ7['Pass']['call'](this), this['scene'] = bZ8, this['camera'] = bZC, this['overrideMaterial'] = bZD, this['clearColor'] = bZE, this['clearAlpha'] = void 0x0 === bZF ? 0x0 : bZF, this['clear'] = !0x0, this['needsSwap'] = this['clearDepth'] = !0x1;
        }, bZ7['RenderPass']['prototype'] = Object['assign'](Object['create'](bZ7['Pass']['prototype']), {
            'constructor': bZ7['RenderPass'],
            'render': function(bZ7, bZ8, bZI) {
                if (bZ8 = bZ7['autoClear'], bZ7['autoClear'] = !0x1, this['scene']['overrideMaterial'] = this['overrideMaterial'], this['clearColor']) {
                    var bZJ = bZ7['getClearColor']()['getHex'](),
                        bZK = bZ7['getClearAlpha']();
                    bZ7['setClearColor'](this['clearColor'], this['clearAlpha']);
                }
                this['clearDepth'] && bZ7['clearDepth'](), bZ7['render'](this['scene'], this['camera'], this['renderToScreen'] ? null : bZI, this['clear']), this['clearColor'] && bZ7['setClearColor'](bZJ, bZK), this['scene']['overrideMaterial'] = null, bZ7['autoClear'] = bZ8;
            }
        }), bZ7['ShaderPass'] = function(bZ8, bZM) {
            bZ7['Pass']['call'](this), this['textureID'] = void 0x0 === bZM ? 'tDiffuse' : bZM, bZ8 instanceof bZ7['ShaderMaterial'] ? (this['uniforms'] = bZ8['uniforms'], this['material'] = bZ8) : bZ8 && (this['uniforms'] = bZ7['UniformsUtils']['clone'](bZ8['uniforms']), this['material'] = new bZ7['ShaderMaterial']({
                'defines': Object['assign']({}, bZ8['defines']),
                'uniforms': this['uniforms'],
                'vertexShader': bZ8['vertexShader'],
                'fragmentShader': bZ8['fragmentShader']
            })), this['camera'] = new bZ7['OrthographicCamera'](-0x1, 0x1, 0x1, -0x1, 0x0, 0x1), this['scene'] = new bZ7['Scene'](), this['quad'] = new bZ7['Mesh'](new bZ7['PlaneBufferGeometry'](0x2, 0x2), null), this['quad']['frustumCulled'] = !0x1, this['scene']['add'](this['quad']);
        }, bZ7['ShaderPass']['prototype'] = Object['assign'](Object['create'](bZ7['Pass']['prototype']), {
            'constructor': bZ7['ShaderPass'],
            'render': function(bZ7, bZ8, bZP) {
                this['uniforms'][this['textureID']] && (this['uniforms'][this['textureID']]['value'] = bZP['texture']), this['quad']['material'] = this['material'], this['renderToScreen'] ? bZ7['render'](this['scene'], this['camera']) : bZ7['render'](this['scene'], this['camera'], bZ8, this['clear']);
            }
        }), bZ7['MaskPass'] = function(bZ8, bZR) {
            bZ7['Pass']['call'](this), this['scene'] = bZ8, this['camera'] = bZR, this['clear'] = !0x0, this['inverse'] = this['needsSwap'] = !0x1;
        }, bZ7['MaskPass']['prototype'] = Object['assign'](Object['create'](bZ7['Pass']['prototype']), {
            'constructor': bZ7['MaskPass'],
            'render': function(bZ7, bZ8, bZU, bZV, bZW) {
                if (bZV = bZ7['context'], (bZW = bZ7['state'])['buffers']['color']['setMask'](!0x1), bZW['buffers']['depth']['setMask'](!0x1), bZW['buffers']['color']['setLocked'](!0x0), bZW['buffers']['depth']['setLocked'](!0x0), this['inverse']) var bZX = 0x0,
                    bZY = 0x1;
                else bZX = 0x1, bZY = 0x0;
                bZW['buffers']['stencil']['setTest'](!0x0), bZW['buffers']['stencil']['setOp'](bZV['REPLACE'], bZV['REPLACE'], bZV['REPLACE']), bZW['buffers']['stencil']['setFunc'](bZV['ALWAYS'], bZX, 0xffffffff), bZW['buffers']['stencil']['setClear'](bZY), bZ7['render'](this['scene'], this['camera'], bZU, this['clear']), bZ7['render'](this['scene'], this['camera'], bZ8, this['clear']), bZW['buffers']['color']['setLocked'](!0x1), bZW['buffers']['depth']['setLocked'](!0x1), bZW['buffers']['stencil']['setFunc'](bZV['EQUAL'], 0x1, 0xffffffff), bZW['buffers']['stencil']['setOp'](bZV['KEEP'], bZV['KEEP'], bZV['KEEP']);
            }
        }), bZ7['ClearMaskPass'] = function() {
            bZ7['Pass']['call'](this), this['needsSwap'] = !0x1;
        }, bZ7['ClearMaskPass']['prototype'] = Object['create'](bZ7['Pass']['prototype']), Object['assign'](bZ7['ClearMaskPass']['prototype'], {
            'render': function(bZ7) {
                bZ7['state']['buffers']['stencil']['setTest'](!0x1);
            }
        }), bZ7['SSAOPass'] = function(bZ8, c01, c02, c03) {
            return void 0x0 === bZ7['SSAOShader'] ? (console['warn']('THREE.SSAOPass\x20depends\x20on\x20THREE.SSAOShader'), new bZ7['ShaderPass']()) : (bZ7['ShaderPass']['call'](this, bZ7['SSAOShader']), this['width'] = void 0x0 === c02 ? 0x80 : c02, this['height'] = void 0x0 === c03 ? 0x80 : c03, this['renderToScreen'] = !0x1, this['camera2'] = c01, this['scene2'] = bZ8, this['depthMaterial'] = new bZ7['MeshDepthMaterial'](), this['depthMaterial']['depthPacking'] = bZ7['RGBADepthPacking'], this['depthMaterial']['blending'] = bZ7['NoBlending'], this['depthRenderTarget'] = new bZ7['WebGLRenderTarget'](this['width'], this['height'], {
                'minFilter': bZ7['LinearFilter'],
                'magFilter': bZ7['LinearFilter']
            }), this['uniforms']['tDepth']['value'] = this['depthRenderTarget']['texture'], this['uniforms']['size']['value']['set'](this['width'], this['height']), this['uniforms']['cameraNear']['value'] = this['camera2']['near'], this['uniforms']['cameraFar']['value'] = this['camera2']['far'], this['uniforms']['radius']['value'] = 0x4, this['uniforms']['onlyAO']['value'] = !0x1, this['uniforms']['aoClamp']['value'] = 0.25, this['uniforms']['lumInfluence']['value'] = 0.7, void Object['defineProperties'](this, {
                'radius': {
                    'get': function() {
                        return this['uniforms']['radius']['value'];
                    },
                    'set': function(bZ7) {
                        this['uniforms']['radius']['value'] = bZ7;
                    }
                },
                'onlyAO': {
                    'get': function() {
                        return this['uniforms']['onlyAO']['value'];
                    },
                    'set': function(bZ7) {
                        this['uniforms']['onlyAO']['value'] = bZ7;
                    }
                },
                'aoClamp': {
                    'get': function() {
                        return this['uniforms']['aoClamp']['value'];
                    },
                    'set': function(bZ7) {
                        this['uniforms']['aoClamp']['value'] = bZ7;
                    }
                },
                'lumInfluence': {
                    'get': function() {
                        return this['uniforms']['lumInfluence']['value'];
                    },
                    'set': function(bZ7) {
                        this['uniforms']['lumInfluence']['value'] = bZ7;
                    }
                }
            }));
        }, bZ7['SSAOPass']['prototype'] = Object['create'](bZ7['ShaderPass']['prototype']), bZ7['SSAOPass']['prototype']['render'] = function(bZ8, c09, c0a, c0b, c0c) {
            this['scene2']['overrideMaterial'] = this['depthMaterial'], bZ8['render'](this['scene2'], this['camera2'], this['depthRenderTarget'], !0x0), this['scene2']['overrideMaterial'] = null, bZ7['ShaderPass']['prototype']['render']['call'](this, bZ8, c09, c0a, c0b, c0c);
        }, bZ7['SSAOPass']['prototype']['setScene'] = function(bZ7) {
            this['scene2'] = bZ7;
        }, bZ7['SSAOPass']['prototype']['setCamera'] = function(bZ7) {
            this['camera2'] = bZ7, this['uniforms']['cameraNear']['value'] = this['camera2']['near'], this['uniforms']['cameraFar']['value'] = this['camera2']['far'];
        }, bZ7['SSAOPass']['prototype']['setSize'] = function(bZ7, bZ8) {
            this['width'] = bZ7, this['height'] = bZ8, this['uniforms']['size']['value']['set'](this['width'], this['height']), this['depthRenderTarget']['setSize'](this['width'], this['height']);
        }, bZ7['LuminosityHighPassShader'] = {
            'shaderID': 'luminosityHighPass',
            'uniforms': {
                'tDiffuse': {
                    'type': 't',
                    'value': null
                },
                'luminosityThreshold': {
                    'type': 'f',
                    'value': 0x1
                },
                'smoothWidth': {
                    'type': 'f',
                    'value': 0x1
                },
                'defaultColor': {
                    'type': 'c',
                    'value': new bZ7['Color'](0x0)
                },
                'defaultOpacity': {
                    'type': 'f',
                    'value': 0x0
                }
            },
            'vertexShader': 'varying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avUv\x20=\x20uv;\x0agl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
            'fragmentShader': 'uniform\x20sampler2D\x20tDiffuse;\x0auniform\x20vec3\x20defaultColor;\x0auniform\x20float\x20defaultOpacity;\x0auniform\x20float\x20luminosityThreshold;\x0auniform\x20float\x20smoothWidth;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0avec4\x20texel\x20=\x20texture2D(\x20tDiffuse,\x20vUv\x20);\x0avec3\x20luma\x20=\x20vec3(\x200.299,\x200.587,\x200.114\x20);\x0afloat\x20v\x20=\x20dot(\x20texel.xyz,\x20luma\x20);\x0avec4\x20outputColor\x20=\x20vec4(\x20defaultColor.rgb,\x20defaultOpacity\x20);\x0afloat\x20alpha\x20=\x20smoothstep(\x20luminosityThreshold,\x20luminosityThreshold\x20+\x20smoothWidth,\x20v\x20);\x0agl_FragColor\x20=\x20mix(\x20outputColor,\x20texel,\x20alpha\x20);\x0a}'
        }, bZ7['UnrealBloomPass'] = function(bZ8, c0i, c0j, c0k) {
            bZ7['Pass']['call'](this), this['strength'] = void 0x0 === c0i ? 0x1 : c0i, this['radius'] = c0j, this['threshold'] = c0k, this['resolution'] = void 0x0 === bZ8 ? new bZ7['Vector2'](0x100, 0x100) : new bZ7['Vector2'](bZ8['x'], bZ8['y']), this['clearColor'] = new bZ7['Color'](0x0, 0x0, 0x0);
            var c0l = {
                'minFilter': bZ7['LinearFilter'],
                'magFilter': bZ7['LinearFilter'],
                'format': bZ7['RGBAFormat']
            };
            this['renderTargetsHorizontal'] = [], this['renderTargetsVertical'] = [], this['nMips'] = 0x5, bZ8 = Math['round'](this['resolution']['x'] / 0x2), c0j = Math['round'](this['resolution']['y'] / 0x2), this['renderTargetBright'] = new bZ7['WebGLRenderTarget'](bZ8, c0j, c0l), this['renderTargetBright']['texture']['name'] = 'UnrealBloomPass.bright', this['renderTargetBright']['texture']['generateMipmaps'] = !0x1;
            for (var c0m, c0n = 0x0; c0n < this['nMips']; c0n++)(c0m = new bZ7['WebGLRenderTarget'](bZ8, c0j, c0l))['texture']['name'] = 'UnrealBloomPass.h' + c0n, c0m['texture']['generateMipmaps'] = !0x1, this['renderTargetsHorizontal']['push'](c0m), (c0m = new bZ7['WebGLRenderTarget'](bZ8, c0j, c0l))['texture']['name'] = 'UnrealBloomPass.v' + c0n, c0m['texture']['generateMipmaps'] = !0x1, this['renderTargetsVertical']['push'](c0m), bZ8 = Math['round'](bZ8 / 0x2), c0j = Math['round'](c0j / 0x2);
            for (void 0x0 === bZ7['LuminosityHighPassShader'] && console['error']('THREE.UnrealBloomPass\x20relies\x20on\x20THREE.LuminosityHighPassShader'), bZ8 = bZ7['LuminosityHighPassShader'], this['highPassUniforms'] = bZ7['UniformsUtils']['clone'](bZ8['uniforms']), this['highPassUniforms']['luminosityThreshold']['value'] = c0k, this['highPassUniforms']['smoothWidth']['value'] = 0.01, this['materialHighPassFilter'] = new bZ7['ShaderMaterial']({
                    'uniforms': this['highPassUniforms'],
                    'vertexShader': bZ8['vertexShader'],
                    'fragmentShader': bZ8['fragmentShader'],
                    'defines': {}
                }), this['separableBlurMaterials'] = [], c0k = [0x3, 0x5, 0x7, 0x9, 0xb], bZ8 = Math['round'](this['resolution']['x'] / 0x2), c0j = Math['round'](this['resolution']['y'] / 0x2), c0n = 0x0; c0n < this['nMips']; c0n++) this['separableBlurMaterials']['push'](this['getSeperableBlurMaterial'](c0k[c0n])), this['separableBlurMaterials'][c0n]['uniforms']['texSize']['value'] = new bZ7['Vector2'](bZ8, c0j), bZ8 = Math['round'](bZ8 / 0x2), c0j = Math['round'](c0j / 0x2);
            this['compositeMaterial'] = this['getCompositeMaterial'](this['nMips']), this['compositeMaterial']['uniforms']['blurTexture1']['value'] = this['renderTargetsVertical'][0x0]['texture'], this['compositeMaterial']['uniforms']['blurTexture2']['value'] = this['renderTargetsVertical'][0x1]['texture'], this['compositeMaterial']['uniforms']['blurTexture3']['value'] = this['renderTargetsVertical'][0x2]['texture'], this['compositeMaterial']['uniforms']['blurTexture4']['value'] = this['renderTargetsVertical'][0x3]['texture'], this['compositeMaterial']['uniforms']['blurTexture5']['value'] = this['renderTargetsVertical'][0x4]['texture'], this['compositeMaterial']['uniforms']['bloomStrength']['value'] = c0i, this['compositeMaterial']['uniforms']['bloomRadius']['value'] = 0.1, this['compositeMaterial']['needsUpdate'] = !0x0, this['compositeMaterial']['uniforms']['bloomFactors']['value'] = [0x1, 0.8, 0.6, 0.4, 0.2], this['bloomTintColors'] = [new bZ7['Vector3'](0x1, 0x1, 0x1), new bZ7['Vector3'](0x1, 0x1, 0x1), new bZ7['Vector3'](0x1, 0x1, 0x1), new bZ7['Vector3'](0x1, 0x1, 0x1), new bZ7['Vector3'](0x1, 0x1, 0x1)], this['compositeMaterial']['uniforms']['bloomTintColors']['value'] = this['bloomTintColors'], void 0x0 === bZ7['CopyShader'] && console['error']('THREE.BloomPass\x20relies\x20on\x20THREE.CopyShader'), c0i = bZ7['CopyShader'], this['copyUniforms'] = bZ7['UniformsUtils']['clone'](c0i['uniforms']), this['copyUniforms']['opacity']['value'] = 0x1, this['materialCopy'] = new bZ7['ShaderMaterial']({
                'uniforms': this['copyUniforms'],
                'vertexShader': c0i['vertexShader'],
                'fragmentShader': c0i['fragmentShader'],
                'blending': bZ7['AdditiveBlending'],
                'depthTest': !0x1,
                'depthWrite': !0x1,
                'transparent': !0x0
            }), this['enabled'] = !0x0, this['needsSwap'] = !0x1, this['oldClearColor'] = new bZ7['Color'](), this['oldClearAlpha'] = 0x1, this['camera'] = new bZ7['OrthographicCamera'](-0x1, 0x1, 0x1, -0x1, 0x0, 0x1), this['scene'] = new bZ7['Scene'](), this['basic'] = new bZ7['MeshBasicMaterial'](), this['quad'] = new bZ7['Mesh'](new bZ7['PlaneBufferGeometry'](0x2, 0x2), null), this['quad']['frustumCulled'] = !0x1, this['scene']['add'](this['quad']);
        }, bZ7['UnrealBloomPass']['prototype'] = Object['assign'](Object['create'](bZ7['Pass']['prototype']), {
            'constructor': bZ7['UnrealBloomPass'],
            'dispose': function() {
                for (var bZ7 = 0x0; bZ7 < this['renderTargetsHorizontal']['length']; bZ7++) this['renderTargetsHorizontal'][bZ7]['dispose']();
                for (bZ7 = 0x0; bZ7 < this['renderTargetsVertical']['length']; bZ7++) this['renderTargetsVertical'][bZ7]['dispose']();
                this['renderTargetBright']['dispose']();
            },
            'setSize': function(bZ8, c0q) {
                var c0r = Math['round'](bZ8 / 0x2),
                    c0s = Math['round'](c0q / 0x2);
                this['renderTargetBright']['setSize'](c0r, c0s);
                for (var c0t = 0x0; c0t < this['nMips']; c0t++) this['renderTargetsHorizontal'][c0t]['setSize'](c0r, c0s), this['renderTargetsVertical'][c0t]['setSize'](c0r, c0s), this['separableBlurMaterials'][c0t]['uniforms']['texSize']['value'] = new bZ7['Vector2'](c0r, c0s), c0r = Math['round'](c0r / 0x2), c0s = Math['round'](c0s / 0x2);
            },
            'render': function(bZ8, c0v, c0w, c0x, c0y) {
                this['oldClearColor']['copy'](bZ8['getClearColor']()), this['oldClearAlpha'] = bZ8['getClearAlpha'](), c0v = bZ8['autoClear'], bZ8['autoClear'] = !0x1, bZ8['setClearColor'](this['clearColor'], 0x0), c0y && bZ8['context']['disable'](bZ8['context']['STENCIL_TEST']), this['renderToScreen'] && (this['quad']['material'] = this['basic'], this['basic']['map'] = c0w['texture'], bZ8['render'](this['scene'], this['camera'], void 0x0, !0x0)), this['highPassUniforms']['tDiffuse']['value'] = c0w['texture'], this['highPassUniforms']['luminosityThreshold']['value'] = this['threshold'], this['quad']['material'] = this['materialHighPassFilter'], bZ8['render'](this['scene'], this['camera'], this['renderTargetBright'], !0x0), c0x = this['renderTargetBright'];
                for (var c0z = 0x0; c0z < this['nMips']; c0z++) this['quad']['material'] = this['separableBlurMaterials'][c0z], this['separableBlurMaterials'][c0z]['uniforms']['colorTexture']['value'] = c0x['texture'], this['separableBlurMaterials'][c0z]['uniforms']['direction']['value'] = bZ7['UnrealBloomPass']['BlurDirectionX'], bZ8['render'](this['scene'], this['camera'], this['renderTargetsHorizontal'][c0z], !0x0), this['separableBlurMaterials'][c0z]['uniforms']['colorTexture']['value'] = this['renderTargetsHorizontal'][c0z]['texture'], this['separableBlurMaterials'][c0z]['uniforms']['direction']['value'] = bZ7['UnrealBloomPass']['BlurDirectionY'], bZ8['render'](this['scene'], this['camera'], this['renderTargetsVertical'][c0z], !0x0), c0x = this['renderTargetsVertical'][c0z];
                this['quad']['material'] = this['compositeMaterial'], this['compositeMaterial']['uniforms']['bloomStrength']['value'] = this['strength'], this['compositeMaterial']['uniforms']['bloomRadius']['value'] = this['radius'], this['compositeMaterial']['uniforms']['bloomTintColors']['value'] = this['bloomTintColors'], bZ8['render'](this['scene'], this['camera'], this['renderTargetsHorizontal'][0x0], !0x0), this['quad']['material'] = this['materialCopy'], this['copyUniforms']['tDiffuse']['value'] = this['renderTargetsHorizontal'][0x0]['texture'], c0y && bZ8['context']['enable'](bZ8['context']['STENCIL_TEST']), this['renderToScreen'] ? bZ8['render'](this['scene'], this['camera'], void 0x0, !0x1) : bZ8['render'](this['scene'], this['camera'], c0w, !0x1), bZ8['setClearColor'](this['oldClearColor'], this['oldClearAlpha']), bZ8['autoClear'] = c0v;
            },
            'getSeperableBlurMaterial': function(bZ8) {
                return new bZ7['ShaderMaterial']({
                    'defines': {
                        'KERNEL_RADIUS': bZ8,
                        'SIGMA': bZ8
                    },
                    'uniforms': {
                        'colorTexture': {
                            'value': null
                        },
                        'texSize': {
                            'value': new bZ7['Vector2'](0.5, 0.5)
                        },
                        'direction': {
                            'value': new bZ7['Vector2'](0.5, 0.5)
                        }
                    },
                    'vertexShader': 'varying\x20vec2\x20vUv;\x0a\x09\x09\x09\x09void\x20main()\x20{\x0a\x09\x09\x09\x09\x09vUv\x20=\x20uv;\x0a\x09\x09\x09\x09\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09\x09\x09\x09}',
                    'fragmentShader': '#include\x20<common>\x09\x09\x09\x09varying\x20vec2\x20vUv;\x0a\x09\x09\x09\x09uniform\x20sampler2D\x20colorTexture;\x0a\x09\x09\x09\x09uniform\x20vec2\x20texSize;\x09\x09\x09\x09uniform\x20vec2\x20direction;\x09\x09\x09\x09\x09\x09\x09\x09float\x20gaussianPdf(in\x20float\x20x,\x20in\x20float\x20sigma)\x20{\x09\x09\x09\x09\x09return\x200.39894\x20*\x20exp(\x20-0.5\x20*\x20x\x20*\x20x/(\x20sigma\x20*\x20sigma))/sigma;\x09\x09\x09\x09}\x09\x09\x09\x09void\x20main()\x20{\x0a\x09\x09\x09\x09\x09vec2\x20invSize\x20=\x201.0\x20/\x20texSize;\x09\x09\x09\x09\x09float\x20fSigma\x20=\x20float(SIGMA);\x09\x09\x09\x09\x09float\x20weightSum\x20=\x20gaussianPdf(0.0,\x20fSigma);\x09\x09\x09\x09\x09vec3\x20diffuseSum\x20=\x20texture2D(\x20colorTexture,\x20vUv).rgb\x20*\x20weightSum;\x09\x09\x09\x09\x09for(\x20int\x20i\x20=\x201;\x20i\x20<\x20KERNEL_RADIUS;\x20i\x20++\x20)\x20{\x09\x09\x09\x09\x09\x09float\x20x\x20=\x20float(i);\x09\x09\x09\x09\x09\x09float\x20w\x20=\x20gaussianPdf(x,\x20fSigma);\x09\x09\x09\x09\x09\x09vec2\x20uvOffset\x20=\x20direction\x20*\x20invSize\x20*\x20x;\x09\x09\x09\x09\x09\x09vec3\x20sample1\x20=\x20texture2D(\x20colorTexture,\x20vUv\x20+\x20uvOffset).rgb;\x09\x09\x09\x09\x09\x09vec3\x20sample2\x20=\x20texture2D(\x20colorTexture,\x20vUv\x20-\x20uvOffset).rgb;\x09\x09\x09\x09\x09\x09diffuseSum\x20+=\x20(sample1\x20+\x20sample2)\x20*\x20w;\x09\x09\x09\x09\x09\x09weightSum\x20+=\x202.0\x20*\x20w;\x09\x09\x09\x09\x09}\x09\x09\x09\x09\x09gl_FragColor\x20=\x20vec4(diffuseSum/weightSum,\x201.0);\x0a\x09\x09\x09\x09}'
                });
            },
            'getCompositeMaterial': function(bZ8) {
                return new bZ7['ShaderMaterial']({
                    'defines': {
                        'NUM_MIPS': bZ8
                    },
                    'uniforms': {
                        'blurTexture1': {
                            'value': null
                        },
                        'blurTexture2': {
                            'value': null
                        },
                        'blurTexture3': {
                            'value': null
                        },
                        'blurTexture4': {
                            'value': null
                        },
                        'blurTexture5': {
                            'value': null
                        },
                        'dirtTexture': {
                            'value': null
                        },
                        'bloomStrength': {
                            'value': 0x1
                        },
                        'bloomFactors': {
                            'value': null
                        },
                        'bloomTintColors': {
                            'value': null
                        },
                        'bloomRadius': {
                            'value': 0x0
                        }
                    },
                    'vertexShader': 'varying\x20vec2\x20vUv;\x0a\x09\x09\x09\x09void\x20main()\x20{\x0a\x09\x09\x09\x09\x09vUv\x20=\x20uv;\x0a\x09\x09\x09\x09\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09\x09\x09\x09}',
                    'fragmentShader': 'varying\x20vec2\x20vUv;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture1;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture2;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture3;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture4;\x09\x09\x09\x09uniform\x20sampler2D\x20blurTexture5;\x09\x09\x09\x09uniform\x20sampler2D\x20dirtTexture;\x09\x09\x09\x09uniform\x20float\x20bloomStrength;\x09\x09\x09\x09uniform\x20float\x20bloomRadius;\x09\x09\x09\x09uniform\x20float\x20bloomFactors[NUM_MIPS];\x09\x09\x09\x09uniform\x20vec3\x20bloomTintColors[NUM_MIPS];\x09\x09\x09\x09\x09\x09\x09\x09float\x20lerpBloomFactor(const\x20in\x20float\x20factor)\x20{\x20\x09\x09\x09\x09\x09float\x20mirrorFactor\x20=\x201.2\x20-\x20factor;\x09\x09\x09\x09\x09return\x20mix(factor,\x20mirrorFactor,\x20bloomRadius);\x09\x09\x09\x09}\x09\x09\x09\x09\x09\x09\x09\x09void\x20main()\x20{\x09\x09\x09\x09\x09gl_FragColor\x20=\x20bloomStrength\x20*\x20(\x20lerpBloomFactor(bloomFactors[0])\x20*\x20vec4(bloomTintColors[0],\x201.0)\x20*\x20texture2D(blurTexture1,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[1])\x20*\x20vec4(bloomTintColors[1],\x201.0)\x20*\x20texture2D(blurTexture2,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[2])\x20*\x20vec4(bloomTintColors[2],\x201.0)\x20*\x20texture2D(blurTexture3,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[3])\x20*\x20vec4(bloomTintColors[3],\x201.0)\x20*\x20texture2D(blurTexture4,\x20vUv)\x20+\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20lerpBloomFactor(bloomFactors[4])\x20*\x20vec4(bloomTintColors[4],\x201.0)\x20*\x20texture2D(blurTexture5,\x20vUv)\x20);\x09\x09\x09\x09}'
                });
            }
        }), bZ7['UnrealBloomPass']['BlurDirectionX'] = new bZ7['Vector2'](0x1, 0x0), bZ7['UnrealBloomPass']['BlurDirectionY'] = new bZ7['Vector2'](0x0, 0x1), bZ7['StrippedLambertMaterial'] = function(bZ8) {
            let c0D = new bZ7['ShaderMaterial']({
                'name': 'lambert-stripped',
                'uniforms': bZ7['UniformsUtils']['merge']([bZ7['ShaderLib']['lambert']['uniforms']]),
                'lights': !0x0,
                'fog': !0x0,
                'vertexShader': '\x0a#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a//\x20#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a//\x20#include\x20<morphtarget_pars_vertex>\x0a//\x20#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a//\x20#include\x20<logdepthbuf_pars_vertex>\x0a//\x20#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20#include\x20<uv_vertex>\x0a\x20\x20\x20\x20#include\x20<uv2_vertex>\x0a\x20\x20\x20\x20#include\x20<color_vertex>\x0a\x20\x20\x20\x20#include\x20<beginnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinbase_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<defaultnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<begin_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphtarget_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinning_vertex>\x0a\x20\x20\x20\x20#include\x20<project_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_vertex>\x0a\x20\x20\x20\x20#include\x20<worldpos_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_vertex>\x0a\x20\x20\x20\x20#include\x20<lights_lambert_vertex>\x0a\x20\x20\x20\x20#include\x20<shadowmap_vertex>\x0a\x20\x20\x20\x20#include\x20<fog_vertex>\x0a}\x0a',
                'fragmentShader': '\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0a\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a//\x20#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a//\x20#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a//\x20#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x20\x20//\x20Shading\x20functions\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a//\x20#include\x20<specularmap_pars_fragment>\x0a//\x20#include\x20<logdepthbuf_pars_fragment>\x0a//\x20#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_fragment>\x0a\x0a\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x20\x20\x20\x20ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_fragment>\x0a\x20\x20\x20\x20#include\x20<map_fragment>\x0a\x20\x20\x20\x20#include\x20<color_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<alphamap_fragment>\x0a\x20\x20\x20\x20#include\x20<alphatest_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<specularmap_fragment>\x0a\x20\x20\x20\x20#include\x20<emissivemap_fragment>\x0a\x0a\x20\x20\x20\x20//\x20accumulation\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#include\x20<lightmap_fragment>\x0a\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x0a\x20\x20\x20\x20//\x20modulation\x0a\x20\x20\x20\x20#include\x20<aomap_fragment>\x0a\x0a\x20\x20\x20\x20vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_fragment>\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<tonemapping_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<encodings_fragment>\x0a\x20\x20\x20\x20#include\x20<fog_fragment>\x0a\x20\x20\x20\x20#include\x20<premultiplied_alpha_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<dithering_fragment>\x0a}\x0a\x20\x20\x20\x20'
            });
            return Object['assign'](c0D, new bZ7['MeshLambertMaterial'](bZ8)), c0D['isMeshLambertMaterial'] = !0x0, c0D['setValues'](bZ8), c0D;
        };
    };
}, function(c0E, c0F, c0G) {
    var c0H;
    ! function() {
        'use strict';

        function c0I(c0E) {
            var c0F;
            c0F = 'function' == typeof c0E ? c0E : c0E ? c0S(c0E) : Math['random'], this['p'] = c0M(c0F), this['perm'] = new Uint8Array(0x200), this['permMod12'] = new Uint8Array(0x200);
            for (var c0G = 0x0; 0x200 > c0G; c0G++) this['perm'][c0G] = this['p'][0xff & c0G], this['permMod12'][c0G] = this['perm'][c0G] % 0xc;
        }

        function c0M(c0E) {
            var c0F, c0G = new Uint8Array(0x100);
            for (c0F = 0x0; 0x100 > c0F; c0F++) c0G[c0F] = c0F;
            for (c0F = 0x0; 0xff > c0F; c0F++) {
                var c0H = c0F + ~~(c0E() * (0x100 - c0F)),
                    c0I = c0G[c0F];
                c0G[c0F] = c0G[c0H], c0G[c0H] = c0I;
            }
            return c0G;
        }

        function c0S() {
            var c0E = 0x0,
                c0F = 0x0,
                c0G = 0x0,
                c0H = 0x1,
                c0I = function() {
                    var c0E = 0xefc8249d;
                    return function(c0F) {
                        c0F = c0F['toString']();
                        for (var c0G = 0x0; c0G < c0F['length']; c0G++) {
                            var c0H = 0.02519603282416938 * (c0E += c0F['charCodeAt'](c0G));
                            c0H -= c0E = c0H >>> 0x0, c0E = (c0H *= c0E) >>> 0x0, c0E += 0x100000000 * (c0H -= c0E);
                        }
                        return 2.3283064365386963e-10 * (c0E >>> 0x0);
                    };
                }();
            c0E = c0I('\x20'), c0F = c0I('\x20'), c0G = c0I('\x20');
            for (var c0M = 0x0; c0M < arguments['length']; c0M++) 0x0 > (c0E -= c0I(arguments[c0M])) && (c0E += 0x1), 0x0 > (c0F -= c0I(arguments[c0M])) && (c0F += 0x1), 0x0 > (c0G -= c0I(arguments[c0M])) && (c0G += 0x1);
            return c0I = null,
                function() {
                    var c0I = 0x1fea77 * c0E + 2.3283064365386963e-10 * c0H;
                    return c0E = c0F, c0F = c0G, c0G = c0I - (c0H = 0x0 | c0I);
                };
        }
        var c14 = 0.5 * (Math['sqrt'](0x3) - 0x1),
            c15 = (0x3 - Math['sqrt'](0x3)) / 0x6,
            c16 = 0x1 / 0x6,
            c17 = (Math['sqrt'](0x5) - 0x1) / 0x4,
            c18 = (0x5 - Math['sqrt'](0x5)) / 0x14;
        c0I['prototype'] = {
            'grad3': new Float32Array([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1]),
            'grad4': new Float32Array([0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0]),
            'noise2D': function(c0E, c0F) {
                var c0G, c0H, c0I = this['permMod12'],
                    c0M = this['perm'],
                    c0S = this['grad3'],
                    c16 = 0x0,
                    c17 = 0x0,
                    c18 = 0x0,
                    c1j = (c0E + c0F) * c14,
                    c1k = Math['floor'](c0E + c1j),
                    c1l = Math['floor'](c0F + c1j),
                    c1m = (c1k + c1l) * c15,
                    c1n = c0E - (c1k - c1m),
                    c1o = c0F - (c1l - c1m);
                c1n > c1o ? (c0G = 0x1, c0H = 0x0) : (c0G = 0x0, c0H = 0x1);
                var c1p = c1n - c0G + c15,
                    c1q = c1o - c0H + c15,
                    c1r = c1n - 0x1 + 0x2 * c15,
                    c1s = c1o - 0x1 + 0x2 * c15,
                    c1t = 0xff & c1k,
                    c1u = 0xff & c1l,
                    c1v = 0.5 - c1n * c1n - c1o * c1o;
                if (0x0 <= c1v) {
                    var c1w = 0x3 * c0I[c1t + c0M[c1u]];
                    c16 = (c1v *= c1v) * c1v * (c0S[c1w] * c1n + c0S[c1w + 0x1] * c1o);
                }
                var c1x = 0.5 - c1p * c1p - c1q * c1q;
                if (0x0 <= c1x) {
                    var c1y = 0x3 * c0I[c1t + c0G + c0M[c1u + c0H]];
                    c17 = (c1x *= c1x) * c1x * (c0S[c1y] * c1p + c0S[c1y + 0x1] * c1q);
                }
                var c1z = 0.5 - c1r * c1r - c1s * c1s;
                if (0x0 <= c1z) {
                    var c1A = 0x3 * c0I[c1t + 0x1 + c0M[c1u + 0x1]];
                    c18 = (c1z *= c1z) * c1z * (c0S[c1A] * c1r + c0S[c1A + 0x1] * c1s);
                }
                return 0x46 * (c16 + c17 + c18);
            },
            'noise3D': function(c0E, c0F, c0G) {
                var c0H, c0I, c0M, c0S, c14, c15, c17, c18, c1M, c1N, c1O = this['permMod12'],
                    c1P = this['perm'],
                    c1Q = this['grad3'],
                    c1R = (c0E + c0F + c0G) * (0x1 / 0x3),
                    c1S = Math['floor'](c0E + c1R),
                    c1T = Math['floor'](c0F + c1R),
                    c1U = Math['floor'](c0G + c1R),
                    c1V = (c1S + c1T + c1U) * c16,
                    c1W = c0E - (c1S - c1V),
                    c1X = c0F - (c1T - c1V),
                    c1Y = c0G - (c1U - c1V);
                c1W >= c1X ? c1X >= c1Y ? (c14 = 0x1, c15 = 0x0, c17 = 0x0, c18 = 0x1, c1M = 0x1, c1N = 0x0) : c1W >= c1Y ? (c14 = 0x1, c15 = 0x0, c17 = 0x0, c18 = 0x1, c1M = 0x0, c1N = 0x1) : (c14 = 0x0, c15 = 0x0, c17 = 0x1, c18 = 0x1, c1M = 0x0, c1N = 0x1) : c1X < c1Y ? (c14 = 0x0, c15 = 0x0, c17 = 0x1, c18 = 0x0, c1M = 0x1, c1N = 0x1) : c1W < c1Y ? (c14 = 0x0, c15 = 0x1, c17 = 0x0, c18 = 0x0, c1M = 0x1, c1N = 0x1) : (c14 = 0x0, c15 = 0x1, c17 = 0x0, c18 = 0x1, c1M = 0x1, c1N = 0x0);
                var c1Z = c1W - c14 + c16,
                    c20 = c1X - c15 + c16,
                    c21 = c1Y - c17 + c16,
                    c22 = c1W - c18 + 0x2 * c16,
                    c23 = c1X - c1M + 0x2 * c16,
                    c24 = c1Y - c1N + 0x2 * c16,
                    c25 = c1W - 0x1 + 0.5,
                    c26 = c1X - 0x1 + 0.5,
                    c27 = c1Y - 0x1 + 0.5,
                    c28 = 0xff & c1S,
                    c29 = 0xff & c1T,
                    c2a = 0xff & c1U,
                    c2b = 0.6 - c1W * c1W - c1X * c1X - c1Y * c1Y;
                if (0x0 > c2b) c0H = 0x0;
                else {
                    var c2c = 0x3 * c1O[c28 + c1P[c29 + c1P[c2a]]];
                    c0H = (c2b *= c2b) * c2b * (c1Q[c2c] * c1W + c1Q[c2c + 0x1] * c1X + c1Q[c2c + 0x2] * c1Y);
                }
                var c2d = 0.6 - c1Z * c1Z - c20 * c20 - c21 * c21;
                if (0x0 > c2d) c0I = 0x0;
                else {
                    var c2e = 0x3 * c1O[c28 + c14 + c1P[c29 + c15 + c1P[c2a + c17]]];
                    c0I = (c2d *= c2d) * c2d * (c1Q[c2e] * c1Z + c1Q[c2e + 0x1] * c20 + c1Q[c2e + 0x2] * c21);
                }
                var c2f = 0.6 - c22 * c22 - c23 * c23 - c24 * c24;
                if (0x0 > c2f) c0M = 0x0;
                else {
                    var c2g = 0x3 * c1O[c28 + c18 + c1P[c29 + c1M + c1P[c2a + c1N]]];
                    c0M = (c2f *= c2f) * c2f * (c1Q[c2g] * c22 + c1Q[c2g + 0x1] * c23 + c1Q[c2g + 0x2] * c24);
                }
                var c2h = 0.6 - c25 * c25 - c26 * c26 - c27 * c27;
                if (0x0 > c2h) c0S = 0x0;
                else {
                    var c2i = 0x3 * c1O[c28 + 0x1 + c1P[c29 + 0x1 + c1P[c2a + 0x1]]];
                    c0S = (c2h *= c2h) * c2h * (c1Q[c2i] * c25 + c1Q[c2i + 0x1] * c26 + c1Q[c2i + 0x2] * c27);
                }
                return 0x20 * (c0H + c0I + c0M + c0S);
            },
            'noise4D': function(c0E, c0F, c0G, c0H) {
                var c0I, c0M, c0S, c14, c15, c16, c2t, c2u, c2v, c2w, c2x, c2y, c2z, c2A, c2B, c2C, c2D, c2E = this['perm'],
                    c2F = this['grad4'],
                    c2G = (c0E + c0F + c0G + c0H) * c17,
                    c2H = Math['floor'](c0E + c2G),
                    c2I = Math['floor'](c0F + c2G),
                    c2J = Math['floor'](c0G + c2G),
                    c2K = Math['floor'](c0H + c2G),
                    c2L = (c2H + c2I + c2J + c2K) * c18,
                    c2M = c0E - (c2H - c2L),
                    c2N = c0F - (c2I - c2L),
                    c2O = c0G - (c2J - c2L),
                    c2P = c0H - (c2K - c2L),
                    c2Q = 0x0,
                    c2R = 0x0,
                    c2S = 0x0,
                    c2T = 0x0;
                c2M > c2N ? c2Q++ : c2R++, c2M > c2O ? c2Q++ : c2S++, c2M > c2P ? c2Q++ : c2T++, c2N > c2O ? c2R++ : c2S++, c2N > c2P ? c2R++ : c2T++, c2O > c2P ? c2S++ : c2T++;
                var c2U = c2M - (c16 = 0x3 <= c2Q ? 0x1 : 0x0) + c18,
                    c2V = c2N - (c2t = 0x3 <= c2R ? 0x1 : 0x0) + c18,
                    c2W = c2O - (c2u = 0x3 <= c2S ? 0x1 : 0x0) + c18,
                    c2X = c2P - (c2v = 0x3 <= c2T ? 0x1 : 0x0) + c18,
                    c2Y = c2M - (c2w = 0x2 <= c2Q ? 0x1 : 0x0) + 0x2 * c18,
                    c2Z = c2N - (c2x = 0x2 <= c2R ? 0x1 : 0x0) + 0x2 * c18,
                    c30 = c2O - (c2y = 0x2 <= c2S ? 0x1 : 0x0) + 0x2 * c18,
                    c31 = c2P - (c2z = 0x2 <= c2T ? 0x1 : 0x0) + 0x2 * c18,
                    c32 = c2M - (c2A = 0x1 <= c2Q ? 0x1 : 0x0) + 0x3 * c18,
                    c33 = c2N - (c2B = 0x1 <= c2R ? 0x1 : 0x0) + 0x3 * c18,
                    c34 = c2O - (c2C = 0x1 <= c2S ? 0x1 : 0x0) + 0x3 * c18,
                    c35 = c2P - (c2D = 0x1 <= c2T ? 0x1 : 0x0) + 0x3 * c18,
                    c36 = c2M - 0x1 + 0x4 * c18,
                    c37 = c2N - 0x1 + 0x4 * c18,
                    c38 = c2O - 0x1 + 0x4 * c18,
                    c39 = c2P - 0x1 + 0x4 * c18,
                    c3a = 0xff & c2H,
                    c3b = 0xff & c2I,
                    c3c = 0xff & c2J,
                    c3d = 0xff & c2K,
                    c3e = 0.6 - c2M * c2M - c2N * c2N - c2O * c2O - c2P * c2P;
                if (0x0 > c3e) c0I = 0x0;
                else {
                    var c3f = c2E[c3a + c2E[c3b + c2E[c3c + c2E[c3d]]]] % 0x20 * 0x4;
                    c0I = (c3e *= c3e) * c3e * (c2F[c3f] * c2M + c2F[c3f + 0x1] * c2N + c2F[c3f + 0x2] * c2O + c2F[c3f + 0x3] * c2P);
                }
                var c3g = 0.6 - c2U * c2U - c2V * c2V - c2W * c2W - c2X * c2X;
                if (0x0 > c3g) c0M = 0x0;
                else {
                    var c3h = c2E[c3a + c16 + c2E[c3b + c2t + c2E[c3c + c2u + c2E[c3d + c2v]]]] % 0x20 * 0x4;
                    c0M = (c3g *= c3g) * c3g * (c2F[c3h] * c2U + c2F[c3h + 0x1] * c2V + c2F[c3h + 0x2] * c2W + c2F[c3h + 0x3] * c2X);
                }
                var c3i = 0.6 - c2Y * c2Y - c2Z * c2Z - c30 * c30 - c31 * c31;
                if (0x0 > c3i) c0S = 0x0;
                else {
                    var c3j = c2E[c3a + c2w + c2E[c3b + c2x + c2E[c3c + c2y + c2E[c3d + c2z]]]] % 0x20 * 0x4;
                    c0S = (c3i *= c3i) * c3i * (c2F[c3j] * c2Y + c2F[c3j + 0x1] * c2Z + c2F[c3j + 0x2] * c30 + c2F[c3j + 0x3] * c31);
                }
                var c3k = 0.6 - c32 * c32 - c33 * c33 - c34 * c34 - c35 * c35;
                if (0x0 > c3k) c14 = 0x0;
                else {
                    var c3l = c2E[c3a + c2A + c2E[c3b + c2B + c2E[c3c + c2C + c2E[c3d + c2D]]]] % 0x20 * 0x4;
                    c14 = (c3k *= c3k) * c3k * (c2F[c3l] * c32 + c2F[c3l + 0x1] * c33 + c2F[c3l + 0x2] * c34 + c2F[c3l + 0x3] * c35);
                }
                var c3m = 0.6 - c36 * c36 - c37 * c37 - c38 * c38 - c39 * c39;
                if (0x0 > c3m) c15 = 0x0;
                else {
                    var c3n = c2E[c3a + 0x1 + c2E[c3b + 0x1 + c2E[c3c + 0x1 + c2E[c3d + 0x1]]]] % 0x20 * 0x4;
                    c15 = (c3m *= c3m) * c3m * (c2F[c3n] * c36 + c2F[c3n + 0x1] * c37 + c2F[c3n + 0x2] * c38 + c2F[c3n + 0x3] * c39);
                }
                return 0x1b * (c0I + c0M + c0S + c14 + c15);
            }
        }, c0I['_buildPermutationTable'] = c0M, void 0x0 !== (c0H = function() {
            return c0I;
        }['call'](c0F, c0G, c0F, c0E)) && (c0E['exports'] = c0H), c0F['SimplexNoise'] = c0I, c0E['exports'] = c0I;
    }();
}, function(c3o, c3p) {
    c3o['exports']['easing'] = {
        'linear': function(c3o) {
            return c3o;
        },
        'easeInQuad': function(c3o) {
            return c3o * c3o;
        },
        'easeOutQuad': function(c3o) {
            return c3o * (0x2 - c3o);
        },
        'easeInOutQuad': function(c3o) {
            return 0.5 > c3o ? 0x2 * c3o * c3o : (0x4 - 0x2 * c3o) * c3o - 0x1;
        },
        'easeInCubic': function(c3o) {
            return c3o * c3o * c3o;
        },
        'easeOutCubic': function(c3o) {
            return --c3o * c3o * c3o + 0x1;
        },
        'easeInOutCubic': function(c3o) {
            return 0.5 > c3o ? 0x4 * c3o * c3o * c3o : (c3o - 0x1) * (0x2 * c3o - 0x2) * (0x2 * c3o - 0x2) + 0x1;
        },
        'easeInQuart': function(c3o) {
            return c3o * c3o * c3o * c3o;
        },
        'easeOutQuart': function(c3o) {
            return 0x1 - --c3o * c3o * c3o * c3o;
        },
        'easeInOutQuart': function(c3o) {
            return 0.5 > c3o ? 0x8 * c3o * c3o * c3o * c3o : 0x1 - 0x8 * --c3o * c3o * c3o * c3o;
        },
        'easeInQuint': function(c3o) {
            return c3o * c3o * c3o * c3o * c3o;
        },
        'easeOutQuint': function(c3o) {
            return 0x1 + --c3o * c3o * c3o * c3o * c3o;
        },
        'easeInOutQuint': function(c3o) {
            return 0.5 > c3o ? 0x10 * c3o * c3o * c3o * c3o * c3o : 0x1 + 0x10 * --c3o * c3o * c3o * c3o * c3o;
        }
    };
}, function(c3D, c3E, c3F) {
    var c3G, c3H, c3I = 0x0,
        c3J = function(c3D) {
            this['sid'] = c3I++, this['uid'] = c3D['uid'], this['width'] = c3D['w'], this['length'] = c3D['l'], this['height'] = c3D['h'], this['active'] = !0x0, this['x'] = c3D['x'], this['orgX'] = this['x'], this['y'] = c3D['y'], this['orgY'] = this['y'], this['z'] = c3D['z'], this['orgZ'] = this['z'], this['dir'] = c3D['d'], this['src'] = c3D['src'], this['ramp'] = c3D['ramp'], this['ladder'] = c3D['ladder'], this['jumpPad'] = c3D['jumpPad'], this['noShoot'] = c3D['noShoot'], this['stepSrc'] = c3D['s'], this['score'] = c3D['score'], this['scoreP'] = c3D['scoreP'], this['kill'] = c3D['kill'], this['dummy'] = c3D['dummy'], this['noVis'] = c3D['noVis'], this['complexMesh'] = c3D['complexMesh'], this['penetrable'] = c3D['penetrable'], this['health'] = c3D['health'], this['startHealth'] = c3D['health'], this['transparent'] = c3D['transparent'], this['boost'] = c3D['boost'], this['boostDr'] = c3D['boostDr'], this['aoMlt'] = c3D['aoM'], this['team'] = c3D['team'], this['flag'] = c3D['flag'], this['trigger'] = c3D['trigger'], this['pickup'] = c3D['pickup'], this['orgPickup'] = c3D['orgPickup'], this['pickupRep'] = c3D['pickupRep'], this['meshRef'] = c3D['meshRef'], this['checkpoint'] = c3D['checkpoint'], this['singleUse'] = c3D['singleUse'], this['isBorder'] = c3D['isBorder'], this['node'] = c3D['node'], this['channel'] = c3D['channel'], this['teleporter'] = c3D['teleporter'], this['telCooldown'] = 0x0, this['propID'] = c3D['propID'], this['telStopMo'] = c3D['momentum'], this['noAmb'] = c3D['noAmb'], this['tRadius'] = c3D['tRadius'], this['gate'] = c3D['gate'], this['noMsg'] = c3D['noMsg'], this['method'] = c3D['method'], this['closeable'] = c3D['closeable'], this['triggerEvent'] = c3D['event'], this['triggerAction'] = c3D['action'], this['triggerConstant'] = c3D['constant'], c3D['eventN'] && (this[c3D['eventN']] = !0x0);
        };
    c3D['exports']['manager'] = function(c3D, c3E, c3I) {
        var c3O, c3P;
        c3D && (c3G = c3F(0x25)['prefabs'], c3H = c3F(0x4)), this['aoOpac'] = 0x0, this['objects'] = [], this['objectives'] = [], this['flags'] = [], this['pickups'] = [], this['gates'] = [], this['teleporters'] = [], this['collision'] = function(c3D, c3E, c3F) {
            return c3D['x'] - c3D['width'] - c3F <= c3E['x'] + c3E['width'] && c3D['x'] + c3D['width'] + c3F >= c3E['x'] - c3E['width'] && c3D['z'] - c3D['length'] - c3F <= c3E['z'] + c3E['length'] && c3D['z'] + c3D['length'] + c3F >= c3E['z'] - c3E['length'] && c3D['y'] - c3D['height'] - c3F <= c3E['y'] + c3E['height'] && c3D['y'] + c3D['height'] + c3F >= c3E['y'] - c3E['height'];
        }, this['checkPos'] = function(c3D, c3F, c3G, c3H, c3I) {
            for (var c3J = 0x0; c3J < this['objects']['length']; ++c3J)
                if (this['objects'][c3J] != c3H && this['objects'][c3J] != c3I && !this['objects'][c3J]['ramp'] && c3E['pointInBox3D'](c3D, c3F, c3G, this['objects'][c3J])) return !0x1;
            return !0x0;
        }, this['findByUid'] = function(c3D, c3E) {
            c3O = c3E || this['objects'];
            for (var c3F = 0x0; c3F < c3O['length']; ++c3F)
                if (c3O[c3F]['uid'] === c3D) return c3O[c3F];
            return null;
        }, this['findBySid'] = function(c3D, c3E) {
            c3O = c3E || this['objects'];
            for (var c3F = 0x0; c3F < c3O['length']; ++c3F)
                if (c3O[c3F]['sid'] === c3D) return c3O[c3F];
            return null;
        }, this['addCylinder'] = function(c3E, c3F, c3G, c3H, c3I, c3J) {
            c3D && (c3J['shadows'] = !0x0, c3D['addCylinder'](c3E, c3F, c3G, c3H, c3I, c3J));
        }, this['getZoneDat'] = function(c3D, c3E) {
            return {
                'src': 'zone_r',
                'texSrc': 'zone_' + (c3E && c3D == c3E['team'] ? 'b' : 'r'),
                'noGroup': !0x0,
                'mat': c3H['MeshBasicMaterial'],
                'transparent': !0x0,
                'depthWrite': !0x1,
                'side': 0x2
            };
        }, this['getFlagDat'] = function(c3D, c3E) {
            var c3F = c3E && c3D == c3E['team'] ? '1' : '0';
            return {
                'src': 'crystal_0',
                'texSrc': 'crystal_' + c3F,
                'noGroup': !0x0,
                'noShadow': !0x0,
                'noFog': !0x0,
                'emissive': '0' == c3F ? 0x853434 : 0x428a9d
            };
        }, this['addFlag'] = function(c3E, c3F, c3G, c3H) {
            var c3O = null;
            c3D && ((c3O = c3D['loadMesh'](this['getFlagDat'](c3H), c3E, c3F + c3I['flagOff'], c3G, 0x0, c3I['flagScale'], c3D['scene']))['layers']['set'](0x2), c3O['zoneMesh'] = c3D['addCube'](c3E, c3F, c3G, c3I['flagZoneS'], c3I['flagZoneH'], c3I['flagZoneS'], [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], this['getZoneDat'](c3H)));
            var c3P = new c3J({
                'uid': this['objects']['length'],
                'meshRef': c3O,
                'x': c3E,
                'z': c3G,
                'y': c3F + c3I['flagScale'] / 0x2 + c3I['flagOff'],
                'w': c3I['flagScale'],
                'l': c3I['flagScale'],
                'h': c3I['flagScale'] / 0x2,
                'team': c3H,
                'flag': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            this['flags']['push'](c3P), this['objects']['push'](c3P);
            var c4m = new c3J({
                'x': c3E,
                'z': c3G,
                'y': c3F + c3I['flagZoneH'] / 0x2,
                'w': c3I['flagZoneS'] / 0x2,
                'l': c3I['flagZoneS'] / 0x2,
                'h': c3I['flagZoneH'] / 0x2,
                'team': c3H,
                'trigger': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            c4m['flagObj'] = c3P, this['objects']['push'](c4m);
        }, this['addWeapon'] = function(c3E, c3F, c3G, c3H, c3O, c3P, c4t) {
            c3H = c3H || {};
            var c4u = null;
            c3D && ((c4u = c3D['loadMesh']({
                'src': 'weapons/' + c3H['weapon']['src'],
                'texSrc': 'weapons/' + c3H['weapon']['src'],
                'noGroup': !0x0,
                'noShadow': !0x0,
                'transparent': !0x0,
                'noFog': !0x0
            }, c3E, c3F + c3I['pickupOff'], c3G, 0x0, c3H['weapon']['scale'], c3D['scene']))['rotateY'](c3O || 0x0), c4u['rotateX']((c3P || 0x0) - Math['PI'] / 0x2), c4u['rotateZ'](c4t || 0x0));
            var c4v = new c3J({
                'uid': this['objects']['length'],
                'meshRef': c4u,
                'x': c3E,
                'z': c3G,
                'y': c3F + c3I['pickupZoneH'] / 0x2,
                'w': c3I['pickupZoneX'],
                'l': c3I['pickupZoneZ'],
                'h': 0x2 * c3I['pickupZoneH'],
                'pickup': c3H['weaponId'],
                'pickupRep': !c3H['noRep'],
                'orgPickup': c3H['weaponId'],
                'scoreP': c3H['scoreP'],
                'noMsg': c3H['noMsg'],
                'method': c3H['method'],
                'trigger': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            this['pickups']['push'](c4v), this['objects']['push'](c4v);
        }, this['addObjective'] = function(c3E, c3F, c3G, c3I, c3J, c3O) {
            var c3P;
            c3D && ((c3P = c3D['addCube'](c3E, c3F, c3G, c3I, c3O, c3J, [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], {
                'src': 'objective_0',
                'noGroup': !0x0,
                'mat': c3H['MeshBasicMaterial'],
                'transparent': !0x0,
                'depthWrite': !0x1,
                'side': 0x2
            }))['visible'] = !0x1), this['objectives']['push']({
                'x': c3E,
                'z': c3G,
                'y': c3F + c3O / 0x2,
                'mesh': c3P,
                'width': c3I / 0x2,
                'length': c3J / 0x2,
                'height': c3O / 0x2
            });
        }, this['addDeathZone'] = function(c3D, c3E, c3F, c3G, c3H, c3I) {
            this['objects']['push'](new c3J({
                'x': c3D,
                'z': c3F,
                'y': c3E + c3I / 0x2,
                'w': c3G / 0x2,
                'l': c3H / 0x2,
                'h': c3I / 0x2,
                'kill': !0x0,
                'noShoot': !0x0,
                'complexMesh': !0x0
            }));
        }, this['addScoreZone'] = function(c3D, c3E, c3F, c3G, c3H, c3I, c3O) {
            this['objects']['push'](new c3J({
                'x': c3D,
                'z': c3F,
                'y': c3E + c3I / 0x2,
                'w': c3G / 0x2,
                'l': c3H / 0x2,
                'h': c3I / 0x2,
                'score': !0x0,
                'scoreP': c3O,
                'noShoot': !0x0,
                'complexMesh': !0x0
            }));
        }, this['addCheckPoint'] = function(c3D, c3E, c3F, c3G, c3H, c3I, c3O, c3P) {
            this['objects']['push'](new c3J({
                'x': c3D,
                'z': c3F,
                'y': c3E + c3I / 0x2,
                'w': c3G / 0x2,
                'l': c3H / 0x2,
                'h': c3I / 0x2,
                'd': parseInt(c3P) || 0x0,
                'checkpoint': !0x0,
                'singleUse': c3O,
                'noShoot': !0x0,
                'complexMesh': !0x0
            }));
        }, this['addTeleporter'] = function(c3D, c3E, c3F, c3G, c3H, c3I, c3O, c3P, c56) {
            var c57 = new c3J({
                'uid': this['objects']['length'],
                'x': c3D,
                'z': c3F,
                'y': c3E + c3I / 0x2,
                'w': c3G / 0x2,
                'l': c3H / 0x2,
                'h': c3I / 0x2,
                'teleporter': !0x0,
                'channel': c3O || 0x0,
                'node': c3P || 0x0,
                'momentum': c56,
                'noShoot': !0x0,
                'complexMesh': !0x0
            });
            this['objects']['push'](c57), this['teleporters']['push'](c57);
        }, this['addGrass'] = function(c3E, c3F, c3G, c3I, c3J, c3O, c3P) {
            c3P = c3P || {}, c3D && !c3P['noVis'] && (c3P['side'] = c3H['DoubleSide'], c3P['transparent'] = !0x0, c3P['alphaTest'] = 0.2, c3P['vertexColors'] = c3H['VertexColors'], c3P['shadowsR'] = !0x0, c3P['noGroup'] = !!c3P['health'], c3D['addGrass'](c3E, c3F, c3G, c3I, c3J, c3O, c3P));
        }, this['addLadder'] = function(c3F, c3G, c3P, c5i, c5j, c5k, c5l, c5m) {
            var c5n = c3I['ladderScale'],
                c5o = c3I['ladderScale'];
            if (0x0 == c5j || c5j == Math['PI'] ? c5o = c3I['ladderWidth'] : c5n = c3I['ladderWidth'], c3O = new c3J({
                    'ladder': !0x0,
                    'complexMesh': !0x0,
                    'noShoot': !0x0,
                    'd': c5j,
                    'x': c3F + c3I['ladderScale'] * Math['cos'](c5j),
                    'z': c3P + c3I['ladderScale'] * Math['sin'](c5j),
                    'y': c3G,
                    'w': c5n,
                    'l': c5o,
                    'h': c5i
                }), this['objects']['push'](c3O), c3D && !c5k) {
                var c5p = {
                    'src': c5l || 'floor_0',
                    'vertexColors': c3H['VertexColors'],
                    'colr': c5m,
                    'scale': 0.02,
                    'amb': c3I['ambientVal'],
                    'shadows': !0x0
                };
                c3D['addCube'](c3O['x'] + c3I['ladderWidth'] * Math['sin'](c5j), c3O['y'], c3O['z'] + c3I['ladderWidth'] * Math['cos'](c5j), 0x2 * c3I['ladderScale'], c5i + 0x2, 0x2 * c3I['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c5p), c3D['addCube'](c3O['x'] - c3I['ladderWidth'] * Math['sin'](c5j), c3O['y'], c3O['z'] - c3I['ladderWidth'] * Math['cos'](c5j), 0x2 * c3I['ladderScale'], c5i + 0x2, 0x2 * c3I['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c5p);
                for (var c5q = Math['floor'](c5i / 0x6), c5r = 0x0; c5r < c5q; ++c5r) c5p['dark'] = 0.6 + c5r / c5q * 0.4, c3D['addPlane'](c3O['x'], c3G + 0x6 * (c5r + 0x1) + c3E['randFloat'](-0x1, 0x1), c3O['z'], c3I['ladderWidth'], c3I['ladderScale'], c5p, -c5j + Math['PI'] / 0x2, Math['PI'] / 0x2, c3E['randFloat'](-0.1, 0.1));
            }
        }, this['addRamp'] = function(c3E, c3F, c3G, c3O, c3P, c5x, c5y, c5z, c5A, c5B, c5C, c5D, c5E, c5F, c5G) {
            var c5H = 0x0 != c5y && c5y != Math['PI'],
                c5I = (c5H ? c5x : c3O) / 0x2,
                c5J = Math['sqrt'](c3P * c3P + c5x * c5x),
                c5K = Math['asin'](c3P / c5J);
            if (this['objects']['push'](new c3J({
                    'x': c3E,
                    'z': c3G,
                    'y': c3F + c3P / 0x2,
                    'w': c3O / 0x2,
                    'l': c5x / 0x2,
                    'h': c3P / 0x2,
                    'd': c5y,
                    'noShoot': !0x0,
                    'complexMesh': !0x0,
                    'boostDr': c5z ? c5K : null,
                    'boost': c5z || null,
                    'ramp': {
                        'sX': c3E - c5I * Math['cos'](c5y),
                        'sZ': c3G - c5I * Math['sin'](c5y),
                        'eX': c3E + c5I * Math['cos'](c5y),
                        'eZ': c3G + c5I * Math['sin'](c5y)
                    },
                    'noAmb': c5G
                })), c3D && !c5B) {
                var c5L = {
                    'src': c5A || 'default',
                    'vertexColors': c3H['VertexColors'],
                    'colr': c5C,
                    'scale': 0x1,
                    'shadowsR': !0x0,
                    'side': c3H['DoubleSide'],
                    'movT': c5E,
                    'movD': c5F
                };
                if (c5L['transparent'] = 'link_0' == c5L['src'], 'link_0' == c5L['src'] && (c5L['depthWrite'] = !0x0, c5L['alphaTest'] = c5L['transparent'] ? 0.02 : 0x0), c3D['addRamp'](c3E, c3F, c3G, c5H ? c3O : c5x, c3P, (c5H ? c5x : c3O) / 0x2, c5y, c5L), !c5G) {
                    c3F += c3I['ambOff'];
                    var c5M = (c5H ? c3O : c5x) / 0x2 - c5D;
                    c5H ? c3O = 0x2 * c5D : c5x = 0x2 * c5D;
                    for (var c5N, c5O = 0x0; 0x2 > c5O; ++c5O) c5N = c5O ? 0x1 : -0x1, c3D['addRamp'](c3E + c5M * c5N * Math['cos'](c5y + Math['PI'] / 0x2), c3F, c3G + c5M * c5N * Math['sin'](c5y + Math['PI'] / 0x2), c5H ? c3O : c5x, c3P, (c5H ? c5x : c3O) / 0x2, c5y, {
                        'src': 'ambient_1',
                        'euler': 'ZYX',
                        'depthWrite': !0x1,
                        'transparent': !0x0,
                        'side': c3H['DoubleSide']
                    }, c5O ? 0x0 : Math['PI']);
                }
            }
        }, this['addGate'] = function(c3E, c3F, c3G, c3I, c3O, c3P, c5V) {
            (c5V = c5V || {})['src'] = c5V['src'] || 'wall_0';
            var c5W = new c3J({
                'x': c3E,
                'z': c3G,
                'y': c3F + c3P / 0x2,
                'w': c3I / 0x2,
                'l': c3O / 0x2,
                'h': c3P / 0x2,
                'uid': this['objects']['length'],
                'src': c5V['src'],
                'noVis': c5V['noVis'],
                'noAmb': c5V['noAmb'],
                'transparent': c5V['transparent'],
                'penetrable': c5V['penetrable'],
                'isBorder': c5V['isBorder'],
                'complexMesh': c5V['xR'] || c5V['yR'] || c5V['zR'] || 'link_0' == c5V['src'],
                'ter': !0x0,
                'tRadius': 0x7,
                'gate': !0x0,
                'scoreP': c5V['scoreP'],
                'noMsg': c5V['noMsg'],
                'method': c5V['method'],
                'closeable': c5V['closeable']
            });
            if (c3D && !c5V['noVis']) {
                c5V['transparent'] = 'link_0' == c5V['src'] || 0x1 != c5V['opacity'], 'link_0' == c5V['src'] && (c5V['depthWrite'] = 0x1 == c5V['opacity'], c5V['alphaTest'] = c5V['transparent'] ? 0.02 : 0x0), c5V['vertexColors'] = c3H['VertexColors'], c5V['scale'] = null == c5V['scale'] ? 0x1 : c5V['scale'], c5V['shadows'] = !c5V['shadowsR'] && 0x1 == c5V['opacity'], c5V['noFog'] = !!c5V['emissive'], c5V['noGroup'] = !0x0;
                var c5X = c3D['addCube'](c3E, c3F, c3G, c3I, c3P, c3O, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c5V);
                c5W['meshRef'] = c5X;
            }
            this['objects']['push'](c5W), this['gates']['push'](c5W);
        }, this['addTrigger'] = function(c3E, c3F, c3G, c3I, c3O, c3P, c64) {
            (c64 = c64 || {})['src'] = c64['src'] || 'wall_0';
            var c65 = new c3J({
                'x': c3E,
                'z': c3G,
                'y': c3F + c3P / 0x2,
                'w': c3I / 0x2,
                'l': c3O / 0x2,
                'h': c3P / 0x2,
                'uid': this['objects']['length'],
                'src': c64['src'],
                'noVis': c64['noVis'],
                'noAmb': c64['noAmb'],
                'transparent': c64['transparent'],
                'complexMesh': c64['xR'] || c64['yR'] || c64['zR'] || 'link_0' == c64['src'],
                'ter': !0x0,
                'constant': c64['constant'],
                'eventN': c64['eventN'],
                'event': c64['event'],
                'action': c64['action']
            });
            c3D && !c64['noVis'] && (c64['transparent'] = 'link_0' == c64['src'] || 0x1 != c64['opacity'], 'link_0' == c64['src'] && (c64['depthWrite'] = 0x1 == c64['opacity'], c64['alphaTest'] = c64['transparent'] ? 0.02 : 0x0), c64['vertexColors'] = c3H['VertexColors'], c64['scale'] = null == c64['scale'] ? 0x1 : c64['scale'], c64['shadows'] = !c64['shadowsR'] && 0x1 == c64['opacity'], c64['noFog'] = !!c64['emissive'], c64['noGroup'] = !0x0, c3D['addCube'](c3E, c3F, c3G, c3I, c3P, c3O, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c64)), this['objects']['push'](c65);
        }, this['addBlock'] = function(c3E, c3F, c3G, c3I, c3O, c3P, c6c, c6d) {
            if ((c6d = c6d || {})['src'] = c6d['src'] || 'wall_0', c6d['noCol'] || this['objects']['push'](new c3J({
                    'x': c3E,
                    'z': c3G,
                    'y': c3F + c3P / 0x2,
                    'w': c3I / 0x2,
                    'l': c3O / 0x2,
                    'h': c3P / 0x2,
                    'uid': this['objects']['length'],
                    's': c6d['sound'],
                    'src': c6d['src'],
                    'noVis': c6d['noVis'],
                    'noAmb': c6d['noAmb'],
                    'health': c6d['health'],
                    'transparent': c6d['transparent'],
                    'penetrable': c6d['penetrable'],
                    'isBorder': c6d['isBorder'],
                    'complexMesh': c6d['xR'] || c6d['yR'] || c6d['zR'] || 'link_0' == c6d['src'],
                    'ter': !0x0,
                    'trigger': c6d['trig']
                })), c3D && !c6d['noVis']) {
                c6d['transparent'] = 'link_0' == c6d['src'] || 0x1 != c6d['opacity'], 'link_0' == c6d['src'] && (c6d['depthWrite'] = 0x1 == c6d['opacity'], c6d['alphaTest'] = c6d['transparent'] ? 0.02 : 0x0), c6d['vertexColors'] = c3H['VertexColors'], c6d['scale'] = null == c6d['scale'] ? 0x1 : c6d['scale'], c6d['shadows'] = !c6d['shadowsR'] && 0x1 == c6d['opacity'], c6d['noFog'] = !!c6d['emissive'], c6d['noGroup'] = !!c6d['health'];
                var c6e = c3D['addCube'](c3E, c3F, c3G, c3I, c3P, c3O, c6c, c6d);
                c6d['health'] && !c6d['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c6e);
            }
        }, this['addCanvas'] = function(c3F, c3G, c3I, c3J, c3O, c3P, c6l, c6m, c6n) {
            c3P = c3P || {}, c3D && (c3P['canvas'] = c3E['createCanvasText'](0x2 * c3O, 0x2 * c3J, c3P['text'] || 'Hello\x20World', c3P['fontSize'] || 0xa, c3P['fcolr'] || '#000', c3P['bcolr'] || '#fff', c3P['noBVis'], c3P['tAlign'] || 0x0), c3P['transparent'] = !0x0, c3P['depthWrite'] = !0x0, c3P['alphaTest'] = 0.02, c3P['side'] = c3H['DoubleSide'], c3D['addPlane'](c3F, c3G, c3I, c3O, c3J, c3P, c6l, (c6m || 0x0) + Math['PI'] / 0x2, c6n));
        }, this['addMesh'] = function(c3F, c3O, c3P, c6r, c6s, c6t, c6u, c6v) {
            if (c3O += c6t, (c6v = c6v || {})['noCol'] || this['objects']['push'](new c3J({
                    'complexMesh': !!c3G && c3G[c6v['src']['toUpperCase']()]['complex'],
                    'aoM': c3G && c3G[c6v['src']['toUpperCase']()]['aoMlt'] || 0x0,
                    'propID': 0x0 <= c3I['propsH']['indexOf'](c6v['src']) ? c6v['src'] : null,
                    'x': c3F,
                    'z': c3P,
                    'y': c3O,
                    'w': c6s,
                    'l': c6u,
                    'h': c6t,
                    'uid': this['objects']['length'],
                    'ter': !0x0,
                    'noVis': c6v['noVis'],
                    'noAmb': c6v['noAmb'],
                    'health': c6v['health']
                })), c3G && c3G[c6v['src']['toUpperCase']()]['transparent'] && (c3O += c3E['randFloat'](-0.01, 0.01)), c3D && !c6v['noVis']) {
                var c6w = c3D['loadMesh']({
                    'src': c6v['src'] + '_0',
                    'emissive': c3G[c6v['src']['toUpperCase']()]['emiss'] ? 0xffffff : null,
                    'side': c3G[c6v['src']['toUpperCase']()]['doubleSide'] ? c3H['DoubleSide'] : c3H['FrontSide'],
                    'transparent': c3G[c6v['src']['toUpperCase']()]['transparent'],
                    'shadows': c3G[c6v['src']['toUpperCase']()]['castShadow'],
                    'shadowsR': c3G[c6v['src']['toUpperCase']()]['receiveShadow'],
                    'vertexColors': c3H['VertexColors'],
                    'color': c6v['colr'] || 0xffffff,
                    'noGroup': !!c6v['health']
                }, c3F, c3O, c3P, c6r, c3I[c6v['src'] + 'Scale'], c3D['scene'], !c6v['health']);
                c6v['health'] && !c6v['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c6w);
            }
        };
        var c6x = [];
        this['addNoisePlanes'] = function() {
            for (var c3E = 0x0; c3E < c6x['length']; ++c3E) c6x[c3E][0x5]['objects'] = this['objects'], c3D['addPlane'](...c6x[c3E]);
            c6x['length'] = 0x0;
        }, this['addPlane'] = function(c3E, c3F, c3G, c3I, c3O, c3P, c6F, c6G, c6H) {
            if ((c3P = c3P || {})['noCol'] || this['objects']['push'](new c3J({
                    'x': c3E,
                    'z': c3G,
                    'y': c3F,
                    'w': c3O,
                    'l': c3I,
                    'h': 0x0,
                    's': c3P['sound'],
                    'health': c3P['health'],
                    'transparent': c3P['transparent'],
                    'penetrable': c3P['penetrable'],
                    'noVis': c3P['noVis'],
                    'noAmb': c3P['noAmb']
                })), c3D && !c3P['noVis']) {
                c3P['transparent'] = !0x0, c3P['side'] = c3H['DoubleSide'], c3P['vertexColors'] = c3H['VertexColors'], c3P['noise'] && (c3P['pinEdges'] = !0x0, c3P['margin'] = 0x1, c3P['tilesX'] = Math['round'](c3O / 0x5), c3P['tilesZ'] = Math['round'](c3I / 0x5));
                var c6I = [c3E, c3F, c3G, c3O, c3I, c3P, c6F, (c6G || 0x0) + Math['PI'] / 0x2, c6H];
                if (!c3P['noise']) return c3D['addPlane'](...c6I);
                c6x['push'](c6I);
            }
        }, this['pointInObjs'] = function(c3D, c3F, c3G) {
            for (var c3H = 0x0; c3H < this['objects']['length']; ++c3H)
                if (!(c3O = this['objects'][c3H])['noVis'] && !c3O['complexMesh'] && !c3O['health'] && 0x0 > c3F['indexOf'](c3O['sid']) && c3E['pointInBox3D'](c3D[0x0], c3D[0x1], c3D[0x2], c3O, c3G || 0x0)) return !0x0;
            return !0x1;
        }, this['setMaxAO'] = function(c3D, c3E, c3F) {
            c3D['maxAOS'] = c3D['maxAOS'] || {}, c3D['maxAOS'][c3E['sid']] = Math['max'](c3F, c3D['maxAOS'][c3E['sid']] || 0x0), c3E['maxAOS'] = c3E['maxAOS'] || {}, c3E['maxAOS'][c3D['sid']] = Math['max'](c3F, c3E['maxAOS'][c3D['sid']] || 0x0);
        }, this['aosToAdd'] = {}, this['addAmbient'] = function(c3D, c3F, c3G, c3H, c3J, c3O, c3P, c6x, c6Y, c6Z, c70) {
            var c71 = !c6Z;
            if (c6Z)
                for (var c72 = 0x0; c72 < c6Z['length']; ++c72)
                    if (c3E['pointInBox3D'](c3D, c3F, c3G, c6Z[c72], 0x2 * c3I['ambOff'])) {
                        c71 = !0x0;
                        break;
                    }
            if (c71)
                if (c6Z) {
                    var c73 = c6Z[0x0]['sid'] + '-' + c6Z[0x1]['sid'];
                    this['aosToAdd'][c73] || (this['aosToAdd'][c73] = []), this['aosToAdd'][c73]['push']({
                        'vals': [c3D, c3F, c3G, c3H, c3J, c3O, c3P + c3I['ambOff'], c6x + c3I['ambOff'], c6Y],
                        'group': c70
                    });
                } else this['addPlane'](c3D, c3F, c3G, c3P, c6x, {
                    'src': 'ambient_' + (c6Y || 0x0),
                    'euler': 'ZYX',
                    'depthWrite': !0x1,
                    'noCol': !0x0
                }, c3H, c3J, c3O);
        };
        var c74 = [
            ['g6-1-2', 'g4-1-2'],
            ['g5-1-2', 'g4-0-1'],
            ['g6-0-1', 'g3-1-2'],
            ['g5-0-1', 'g3-0-1'],
            ['g6-0-3', 'g2-0-3'],
            ['g5-0-3', 'g2-1-1'],
            ['g6-1-1', 'g1-0-3'],
            ['g5-1-1', 'g1-1-1'],
            ['g6-0-2', 'g1-1-0'],
            ['g5-0-2', 'g1-0-2'],
            ['g6-1-0', 'g2-1-0'],
            ['g5-1-0', 'g2-0-2'],
            ['g4-0-2', 'g1-0-0'],
            ['g3-0-2', 'g1-1-3'],
            ['g4-1-0', 'g2-0-0'],
            ['g3-1-0', 'g2-1-3'],
            ['g4-0-3', 'g2-1-2'],
            ['g3-0-3', 'g2-0-1'],
            ['g4-1-1', 'g1-1-2'],
            ['g3-1-1', 'g1-0-1'],
            ['g6-1-3', 'g3-0-0'],
            ['g5-1-3', 'g3-1-3'],
            ['g6-0-0', 'g4-0-0'],
            ['g5-0-0', 'g4-1-3']
        ];
        this['groupsMatch'] = function(c3D, c3E) {
            for (var c3F = 0x0; c3F < c74['length']; ++c3F)
                if (0x0 <= c74[c3F]['indexOf'](c3D) && 0x0 <= c74[c3F]['indexOf'](c3E)) return !0x0;
            return !0x1;
        }, this['clearAOGroup'] = function(c3D) {
            for (var c3E = c3D['length'] - 0x1; 0x0 <= c3E; --c3E) {
                c3O = c3D[c3E];
                for (var c3F = c3D['length'] - 0x1; 0x0 <= c3F; --c3F)
                    if (c3P = c3D[c3F], !c3O['dontAdd'] && !c3P['dontAdd'] && c3O != c3P && this['groupsMatch'](c3O['group'], c3P['group'])) {
                        c3O['vals'][0x6] + c3O['vals'][0x7] >= c3P['vals'][0x6] + c3P['vals'][0x7] ? c3P['dontAdd'] = !0x0 : c3O['dontAdd'] = !0x0;
                        break;
                    }
            }
        }, this['addPendingAOs'] = function() {
            for (var c3D in this['aosToAdd'])
                if (this['aosToAdd']['hasOwnProperty'](c3D)) {
                    this['clearAOGroup'](this['aosToAdd'][c3D]);
                    for (var c3E = 0x0; c3E < this['aosToAdd'][c3D]['length']; ++c3E) this['aosToAdd'][c3D][c3E]['dontAdd'] || this['addAmbient'](...this['aosToAdd'][c3D][c3E]['vals']);
                }
            this['aosToAdd'] = {};
        }, this['limitAmb'] = function(c3D, c3F, c3G, c3H, c3I, c3J, c3O) {
            var c3P = [c3E['cdv'][c3H]],
                c6x = [c3E['cdv'][c3I]];
            return c3D = c3G == -Math['PI'] / 0x2 || c3G == Math['PI'] + Math['PI'] / 0x2 ? Math['min'](c3D, (c3F[c3I] - Math['min'](c3J[c3I] - c3J[c6x], c3O[c3I] - c3O[c6x])) / 0x2) : c3G == Math['PI'] / 0x2 ? Math['min'](c3D, (Math['max'](c3J[c3I] + c3J[c6x], c3O[c3I] + c3O[c6x]) - c3F[c3I]) / 0x2) : 0x0 == c3G ? Math['min'](c3D, (Math['max'](c3J[c3H] + c3J[c3P], c3O[c3H] + c3O[c3P]) - c3F[c3H]) / 0x2) : Math['min'](c3D, (c3F[c3H] - Math['min'](c3J[c3H] - c3J[c3P], c3O[c3H] - c3O[c3P])) / 0x2);
        }, this['resetAll'] = function() {
            this['aosToAdd'] = {};
            for (var c3E = 0x0; c3E < this['objects']['length']; ++c3E) this['objects'][c3E]['active'] = !0x0, this['objects'][c3E]['startHealth'] && (this['objects'][c3E]['health'] = this['objects'][c3E]['startHealth']), this['objects'][c3E]['meshRef'] && (this['objects'][c3E]['meshRef']['visible'] = !0x0);
            c3D && c3D['updateShadowMap']();
        }, this['removeAll'] = function() {
            this['objects']['length'] = 0x0, this['objectives']['length'] = 0x0, this['flags']['length'] = 0x0, this['pickups']['length'] = 0x0, this['teleporters']['length'] = 0x0;
        };
    };
}, function(c7n, c7o) {
    c7n['exports'] = [{
        'name': 'Triggerman',
        'loadout': [0x1],
        'secondary': !0x0,
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x6c5042, 0xbfbfbf],
        'health': 0x64,
        'segs': 0x6,
        'speed': 1.05
    }, {
        'name': 'Hunter',
        'loadout': [0x0],
        'secondary': !0x0,
        'colors': [0xa77860, 0x7b573d, 0x634732, 0x282828, 0x634732, 0x3d2b1d],
        'health': 0x3c,
        'segs': 0x5,
        'speed': 1.05
    }, {
        'name': 'Run\x20N\x20Gun',
        'loadout': [0x3],
        'colors': [0xa77860, 0x3e6382, 0x2f4b63, 0x282828, 0x634732, 0x1a2b3a],
        'health': 0x64,
        'segs': 0x6,
        'speed': 1.18
    }, {
        'name': 'Spray\x20N\x20Pray',
        'loadout': [0x6],
        'txts': ['Calling\x20in\x20the\x20Big\x20Guns?', 'Remember\x20-\x20No\x20Russian.', 'Pesky\x20Snipers...'],
        'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x303827],
        'health': 0xaa,
        'segs': 0x7,
        'regen': 0.05,
        'speed': 0x1
    }, {
        'name': 'Vince',
        'loadout': [0x5],
        'secondary': !0x0,
        'colors': [0x805c4a, 0x545267, 0x3f3d4d, 0x282828, 0x282828, 0x292833],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Detective',
        'loadout': [0x4],
        'colors': [0xa77860, 0x704e36, 0x434c5e, 0x282828, 0x634732, 0x3f2c1e],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Marksman',
        'loadout': [0x7],
        'secondary': !0x0,
        'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x293022],
        'health': 0x5a,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Rocketeer',
        'loadout': [0x8],
        'secondary': !0x0,
        'txts': ['...'],
        'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x6c5042, 0x2b3324],
        'health': 0x82,
        'segs': 0x7,
        'speed': 0.86
    }, {
        'name': 'Agent',
        'loadout': [0x9],
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0xbfbfbf],
        'health': 0x64,
        'segs': 0x6,
        'speed': 1.2
    }, {
        'name': 'Runner',
        'txts': ['You\x20sure\x20about\x20this?', '...', 'Oh\x20boy', 'I\x20don\x27t\x20know\x20about\x20this...', 'Not\x20me\x20again...'],
        'loadout': [0xc],
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
        'health': 0x64,
        'segs': 0x6,
        'regen': 0.2,
        'speed': 0x1
    }, {
        'name': 'Deagler',
        'hide': !0x0,
        'loadout': [0xa],
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
        'health': 0x3c,
        'segs': 0x5,
        'speed': 0x1
    }, {
        'name': 'Bowman',
        'loadout': [0xd],
        'secondary': !0x0,
        'colors': [0xa77860, 0x916c52, 0x60432e, 0x282828, 0x282828, 0x473527],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }, {
        'name': 'Commando',
        'loadout': [0xe],
        'secondary': !0x0,
        'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x995c2c, 0x171717],
        'health': 0x64,
        'segs': 0x6,
        'speed': 0x1
    }];
}, function(c7p, c7q) {
    c7p['exports']['wheels'] = [{
        'name': 'Starter',
        'lab': {
            'nm': 'Any',
            'col': '#E040FB'
        },
        'price': 0x32,
        'rarities': [0x4b, 0x16, 0x3, 0x0, 0x0, 0x0]
    }, {
        'name': 'Elite',
        'lab': {
            'nm': 'Any',
            'col': '#E040FB'
        },
        'price': 0x64,
        'rarities': [0x32, 0x1e, 0xf, 0x5, 0x0, 0x0]
    }, {
        'name': 'Heroic',
        'lab': {
            'nm': 'Any',
            'col': '#E040FB'
        },
        'price': 0x1f4,
        'rarities': [0x0, 0x30, 0x23, 0xe, 2.5, 0.5]
    }, {
        'name': 'Hunter',
        'lab': {
            'nm': 'Snipers\x20Only!',
            'col': '#fab640'
        },
        'itemTypes': [0x0],
        'weaponType': 0x1,
        'price': 0x258,
        'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
    }, {
        'name': 'Attire',
        'lab': {
            'nm': 'Outfits\x20Only!',
            'col': '#ed4242'
        },
        'itemTypes': [0x1, 0x2],
        'price': 0x2ee,
        'rarities': [0x2b, 0x21, 0x10, 0x6, 0x2, 0x0]
    }, {
        'name': 'Free',
        'free': !0x0,
        'openURL': !0x0,
        'minLvl': 0x5,
        'price': 0x0,
        'priceT': 'Follow\x20for\x20a\x20free\x20Spin',
        'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
    }], c7p['exports']['types'] = ['weapons/weapon_', 'hats/hat_', 'body/body_', 'melee/melee_'], c7p['exports']['purchases'] = [{
        'val': 0x12c,
        'price': 0.99
    }, {
        'val': 0x258,
        'price': 1.79
    }, {
        'val': 0xa28,
        'tag': 'Popular!',
        'tagCol': '#ed4242',
        'price': 7.49
    }, {
        'val': 0x1b58,
        'tag': '20%\x20Off',
        'tagCol': '#E040FB',
        'price': 15.99
    }, {
        'val': 0x4e20,
        'tag': '30%\x20Off',
        'tagCol': '#fab640',
        'price': 34.99
    }], c7p['exports']['rarities'] = [{
        'name': 'Uncommon',
        'rar': 0x3c,
        'color': '#b2f252'
    }, {
        'name': 'Rare',
        'rar': 0x28,
        'color': '#2196F3'
    }, {
        'name': 'Epic',
        'rar': 0x19,
        'color': '#E040FB'
    }, {
        'name': 'Legendary',
        'rar': 0xa,
        'color': '#FBC02D'
    }, {
        'name': 'Relic',
        'rar': 2.5,
        'color': '#ed4242'
    }, {
        'name': 'Contraband',
        'rar': 0.5,
        'color': '#292929'
    }, {
        'name': 'Unobtainable',
        'noSpin': !0x0,
        'rar': 0x0,
        'color': '#fff53d'
    }], c7p['exports']['previews'] = {
        1: {
            'xOff': -0x2,
            'yOff': -2.6,
            'zRota': 0.2,
            'scl': 0.001376794727638135
        },
        2: {
            'xOff': -1.4,
            'yOff': -0.8,
            'scl': 0.001148941748743716
        },
        3: {
            'xOff': 0x0,
            'yOff': 0x1,
            'scl': 0.000676917226130652
        },
        4: {
            'xOff': -1.5,
            'yOff': 0.5,
            'scl': 0.000940741507537686
        },
        5: {
            'xOff': -0.8,
            'yOff': 0.5,
            'scl': 0x2
        },
        6: {
            'xOff': -0x1,
            'scl': 0.00099521137688442
        },
        7: {
            'xOff': -0x1,
            'yOff': -0.9,
            'scl': 0.001221518472361808
        },
        8: {
            'xOff': -0x1,
            'yOff': -0.6,
            'scl': 0.0012179208743718641
        },
        9: {
            'xOff': -1.2,
            'yOff': -0x1,
            'scl': 0.0010676876984924638
        },
        10: {
            'scl': 1.6
        },
        15: {
            'scl': 0.00098426884422111
        }
    }, c7p['exports']['skins'] = [{
        'name': 'Arctic\x20Hunt',
        'id': 0x0,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Hunt',
        'id': 0x1,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Reticle\x20Blaze',
        'id': 0x2,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20Hunt',
        'id': 0x3,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Moon\x20Dragon',
        'id': 0x4,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Scharfschütze',
        'id': 0x5,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20Sniper',
        'id': 0x6,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Reticle',
        'id': 0x7,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Reticle',
        'id': 0x8,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Seafarer',
        'id': 0x9,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Acid\x20Breath',
        'glow': !0x0,
        'id': 0xa,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Trail\x20Scout',
        'id': 0xb,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20AK',
        'id': 0x0,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20AK',
        'id': 0x1,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20AK',
        'id': 0x2,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20AK',
        'id': 0x3,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Luna\x20Dragon',
        'id': 0x4,
        'weapon': 0x2,
        'rarity': 0x3
    }, {
        'name': 'Flecken\x20AK',
        'id': 0x5,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20AK',
        'id': 0x6,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20AK',
        'id': 0x7,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20AK',
        'id': 0x8,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20AK',
        'id': 0x9,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20AK',
        'id': 0xa,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Arctic',
        'id': 0x0,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Autumn',
        'id': 0x1,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Blaze',
        'id': 0x2,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Digital',
        'id': 0x3,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Flecken',
        'id': 0x4,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Woodland',
        'id': 0x5,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Hazard',
        'id': 0x6,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Kodac',
        'id': 0x7,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Seafarer',
        'id': 0x8,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Trail',
        'id': 0x9,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20Python',
        'id': 0x0,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Python',
        'id': 0x1,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20Python',
        'id': 0x2,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20Python',
        'id': 0x3,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20Python',
        'id': 0x4,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Woodland',
        'id': 0x5,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Python',
        'id': 0x6,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Python',
        'id': 0x7,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Seafarer',
        'id': 0x8,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20Python',
        'id': 0x9,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20Slug',
        'id': 0x0,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Slug',
        'id': 0x1,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Twin\x20Blaze',
        'id': 0x2,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'SG\x20Digital',
        'id': 0x3,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Flecken',
        'id': 0x4,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Woodland',
        'id': 0x5,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Slug',
        'id': 0x6,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Slug',
        'id': 0x7,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Buccaneer',
        'id': 0x8,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'SG\x20Trail',
        'id': 0x9,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20LMG',
        'id': 0x0,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20LMG',
        'id': 0x1,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20LMG',
        'id': 0x2,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20LMG',
        'id': 0x3,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20LMG',
        'id': 0x4,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20LMG',
        'id': 0x5,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20LMG',
        'id': 0x6,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20LMG',
        'id': 0x7,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20LMG',
        'id': 0x8,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20LMG',
        'id': 0x9,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Arctic\x20Auto',
        'id': 0x0,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Auto',
        'id': 0x1,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20Auto',
        'id': 0x2,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20Auto',
        'id': 0x3,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20Auto',
        'id': 0x4,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20Auto',
        'id': 0x5,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20Auto',
        'id': 0x6,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Auto',
        'id': 0x7,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20Auto',
        'id': 0x8,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20Auto',
        'id': 0x9,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Mach\x20Auto',
        'id': 0xa,
        'creator': 'AtarSt',
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Arctic\x20RL',
        'id': 0x0,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20RL',
        'id': 0x1,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Blaze\x20RL',
        'id': 0x2,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20RL',
        'id': 0x3,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Flecken\x20RL',
        'id': 0x4,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Woodland\x20RL',
        'id': 0x5,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Hazard\x20RL',
        'id': 0x6,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20RL',
        'id': 0x7,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20RL',
        'id': 0x8,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Trail\x20RL',
        'id': 0x9,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': '101\x20Skullbreaker',
        'id': 0xc,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Reticle\x20Faded',
        'id': 0xd,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20Sniper',
        'id': 0xe,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Scoped\x20Elite',
        'id': 0xf,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Faded\x20AK',
        'id': 0xb,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20AR',
        'id': 0xc,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Fade',
        'id': 0xa,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Puma',
        'id': 0xb,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20Python',
        'id': 0xa,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20Python',
        'id': 0xb,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'SG\x20Fade',
        'id': 0xa,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Slug\x20Puma',
        'id': 0xb,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20LMG',
        'id': 0xa,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20LMG',
        'id': 0xb,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20MMR',
        'id': 0xb,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20MMR',
        'id': 0xc,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Faded\x20RTL',
        'id': 0xa,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Puma\x20RTL',
        'id': 0xb,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Scoped\x20Carbon',
        'id': 0x10,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20AK',
        'id': 0xd,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Carbon',
        'id': 0xc,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20Python',
        'id': 0xc,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'SG\x20Carbon',
        'id': 0xc,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20LMG',
        'id': 0xc,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20MMR',
        'id': 0xd,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Carbon\x20RTL',
        'id': 0xc,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Neon\x20Ripper',
        'id': 0xe,
        'glow': !0x0,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'Top\x20Hat',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x4,
        'id': 0x1,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Spitfire',
        'id': 0xd,
        'weapon': 0x4,
        'rarity': 0x3
    }, {
        'name': 'Cowboy\x20Hat',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'id': 0x0,
        'rarity': 0x0
    }, {
        'name': 'Flame\x20Tamer',
        'id': 0xd,
        'weapon': 0x5,
        'glow': !0x0,
        'rarity': 0x4
    }, {
        'name': 'Cool\x20Cap',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Jack\x20O\x27\x20Lantern',
        'type': 0x1,
        'scl': 2.8,
        'glow': !0x0,
        'sclMlt': 1.4,
        'sitOff': 2.05,
        'yOff': -0x4,
        'id': 0x3,
        'rarity': 0x3
    }, {
        'name': 'Medic\x20Helmet',
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -2.5,
        'id': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Neon\x20Reaver',
        'creator': 'Electrode_',
        'id': 0x11,
        'glow': !0x0,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Sun\x20Glasses',
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0x1,
        'sitOff': 2.3,
        'yOff': -0x5,
        'xOff': 0x2,
        'id': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Afro',
        'type': 0x1,
        'scl': 0x2,
        'sclMlt': 0.9,
        'sitOff': 1.4,
        'yOff': -0x4,
        'id': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Hard\x20Hat',
        'type': 0x1,
        'scl': 0x3,
        'sitOff': 0.4,
        'yOff': -0x3,
        'id': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Zombie\x20Head',
        'type': 0x1,
        'scl': 2.8,
        'glow': !0x0,
        'sclMlt': 1.2,
        'sitOff': 2.05,
        'yOff': -0x4,
        'id': 0x8,
        'rarity': 0x3
    }, {
        'name': 'Barbed\x20Rifle',
        'id': 0x12,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20Sniper',
        'id': 0x13,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'AWP\x20Mech',
        'id': 0x14,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20Rifle',
        'id': 0x15,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Scoped\x20Tuscan',
        'id': 0x16,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'AWP\x20Pacemaker',
        'id': 0x17,
        'weapon': 0x1,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'AR\x20Wired',
        'id': 0xf,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20AK',
        'id': 0x10,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Mach\x20Rifle',
        'id': 0x11,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20Rifle',
        'id': 0x12,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'AR\x20Tuscan',
        'id': 0x13,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Barbed',
        'id': 0xe,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Blossom',
        'id': 0xf,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Machinist',
        'id': 0x10,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Lazarus',
        'id': 0x11,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Tuscan',
        'id': 0x12,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Barbed\x20Python',
        'id': 0xe,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20Revolver',
        'id': 0xf,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Machinist\x20Python',
        'id': 0x10,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'REV\x20Olympus',
        'id': 0x11,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20Revolver',
        'id': 0x12,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Coach\x20Barb',
        'id': 0xd,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Blossom',
        'id': 0xe,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'MD\x20Frag',
        'id': 0xf,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'SG\x20Olympus',
        'id': 0x10,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'SG\x20Tuscan',
        'id': 0x11,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Blushed\x20LMG',
        'id': 0xd,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Machinist\x20LMG',
        'id': 0xe,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20LMG',
        'id': 0xf,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20LMG',
        'id': 0x10,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Barbed\x20Auto',
        'id': 0xe,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20MMA',
        'id': 0xf,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Auto\x20Machinist',
        'id': 0x10,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20MMA',
        'id': 0x11,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20MMA',
        'id': 0x12,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Barbed\x20Launcher',
        'id': 0xd,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Blushed\x20Launcher',
        'id': 0xe,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Machinist\x20Launcher',
        'id': 0xf,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Olympus\x20Launcher',
        'id': 0x10,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Tuscan\x20Launcher',
        'id': 0x11,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Omen',
        'glow': !0x0,
        'id': 0x18,
        'creator': 'Zino',
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Scoped\x20Moss',
        'id': 0x19,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Swamped\x20Scope',
        'id': 0x1a,
        'weapon': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Bolt',
        'id': 0x1b,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Bolt',
        'id': 0x1c,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Necron\x20Bolt',
        'id': 0x1d,
        'weapon': 0x1,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20Bolt',
        'id': 0x1e,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Bolt',
        'id': 0x1f,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'AWP\x20Iris',
        'id': 0x20,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Bolt\x20Wanderer',
        'id': 0x21,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'Mossy\x20Rifle',
        'id': 0x14,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20AK',
        'id': 0x15,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Rifle',
        'id': 0x16,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Rifle',
        'id': 0x17,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Plasma\x20Rifle',
        'id': 0x18,
        'weapon': 0x2,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20Rifle',
        'id': 0x19,
        'weapon': 0x2,
        'glow': !0x0,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Rifle',
        'id': 0x1a,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20AK',
        'id': 0x1b,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Rifle\x20Wanderer',
        'id': 0x1c,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Growth',
        'id': 0x13,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'SMG\x20Marsh',
        'id': 0x14,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Tigris',
        'id': 0x15,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Safari',
        'id': 0x16,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Rapid\x20Plasma',
        'id': 0x17,
        'weapon': 0x4,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20SMG',
        'id': 0x18,
        'weapon': 0x4,
        'rarity': 0x3,
        'glow': !0x0
    }, {
        'name': 'UMP\x20Atmos',
        'id': 0x19,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Birch\x20SMG',
        'id': 0x1a,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Wanderer',
        'id': 0x1b,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Mossy\x20Python',
        'id': 0x13,
        'weapon': 0x5,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20Revolver',
        'id': 0x14,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Python',
        'id': 0x15,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Python',
        'id': 0x16,
        'weapon': 0x5,
        'rarity': 0x2
    }, {
        'name': 'Venomous',
        'creator': 'Rengar',
        'glow': !0x0,
        'id': 0x17,
        'weapon': 0x5,
        'rarity': 0x3
    }, {
        'name': 'Lava\x20Revolver',
        'id': 0x18,
        'weapon': 0x5,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Python',
        'id': 0x19,
        'weapon': 0x5,
        'rarity': 0x2,
        'glow': !0x0
    }, {
        'name': 'Bark\x20Python',
        'id': 0x1a,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Wanderer\x20Python',
        'id': 0x1b,
        'weapon': 0x5,
        'rarity': 0x0
    }, {
        'name': 'Gabrand',
        'id': 0x13,
        'weapon': 0x6,
        'rarity': 0x1
    }, {
        'name': 'Tennessee',
        'id': 0x14,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'SG\x20Tigris',
        'id': 0x15,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Safaris',
        'id': 0x16,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Neuromance',
        'id': 0x17,
        'weapon': 0x6,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Anatomis',
        'id': 0x18,
        'weapon': 0x6,
        'rarity': 0x3,
        'glow': !0x0
    }, {
        'name': 'Sky\x20Pump',
        'id': 0x19,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20Slug',
        'id': 0x1a,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Slug\x20Wanderer',
        'id': 0x1b,
        'weapon': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Mossy\x20LMG',
        'id': 0x11,
        'weapon': 0x7,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20LMG',
        'id': 0x12,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20LMG',
        'id': 0x13,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20LMG',
        'id': 0x14,
        'weapon': 0x7,
        'rarity': 0x2
    }, {
        'name': 'Heavy\x20Plasma',
        'id': 0x15,
        'weapon': 0x7,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20LMG',
        'id': 0x16,
        'weapon': 0x7,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20LMG',
        'id': 0x17,
        'weapon': 0x7,
        'rarity': 0x2,
        'glow': !0x0
    }, {
        'name': 'Bark\x20LMG',
        'id': 0x18,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'LMG\x20Wanderer',
        'id': 0x19,
        'weapon': 0x7,
        'rarity': 0x0
    }, {
        'name': 'Overgrowth',
        'id': 0x13,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Marshland',
        'id': 0x14,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20MMA',
        'id': 0x15,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20MMA',
        'id': 0x16,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Plasma',
        'id': 0x17,
        'weapon': 0x8,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Magnis',
        'id': 0x18,
        'weapon': 0x8,
        'rarity': 0x3,
        'glow': !0x0
    }, {
        'name': 'Sky\x20AUTO',
        'id': 0x19,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20AUTO',
        'id': 0x1a,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'MMA\x20Wanderer',
        'id': 0x1b,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Mossy\x20Rocket',
        'id': 0x12,
        'weapon': 0x9,
        'rarity': 0x1
    }, {
        'name': 'Swamped\x20Launcher',
        'id': 0x13,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Tiger\x20Rocket',
        'id': 0x14,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Launcher',
        'id': 0x15,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Plasma\x20Nuke',
        'id': 0x16,
        'weapon': 0x9,
        'rarity': 0x4,
        'glow': !0x0
    }, {
        'name': 'Lava\x20Rocket',
        'id': 0x17,
        'weapon': 0x9,
        'rarity': 0x3
    }, {
        'name': 'Sky\x20Launcher',
        'id': 0x18,
        'weapon': 0x9,
        'rarity': 0x2
    }, {
        'name': 'Bark\x20Launcher',
        'id': 0x19,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Wanderer\x20Rocket',
        'id': 0x1a,
        'weapon': 0x9,
        'rarity': 0x0
    }, {
        'name': 'Purple\x20Cap',
        'id': 0x2,
        'tex': 0x1,
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Bear\x20Mask',
        'id': 0x9,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.3,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Panda\x20Mask',
        'id': 0x9,
        'tex': 0x1,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.3,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Brown\x20Beard',
        'id': 0xb,
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0.9,
        'sitOff': 0x2,
        'yOff': -0x3,
        'rarity': 0x2
    }, {
        'name': 'Blonde\x20Beard',
        'id': 0xb,
        'tex': 0x1,
        'type': 0x1,
        'scl': 2.8,
        'sclMlt': 0.9,
        'sitOff': 0x2,
        'yOff': -0x3,
        'rarity': 0x2
    }, {
        'name': 'Skull\x20Mask',
        'id': 0xc,
        'type': 0x1,
        'scl': 0x3,
        'glow': !0x0,
        'sclMlt': 1.05,
        'sitOff': 2.5,
        'sitOffZ': 1.1,
        'yOff': -4.5,
        'xOff': -0x3,
        'tex': 0x0,
        'rarity': 0x3
    }, {
        'name': 'Red\x20Beanie',
        'id': 0xd,
        'type': 0x1,
        'scl': 0x3,
        'sclMlt': 1.1,
        'sitOff': 0.4,
        'yOff': -0x3,
        'tex': 0x0,
        'rarity': 0x0
    }, {
        'name': 'Blue\x20Beanie',
        'id': 0xd,
        'type': 0x1,
        'scl': 0x3,
        'sclMlt': 1.1,
        'sitOff': 0.4,
        'yOff': -0x3,
        'tex': 0x1,
        'rarity': 0x0
    }, {
        'name': 'Krunk\x20Headset',
        'id': 0xe,
        'type': 0x1,
        'scl': 0x2,
        'sclMlt': 1.1,
        'sitOff': 1.4,
        'yOff': -0x4,
        'rarity': 0x2
    }, {
        'name': 'Cherry\x20Headset',
        'id': 0xe,
        'type': 0x1,
        'tex': 0x1,
        'scl': 0x2,
        'sclMlt': 1.1,
        'sitOff': 1.4,
        'yOff': -0x4,
        'rarity': 0x2
    }, {
        'name': 'Demonic\x20Wings',
        'id': 0x0,
        'type': 0x2,
        'glow': !0x0,
        'scl': 3.5,
        'sclMlt': 0x3,
        'xOff': -1.5,
        'sitOff': -1.3,
        'sitOffZ': -1.4,
        'yOff': -0x2,
        'rarity': 0x4
    }, {
        'name': 'Bass\x20Guitar',
        'id': 0x1,
        'type': 0x2,
        'scl': 0x4,
        'sclMlt': 3.8,
        'sitOff': -1.3,
        'sitOffZ': -0x1,
        'yOff': -0x2,
        'rarity': 0x2
    }, {
        'name': 'Samurai\x20Blades',
        'id': 0x2,
        'type': 0x2,
        'glow': !0x0,
        'scl': 0.00048112055276382,
        'sclMlt': 0.000406279577889448,
        'sitOff': -1.3,
        'sitOffZ': -0.95,
        'yOff': -0x1,
        'xOff': -0.5,
        'rarity': 0x3
    }, {
        'name': 'Blood\x20Harvest',
        'id': 0x3,
        'type': 0x2,
        'glow': !0x0,
        'scl': 5.1,
        'sclMlt': 0x5,
        'sitOff': -1.3,
        'sitOffZ': -0.95,
        'yOff': -0x1,
        'rarity': 0x3
    }, {
        'name': 'Panda\x20Body',
        'id': 0x4,
        'type': 0x2,
        'scl': 2.1,
        'sclMlt': 1.3,
        'sitOff': 2.2,
        'sitOffZ': 0x0,
        'yOff': -0x5,
        'rarity': 0x3
    }, {
        'name': 'Bear\x20Body',
        'id': 0x4,
        'tex': 0x1,
        'type': 0x2,
        'scl': 2.1,
        'sclMlt': 1.3,
        'sitOff': 2.2,
        'sitOffZ': 0x0,
        'yOff': -0x5,
        'rarity': 0x3
    }, {
        'name': 'Angelic\x20Wings',
        'id': 0x5,
        'type': 0x2,
        'glow': !0x0,
        'scl': 3.5,
        'sclMlt': 3.6,
        'xOff': -1.5,
        'sitOff': -1.3,
        'sitOffZ': -1.4,
        'yOff': -0x2,
        'rarity': 0x4
    }, {
        'name': 'Ninja\x20Mask',
        'id': 0xf,
        'glow': !0x0,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.1,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x0,
        'rarity': 0x3
    }, {
        'name': 'Halo',
        'id': 0x10,
        'glow': !0x0,
        'type': 0x1,
        'scl': 3.5,
        'sclMlt': 1.1,
        'sitOff': -0.65,
        'yOff': -0x1,
        'rarity': 0x3
    }, {
        'name': 'Welder\x20Mask',
        'type': 0x1,
        'scl': 2.5,
        'sitOff': 2.1,
        'yOff': -0x3,
        'xOff': 0x1,
        'id': 0x11,
        'rarity': 0x1
    }, {
        'name': 'Diver\x20Goggles',
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 0.9,
        'sitOff': 0x1,
        'yOff': -0x1,
        'id': 0x12,
        'rarity': 0x1
    }, {
        'name': 'Mad\x20Cap',
        'type': 0x1,
        'tex': 0x2,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Ace\x20Cap',
        'type': 0x1,
        'tex': 0x3,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Ice\x20Cap',
        'type': 0x1,
        'tex': 0x4,
        'scl': 2.5,
        'sitOff': 0.4,
        'yOff': -0x3,
        'xOff': 0x2,
        'id': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Soldier\x20Pack',
        'id': 0x6,
        'type': 0x2,
        'glow': !0x0,
        'scl': 2.6,
        'sclMlt': 1.8,
        'xOff': 0x1,
        'sitOff': 1.3,
        'sitOffZ': -1.75,
        'yOff': -0x5,
        'rarity': 0x1
    }, {
        'name': 'Robo\x20Wings',
        'id': 0x7,
        'type': 0x2,
        'glow': !0x0,
        'scl': 0x5,
        'sclMlt': 3.9,
        'xOff': -3.5,
        'sitOff': -1.3,
        'sitOffZ': -0.75,
        'yOff': -0x4,
        'rarity': 0x4
    }, {
        'name': 'Basket',
        'id': 0x8,
        'type': 0x2,
        'scl': 3.5,
        'sclMlt': 0x2,
        'xOff': -1.5,
        'sitOff': 0.75,
        'sitOffZ': -0.8,
        'yOff': -0x4,
        'rarity': 0x1
    }, {
        'name': 'Baby\x20Panda',
        'id': 0x9,
        'type': 0x2,
        'scl': 3.5,
        'sclMlt': 0x2,
        'xOff': 0x1,
        'sitOff': 0.75,
        'sitOffZ': -0.8,
        'yOff': -0x5,
        'xRot': Math['PI'],
        'rarity': 0x3
    }, {
        'name': 'Sturm\x20Helmet',
        'type': 0x1,
        'tex': 0x1,
        'scl': 2.8,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -2.5,
        'id': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Brown\x20Afro',
        'type': 0x1,
        'tex': 0x1,
        'scl': 0x2,
        'sclMlt': 0.9,
        'sitOff': 1.4,
        'yOff': -0x4,
        'id': 0x6,
        'rarity': 0x0
    }, {
        'name': 'Acid\x20Skull',
        'id': 0xc,
        'type': 0x1,
        'tex': 0x1,
        'scl': 0x3,
        'glow': !0x0,
        'sclMlt': 1.05,
        'sitOff': 2.5,
        'sitOffZ': 1.1,
        'yOff': -4.5,
        'xOff': -0x3,
        'rarity': 0x3
    }, {
        'name': 'Uranium',
        'type': 0x1,
        'tex': 0x1,
        'scl': 2.5,
        'sitOff': 2.1,
        'yOff': -0x3,
        'xOff': 0x1,
        'id': 0x11,
        'rarity': 0x2
    }, {
        'name': 'Panda\x20King',
        'id': 0x13,
        'glow': !0x0,
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.3,
        'sitOff': 2.05,
        'yOff': -0x4,
        'xOff': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Kolt\x20Rifle',
        'creator': 'iSpy',
        'id': 0x23,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Pace\x20Dore',
        'id': 0x22,
        'glow': !0x0,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Shot\x20Element',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x1c,
        'weapon': 0x6,
        'rarity': 0x3
    }, {
        'name': 'Warp\x20Sequence',
        'creator': 'Electrode_',
        'id': 0x1c,
        'glow': !0x0,
        'weapon': 0x4,
        'rarity': 0x4
    }, {
        'name': 'Radioactive',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x1d,
        'weapon': 0x5,
        'rarity': 0x4
    }, {
        'name': 'Targeted',
        'creator': 'Subza',
        'glow': !0x0,
        'id': 0x1c,
        'weapon': 0x5,
        'rarity': 0x3
    }, {
        'name': 'Robot\x20Helmet',
        'type': 0x1,
        'glow': !0x0,
        'scl': 2.4,
        'sclMlt': 0x1,
        'sitOff': 0x2,
        'yOff': -3.4,
        'id': 0x14,
        'rarity': 0x3
    }, {
        'name': 'Knight\x20Helmet',
        'type': 0x1,
        'scl': 2.3,
        'sclMlt': 0x1,
        'sitOff': 0x2,
        'yOff': -3.2,
        'id': 0x15,
        'rarity': 0x3
    }, {
        'name': 'Cat\x20Ears',
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 1.2,
        'sitOff': 1.65,
        'yOff': -3.2,
        'id': 0x16,
        'rarity': 0x2
    }, {
        'name': 'Snowman',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x17,
        'rarity': 0x2
    }, {
        'name': 'Trendy\x20Biker',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 1.8,
        'yOff': -3.2,
        'id': 0x18,
        'rarity': 0x3
    }, {
        'name': 'Golden\x20Crown',
        'type': 0x1,
        'glow': !0x0,
        'scl': 2.4,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -3.2,
        'id': 0x19,
        'rarity': 0x3
    }, {
        'name': 'Master\x20Drinker',
        'type': 0x1,
        'scl': 2.4,
        'sclMlt': 0x1,
        'sitOff': 0.65,
        'yOff': -2.7,
        'id': 0x1a,
        'rarity': 0x3
    }, {
        'name': 'Pig\x20Head',
        'type': 0x1,
        'scl': 2.5,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x1b,
        'rarity': 0x3
    }, {
        'name': 'Red\x20Bandana',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 1.6,
        'yOff': -3.2,
        'id': 0x1c,
        'rarity': 0x1
    }, {
        'name': 'Sheriff',
        'type': 0x1,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x1d,
        'rarity': 0x4
    }, {
        'name': 'Bandit',
        'type': 0x1,
        'glow': !0x0,
        'scl': 2.2,
        'sclMlt': 0x1,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x1e,
        'rarity': 0x4
    }, {
        'name': 'Vlaine',
        'creator': 'Hoodgail',
        'id': 0x24,
        'weapon': 0x1,
        'rarity': 0x1
    }, {
        'name': 'AWP\x20Supersport',
        'creator': 'Kitter',
        'id': 0x25,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Reine',
        'id': 0x26,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Melted',
        'glow': !0x0,
        'id': 0x27,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Viper',
        'glow': !0x0,
        'id': 0x28,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Razor',
        'glow': !0x0,
        'id': 0x29,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Lazor',
        'id': 0x1d,
        'glow': !0x0,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'Uzera',
        'creator': 'Hoodgail',
        'id': 0x2,
        'glow': !0x0,
        'weapon': 0xa,
        'rarity': 0x4
    }, {
        'name': 'Tazor',
        'creator': 'Hoodgail',
        'glow': !0x0,
        'id': 0x7,
        'weapon': 0xa,
        'rarity': 0x3
    }, {
        'name': 'Dual\x20Woodland',
        'id': 0x0,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Flecken\x20Uzi',
        'id': 0x1,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Dual\x20Seafarer',
        'id': 0x3,
        'weapon': 0xa,
        'rarity': 0x2
    }, {
        'name': 'Rapid\x20Digital',
        'id': 0x4,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Sap\x20Uzi',
        'id': 0x5,
        'weapon': 0xa,
        'rarity': 0x0
    }, {
        'name': 'Torn\x20Dual',
        'id': 0x6,
        'weapon': 0xa,
        'rarity': 0x1
    }, {
        'name': 'Haste',
        'glow': !0x0,
        'id': 0x2a,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Leine',
        'creator': 'Hoodgail',
        'id': 0x2b,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Lore',
        'glow': !0x0,
        'id': 0x2c,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Reaver',
        'glow': !0x0,
        'id': 0x2d,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Splixen',
        'glow': !0x0,
        'id': 0x2e,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'AWP\x20Stream',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x2f,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Circuit',
        'creator': 'Electrode_',
        'glow': !0x0,
        'id': 0x1e,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'SMG\x20Iris',
        'id': 0x1d,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Venom',
        'id': 0x1e,
        'weapon': 0x4,
        'rarity': 0x2,
        'glow': !0x0
    }, {
        'name': 'SMG\x20Wingman',
        'id': 0x1f,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'x0n-voX',
        'creator': '???',
        'pat': 0x0,
        'tex': 'weapons/pat/0',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0001,
        'weapon': 0x4,
        'rarity': 0x5
    }, {
        'name': '1Ad-dA0',
        'creator': '???',
        'pat': 0x0,
        'tex': 'weapons/pat/0',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0001,
        'weapon': 0x2,
        'rarity': 0x5
    }, {
        'name': 'Raynb0w',
        'creator': '???',
        'pat': 0x1,
        'tex': 'weapons/pat/1',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0015,
        'weapon': 0x2,
        'rarity': 0x5
    }, {
        'name': 'Raynb0w',
        'creator': '???',
        'pat': 0x1,
        'tex': 'weapons/pat/1',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0015,
        'weapon': 0x4,
        'rarity': 0x5
    }, {
        'name': 'UMP\x20Saphire',
        'id': 0x20,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Jade',
        'id': 0x21,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Plexus',
        'id': 0x22,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Lapis',
        'id': 0x23,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Perplex',
        'id': 0x24,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'UMP\x20Torpe',
        'id': 0x25,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Como',
        'id': 0x26,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Liquid',
        'id': 0x27,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Clementine',
        'id': 0x28,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Dropper',
        'id': 0x29,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'SMG\x20Auburn',
        'id': 0x2a,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Laurel',
        'id': 0x2b,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Crimson',
        'id': 0x2c,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Azure',
        'id': 0x2d,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'Laguna',
        'id': 0x2e,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Cygenta',
        'id': 0x2f,
        'weapon': 0x4,
        'rarity': 0x1
    }, {
        'name': 'UMP\x20Cygentro',
        'id': 0x30,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Chartreuse',
        'id': 0x31,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'UMP\x20Tortobe',
        'id': 0x32,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'UMP\x20Octo',
        'id': 0x33,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'UMP\x20Versate',
        'id': 0x34,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'SMG\x20Purpur',
        'id': 0x35,
        'weapon': 0x4,
        'rarity': 0x2
    }, {
        'name': 'Leaf',
        'id': 0x36,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Flame',
        'id': 0x37,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Aqua',
        'id': 0x38,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'Gravel',
        'id': 0x39,
        'weapon': 0x4,
        'rarity': 0x0
    }, {
        'name': 'AR\x20Saphire',
        'id': 0x1f,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'AR\x20Jade',
        'id': 0x20,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'AR\x20Plexus',
        'id': 0x21,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'AR\x20Lapis',
        'id': 0x22,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Perplex',
        'id': 0x23,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Trople',
        'id': 0x24,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'AR\x20Altis',
        'id': 0x25,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Liquid',
        'id': 0x26,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Clementine',
        'id': 0x27,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Dropper',
        'id': 0x28,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Laurel',
        'id': 0x29,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Crimson',
        'id': 0x2a,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Azure',
        'id': 0x2b,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Laguna',
        'id': 0x2c,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Cygenta',
        'id': 0x2d,
        'weapon': 0x2,
        'rarity': 0x1
    }, {
        'name': 'Cygento',
        'id': 0x2e,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Chartreuse',
        'id': 0x2f,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Tortobe',
        'id': 0x30,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'AK\x20Octo',
        'id': 0x31,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Versate',
        'id': 0x32,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Purpur',
        'id': 0x33,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Leaf',
        'id': 0x34,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Flame',
        'id': 0x35,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Aqua',
        'id': 0x36,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Gravel',
        'id': 0x37,
        'weapon': 0x2,
        'rarity': 0x0
    }, {
        'name': 'Saphire',
        'id': 0x1c,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Jade',
        'id': 0x1d,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Plexus',
        'id': 0x1e,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Lapis',
        'id': 0x1f,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Perplexum',
        'id': 0x20,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Torped',
        'id': 0x21,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Commo',
        'id': 0x22,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'MMA\x20Liquid',
        'id': 0x23,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Dropper',
        'id': 0x24,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'MMA\x20Auburn',
        'id': 0x25,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Laurel',
        'id': 0x26,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Crimson',
        'id': 0x27,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Azure',
        'id': 0x28,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Laguna',
        'id': 0x29,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Cygneta',
        'id': 0x2a,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'MMA\x20Cygneto',
        'id': 0x2b,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'M14\x20Chartreuse',
        'id': 0x2c,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Tortobe',
        'id': 0x2d,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Octo',
        'id': 0x2e,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Versate',
        'id': 0x2f,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'MMA\x20Purpur',
        'id': 0x30,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Nature',
        'id': 0x31,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Flame',
        'id': 0x32,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Aqua',
        'id': 0x33,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Earth',
        'id': 0x34,
        'weapon': 0x8,
        'rarity': 0x0
    }, {
        'name': 'Black\x20Ice',
        'creator': 'Electrode_',
        'id': 0x35,
        'weapon': 0x8,
        'rarity': 0x2
    }, {
        'name': 'Mach\x203',
        'creator': 'Jytesh',
        'id': 0x36,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Bloodripper',
        'creator': 'Jytesh',
        'id': 0x37,
        'weapon': 0x8,
        'rarity': 0x1
    }, {
        'name': 'Theta',
        'creator': 'Floatingpoint',
        'id': 0x30,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Raynb0w',
        'creator': '???',
        'pat': 0x1,
        'tex': 'weapons/pat/1',
        'dot': 'dot_1',
        'sameGlow': !0x0,
        'movT': 0.0015,
        'weapon': 0x1,
        'rarity': 0x5
    }, {
        'name': 'Diablo\x20Wings',
        'id': 0xa,
        'type': 0x2,
        'scl': 0.0005593478391959849,
        'sclMlt': 0.0006552360402010109,
        'xOff': -0x3,
        'sitOff': -1.3,
        'sitOffZ': -1.4,
        'yOff': -0x2,
        'rarity': 0x4
    }, {
        'name': 'AK\x20Gold\x20Rush',
        'creator': '_irizu',
        'id': 0x38,
        'weapon': 0x2,
        'rarity': 0x3
    }, {
        'name': 'AK\x20Mortal',
        'creator': '_irizu',
        'glow': !0x0,
        'id': 0x39,
        'weapon': 0x2,
        'rarity': 0x4
    }, {
        'name': 'nV\x20Dragon',
        'creator': 'nightly-build7',
        'id': 0x33,
        'weapon': 0x1,
        'rarity': 0x3
    }, {
        'name': 'Cherry\x20Blossom',
        'creator': 'jonschmiddy',
        'id': 0x32,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Vapormoon',
        'creator': 'jonschmiddy',
        'id': 0x3a,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Tesselate',
        'creator': 'jonschmiddy',
        'id': 0x3b,
        'weapon': 0x2,
        'rarity': 0x2
    }, {
        'name': 'Polydrive',
        'creator': 'Ziggy',
        'id': 0x31,
        'weapon': 0x1,
        'rarity': 0x2
    }, {
        'name': 'Safran',
        'id': 0x1d,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Purple\x20Rain',
        'id': 0x1e,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Cobra',
        'id': 0x1f,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Spectrum',
        'id': 0x20,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Anodized',
        'creator': 'Blitz-.',
        'id': 0x21,
        'weapon': 0x6,
        'rarity': 0x3
    }, {
        'name': 'Blunderbuss',
        'creator': 'Blitz-.',
        'id': 0x22,
        'weapon': 0x6,
        'rarity': 0x2
    }, {
        'name': 'Tv\x20Tron\x20A',
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'Tv\x20Tron\x20B',
        'tex': 0x1,
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'Hollow\x20Fade',
        'keyW': 'Knife',
        'animInd': 0x1,
        'glow': !0x0,
        'tex': 0x2,
        'id': 0x0,
        'type': 0x3,
        'scl': 0x2,
        'sclMlt': 0.9,
        'yOff': -0x2,
        'rarity': 0x5
    }, {
        'name': 'Tv\x20Tron\x20C',
        'tex': 0x2,
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'Tv\x20Tron\x20D',
        'tex': 0x3,
        'type': 0x1,
        'glow': !0x0,
        'scl': 0x1,
        'sclMlt': 0.6,
        'sitOff': 2.05,
        'yOff': -3.2,
        'id': 0x20,
        'rarity': 0x4
    }, {
        'name': 'AWP\x20Dazzle',
        'glow': !0x0,
        'id': 0x35,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Octodance',
        'glow': !0x0,
        'id': 0x36,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Ice\x20Fade',
        'glow': !0x0,
        'id': 0x37,
        'weapon': 0x1,
        'rarity': 0x4
    }, {
        'name': 'Frostlance',
        'keyW': 'Knife',
        'animInd': 0x1,
        'glow': !0x0,
        'tex': 0x3,
        'id': 0x0,
        'type': 0x3,
        'scl': 0x2,
        'sclMlt': 0.9,
        'yOff': -0x2,
        'rarity': 0x5
    }, {
        'name': 'Frostbite',
        'keyW': 'Axe',
        'animInd': 0x1,
        'glow': !0x0,
        'id': 0x1,
        'type': 0x3,
        'scl': 0x2,
        'sclMlt': 0.9,
        'yOff': -0.5,
        'rarity': 0x6
    }, {
        'name': 'Arctic',
        'id': 0x0,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'Autumn\x20Burst',
        'id': 0x1,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'Reticle\x20Burst',
        'id': 0x2,
        'weapon': 0xf,
        'rarity': 0x2
    }, {
        'name': 'Digital\x20Burst',
        'id': 0x3,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'Bushwalker',
        'id': 0x4,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'Woodland',
        'id': 0x5,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'Burst\x20Hazard',
        'id': 0x6,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'Kodac\x20Famas',
        'id': 0x7,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'Seafarer\x20G2',
        'id': 0x8,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'G2\x20Trail',
        'id': 0x9,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'Burst\x20Fade',
        'id': 0xa,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'G2\x20Puma',
        'id': 0xb,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'Burst\x20Carbo',
        'id': 0xc,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'G2\x20Barb',
        'id': 0xd,
        'weapon': 0xf,
        'rarity': 0x2
    }, {
        'name': 'F1\x20Blush',
        'id': 0xe,
        'weapon': 0xf,
        'rarity': 0x0
    }, {
        'name': 'Machinist',
        'id': 0xf,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'Triple\x20Olympus',
        'id': 0x10,
        'weapon': 0xf,
        'rarity': 0x2
    }, {
        'name': 'Honey\x20Badger',
        'id': 0x11,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'G2\x20Moss',
        'id': 0x12,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'F1\x20Marshland',
        'id': 0x13,
        'weapon': 0xf,
        'rarity': 0x1
    }, {
        'name': 'G2\x20Tigris',
        'id': 0x14,
        'weapon': 0xf,
        'rarity': 0x2
    }, {
        'name': 'Zebra\x20Burst',
        'id': 0x15,
        'weapon': 0xf,
        'rarity': 0x2
    }, {
        'name': 'Skyfarer',
        'id': 0x16,
        'weapon': 0xf,
        'rarity': 0x2
    }, {
        'name': 'Commando\x20Fade',
        'id': 0x17,
        'weapon': 0xf,
        'rarity': 0x2
    }, {
        'name': 'Mindseeker',
        'id': 0x18,
        'glow': !0x0,
        'weapon': 0xf,
        'rarity': 0x4
    }, {
        'name': 'Intervention',
        'mid': 0x0,
        'glow': !0x0,
        'scl': 0.00094830394974876,
        'mScl': 0.0010536710552764,
        'zOff': -0.25,
        'yOff': 0.05,
        'weapon': 0x1,
        'rarity': 0x5
    }];
}, function(c7r, c7s, c7t) {
    var c7u;
    try {
        window && (c7u = c7t(0x4));
    } catch (c7v) {}
    var c7w = function(c7r, c7s, c7t, c7u, c7w) {
        var c7C;
        this['id'] = c7r, this['sentTo'] = [], this['inputs'] = [], this['spins'] = [], this['stateHistory'] = [], this['weaponMeshes'] = [], this['weaponGeos'] = {}, this['legMeshes'] = [], this['armMeshes'] = [], this['lastInput'] = [], this['lastDeltas'] = [], this['reloads'] = [], this['ammos'] = [], this['ping'] = 0x0, this['pings'] = [], this['avgSpn'] = 0x0, this['score'] = 0x0, this['scoreObjs'] = {}, this['checkPoint'] = null, this['checkPointList'] = [], this['lstDrs'] = [], this['convs'] = 0x0, this['timer'] = null, this['gameTimer'] = null, this['kills'] = 0x0, this['deaths'] = 0x0, this['assists'] = 0x0, this['melees'] = 0x0, this['setbacks'] = 0x0, this['caps'] = 0x0, this['deathStreak'] = 0x0, this['level'] = 0x0, this['lives'] = c7w['waitTimers'] && c7w['config'] && (c7w['config']['lives'] || c7w['mode']['lives']) || 0x0, this['deltaAdd'] = 0x0, this['deltaDiv'] = 0x1, this['sprayIndex'] = 0x0, this['hatIndex'] = -0x1, this['backIndex'] = -0x1, this['meleeIndex'] = -0x1, this['skinColIndex'] = -0x1, this['lastSpray'] = 0x0, this['lastInteract'] = 0x0, this['lastPicked'] = [], this['playTime'] = 0x0, this['logTime'] = 0x0, this['lastCheck'] = 0x0, this['sCount'] = 0x0, this['streaks'] = {}, this['weaponTier'] = 0x0, this['init'] = function(c7r, c7s, c7t, c7C, c7H, c7I) {
            this['x'] = c7r, this['y'] = c7s, this['z'] = c7t, this['stepSrc'] = null, this['name'] = c7C || 'unknown', this['xVel'] = 0x0, this['yVel'] = 0x0, this['zVel'] = 0x0, this['lastInObj'] = 0x0, this['renderMinimal'] = !0x1, this['spins']['length'] = 0x0, this['noMovTimer'] = 0x0, this['xDire'] = 0x0, this['yDire'] = 0x0, this['hitTimer'] = 0x0, this['ticker'] = 0x0, this['spread'] = 0x0, this['spreadPlus'] = 0x0, this['aimVal'] = 0x1, this['aimDir'] = 0x0, this['aimTime'] = 0x0, this['streak'] = 0x0, this['killStreak'] = 0x0, this['realKillStreak'] = 0x0, this['lastKill'] = 0x0, this['stateHistory']['length'] = 0x0, this['lastInput']['length'] = 0x0, this['swapTweenA'] = 0x0, this['dmgReceived'] = {}, this['landBobY'] = 0x0, this['landBobYR'] = 0x0, this['jumpBobY'] = 0x0, this['slideTimer'] = 0x0, this['canSlide'] = !0x0, this['leanAnimX'] = 0x0, this['leanAnimY'] = 0x0, this['leanAnimZ'] = 0x0, this['bobAnimZ'] = 0x0, this['bobAnimY'] = 0x0, this['idleAnim'] = 0x0, this['inspecting'] = !0x1, this['inspectX'] = !0x1, this['stepVal'] = 0x0, this['stepChase'] = 0x0, this['stepDir'] = 0x1, this['stepDirR'] = 0x1, this['reward'] = 0x0, this['recoilAnim'] = 0x0, this['recoilAnimY'] = 0x0, this['recoilForce'] = 0x0, this['recoilTweenY'] = 0x0, this['recoilTweenYM'] = 0x0, this['recoilTweenZ'] = 0x0, this['burstCount'] = 0x0, this['jumpRot'] = 0x0, this['jumpRotM'] = 0x0, this['recoilX'] = 0x0, this['recoilZ'] = 0x0, this['crouchVal'] = 0x0, this['onGround'] = !0x0, this['onLadder'] = !0x1, this['terrainSlipping'] = !0x1, this['rampFix'] = null, this['didJump'] = !0x1, this['jumpCooldown'] = 0x0, this['didShoot'] = !0x1, this['lodActive'] = !0x1, this['locked'] = !0x1, this['latestData'] = !0x1, this['airTime'] = 0x0, this['height'] = c7u['playerHeight'], this['headScale'] = c7u['cameraHeight'], this['scale'] = c7u['playerScale'], this['active'] = !0x0, this['interpolate'] = !0x1, this['isYou'] = c7H, this['sentTo']['length'] = 0x0, this['inputSN'] = 0x0, this['inputs']['length'] = 0x0, this['weaponIndex'] = 0x0, this['swapTime'] = 0x0, this['recon'] = !0x1, this['inView'] = !0x1, this['meleeAnim'] = {}, this['isHacker'] = c7I, this['customLoadout'] = null, this['lastCheck'] = c7w['now'], this['lastPicked']['length'] = 0x0, this['propID'] = 0x0, this['weaponTier'] = 0x0, this['inObject'] = null;
        }, this['setClass'] = function(c7r, c7s, c7w, c7C) {
            c7C || (c7r['config'] && 0x0 > c7r['config']['classes']['indexOf'](c7s) && (c7s != c7r['config']['classes'][0x0] && (this['skins'] = [-0x1, -0x1]), c7s = c7r['config']['classes'][0x0]), c7r['mode'] && (c7r['mode']['noWeap'] && (c7s = 0x9), c7r['mode']['teamClass'] && c7r['mode']['teamClass'][this['team']] && (c7s = c7r['mode']['teamClass'][this['team']], this['skins'] = [-0x1, -0x1]))), (null == c7s || null == c7s) && (c7s = c7r['classes']['length'] - 0x1), this['classIndex'] = c7s, this['reloads']['length'] = 0x0, this['ammos']['length'] = 0x0, this['loadout'] = [c7r['classes'][c7s]['loadout'][0x0]], !!c7r['config'] && c7r['config']['noSecondary'] || (c7r['classes'][c7s]['secondary'] ? c7t['isNumber'](c7w) && this['loadout']['push'](c7w) : this['secIndex'] = null), 0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc), this['speed'] = c7r['classes'][c7s]['speed'] || 0x1;
            for (var c7N = 0x0; c7N < this['loadout']['length']; ++c7N) this['reloads']['push'](0x0), this['ammos']['push'](c7r['weapons'][this['loadout'][c7N]]['ammo']);
            this['reloadTimer'] = 0x0, this['regenDelay'] = c7r['classes'][c7s]['regenDelay'] || c7u['regenDelay'], this['maxHealth'] = c7r['classes'][c7s]['health'] * (c7r['config'] && c7r['config']['healthMlt'] || 0x1), this['health'] = this['maxHealth'], this['hpChase'] = this['health'], this['regen'] = c7r['mode'] && c7r['mode']['noRegen'] ? 0x0 : c7r['classes'][c7s]['regen'] || c7u['regenVal'];
        }, this['updateLoadout'] = function(c7r, c7u, c7w = !0x0, c7C, c7S) {
            this['weaponIndex'] = c7u, this['reloads']['length'] = 0x0, this['ammos']['length'] = 0x0, this['loadout'] = [c7C], this['skins'] = [-0x1, -0x1], c7t['isNumber'](c7S) && this['loadout']['push'](c7S), c7t['isNumber'](c7S) && (this['secIndex'] = c7S), 0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc);
            for (var c7T = 0x0; c7T < this['loadout']['length']; ++c7T) this['reloads']['push'](0x0), this['ammos']['push'](c7r['weapons'][this['loadout'][c7T]]['ammo']);
            this['customLoadout'] = [...this['loadout']], c7w && this['active'] && c7s['regenMeshes'](this);
        }, this['resetInputs'] = function() {
            this['inputs']['length'] = 0x0;
        }, this['procInputs'] = function(c7r, c7w, c7W) {
            window.utilities.inputsTick(this, c7r, c7w);
            this['recon'] = c7W;
            var c7X = Math['max'](0x0, Math['min'](c7r[0x1], c7u['dltMx'])) / this['deltaDiv'];
            this['inputSN'] = c7r[0x0];
            var c7Y = c7t['getAngleDst'](c7r[0x2], this['xDire']);
            c7s['saveSpin'](this, c7Y);
            var c7Z = !c7W && this['isYou'];
            if (c7Z && (this['leanAnimX'] -= c7Y * c7u['leanSens'], this['leanAnimX'] = c7t['limit'](this['leanAnimX'], c7u['leanMax']), this['leanAnimY'] -= c7t['getAngleDst'](c7r[0x3], this['yDire']) * c7u['leanSens'], this['leanAnimY'] = c7t['limit'](this['leanAnimY'], c7u['leanMax']), this['leanAnimX'] && (this['leanAnimX'] *= Math['pow'](c7u['leanPull'], c7X)), this['leanAnimY'] && (this['leanAnimY'] *= Math['pow'](c7u['leanPull'], c7X)), this['leanAnimZ'] && (this['leanAnimZ'] *= Math['pow'](c7u['leanPullZ'], c7X)), this['bobAnimZ'] && (this['bobAnimZ'] *= Math['pow'](c7u['bobPullZ'], c7X)), this['bobAnimY'] && (this['bobAnimY'] *= Math['pow'](c7u['bobPullY'], c7X)), this['recoilX'] && (this['recoilX'] *= Math['pow'](c7u['leanPull'], c7X)), this['recoilZ'] && (this['recoilZ'] *= Math['pow'](c7u['leanPull'], c7X)), this['inspecting'] && this['inspectX'] < Math['PI'] / 2.8 && (this['inspectX'] += 0.1 * (Math['PI'] / 2.8 - this['inspectX']))), 0x2 == c7r[0xb] ? c7s['swapMelee'](this, c7W) : 0x1 == c7r[0xb] ? c7s['swapSecondary'](this, c7W) : 0x3 == c7r[0xb] ? c7s['swapWeapon'](this, null, null, void 0x0, 0x0, c7W) : c7r[0xa] && c7s['swapWeapon'](this, c7r[0xa], !0x1, void 0x0, void 0x0, c7W), c7W || (this['recoilForce'] && (this['recoilAnim'] += this['recoilForce'] * c7X, this['recoilAnimY'] += this['recoilForce'] * (this['weapon']['recoilY'] || 0x1) * (0x1 - 0.3 * this['crouchVal']) * c7X, this['recoilForce'] *= Math['pow'](this['weapon']['recoverF'], c7X)), this['recoilAnim'] && (this['recoilAnim'] *= Math['pow'](this['weapon']['recover'], c7X)), this['recoilAnimY'] && (this['recoilAnimY'] *= Math['pow'](this['weapon']['recoverY'] || this['weapon']['recover'], c7X))), this['xDire'] = (c7r[0x2] || 0x0)['round'](0x3), this['yDire'] = (c7r[0x3] || 0x0)['round'](0x3), this['yDire'] > Math['PI'] / 0x2 ? this['yDire'] = Math['PI'] / 0x2 : this['yDire'] < -Math['PI'] / 0x2 && (this['yDire'] = -Math['PI'] / 0x2), this['oldX'] = this['x'], this['oldY'] = this['y'], this['oldZ'] = this['z'], this['weapon']['zoom'] && 'prop' != this['team'] && (!this['weapon']['noAim'] || 0x0 < this['swapTime'])) {
                var c80 = 0x0 >= this['reloadTimer'] && 0x0 >= this['swapTime'];
                c7r[0x6] && 0x0 < this['aimVal'] && c80 ? (c7s['cancelInspect'](this), this['aimDir'] = 0x0, this['aimVal'] -= 0x1 / (this['weapon']['aimSpeed'] / c7X), 0x0 >= this['aimVal'] && (this['aimVal'] = 0x0, this['isYou'] && !c7W && c7s['toggleAim'](this, 0x1)), this['isYou'] && !c7W && !this['weapon']['scope'] && c7s['updateAim'](this, 0x1 - this['aimVal'])) : (!c80 || !c7r[0x6] && 0x1 > this['aimVal']) && (this['aimDir'] = 0x1, !this['aimVal'] && this['isYou'] && !c7W && c7s['toggleAim'](this, 0x0), this['aimVal'] += 0x1 / (this['weapon']['aimSpeed'] / c7X), 0x1 <= this['aimVal'] && (this['aimVal'] = 0x1), this['isYou'] && !c7W && !this['weapon']['scope'] && c7s['updateAim'](this, 0x1 - this['aimVal'])), 0x0 == this['aimVal'] ? this['aimTime'] += c7X : this['aimTime'] = 0x0;
            }
            c7r[0x8] && 0x1 > this['crouchVal'] && !this['onLadder'] ? (this['crouchVal'] += c7u['crouchSpeed'] * c7X, 0x1 <= this['crouchVal'] && (this['crouchVal'] = 0x1), this['onGround'] ? c7Z && (this['bobAnimY'] -= 1.4 * c7u['crouchAnim'] * c7X) : this['y'] += c7u['crouchSpeed'] * c7X) : !c7r[0x8] && 0x0 < this['crouchVal'] && (this['crouchVal'] -= c7u['crouchSpeed'] * c7X, 0x0 >= this['crouchVal'] && (this['crouchVal'] = 0x0), this['onGround'] ? c7Z && (this['bobAnimY'] += c7u['crouchAnim'] * c7X) : this['y'] -= c7u['crouchSpeed'] * c7X), this['crouchVal'] && (this['crouchVal'] = this['crouchVal']['round'](0x3)), c7s['updateHeight'](this);
            var c81, c82 = this['onGround'] || this['onLadder'];
            c81 = c82 ? (this['terrainSlipping'] ? c7u['slippingSpeed'] : c7u['playerSpeed']) * this['speed'] : c7u['airSpeed'], c81 *= this['aimVal'] ? 0x1 : c7u['aimSlow'], c81 *= c7w['mode']['spdMlt'] && c7w['mode']['spdMlt'][this['team']] || 0x1, c81 *= this['crouchVal'] ? c7u['crouchSlow'] : 0x1, c81 *= this['weapon']['spdMlt'] * c7X;
            var c83 = 0x0;
            if (c83 = this['onLadder'] ? c7u['ladderDecel'] : this['terrainSlipping'] ? c7u['terrainSlipDecel'] : this['onTerrain'] ? c7u['terrainDecel'] : this['onGround'] ? c7u['groundDecel'] : c7u['airDecel'], 0.5 >= this['crouchVal'] && (this['canSlide'] = !0x0), this['onGround'] && this['crouchVal'] || (this['slideTimer'] = 0x0), this['slideTimer'])
                if (this['slideTimer'] -= c7X, 0x0 >= this['slideTimer']) this['slideTimer'] = 0x0;
                else {
                    c81 *= 0.25, c83 = this['onTerrain'] ? c7u['terrainSlideDecel'] : c7u['slideDecel'];
                    var c84 = c7t['getDistance'](this['xVel'], this['zVel'], 0x0, 0x0),
                        c85 = c7t['getDirection'](0x0, 0x0, this['xVel'], this['zVel']),
                        c86 = c7t['getDirection'](Math['sin'](this['xDire']), Math['cos'](this['xDire']), 0x0, 0x0),
                        c87 = 0.03 * c7t['getAngleDst'](c86, c85);
                    this['xVel'] = c84 * Math['cos'](c85 + Math['PI'] - c87), this['zVel'] = c84 * Math['sin'](c85 + Math['PI'] - c87);
                }
            c7w['lockMove'] && (c81 *= 0x0), this['jumpCooldown'] = Math['max'](this['jumpCooldown'] - c7X, 0x0), this['onGround'] && 0x0 >= this['jumpCooldown'] && c7s['tryJump'](this, c7r[0x7]), c82 || (this['yVel'] -= c7X * (c7u['gravity'] * (c7w['config'] ? c7w['config']['gravMlt'] : 0x1)));
            var c88 = c7u['movDirs'][c7r[0x4]];
            c88 != Math['PI'] && 0x0 != c88 && c88 != Math['PI'] / 0x2 && c88 != -Math['PI'] / 0x2 && (c81 *= c7w['config'] ? c7w['config']['strafeSpd'] : 0x1), void 0x0 !== c88 && (this['xVel'] += c81 * Math['cos'](c88 - this['xDire']), this['zVel'] += c81 * Math['sin'](c88 - this['xDire'])), this['xVel'] && (this['x'] += this['xVel'] * c7X, this['xVel'] *= Math['pow'](c83, c7X), this['xVel'] = c7t['cropVal'](this['xVel'], c7u['decelMin'])), this['yVel'] && (this['y'] += this['yVel'] * c7X, this['yVel'] *= Math['pow'](c83, c7X)), this['zVel'] && (this['z'] += this['zVel'] * c7X, this['zVel'] *= Math['pow'](c83, c7X), this['zVel'] = c7t['cropVal'](this['zVel'], c7u['decelMin'])), 'prop' == this['team'] && c7r[0x5] && c7s['pickProp'](this);
            var c89 = this['onGround'] && !this['didJump'],
                c8a = !0x1;
            this['onGround'] = !0x1, this['onLadder'] = !0x1;
            for (var c8b = !0x1, c8c = 'Pickup', c8d = 0x0; c8d < c7w['map']['manager']['objects']['length']; ++c8d)
                if (((c7C = c7w['map']['manager']['objects'][c8d])['active'] || !c7C['active'] && c7C['closeable']) && c7C['tRadius'] && this['collides'](c7C, c7C['tRadius']) && c7C['gate'] && !c7C['noMsg'] && (c8b = !0x0, !c7C['active'] && c7C['closeable'], c8c = (!c7C['active'] && c7C['closeable'] ? 'Close' : 'Open') + '\x20gate' + (0x0 == c7C['scoreP'] ? '' : '\x20<span\x20style=\x27color:' + (this['score'] >= c7C['scoreP'] ? '#9eeb56' : '#eb5656') + '\x27>[' + (c7C['method'] ? 'Req' : 'Cost') + '\x20' + (c7C['scoreP'] || 0x0) + ']</span>')), c7C['active'] && this['collides'](c7C))
                    if (c7C['onEnter'] && this['inObject'] != c7C['sid']) c7w['onTrigger'](this, c7C), this['inObject'] = c7C['sid'];
                    else if (c7C['score']) this['scoreObjs'][c7C['sid']] || (this['scoreObjs'][c7C['sid']] = 0x1, c7s['score'](this, c7C['scoreP']));
            else if (c7C['teleporter']) c7w['checkTeleport'](this, c7C);
            else if (c7C['checkpoint']) c7w['setCheckPoint'](this, c7C);
            else if (c7t['isNumber'](c7C['pickup'])) c7C['noMsg'] || (c8b = !0x0, c8c = 'Pickup\x20weapon' + (0x0 == c7C['scoreP'] ? '' : '\x20<span\x20style=\x27color:' + (this['score'] >= c7C['scoreP'] ? '#9eeb56' : '#eb5656') + '\x27>[' + (c7C['method'] ? 'Req' : 'Cost') + ':\x20' + (c7C['scoreP'] || 0x0) + ']</span>'));
            else if (c7C['flag']) c7w['pickupFlag'](this, c7C);
            else if (c7C['trigger']) this['flag'] && c7C['team'] == this['team'] && c7C['flagObj'] && !c7C['flagObj']['carrier'] && c7C['flagObj']['x'] == c7C['flagObj']['orgX'] && c7C['flagObj']['y'] == c7C['flagObj']['orgY'] && c7C['flagObj']['z'] == c7C['flagObj']['orgZ'] && c7w['capFlag'](this, this['flag']);
            else if (c7C['kill']) this['flag'] && (c7w['resetFlag'](this['flag']), this['flag'] = null), c7s['hasServer'] && c7s['kill'](this);
            else if (c7C['ladder']) {
                if (this['y'] < c7C['y'] + c7C['height'] && 0x0 == this['crouchVal'] && (this['yVel'] = 0x0, this['onLadder'] = !0x0, this['onTerrain'] = !0x1, this['stepSrc'] = null, void 0x0 !== c88)) {
                    var c8e = (Math['abs'](c7t['getAngleDst'](c7C['dir'], c88 - this['xDire'])) - Math['PI'] / 0x2) / (Math['PI'] / 0x2);
                    0x0 < c8e && (this['y'] += c7u['ladderSpeed'] * this['weapon']['spdMlt'] * c7X * c8e, this['y'] <= c7C['y'] - c7C['height'] ? this['y'] = c7C['y'] - c7C['height'] : this['y'] >= c7C['y'] + c7C['height'] && (this['y'] = c7C['y'] + c7C['height']));
                }
            } else if (c7C['ramp']) {
                if (this['y'] < c7C['y'] + c7C['height']) {
                    var c8f = Math['max'](0x0, Math['min'](0x1, c7t['progressOnLine'](c7C['ramp']['sX'], c7C['ramp']['sZ'], c7C['ramp']['eX'], c7C['ramp']['eZ'], this['x'] + this['scale'] * Math['cos'](c7C['dir']), this['z'] + this['scale'] * Math['sin'](c7C['dir'])))),
                        c8g = c7C['y'] - c7C['height'] + 0x2 * c7C['height'] * c8f;
                    if (this['y'] <= c8g || c89)
                        if (c7C['boost']) {
                            this['y'] = c8g;
                            var c8h = c7C['boost'] * c7u['boosterSpd'] * c7X;
                            this['xVel'] += c8h * Math['sin'](-c7C['dir'] + Math['PI'] / 0x2) * Math['cos'](c7C['boostDr']), this['zVel'] += c8h * Math['cos'](-c7C['dir'] + Math['PI'] / 0x2) * Math['cos'](c7C['boostDr']), this['yVel'] += c8h * Math['sin'](c7C['boostDr']);
                        } else this['oldY'] > this['y'] && c7s['resetStep'](this, c7W), this['y'] = c8g, this['yVel'] = 0x0, this['onGround'] = !0x0, this['onTerrain'] = !0x1, c8a = !0x0, this['rampFix'] = c7C['y'] - c7C['height'] + 0x2 * c7C['height'] * Math['round'](c8f);
                }
            } else !c7C['isBorder'] && this['y'] < c7C['y'] + c7C['height'] && c7C['y'] + c7C['height'] - this['y'] <= c7u['climbHeight'] && this['oldY'] < c7C['y'] + c7C['height'] && c89 ? (this['y'] += 0.3 * (c7C['y'] + c7C['height'] - this['y']), this['onGround'] = !0x0, this['onTerrain'] = !0x1) : this['oldY'] >= c7C['y'] + c7C['height'] + (c7C['isBorder'] ? c7u['borderH'] : 0x0) ? (this['stepSrc'] = c7C['stepSrc'], this['oldY'] > this['y'] && c7s['resetStep'](this, c7W), this['y'] = c7C['y'] + c7C['height'] + (c7C['isBorder'] ? c7u['borderH'] : 0x0), this['yVel'] = 0x0, this['onGround'] = !0x0, this['onTerrain'] = !0x1) : this['oldX'] - this['scale'] >= c7C['x'] + c7C['width'] - 0.00001 ? (this['x'] = c7C['x'] + c7C['width'] + this['scale'], this['xVel'] = 0x0) : this['oldX'] + this['scale'] <= c7C['x'] - c7C['width'] + 0.00001 ? (this['x'] = c7C['x'] - c7C['width'] - this['scale'], this['xVel'] = 0x0) : this['oldZ'] - this['scale'] >= c7C['z'] + c7C['length'] - 0.00001 ? (this['z'] = c7C['z'] + c7C['length'] + this['scale'], this['zVel'] = 0x0) : this['oldZ'] + this['scale'] <= c7C['z'] - c7C['length'] + 0.00001 ? (this['z'] = c7C['z'] - c7C['length'] - this['scale'], this['zVel'] = 0x0) : this['oldY'] + this['height'] <= c7C['y'] - c7C['height'] && (this['y'] = c7C['y'] - c7C['height'] - this['height'], this['yVel'] = 0x0);
            else c7C['sid'] == this['inObject'] && (this['inObject'] = null);
            !this['didJump'] && null != this['rampFix'] && Math['abs'](this['y'] - this['rampFix']) <= c7u['climbHeight'] ? !c8a && (this['y'] = this['rampFix'], this['onGround'] = !0x0, this['yVel'] = 0x0, this['rampFix'] = null) : this['rampFix'] = null;
            var c8i = c7w['map']['terrain'];
            if (c8i) {
                var c8j = c8i['raycast'](this['x'], -this['z'], 0x2710, 0x0, 0x0, -0x4e20, !0x0);
                if (c8j) {
                    var c8k = c8j['z'];
                    if (this['y'] <= c8k && (this['oldY'] > this['y'] && c7s['resetStep'](this, c7W), this['onTerrain'] = !0x0), this['onTerrain']) {
                        this['onGround'] = !0x0;
                        var c8l = c8i['_raycastNormal'];
                        c8l['set'](c8l['x'], c8l['z'], -c8l['y']), this['y'] = c8k;
                        var c8m = c8l['x'],
                            c8n = -0x1 + c8l['y'],
                            c8o = c8l['z'],
                            c8p = Math['sqrt'](c8m * c8m + c8n * c8n + c8o * c8o);
                        if (this['terrainSlipping'] = c8p > c7u['terrainSlideThreshold'], this['terrainSlipping'] = !0x1, this['terrainSlipping']) c8p *= c7u['gravity'] * (c7w['config'] ? c7w['config']['gravMlt'] : 0x1) * c7u['terrainGravityMlt'] * c7X, this['xVel'] += c8m * c8p, this['yVel'] += c8n * c8p, this['zVel'] += c8o * c8p;
                        else this['yVel'] = 0x0, this['jumpCooldown'] = 0x0;
                    }
                }
                this['onTerrain'] || (this['terrainSlipping'] = !0x1);
            }
            if (this['onGround'] ? this['airTime'] = 0x0 : this['airTime'] += c7X, !c7W && 'prop' != this['team']) {
                var c8q = c7t['getDistance3D'](this['oldX'], this['oldY'], this['oldZ'], this['x'], this['y'], this['z']);
                if (this['isYou'] && (this['onLadder'] && (c8q *= 1.4), c7t['getDirection'](this['oldX'], this['oldZ'], this['x'], this['z']), this['bobAnimZ'] += c7t['getDistance'](this['oldX'], this['oldZ'], this['x'], this['z']) * c7u['bobMltZ'], this['bobAnimY'] -= (this['oldY'] - this['y']) * c7u['bobMltY'], c82 && void 0x0 !== c88 ? (c7s['playerStep'](this, c8q), this['leanAnimZ'] -= c8q * c7u['leanMltZ'] * (this['weapon']['zLnM'] || 0x1) * Math['cos'](c88)) : this['stepVal'] *= Math['pow'](c7u['stepPull'], c7X), this['stepChase'] != this['stepVal'] && (this['stepChase'] += 0.15 * (this['stepVal'] - this['stepChase']))), this['spreadPlus'] += c8q * c7u['spreadMove'] + Math['abs'](this['oldY'] - this['y']) * c7u['spreadFall'], this['spreadPlus'] *= Math['pow'](c7u['spreadRecover'], c7X), this['spread'] = Math['max'](this['weapon']['minSpread'] || 0x0, (this['weapon']['spread'] - this['weapon']['spread'] * c7u['crouchSpread'] * this['crouchVal'] + this['recoilAnim'] * (this['weapon']['spreadInc'] || 0x1) * c7u['spreadMlt'] + this['spreadPlus']) * this['aimVal']), c7r[0x9] && c7s['reload'](this), 0x0 < this['reloadTimer']) {
                    var c8r = this['reloadTimer'];
                    this['reloadTimer'] -= c7X, this['isYou'] && c8r >= this['weapon']['reload'] / 0x2 && this['reloadTimer'] < this['weapon']['reload'] / 0x2 && c7s['endReload'](this['weapon']), 0x0 >= this['reloadTimer'] && (this['reloadTimer'] = 0x0, this['didShoot'] = !0x1, this['ammos'][this['weaponIndex']] = this['weapon']['ammo'], c7s['updatePlayerAmmo'](this));
                }
                0x0 < this['swapTime'] && (this['swapTime'] -= c7X, 0x0 > this['swapTime'] && (this['swapTime'] = 0x0));
                for (c8d = 0x0; c8d < this['reloads']['length']; ++c8d) 0x0 < this['reloads'][c8d] && (this['reloads'][c8d] -= c7X, 0x0 > this['reloads'][c8d] && (this['reloads'][c8d] = 0x0));
                if (this['weapon']) {
                    var c8s = this['burstCount'] || !this['weapon']['nAuto'] && c7r[0x5];
                    this['didShoot'] && !c7r[0x5] && (this['didShoot'] = !0x1), !this['didShoot'] && c7r[0x5] && (c8s = !0x0), c8s && 0x0 >= this['reloads'][this['weaponIndex']] && 0x0 >= this['swapTime'] && 0x0 >= this['reloadTimer'] && (this['noMovTimer'] = 0x0, this['weapon']['melee'] ? c7s['melee'](this) : 0x0 < this['ammos'][this['weaponIndex']] ? c7s['shoot'](this, c7r) : c7s['reload'](this));
                }
            }
            c7W && c7r['velObj'] && (this['xVel'] -= c7r['velObj']['x'], this['zVel'] -= c7r['velObj']['y'], this['yVel'] -= c7r['velObj']['z'], this['onGround'] = !0x1), c7s['playerCollisions'](this), c7s['updateInteract'](this, c8b, c8c);
        }, this['collides'] = function(c7r, c7s) {
            return this['x'] - this['scale'] < c7r['x'] + (c7r['width'] + (c7s || 0x0)) && this['x'] + this['scale'] > c7r['x'] - (c7r['width'] + (c7s || 0x0)) && this['z'] - this['scale'] < c7r['z'] + (c7r['length'] + (c7s || 0x0)) && this['z'] + this['scale'] > c7r['z'] - (c7r['length'] + (c7s || 0x0)) && this['y'] <= c7r['y'] + c7r['height'] + (c7r['isBorder'] ? c7u['borderH'] : 0x0) && this['y'] + this['height'] >= c7r['y'] - c7r['height'];
        }, this['getStateConst'] = function() {
            return this['ping'] * (this['lagComp'] || 0x1);
        }, this['update'] = function(c7r, c7w) {
            if (this['active']) {
                if (this['inputs']['length']) {
                    for (var c7C = 0x0; c7C < this['inputs']['length']; ++c7C) this['procInputs'](this['inputs'][c7C], c7r);
                    this['resetInputs']();
                }
                if (this['idleAnim'] += c7u['idleAnimS'] * c7w, this['hpChase'] > this['health'] ? (this['hpChase'] -= 0.035 * c7w, this['hpChase'] <= this['health'] && (this['hpChase'] = this['health'])) : this['hpChase'] = this['health'], this['interpolate']) {
                    this['dt'] += c7w;
                    var c8y = Math['min'](1.6, this['dt'] / (c7u['serverSendRate'] * c7u['interpolation']));
                    c8y /= c7r['config'] ? c7r['config']['deltaMlt'] : 0x1, this['oldX'] = this['x'], this['oldY'] = this['y'], this['oldZ'] = this['z'], this['x'] = this['x1'] + (this['x2'] - this['x1']) * c8y, this['y'] = this['y1'] + (this['y2'] - this['y1']) * c8y, this['z'] = this['z1'] + (this['z2'] - this['z1']) * c8y, this['onGround'] && c7s['playerStep'](this, c7t['getDistance'](this['oldX'], this['oldZ'], this['x'], this['z'])), this['xDire'] = Math['lerpAngle'](this['xDir2'], this['xDir1'], Math['min'](0x1, c8y)), this['yDire'] = Math['lerpAngle'](this['yDir2'], this['yDir1'], Math['min'](0x1, c8y));
                }
            }
        }, this['resetMeleeAnim'] = function() {
            this['meleeAnim']['armT'] = 0x0, this['meleeAnim']['armM'] = 0x0, this['meleeAnim']['armE'] = 0x0, this['meleeAnim']['weaR'] = 0x0, this['meleeAnim']['weaM'] = 0x0, this['meleeAnim']['armY'] = 0x0, this['meleeAnim']['armR'] = 0x0, this['meleeAnim']['lArm'] = 0x0, this['meleeAnim']['flipW'] = 0x0;
        }, this['reset'] = function() {
            this['checkPoint'] = null, this['checkPointList']['length'] = 0x0, this['weaponTier'] = 0x0, this['customLoadout'] = null, this['lastPicked']['length'] = 0x0, this['inObject'] = null;
        };
    };
    c7r['exports']['Player'] = c7w, c7r['exports']['manager'] = function(c7r, c7s, c8B, c8C, c8D, c8E, c8F) {
        this['list'] = [];
        var c8G, c8H, c8I, c8J = c7t(0x4f);
        this['hasServer'] = c8F ? 0x1 : 0x0, this['setTeam'] = function(c7s) {
            if (!c7r['waitTimers'] && c7r['mode']['convTeam']) c7s['team'] = c7r['mode']['convTeam'];
            else if (c7r['mode']['startTeam']) c7s['team'] = c7r['mode']['startTeam'];
            else if (c7r['mode']['friendly']) c7s['team'] = 0x1;
            else if (c7r['mode']['clanWar']) c7s['team'] = c7s['account'] && c7s['account']['clan'] ? c7s['account']['clan'] : 0x1;
            else if (!c7s['team'] && c7r['mode']['teams'] && !c7s['spectating']) {
                for (var c7t = 0x0, c7u = 0x0, c7w = 0x0; c7w < this['list']['length']; ++c7w) this['list'][c7w]['spectating'] || (this['list'][c7w]['team'] == (c7r['mode']['teamNs'] ? c7r['mode']['teamNs'][0x0] : 0x1) && c7t++, this['list'][c7w]['team'] == (c7r['mode']['teamNs'] ? c7r['mode']['teamNs'][0x1] : 0x2) && c7u++);
                c7s['team'] = c7t >= c7u ? 0x2 : 0x1, c7r['mode']['teamNs'] && (c7s['team'] = c7r['mode']['teamNs'][c7s['team'] - 0x1]);
            }
        }, this['update'] = function(c7t) {
            for (var c7u = 0x0; c7u < this['list']['length']; ++c7u)(c8G = this['list'][c7u])['active'] && (c8G['update'](c7r, c7t), c8F && (this['tickPlayer'](c8G, c7t), this['storeState'](c8G), c8G['y'] <= c7r['map']['deathY'] && (c8G['flag'] && (c7r['resetFlag'](c8G['flag']), c8G['flag'] = null), this['kill'](c8G))), c7s && (this['updateMesh'](c8G), this['updateHeight'](c8G)));
        }, this['playerCollisions'] = function(c7s) {
            if (c8F && c7r['mode']['convTeam'] && !c7r['waitTimers'])
                for (var c7t = 0x0; c7t < this['list']['length']; ++c7t)
                    if (c7s['active'] && this['list'][c7t]['active'] && c7s['team'] == c7r['mode']['convTeam'] && c7s['team'] != this['list'][c7t]['team']) {
                        var c7u = c8E['playerHeight'] / 0x2;
                        c8D['getDistance3D'](c7s['x'], c7s['y'] + c7u, c7s['z'], this['list'][c7t]['x'], this['list'][c7t]['y'] + c7u, this['list'][c7t]['z']) <= 2.4 * c7u && (c8F['broadcast']('game' + c7r['sid'], 'ac', c7s['sid'], this['list'][c7t]['sid'], c7r['mode']['convWord']), this['score'](c7s, 0x64), c7s['convs']++, c7r['updateTeam'](this['list'][c7t], c7s['team']), c7r['mode']['killConv'] && this['kill'](this['list'][c7t], null, null, !0x0), c7r['gameTimer'] && (c7r['gameTimer'] += 0x2710));
                    }
        }, this['activeCount'] = function() {
            for (var c7r = 0x0, c7s = 0x0; c7s < this['list']['length']; ++c7s) this['list'][c7s]['active'] && c7r++;
            return c7r;
        }, this['forcePos'] = function() {
            for (var c7r = 0x0; c7r < this['list']['length']; ++c7r) this['list'][c7r]['forcePos'] = !0x0, this['list'][c7r]['objInstances'] && (this['list'][c7r]['objInstances']['visible'] = !0x1, this['list'][c7r]['inView'] = !0x1);
        }, this['saveSpin'] = function(c7r, c7s) {
            c8F && (c7r['spins']['unshift'](c7s), c7r['spins']['length'] > c8E['spinTimer'] / c8E['serverTickRate'] && (c7r['spins']['length'] = Math['round'](c8E['spinTimer'] / c8E['serverTickRate'])));
        }, this['getSpin'] = function(c7r) {
            for (var c7s = 0x0, c7t = 0x0; c7t < c7r['spins']['length']; ++c7t) c7s += c7r['spins'][c7t];
            return Math['abs'](c7s * (0xb4 / Math['PI']));
        }, this['storeState'] = function(c7s) {
            c7s['stateHistory']['unshift']({
                'time': c7r['now'],
                'x': c7s['x'],
                'y': c7s['y'],
                'z': c7s['z']
            });
            for (var c7t = c7s['stateHistory']['length'] - 0x1; 0x0 <= c7t; --c7t) c7r['now'] - c7s['stateHistory'][c7t]['time'] >= c8E['stateHistory'] && c7s['stateHistory']['splice'](c7t, 0x1);
        }, this['fetchState'] = function(c7s, c7t) {
            for (var c7u = c7r['now'] - (c7t + c8E['serverSendRate'] * c8E['interpolation']), c7w = 0x0; c7w < c7s['stateHistory']['length']; ++c7w)
                if (c7s['stateHistory'][c7w]['time'] <= c7u) return c7s['stateHistory'][c7w];
            return c7s['stateHistory'][c7s['stateHistory']['length'] - 0x1];
        }, this['updateMesh'] = function(c7t, c7u) {
            if (c7t['objInstances']) {
                var c7w = c7t['weapon']['animWhileAim'] ? 0x1 : c7t['aimVal'],
                    c8B = (0x1 - (0x1 - c8E['aimAnimMlt']) * (0x1 - c7t['aimVal'])) * c8E['animMult'] * c7s['weaponBob'],
                    c8C = 0x1 - 0.8 * c7t['crouchVal'],
                    c8D = (0x1 - (0x1 - c7t['aimVal'])) * c8E['animMult'];
                c7t['isYou'] || (c8D = 0x0);
                var c8F = 0x1 - (c7t['weapon']['recoilZM'] || 0.5) * (0x1 - c7w),
                    c8G = (0x1 - (c7t['weapon']['zRot'] || 0.3) * (0x1 - c7w)) * (c7t['weapon']['zRM'] || 0x1) * c7s['weaponBob'],
                    c8H = 0x1 - (c7t['weapon']['jYMlt'] || 0x1) * (0x1 - c7w),
                    c8I = 0x1 - 0.45 * (0x1 - c7w),
                    c8J = 0.9 * c7t['bobAnimY'] * c8H * c7s['weaponBob'] * c8D,
                    c9i = c7t['landBobY'] * (c7t['weapon']['landBob'] || 0x1) * 0.6 * (0x1 - 0.75 * (0x1 - c7w)) * c7s['weaponBob'];
                c7t['landBobYR'] != c9i && (c7t['landBobYR'] += 0.1 * (c9i - c7t['landBobYR']));
                var c9j = c7t['landBobY'] * (c7t['weapon']['landBob'] || 0x1) * 0.1,
                    c9k = 0x1 - 0.5 * c7t['crouchVal'],
                    c9l = (c7t['crouchVal'], c7t['jumpRot'] * c9k * c8D * c7s['weaponBob']);
                c7t['jumpRotM'] != c9l && (c7t['jumpRotM'] += 0.08 * (c9l - c7t['jumpRotM']));
                var c9m = c7t['jumpBobY'] * (c7t['weapon']['jumpYM'] || 0x1) * c8D * c9k * c7s['weaponBob'],
                    c9n = 0x1 - 0.89 * (0x1 - c7w),
                    c9o = 0x1 - (c7t['weapon']['aimRecMlt'] || 0x1) * (0x1 - c7w),
                    c9p = c7u ? 0.05 : c8E['stepAnim'],
                    c9q = Math['sin'](c7t['stepVal']) * c9p,
                    c9r = Math['cos'](0x2 * c7t['stepVal']) / 0x2 * c9p,
                    c9s = -Math['sin'](c7t['stepChase']) * c9p,
                    c9t = -Math['cos'](0x2 * c7t['stepChase']) / 0x2 * c9p,
                    c9u = c7r['config']['thirdPerson'] ? 0x0 : 0x1 - c7t['aimVal'],
                    c9v = 0.5 * (0.5 >= c9u ? c9u : 0.5 - (c9u - 0.5)),
                    c9w = c7t['swapTime'] / c7t['weapon']['swapTime'],
                    c9x = c7t['weapon']['xOff'] * (c7t['isYou'] ? c7s['weaponOffX'] : 0x1),
                    c9y = c7t['weapon']['yOff'] * (c7t['isYou'] ? c7s['weaponOffY'] : 0x1),
                    c9z = 0x0;
                0x0 < c7t['reloadTimer'] && (c9z = 0.5 < (c9z = 0x1 - c7t['reloadTimer'] / c7t['weapon']['reload']) ? 0.5 - (c9z - 0.5) : c9z);
                var c9A = 1.5 * (0x1 - 0.88 * (0x1 - c7t['aimVal'])) * c7s['weaponBob'];
                c7s['moveMesh'](c7t['objInstances'], c7t['x'], c7t['y'] + (c7t['isYou'] && !c7r['config']['thirdPerson'] ? 0x0 : Math['abs'](3.5 * c9q)), c7t['z']), 'prop' != c7t['team'] && c7s['rotateMesh'](c7t['objInstances'], c7t['xDire'] + (c7t['isYou'] ? c7r['config']['thirdPerson'] ? 0.5 * -c9q : 0x0 : 0x2 * -c9q)), c9r -= c9r * (c7t['crouchVal'] * c8E['crouchAnimMlt']), c9q -= c9q * (c7t['crouchVal'] * c8E['crouchAnimMlt']);
                for (var c9B = 0x0; c9B < c7t['legMeshes']['length']; ++c9B) c7t['legMeshes'][c9B]['rotation']['x'] = c9q * (0x1 == c9B || 0x3 == c9B ? 0x1 : -0x1) * 0x7 + (0x1 < c9B ? -0.6 : 0x0);
                for (c9B = 0x0; c9B < c7t['armMeshes']['length']; ++c9B) - (c7t[(0x0 == c9B ? 'l' : 'r') + 'HndTweenA'] || 0x0), c7t['armMeshes'][c9B]['position']['z'] = c9q * (c9B ? -0x1 : 0x1), c7t['armMeshes'][c9B]['rotation']['x'] = c7t['armMeshes'][c9B]['xR'] || 0x0, c7t['armMeshes'][c9B]['rotation']['y'] = c7t['armMeshes'][c9B]['yR'] || 0x0, c7t['armMeshes'][c9B]['position']['x'] = c7t['armMeshes'][c9B]['xP'] || 0x0, c7t['armMeshes'][c9B]['position']['y'] = c7t['armMeshes'][c9B]['yP'] || 0x0, 0x1 == c9B ? (c7t['armMeshes'][0x1]['rotation']['z'] = c7t['armMeshes'][c9B]['zR'] + 0.12 * c7t['crouchVal'] + -0x1 * c9t + 0.2 * c7t['jumpBobY'], c7t['meleeAnim'] && c7t['weaponGeos'][c7t['weaponIndex']] && (c7t['armMeshes'][0x1]['rotation']['z'] += (c7t['meleeAnim']['armR'] || 0x0) * c8D, c7t['armMeshes'][0x1]['rotation']['y'] += (c7t['meleeAnim']['armT'] || 0x0) * c8D, c7t['armMeshes'][0x1]['position']['x'] += (c7t['meleeAnim']['armM'] || 0x0) * c8D, c7t['armMeshes'][0x1]['position']['z'] += (c7t['meleeAnim']['armE'] || 0x0) * c8D, c7t['armMeshes'][0x1]['position']['y'] += (c7t['meleeAnim']['armY'] || 0x0) * c8D, c7t['weaponGeos'][c7t['weaponIndex']] && (c7t['weaponGeos'][c7t['weaponIndex']]['rotation']['z'] = c7t['weaponGeos'][c7t['weaponIndex']]['zR'] + (c7t['meleeAnim']['weaR'] || 0x0), c7t['weaponGeos'][c7t['weaponIndex']]['position']['x'] = c7t['weaponGeos'][c7t['weaponIndex']]['xP'] + (c7t['meleeAnim']['weaM'] || 0x0), c7t['weaponGeos'][c7t['weaponIndex']]['rotation']['y'] = c7t['weaponGeos'][c7t['weaponIndex']]['yR'] + (c7t['meleeAnim']['flipW'] || 0x0)))) : c7t['meleeAnim'] && c7t['weaponGeos'][c7t['weaponIndex']] && (c7t['armMeshes'][0x0]['position']['z'] += c7t['meleeAnim']['lArm'] || 0x0, c7t['armMeshes'][0x0]['rotation']['y'] += 0.1 * (c7t['meleeAnim']['lArm'] || 0x0), c7t['armMeshes'][0x0]['position']['x'] -= 0.3 * (c7t['meleeAnim']['lArm'] || 0x0));
                var c9C = c7r['attach'][c7t['weapon']['attach']],
                    c9D = c9C && c9C['aimOffY'] || 0x0;
                c7t['weaponMeshes'][c7t['weaponIndex']] && c7t['weaponMeshes'][c7t['weaponIndex']]['flapMesh'] && c7t['weapon']['flap'] && (fRot = 0x3 * c9t + 2.8 * c7t['recoilAnim'] - c7t['leanAnimZ'] - 0x3 * c7t['leanAnimX'] - 1.8 * c7t['landBobYR'] + c8J + 0.1 * c7t['crouchVal'], c7s['rotateMesh'](c7t['weaponMeshes'][c7t['weaponIndex']]['flapMesh'], c7t['weapon']['flap']['rot'] * c7t['swapTweenA'] + fRot, null, null));
                var c9E = c7r['config']['thirdPerson'] ? 0.4 : 0x1;
                c7s['rotateMesh'](c7t['upperBody'], c9z * (-0x1 * c9E), -0.2 * c8J + +c9j + c9z * (-2.8 * c9E) + c7t['yDire'] * (c7t['isYou'] && !c7r['config']['thirdPerson'] ? 0x1 : 0.5) + (-Math['PI'] / 0x4 * c9w + c7t['recoilAnimY'] * c8E['recoilMlt']) + (c7t['weapon']['yRot'] || 0x0)), c7s['moveMesh'](c7t['upperBody'], 0x0, c7t['recoilAnimY'] * (c7t['weapon']['recoilYM'] || 0.3) * c8D + (c7t['height'] - c8E['cameraHeight'] - c8E['legHeight']), 0x0), c7s['rotateMesh'](c7t['weaponMeshes'][c7t['weaponIndex']], c7t['inspectX'] + 0.2 * c7t['jumpRotM'] + c7t['recoilX'] * c9n + c7t['leanAnimX'] * c8I * c7s['weaponLean'] * (c7t['weapon']['leanMlt'] || 0x1) + (0.16 * -c9s * c8D * c8C + 0.2 * c7t['leanAnimZ']) * c8B, -Math['cos'](c7t['idleAnim']) * c9k * 0.01 * c9A - 0.25 * (c7t['swapTweenR'] || 0x0) * c8D + 0.6 * -c7t['landBobYR'] + c7t['recoilTweenY'] * c9o + c7t['leanAnimY'] * c8I * c7s['weaponLean'] * (c7t['weapon']['leanMlt'] || 0x1) + -0.9 * c9t * c8B, c9l + c9v + c7t['recoilX'] * c9n + (c7t['swapTweenR'] || 0x0) * c8D * 0.1 + c7t['leanAnimZ'] * c8G + -c7t['inspectX'] * (c7t['weapon']['inspectR'] || 0x0) + ((c7t['weapon']['cLean'] || 0x0) * c7t['crouchVal'] * c8D + 0x0 * -c9s) * c8B), c7s['moveMesh'](c7t['weaponMeshes'][c7t['weaponIndex']], -c7t['jumpRotM'] * c8D * 1.3 + -c7t['inspectX'] * (c7t['weapon']['inspectM'] || 0x0) + (0.35 * c7t['leanAnimZ'] - (c7t['weapon']['cRot'] || 0x0) * c7t['crouchVal'] * c8D + 0.5 * c9q * c8C * c8D) * c7t['aimVal'] * c8B + c9x - (c9x - c7t['weapon']['xOrg']) * c9u, 0.02 * Math['sin'](c7t['idleAnim']) * c9A + c7t['recoilTweenYM'] * c9o + c9m + 0.7 * c9i - 1.5 * c8J + (0.85 * c9r - (c7t['weapon']['cDrop'] || 0x0) * c7t['crouchVal'] * c8D) * c8B + c9y - (c9y - c7t['weapon']['yOrg'] + c9D) * c9u, c7t['weapon']['zOff'] - (c7t['weapon']['zOff'] - c7t['weapon']['zOrg']) * c9u + c7t['bobAnimZ'] * c8B + c7t['recoilAnim'] * (c7t['weapon']['recoilZ'] || 0x0) * c8F);
            }
        }, this['updateHeight'] = function(c7t) {
            var c7u = c8E['crouchDst'] * c7t['crouchVal'];
            if (!c7s || c7t['isYou'] && !c7r['config']['thirdPerson']) c7t['height'] = c8E['playerHeight'] - c7u;
            else {
                var c7w = c8E['crouchLean'] * c7t['crouchVal'];
                c7s['rotateMesh'](c7t['lowerBody'], 0x0, c7w + 0.5 * c7t['yDire'], 0x0), c7t['upperBody'] && (c7t['upperBody']['rotation']['x'] -= c7w), c7s['moveMesh'](c7t['lowerBody'], 0x0, c8E['legHeight'] - c7u, 0x0);
                for (var c8B = 0x0; 0x4 > c8B; ++c8B) c7t['legMeshes'][c8B] && (c7t['legMeshes'][c8B]['visible'] = 0x1 >= c8B ? !c7t['crouchVal'] : !!c7t['crouchVal']);
            }
        }, this['generateMeshes'] = function(c7t, c7w, c8B = !0x1) {
            var c8D = c7r['classes'][c7t['classIndex']]['colors'],
                c8F = c8D[0x0];
            c8E['skinColors'][c7t['skinColIndex']] && (c8F = c8E['skinColors'][c7t['skinColIndex']]);
            var c8G = c7r['config']['thirdPerson'] || !c7w;
            if (c7t['objInstances'] = c7s['genObj3D'](c7t['x'], c7t['y'], c7t['z']), 'inf' == c7t['team'] && (c8F = 0x596151, c7t['hatIndex'] = 0x7a), 'prop' == c7t['team']) {
                var c8H = c8E['propsH'][c7t['propID']];
                c7s['loadMesh']({
                    'src': c8H + '_0'
                }, 0x0, c8E[c8H + 'Scale'] + (c8E['propsCPY'][c8H] || 0x0), 0x0, 0x0, c8E[c8H + 'Scale'], c7t['objInstances'], !0x1);
            } else {
                if (c7t['lowerBody'] = c7s['genObj3D'](0x0, c8E['legHeight'], 0x0), c8G && c7t['lowerBody']['add'](c7s['genBody'](c8D[0x1], c8D[0x2], c8D[0x4], c8F, c7t['isPreview'] || c7t['isYou'])), c7t['upperBody'] = c7s['genObj3D'](0x0, 0x0, 0x0), c7t['lowerBody']['add'](c7t['upperBody']), 0x0 <= c7t['backIndex'] && c8G && (c7t['backMesh'] = c7s['genObj3D'](0x0, (c8E['playerHeight'] - c8E['legHeight'] - c8E['headScale']) / 0x2 - (c7r['store']['skins'][c7t['backIndex']]['sitOff'] || 0x0), -(c7r['store']['skins'][c7t['backIndex']]['sitOffZ'] || 0x0)), c7t['lowerBody']['add'](c7t['backMesh']), c7s['loadMesh']({
                        'src': 'body/body_' + c7r['store']['skins'][c7t['backIndex']]['id'],
                        'texSrc': c7r['store']['skins'][c7t['backIndex']]['tex'] ? 'body/body_' + c7r['store']['skins'][c7t['backIndex']]['id'] + '_' + c7r['store']['skins'][c7t['backIndex']]['tex'] : null,
                        'glowText': c7r['store']['skins'][c7t['backIndex']]['glow'],
                        'emissive': c7r['store']['skins'][c7t['backIndex']]['glow'] ? 0xffffff : null,
                        'noGreen': !0x0
                    }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c7r['store']['skins'][c7t['backIndex']]['sclMlt'] || 0x1), c7t['backMesh'])), 0x0 <= c7t['hatIndex'] && c8G && (c7t['hatMesh'] = c7s['genObj3D'](0x0, c8E['playerHeight'] - c8E['legHeight'] - (c7r['store']['skins'][c7t['hatIndex']]['sitOff'] || 0x0), -(c7r['store']['skins'][c7t['hatIndex']]['sitOffZ'] || 0x0)), c7t['lowerBody']['add'](c7t['hatMesh']), c7s['loadMesh']({
                        'src': 'hats/hat_' + c7r['store']['skins'][c7t['hatIndex']]['id'],
                        'texSrc': c7r['store']['skins'][c7t['hatIndex']]['tex'] ? 'hats/hat_' + c7r['store']['skins'][c7t['hatIndex']]['id'] + '_' + c7r['store']['skins'][c7t['hatIndex']]['tex'] : null,
                        'glowText': c7r['store']['skins'][c7t['hatIndex']]['glow'],
                        'emissive': c7r['store']['skins'][c7t['hatIndex']]['glow'] ? 0xffffff : null,
                        'noGreen': !0x0
                    }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c7r['store']['skins'][c7t['hatIndex']]['sclMlt'] || 0x1), c7t['hatMesh'])), c8G)
                    for (var c8I = 0x0; 0x4 > c8I; ++c8I) c7t['legMeshes']['push'](c7s['genLeg'](0x1 == c8I || 0x3 == c8I, c8D[0x2], c8D[0x3], 0x1 < c8I)), 0x2 <= c8I && c7s['rotateMesh'](c7t['legMeshes'][c8I], 0x2 == c8I ? -Math['PI'] / 0x6 : Math['PI'] / 0x8, 0x0, 0x0), c7t['legMeshes'][c8I]['visible'] = 0x1 >= c8I, c7t['objInstances']['add'](c7t['legMeshes'][c8I]);
                for (c8I = 0x0; c8I < c7t['ammos']['length']; ++c8I) {
                    var c8J = c7s['genObj3D'](0x0, 0x0, 0x0),
                        c9S = c7r['weapons'][c7t['loadout'][c8I]],
                        c9T = null == c9S['attach'] ? null : c7r['attach'][c9S['attach']];
                    if (c7w && c9S['ammo']) {
                        c8J['muzzles'] = [], c8J['casings'] = [];
                        for (var c9U = 0x0; 0x2 > c9U; ++c9U)(!c9U || c9S['akimbo']) && (c8J['muzzles']['push'](new c7u['Sprite']()), c8J['muzzles'][c9U]['visible'] = !0x1, c8J['muzzles'][c9U]['static'] = !0x0, c8C['particles']['push'](c8J['muzzles'][c9U]), c8J['add'](c8J['muzzles'][c9U]), c8J['casings']['push'](c7s['genObj3D'](c9U ? 0x2 * -c9S['xOff'] : 0x0, c9S['caseYOff'] || 0x0, c9S['caseZOff'] || 0x0)), c8J['add'](c8J['casings'][c9U]));
                        c8J['muzzleFlash'] = c7s['genObj3D'](0x0, 0.4, 0x0), c8J['muzzles'][0x0]['add'](c8J['muzzleFlash']);
                    }
                    if (c9S['src'] || !c7t['isYou']) c8J['add'](c7s['genArms'](c9S, c8D[0x1], c8D[0x5], c8F, null, c7t['isPreview'] || c7t['isYou']));
                    else {
                        var c9V;
                        for (c9U = 0x0; 0x2 > c9U; ++c9U) c9V = c7s['genArms'](c9S, c8D[0x1], c8D[0x5], c8F, c9U + 0x1, c7t['isPreview'] || c7t['isYou']), c8J['add'](c9V), c7t['armMeshes']['push'](c9V);
                    }
                    if (c7t['weaponMeshes']['push'](c8J), c7t['weaponMeshes'][c8I]['visible'] = !0x1, c7t['upperBody']['add'](c7t['weaponMeshes'][c8I]), c9S['melee'] && (c7t['isYou'] || 'inf' != c7t['team'])) {
                        var c9W = c7r['store']['skins'][c7t['meleeIndex']] || {};
                        c7t['weaponGeos'][c8I] = c7s['loadMesh']({
                            'src': 'melee/melee_' + (c9W['id'] || 0x0),
                            'texSrc': c9W['tex'] ? 'melee/melee_' + (c9W['id'] || 0x0) + '_' + c9W['tex'] : '',
                            'glowText': c9W['glow'],
                            'emissive': c9W['glow'] ? 0xffffff : null,
                            'tFilter': c7u['LinearFilter'],
                            'mat': c8B || c7t['isYou'] ? c7u['MeshPhongMaterial'] : null,
                            'noGreen': !0x0,
                            'uv2': !0x0,
                            'specular': 0x292929,
                            'shininess': 0x64
                        }, c7t['isYou'] ? 0.9 : 1.7, c7t['isYou'] ? -0.95 : -0.4, c7t['isYou'] ? 0.72 : 1.2, [-Math['PI'] / 3.5, c7t['isYou'] ? 0.3 : Math['PI'] / 0x2, -0.9 * Math['PI']], c9W['sclMlt'] || 0.9, c7t['armMeshes'][0x1] ? c7t['armMeshes'][0x1] : c7t['weaponMeshes'][c8I]), c7t['armMeshes'][0x1] && (c7t['armMeshes'][0x1]['yR'] = c7t['armMeshes'][0x1]['rotation']['y'], c7t['isYou'] ? (c7t['armMeshes'][0x1]['zR'] = c7t['armMeshes'][0x1]['rotation']['z'] = -0.3, c7t['armMeshes'][0x1]['xR'] = c7t['armMeshes'][0x1]['rotation']['x'] = -0.4, c7t['armMeshes'][0x1]['xP'] = c7t['armMeshes'][0x1]['position']['x'] = 0.4, c7t['armMeshes'][0x1]['yP'] = c7t['armMeshes'][0x1]['position']['y'] = 0.3) : (c7t['armMeshes'][0x1]['zR'] = c7t['armMeshes'][0x1]['rotation']['z'] = 0.3, c7t['armMeshes'][0x1]['yP'] = c7t['armMeshes'][0x1]['position']['y'] = -0.4, c7t['armMeshes'][0x1]['xR'] = c7t['armMeshes'][0x1]['rotation']['x'], c7t['armMeshes'][0x1]['xP'] = c7t['armMeshes'][0x1]['position']['x'] = -0.2), c7t['armMeshes'][0x0]['xP'] = c7t['armMeshes'][0x0]['position']['x'] = 0.3, c7t['armMeshes'][0x0]['yP'] = c7t['armMeshes'][0x0]['position']['y'] = -0.5, c7t['armMeshes'][0x0]['zR'] = c7t['armMeshes'][0x0]['rotation']['z'] = -0.4, c7t['armMeshes'][0x0]['yR'] = c7t['armMeshes'][0x0]['rotation']['y']);
                    }
                    if (c9S['src']) {
                        var c9X = c7r['store']['skins'][c7t['skins'][c8I]] || {},
                            c9Y = 0x0 <= c7t['skins'][c8I] && (c9X['glow'] || c9X['sameGlow']);
                        for (c9U = 0x0; 0x2 > c9U; ++c9U)(!c9U || c9S['akimbo']) && c7s['loadMesh']({
                            'src': 'weapons/' + c9S['src'] + (null == c9X['mid'] ? '' : '_' + c9X['mid']),
                            'texSrc': null == c9X['mid'] ? c9X['tex'] ? c9X['tex'] : 0x0 <= c7t['skins'][c8I] ? 'weapons/skins/' + c9S['src'] + '_' + c9X['id'] : null : null,
                            'tFilter': c7u['LinearFilter'],
                            'mat': c8B || c7t['isYou'] ? c7u['MeshPhongMaterial'] : null,
                            'movT': c9X['movT'],
                            'movD': c9X['movD'] || 0x0,
                            'sameGlow': c9X['sameGlow'],
                            'glowText': c9Y,
                            'noGreen': !0x0,
                            'uv2': !0x0,
                            'ao': c7w && !c9S['noAo'],
                            'shininess': c9X['shine'] || c9S['shine'] || 0x3c,
                            'specular': 0x292929,
                            'transparent': c9S['seeThrough'],
                            'emissive': c9S['transp'] || c9Y ? 0xffffff : null
                        }, 0x1 == c9U ? -0x2 * c9S['xOff'] : 0x0, c9X['yOff'] || 0x0, c9X['zOff'] || 0x0, Math['PI'] / 0x2, c9X['mScl'] || c9S['scale'], c7t['weaponMeshes'][c8I]);
                    }
                    c7w && c9S['flap'] && c7s['sniperFlap'] && (c7t['weaponMeshes'][c8I]['flapMesh'] = c7s['loadMesh']({
                        'src': 'attach/' + c9S['flap']['src'],
                        'tFilter': c7u['LinearFilter'],
                        'noGreen': !0x0,
                        'mat': c7u['MeshPhongMaterial'],
                        'shininess': 0x3c,
                        'transparent': !0x0
                    }, c9S['flap']['xOff'], c9S['flap']['yOff'], c9S['flap']['zOff'], Math['PI'] / 0x2, c9S['flap']['scl'], c7t['weaponMeshes'][c8I])), c9T && (c7w || c8B) && c7s['loadMesh']({
                        'src': 'attach/' + c9T['src'],
                        'tFilter': c7u['LinearFilter'],
                        'noGreen': !0x0,
                        'mat': c7t['isYou'] ? c7u['MeshPhongMaterial'] : null,
                        'specular': 0x292929,
                        'shininess': 0x3c,
                        'transparent': !0x0
                    }, 0x0, -(c9S['yOrg'] || 0x0) + (c9S['attachYOff'] || 0x0), -(c9S['attachZOff'] || 0x0), Math['PI'] / 0x2, c9T['scale'], c7t['weaponMeshes'][c8I]);
                }
                c7t['objInstances']['add'](c7t['lowerBody']), c7w && c7t['objInstances']['traverse'](function(c7r) {
                    c7r['layers']['set'](0x1);
                });
            }
            return c7t['objInstances'];
        }, this['pickProp'] = function(c7s) {
            if (c8F && c7s && c7s['active'] && (!c7s['lastPropPick'] || 0xc8 <= c7r['now'] - c7s['lastPropPick'])) {
                c7s['lastPropPick'] = c7r['now'];
                var c7t = c7s['xDire'],
                    c7u = c7s['yDire'];
                cbr['length'] = 0x0;
                for (var c7w, c8B = 0x0, c8C = 0x1 / (0x19 * Math['sin'](c7t + Math['PI']) * Math['cos'](c7u)), c8G = 0x1 / (0x19 * Math['cos'](c7t + Math['PI']) * Math['cos'](c7u)), c8H = 0x1 / (0x19 * Math['sin'](c7u)), c8I = c7s['y'] + c7s['height'] - c8E['cameraHeight'], c8J = 0x0; c8J < c7r['map']['manager']['objects']['length']; ++c8J)(c7w = c7r['map']['manager']['objects'][c8J])['active'] && c7w['propID'] && !c7w['noShoot'] && ((c8B = c8D['lineInRect'](c7s['x'], c7s['z'], c8I, c8C, c8G, c8H, c7w['x'] - c7w['width'], c7w['z'] - c7w['length'], c7w['y'] - c7w['height'], c7w['x'] + c7w['width'], c7w['z'] + c7w['length'], c7w['y'] + c7w['height'])) && 0x1 >= c8B && cbr['push']({
                    'obj': c7w,
                    'dst': c8B
                }));
                cbr['length'] && (cbr['sort'](c8D['orderByDst']), cbr[0x0] && cbr[0x0]['obj'] && this['updateProp'](c7s, c8E['propsH']['indexOf'](cbr[0x0]['obj']['propID'])));
            }
        }, this['updateProp'] = function(c7s, c7t, c7u) {
            if (c7s && c7s['active']) {
                null != c7t && (c7s['propID'] = c7t);
                var c7w = c8E[c8E['propsH'][c7t] + 'Scale'],
                    c8B = c8E['propsCP'][c8E['propsH'][c7t]] || 0x0;
                c7s['height'] = c7w + c8B, c7s['scale'] = c7w + c8B, c7u && this['regenMeshes'](c7s), c8F && c8F['broadcast']('game' + c7r['sid'], 'up', c7s['sid'], c7t);
            }
        }, this['regenMeshes'] = function(c7r) {
            c7r['objInstances'] && this['disposeMesh'](c7r, !0x0), c7s && c7s['add'](this['generateMeshes'](c7r, c7r['isYou'])), this['swapWeapon'](c7r, 0x0, !0x0);
        }, this['hideAll'] = function() {
            for (var c7r = 0x0; c7r < this['list']['length']; ++c7r) this['list'][c7r]['active'] && this['list'][c7r]['objInstances'] && (this['list'][c7r]['forcePos'] = !this['list'][c7r]['latestData'], this['list'][c7r]['latestData'] = !0x1, this['list'][c7r]['isYou'] || (this['list'][c7r]['objInstances']['visible'] = !0x1));
        }, this['clear'] = function() {
            if (c7s)
                for (var c7r = 0x0; c7r < this['list']['length']; ++c7r) this['disposeMesh'](this['list'][c7r]);
            this['list']['length'] = 0x0;
        }, this['toggleLOD'] = function(c7r, c7s) {
            c7r['objInstances'] && (c7r['objInstances']['visible'] = c7s), c7r['lodActive'] = !c7s;
        }, this['disposeMesh'] = function(c7r) {
            c7s['remove'](c7r['objInstances']), c7r['objInstances'] = null, c7r['hatMesh'] = null, c7r['backMesh'] = null, c7r['weaponMeshes']['length'] = 0x0, c7r['weaponGeos'] = {}, c7r['armMeshes']['length'] = 0x0, c7r['legMeshes']['length'] = 0x0;
        }, this['add'] = function(c7t, c7u, c8B, c8C, c8G, c8H, c8I, c8J, cat, cau, cav, caw, cax, cay, caz, caA, caB, caC) {
            for (var caD, caE = 0x0; caE < this['list']['length']; ++caE)
                if (this['list'][caE]['id'] == c7t) {
                    caD = this['list'][caE];
                    break;
                }
            return caD ? (caD['weaponMeshes']['length'] = 0x0, caD['weaponGeos'] = {}, caD['legMeshes']['length'] = 0x0, caD['armMeshes']['length'] = 0x0) : ((caD = new c7w(c7t, this, c8D, c8E, c7r))['sid'] = c7u || c8D['generateSID'](this['list']), this['list']['push'](caD)), c8H || (c8H = 'Guest_' + caD['sid']), caD['init'](c8B, c8C, c8G, c8H, caA, caB), c8F && null != c7r['mode'] && this['setTeam'](caD), caz && (caD['team'] = caz), caD['skins'] = c8J || [-0x1, -0x1], caD['hatIndex'] = cat, caD['backIndex'] = cau, caD['meleeIndex'] = cav, caD['skinColIndex'] = caw, caD['secIndex'] = cax, caD['setClass'](c7r, c8I, cax, !!c7s), !caC && c7r['mode']['startingLoadout'] && (caC = c7r['mode']['startingLoadout']), caC && caD['updateLoadout'](c7r, caD['weaponIndex'], !0x1, ...caC), c7s && c7s['add'](this['generateMeshes'](caD, caA)), 'prop' == caD['team'] && this['updateProp'](caD, cay || 0x0, !0x0), this['swapWeapon'](caD, 0x0, !0x0), 'undefined' != typeof window && 'updateWindow' in window && window['updateWindow'](0x17), caD;
        }, this['remove'] = function(c7s) {
            var c7t = this['indexBySid'](c7s);
            if (0x0 <= c7t) {
                c8F && this['list'][c7t] && (c7r['dropFlag'](this['list'][c7t]['flag']), this['dropWeapon'](this['list'][c7t], !0x0));
                this['list'][c7t]['room'];
                var c7u = this['list'][c7t]['id'];
                if (this['list'][c7t]['objInstances'] && this['disposeMesh'](this['list'][c7t]), this['list']['splice'](c7t, 0x1), c8F) {
                    for (var c7w = this['list']['length'] - 0x1; 0x0 <= c7w; --c7w) 0x0 <= (c7t = this['list'][c7w]['sentTo']['indexOf'](c7u)) && this['list'][c7w]['sentTo']['splice'](c7t, 0x1);
                    c8F['broadcast']('game' + c7r['sid'], '2', c7s), this['syncLeaders']();
                }
                'undefined' != typeof window && 'updateWindow' in window && window['updateWindow'](0x17);
            }
        };
        var caJ = [0x0, 0x1, 0x2];
        this['getStepSound'] = function() {
            var c7r = c8D['randInt'](0x0, caJ['length'] - 0x1),
                c7s = caJ[c7r];
            return caJ['splice'](c7r, 0x1), 0x0 >= caJ['length'] && caJ['push'](0x0, 0x1, 0x2), c7s;
        }, this['playerStep'] = function(c7s, c7t, c7u) {
            if (c7t && (!c7s['isYou'] && c7s['crouchVal'] && (c7t *= 1.6), c7s['stepVal'] += c7t * c8E['stepMlt'] * c7s['stepDir'], c7s['stepVal'] >= Math['PI'] / 0x2 && 0x1 == c7s['stepDir'] || c7s['stepVal'] <= -Math['PI'] / 0x2 && -0x1 == c7s['stepDir'])) {
                if (c8B && !c7u) {
                    var c7w = c8D['randFloat'](0.15, 0.25) * (0x1 > c7s['crouchVal'] ? 0x1 : c7s['isYou'] ? 0.5 : 0x0),
                        c8C = (0x1 > c7s['crouchVal'] ? 0x1 : 0.8) * c8D['randFloat'](0.8, 1.2),
                        c8F = c7s['stepSrc'] ? '_' + c7s['stepSrc'] : '';
                    c7s['isYou'] ? c8B['play']('step_' + this['getStepSound']() + c8F, c7w, !0x1, c8C) : c7w && c7r['playerSound']('step_' + c8D['randInt'](0x0, 0x2) + c8F, 0x0, c7w, c7s, c8C, 0xb4);
                }
                c7s['stepDir'] *= -0x1;
            }
        }, this['resetStep'] = function(c7s, c7t) {
            if (!c7t && c7s['isYou'] && c7s['yVel'] && (c7s['jumpTween'] && c7s['jumpTween']['stop'](), c7s['landTween'] && c7s['landTween']['stop'](), c7s['landTween'] = new TWEEN['Tween'](c7s)['to']({
                    'landBobY': 0x6 * c7s['yVel'],
                    'jumpBobY': 0x0
                }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
                    c7s['landTween'] = new TWEEN['Tween'](c7s)['to']({
                        'landBobY': 0x0
                    }, 0x44c)['easing'](TWEEN['Easing']['Elastic']['Out'])['start']();
                })['start']()), c8B && !c7t && c7s['yVel'] && (c7s['stepSrc'] && c7s['stepSrc'], c8B['play']('step_' + this['getStepSound'](), 0.7, !0x1, c8D['randFloat'](0.9, 1.2)), c7s['isYou'] && c7s['crouchVal'] && c7r['config']['canSlide'] && c7s['canSlide'] && c8B['play']('slide_0', 0.35, !0x1, c8D['randFloat'](0.9, 1.1))), c7r['config']['canSlide'] && c7s['crouchVal'] && c7s['canSlide']) {
                c7s['canSlide'] = !0x1, c7s['slideTimer'] = c8E['slideTime'] * c7s['crouchVal'];
                var c7u = this['onTerrain'] ? c8E['playerTerrainSlideVelMlt'] : c8E['playerSlideVelMlt'];
                c7s['xVel'] *= c7u, c7s['zVel'] *= c7u;
            }
        }, this['tryJump'] = function(c7s, c7t) {
            c7r['config'] && c7r['config']['autoJump'] && c7t ? this['jump'](c7s) : (c7s['didJump'] && !c7t && (c7s['didJump'] = !0x1), !c7s['didJump'] && c7t && this['jump'](c7s));
        }, this['jump'] = function(c7s) {
            c7s['jumpCooldown'] = c7s['terrainSlipping'] ? c8E['playerSlippingJumpCooldown'] : 0x0, c7s['didJump'] = !0x0, c7s['onTerrain'] = !0x1;
            var c7t = c8E['jumpVel'] * (c7r['config'] ? c7r['config']['jumpMlt'] : 0x1),
                c7u = c8E['jumpPush'] * (c7r['config'] ? c7r['config']['jumpMlt'] : 0x1);
            c7s['yVel'] += (c7t - c7t * (c8E['crouchJump'] * c7s['crouchVal'])) * c7s['weapon']['spdMlt'] * (c7s['aimVal'] ? 0x1 : c8E['aimJumpSlow']);
            var c7w = c8D['getDistance'](0x0, 0x0, c7s['xVel'], c7s['zVel']);
            if (c7s['xVel'] -= c7u * c7w * Math['sin'](c7s['xDire']), c7s['zVel'] -= c7u * c7w * Math['cos'](c7s['xDire']), c8B && !c7s['recon'] && c7s['isYou']) {
                c7s['landTween'] && c7s['landTween']['stop'](), c7s['landTween'] = new TWEEN['Tween'](c7s)['to']({
                    'landBobY': 0x0
                }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['start'](), c7s['jumpTween'] && c7s['jumpTween']['stop'](), c7s['jumpTween'] = new TWEEN['Tween'](c7s)['to']({
                    'jumpBobY': 0.22
                }, 0x1f4)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                var c8C = c8D['randFloat'](0.12, 0.15);
                new TWEEN['Tween'](c7s)['to']({
                    'jumpRot': [c8C, 0x0]
                }, 0x384)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                c8B['play']('jump_' + c8D['randInt'](0x0, 0x1), 0.04, !0x1, c8D['randFloat'](0.9, 0x1));
            }
        }, this['updateAim'] = function(c7r, c7t) {
            c7s['zoom'](0x1 + (c7r['weapon']['zoom'] - 0x1) * c7t);
        }, this['toggleAim'] = function(c7t, c7u) {
            if (c8B && !c7t['recon'] && c8B['play']('aim_' + c7u, 0.1), c7u && 'prop' != c7t['team'] || this['resetAim'](), c7t['weapon']['scope'] && c7t['weaponMeshes'] && c7t['weaponMeshes'][c7t['weaponIndex']] && (c7s['zoom'](c7u ? c7t['weapon']['zoom'] : 0x1), c7t['weaponMeshes'][c7t['weaponIndex']]['visible'] = !this['isWeaponHidden'](c7t, c7t['weaponIndex']) && !c7u, aimRecticle['style']['opacity'] = c7u ? 0x1 : 0x0), c7r['attach'][c7t['weapon']['attach']]) {
                aimDot['style']['opacity'] = c7u ? 0x1 : 0x0;
                var c7w = c7r['store']['skins'][c7t['skins'][c7t['weaponIndex']]],
                    c8C = './textures/dots/' + (c7w && c7w['dot'] || 'dot_0') + '.png';
                aimDot['src'] != c8C && (aimDot['src'] = c8C);
            }
        }, this['resetAim'] = function() {
            c7s['zoom'](0x1), aimRecticle['style']['opacity'] = 0x0, aimDot['style']['opacity'] = 0x0;
        }, this['isWeaponHidden'] = function(c7s, c7t) {
            var c7u = c7s['loadout'][c7t];
            return !(!c7r['weapons'][c7u]['melee'] || !c7r['hideWeapon'][0x2]) || (!(!c7r['weapons'][c7u]['secondary'] || !c7r['hideWeapon'][0x1]) || !(c7r['weapons'][c7u]['melee'] || c7r['weapons'][c7u]['secondary'] || !c7r['hideWeapon'][0x0]));
        }, this['reload'] = function(c7r) {
            !c7r['reloadTimer'] && c7r['ammos'][c7r['weaponIndex']] < c7r['weapon']['ammo'] && (c8B && c8B['play']('reload_1', 0.25), c7r['reloadTimer'] = c7r['weapon']['reload'], c7r['burstCount'] = 0x0, c7r['isYou'] && this['cancelInspect'](c7r));
        }, this['endReload'] = function(c7r) {
            c8B && c8B['play']('reload_2' + (c7r['custReload'] || ''), 0.25);
        }, this['updatePlayerAmmo'] = function(c7r) {
            c7r['isYou'] && (ammoDisplay['style']['display'] = 'inline-block', ammoVal['innerHTML'] = (c7r['ammos'][c7r['weaponIndex']] || (c7r['weapon']['melee'] ? '-' : 0x0)) + '\x20<span\x20id=\x27ammoMax\x27>\x20|\x20' + (c7r['weapon']['ammo'] || '-') + '</span>', 0x0 >= c7r['ammos'][c7r['weaponIndex']] ? (reloadMsg['innerHTML'] = '[R]\x20Reload', reloadMsg['style']['display'] = 'block') : reloadMsg['style']['display'] = 'none');
        }, this['cancelInspect'] = function(c7r) {
            c7r['inspecting'] = !0x1, c7r['inspectX'] = 0x0;
        }, this['wInspect'] = function(c7r) {
            c7r['inspecting'] ? this['cancelInspect'](c7r) : !c7r['weapon']['nInsp'] && !c7r['inspecting'] && 0x1 == c7r['aimVal'] && !c7r['reloadTimer'] && (c7r['inspecting'] = !0x0);
        }, this['melee'] = function(c7s) {
            if (c7s['reloads'][c7s['weaponIndex']] = c7s['weapon']['rate'], c7s['didShoot'] = !0x0, c7s['isYou']) {
                if (c7s['weapon']['anim']) {
                    var c7t = c7r['store']['skins'][c7s['meleeIndex']] || {};
                    c7s['weapon']['anim'](c7s, TWEEN, c7t['animInd'] || 0x1);
                }
                c7s['weapon']['sounds'] && c8B['play'](c7s['weapon']['sounds'][c8D['randInt'](0x0, c7s['weapon']['sounds']['length'] - 0x1)], 0.1, !0x1, c8D['randFloat'](0.9, 1.1));
            }
            var c7u = c7s['xDire'],
                c7w = c7s['yDire'];
            cbr['length'] = 0x0;
            for (var c8C = 0x0, c8G = 0x1 / (c7s['weapon']['range'] * Math['sin'](c7u + Math['PI']) * Math['cos'](c7w)), c8I = 0x1 / (c7s['weapon']['range'] * Math['cos'](c7u + Math['PI']) * Math['cos'](c7w)), c8J = 0x1 / (c7s['weapon']['range'] * Math['sin'](c7w)), caJ = c7s['y'] + c7s['height'] - c8E['cameraHeight'], cbp = 0x0; cbp < c7r['map']['manager']['objects']['length']; ++cbp)(c8H = c7r['map']['manager']['objects'][cbp])['active'] && !c8H['noShoot'] && ((c8C = c8D['lineInRect'](c7s['x'], c7s['z'], caJ, c8G, c8I, c8J, c8H['x'] - c8H['width'], c8H['z'] - c8H['length'], c8H['y'] - c8H['height'], c8H['x'] + c8H['width'], c8H['z'] + c8H['length'], c8H['y'] + c8H['height'])) && 0x1 >= c8C && cbr['push']({
                'obj': c8H,
                'dst': c8C
            }));
            if (c8F)
                for (cbp = 0x0; cbp < this['list']['length']; ++cbp) this['list'][cbp]['active'] && c7s != this['list'][cbp] && (!c7s['team'] || c7s['team'] != this['list'][cbp]['team']) && ((c8H = this['fetchState'](this['list'][cbp], c7s['getStateConst']())) && ((c8C = c8D['lineInRect'](c7s['x'], c7s['z'], caJ, c8G, c8I, c8J, c8H['x'] - this['list'][cbp]['scale'] - c8E['hitBoxPad'], c8H['z'] - this['list'][cbp]['scale'] - c8E['hitBoxPad'], c8H['y'], c8H['x'] + this['list'][cbp]['scale'] + c8E['hitBoxPad'], c8H['z'] + this['list'][cbp]['scale'] + c8E['hitBoxPad'], c8H['y'] + this['list'][cbp]['height'] + c8E['hitBoxPad'])) && 0x1 >= c8C && cbr['push']({
                    'player': !0x0,
                    'obj': this['list'][cbp],
                    'dst': c8C
                })));
            c7s['weapon']['range'];
            if (cbr['length']) {
                cbr['sort'](c8D['orderByDst']);
                var cbq = c7s['weapon']['dmg'];
                for (cbp = 0x0; cbp < cbr['length'] && (c8H = cbr[cbp], c7s['weapon']['range'] * c8H['dst'], c8F) && (c8F && !c7r['waitTimers'] && c8H['obj'] && c8H['obj']['health'] && !c8H['player'] && (c8F['send'](c7s['id'], '4'), c8H['obj']['health'] -= cbq, 0x0 >= c8H['obj']['health'] && (c8H['obj']['active'] = !0x1, c8H['obj']['health'] = 0x0, c7r['destObjs']['push'](c8H['obj']['uid']), c8F['broadcast']('game' + c7r['sid'], 'do', c8H['obj']['uid']))), c8F && 'seek' == c7s['team'] && !c8H['player'] && c8H['obj'] && c8H['obj']['propID'] && this['changeHealth'](c7s, null, 0xa) && this['kill'](c7s, null, {}), c8H['obj'] && (c8H['obj']['onMelee'] || c8H['obj']['onDamage']) && c7r['onTrigger'](c7s, c8H['obj']), c8H['player'] || c8H['obj'] && c8H['obj']['dummy']) && (this['changeHealth'](c8H['obj'], c7s, cbq) && (c7s && (c7s['melees']++, c8F && c7r['incStat']('mk', c7s)), this['kill'](c8H['obj'], c7s, {
                        'weaponId': c7r['weapons']['findIndexBySrc'](c7s['weapon']['src']),
                        'weapon': c7s['weapon']
                    })), !(0x0 >= (cbq -= null == c7s['weapon']['pierce'] ? cbq : c7s['weapon']['dmg'] * c8E['materialDens']['flesh'] * c7s['weapon']['pierce']))); ++cbp);
            }
        };
        var cbr = [];
        this['shoot'] = function(c7t, c7u) {
            var c7w = !0x1;
            if (c8F && c7r['incStat']('s', c7t), c7r['config']['noReload'] || c7t['ammos'][c7t['weaponIndex']]--, c7t['didShoot'] = !0x0, c7t['burstCount'] ? c7t['burstCount']-- : c7t['burstCount'] = c7t['weapon']['burst'] ? c7t['weapon']['burst']['c'] - 0x1 : 0x0, c7t['reloads'][c7t['weaponIndex']] = c7t['burstCount'] && c7t['weapon']['burst'] ? c7t['weapon']['burst']['r'] : c7t['weapon']['rate'], this['updatePlayerAmmo'](c7t), c7r['playSound']) {
                var c8G = c7t['ammos'][c7t['weaponIndex']] / c7r['weapons'][c7t['loadout'][c7t['weaponIndex']]]['ammo'],
                    c8I = c7r['store']['skins'][c7t['skins'][c7t['weaponIndex']]],
                    c8J = c7t['weapon']['sound'] + (c8I && null != c8I['mid'] ? '_' + c8I['mid'] : '');
                c7t['isYou'] && 0.25 >= c8G && !c7t['weapon']['nRing'] ? c7r['playSound'](c8J, 0.85, c7t, !0x1, c8D['randFloat'](0.9, 0x1) + 0.15 * (0x1 - c8G / 0.25)) : c7r['playSound'](c8J, 0.85, c7t, !0x1, c8D['randFloat'](0.9, 0x1));
            }
            if (c7t['recoilForce'] += c7t['weapon']['recoil'], c7t['isYou']) {
                c7r['controls'] && c7r['controls']['gamepad']['connected'] && c7r['controls']['gamepad']['rumble'](0x0, c7t['weapon']['rumbleDur'] || 0xc8, c7t['weapon']['rumble'] || 0.5);
                var caJ = c8D['randInt'](0x0, 0x1) ? -c7t['weapon']['recoilR'] : c7t['weapon']['recoilR'];
                c7t['recoilX'] += caJ, c7t['recoilZ'] += caJ, c7t['recoilTween'] && c7t['recoilTween']['stop']();
                var cbz = c7t['weapon']['recoilAnim'] && c7t['weapon']['recoilAnim']['time'] || c7t['weapon']['rate'];
                0x0 == c7t['aimVal'] && c7t['weapon']['recoilAnim'] && c7t['weapon']['recoilAnim']['aimTime'] && (cbz = c7t['weapon']['recoilAnim']['aimTime']), c7t['recoilTween'] = new TWEEN['Tween'](c7t)['to'](c7t['weapon']['recoilAnim'] || {}, 0.15 * cbz)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
                    c7t['recoilTween'] = new TWEEN['Tween'](c7t)['to']({
                        'recoilTweenY': 0x0,
                        'recoilTweenYM': 0x0,
                        'recoilTweenZ': 0x0
                    }, 0.95 * cbz)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                })['start'](), this['cancelInspect'](c7t);
            }
            if (c7t['isYou'] && !this['isWeaponHidden'](c7t, c7t['weaponIndex'])) {
                var cbA = c7t['weaponMeshes'][c7t['weaponIndex']],
                    cbB = 0x0 == c7t['aimVal'] && c7t['weapon']['scope'];
                if (c8C['showMuzzle'] && !c7t['weapon']['nMuz'] && (0x0 == c7s['useDepthMap'] || '0' == c7s['useDepthMap'])) {
                    for (var cbC = 0x0; cbC < cbA['muzzles']['length']; ++cbC) cbA['muzzles'][cbC]['visible'] = !0x0, c8C['setMaterial'](cbA['muzzles'][cbC], c7t['weapon']['muzID'] || 0x2, 0x1, !0x0), cbA['muzzles'][cbC]['init'](cbC ? -0x2 * c7t['weapon']['xOff'] : 0x0, c7t['weapon']['muzOffY'] || 0x0, -c7t['weapon']['muzOff'], 0x0, 0x0, 0x0, 0x4 * (c7t['weapon']['muzMlt'] || 0x1), 0x1);
                    if (!cbB)(cce = c7t['weaponMeshes'][c7t['weaponIndex']]['muzzles'][0x0]['getWorldPosition']()['clone']())['project'](c7s['camera']), cce['x'] = (cce['x'] + 0x1) / 0x2, cce['y'] = (cce['y'] + 0x1) / 0x2, c7s['flash'](cce['x'], cce['y']);
                }
                if (!c7t['weapon']['nCase'] && c8C['active'])
                    for (cbC = 0x0; cbC < c7t['weaponMeshes'][c7t['weaponIndex']]['casings']['length']; ++cbC)
                        if (cce = c7t['weaponMeshes'][c7t['weaponIndex']]['casings'][cbC]['getWorldPosition'](), c8B && 0x190 < c7r['now'] - (c7t['lastShell'] || 0x0) && (c7t['lastShell'] = c7r['now'], c8B['play3D']('case_' + c8D['randInt'](0x0, 0x1), cce['x'], cce['y'], cce['z'], 0.65, c8D['randFloat'](0.8, 1.3))), !cbB) {
                            var cbD = c8D['randInt'](0x0, 0x1) ? 1.4 : 0.8;
                            c8C['physObj'](cce['x'], cce['y'], cce['z'], c7t['xDire'] - Math['PI'] / 0x2 * (cbC ? -0x1 : 0x1), Math['PI'] / 0x5 * c8D['randFloat'](0.75, 1.2) * cbD, 0x19, !0x1, c7t['weapon']['caseInd'] || 0x1, c7t);
                        }
            }
            if (null == c7t['weapon']['projectile'])
                for (var cbE = 0x0, cbF = c7t['weapon']['physPow'] ? -0x1 : 0x0; cbF < (c7t['weapon']['shots'] || 0x1); ++cbF) {
                    var cbG = 0x0,
                        cbH = 0x0;
                    if (c7t['weapon']['cSpread'] && 0x0 <= cbF) {
                        var cbI = c8D['randFloat'](0.09, 0.14);
                        cbG = c7t['xDire'] + c7t['weapon']['cSpread'][cbE] * cbI, cbH = c7t['yDire'] + c7t['weapon']['cSpread'][cbE + 0x1] * cbI, cbE += 0x2;
                    } else {
                        var cbJ = 0x0 <= cbF ? (c7t['spread'] + (c7t['weapon']['innac'] || 0x0)) * c8E['spreadAdj'] : 0x0;
                        cbG = c7t['xDire'] + c8D['randFloat'](-cbJ, cbJ), cbH = c7t['yDire'] + c8D['randFloat'](-cbJ, cbJ);
                    }
                    cbH += c7t['recoilAnimY'] * c8E['recoilMlt'];
                    var cbK = c7t['weapon']['range'];
                    0x0 > cbF && (cbK = c7t['weapon']['physRang']), cbr['length'] = 0x0;
                    for (var cbL = 0x0, cbM = 0x1 / (cbK * Math['sin'](cbG + Math['PI']) * Math['cos'](cbH)), cbN = 0x1 / (cbK * Math['cos'](cbG + Math['PI']) * Math['cos'](cbH)), cbO = 0x1 / (cbK * Math['sin'](cbH)), cbP = c7t['y'] + c7t['height'] - c8E['cameraHeight'], cbQ = 0x0; cbQ < c7r['map']['manager']['objects']['length']; ++cbQ)(c8H = c7r['map']['manager']['objects'][cbQ])['active'] && !c8H['noShoot'] && ((cbL = c8D['lineInRect'](c7t['x'], c7t['z'], cbP, cbM, cbN, cbO, c8H['x'] - c8H['width'], c8H['z'] - c8H['length'], c8H['y'] - c8H['height'], c8H['x'] + c8H['width'], c8H['z'] + c8H['length'], c8H['y'] + c8H['height'])) && 0x1 >= cbL && cbr['push']({
                        'obj': c8H,
                        'dst': cbL
                    }));
                    if (c8F && 0x0 <= cbF)
                        for (cbQ = 0x0; cbQ < this['list']['length']; ++cbQ) this['list'][cbQ]['active'] && c7t != this['list'][cbQ] && (!c7t['team'] || c7t['team'] != this['list'][cbQ]['team']) && ((c8H = this['fetchState'](this['list'][cbQ], c7t['getStateConst']())) && ((cbL = c8D['lineInRect'](c7t['x'], c7t['z'], cbP, cbM, cbN, cbO, c8H['x'] - this['list'][cbQ]['scale'] - c8E['hitBoxPad'], c8H['z'] - this['list'][cbQ]['scale'] - c8E['hitBoxPad'], c8H['y'], c8H['x'] + this['list'][cbQ]['scale'] + c8E['hitBoxPad'], c8H['z'] + this['list'][cbQ]['scale'] + c8E['hitBoxPad'], c8H['y'] + this['list'][cbQ]['height'] + c8E['hitBoxPad'])) && 0x1 >= cbL && cbr['push']({
                            'player': !0x0,
                            'obj': this['list'][cbQ],
                            'dst': cbL
                        })));
                    var cbR = c7r['map']['terrain'];
                    if (cbR) {
                        var cbS = cbR['raycast'](c7t['x'], -c7t['z'], cbP, 0x1 / cbM, -0x1 / cbN, 0x1 / cbO);
                        if (cbS) {
                            let c7r = c8D['getDistance3D'](c7t['x'], cbP, c7t['z'], cbS['x'], cbS['z'], -cbS['y']);
                            cbr['push']({
                                'terrain': !0x0,
                                'dst': c7r / cbK
                            });
                        }
                    }
                    var cbU = cbK;
                    if (cbr['length']) {
                        cbr['sort'](c8D['orderByDst']);
                        var cbV = c7t['weapon']['dmg'],
                            cbW = !0x1;
                        for (cbQ = 0x0; cbQ < cbr['length']; ++cbQ) {
                            if (cbU = cbK * (c8H = cbr[cbQ])['dst'], 0x0 > cbF) {
                                var cbX = (0x1 - c8H['dst']) * (c7t['weapon']['physPow'] * (c7r['config'] ? c7r['config']['impulseMlt'] : 0x1)),
                                    cbY = cbX * Math['sin'](cbG + Math['PI']) * Math['cos'](cbH);
                                c7t['xVel'] -= cbY;
                                var cbZ = cbX * Math['cos'](cbG + Math['PI']) * Math['cos'](cbH);
                                c7t['zVel'] -= cbZ;
                                var cc0 = cbX * Math['sin'](cbH);
                                c7t['yVel'] -= cc0, c7t['onGround'] = !0x1, c8F || (c7u['velObj'] = {
                                    'x': cbY,
                                    'y': cbZ,
                                    'z': cc0
                                });
                                break;
                            }
                            if (!c8F) break;
                            var cc1 = c7t['weapon']['dropStart'] || 0x0,
                                cc2 = Math['min'](0x1, 0x1 - (0x1 - c8H['dst']) * cbK / (cbK - cc1)),
                                cc3 = cbV - c7t['weapon']['dmgDrop'] * cc2,
                                cc4 = !0x1,
                                cc5 = !0x1;
                            if (c8H['player']) {
                                var cc6 = cbP + cbU * Math['sin'](cbH);
                                cc4 = c8H['obj']['y'] + c8H['obj']['height'] - cc6 < c8E['headScale'], cc5 = c8H['obj']['y'] + c8E['legHeight'] > cc6, cc3 *= cc4 && !c7t['weapon']['noHeadShot'] ? 1.5 : 0x1, cc3 *= cc5 ? 0.5 : 0x1, cc4 || !c7r['config'] || !c7r['config']['headshotOnly'] || (cc3 = 0x0);
                            }
                            if (c8F && !c7r['waitTimers'] && c8H['obj'] && c8H['obj']['health'] && !c8H['player'] && (c8H['obj']['health'] -= cc3, c8F['send'](c7t['id'], '4'), 0x0 >= c8H['obj']['health'] && (c8H['obj']['active'] = !0x1, c8H['obj']['health'] = 0x0, c7r['destObjs']['push'](c8H['obj']['uid']), c8F['broadcast']('game' + c7r['sid'], 'do', c8H['obj']['uid']))), c8F && 'seek' == c7t['team'] && !c8H['player'] && c8H['obj'] && c8H['obj']['propID'] && this['changeHealth'](c7t, null, 0xa) && this['kill'](c7t, null, {}), c8H['obj'] && (c8H['obj']['onShoot'] || c8H['obj']['onDamage']) && c7r['onTrigger'](c7t, c8H['obj']), c8H['player'] || c8H['obj'] && c8H['obj']['dummy']) {
                                if (c8H['player'] && (c7w = !0x0), this['changeHealth'](c8H['obj'], c7t, cc3)) {
                                    var cc7 = {
                                        'dst': c8H['dst'],
                                        'headShot': cc4,
                                        'wallbang': cbW,
                                        'weaponId': c7r['weapons']['findIndexBySrc'](c7t['weapon']['src']),
                                        'weapon': c7t['weapon']
                                    };
                                    this['kill'](c8H['obj'], c7t, cc7);
                                }
                                cbV -= null == c7t['weapon']['pierce'] ? cbV : c7t['weapon']['dmg'] * c8E['materialDens']['flesh'] * c7t['weapon']['pierce'];
                            } else {
                                if (!c8H['obj'] || !c8H['obj']['penetrable']) break;
                                cbW = !0x0, cbV -= null == c7t['weapon']['pierce'] ? cbV : c7t['weapon']['dmg'] * c8E['materialDens']['default'] * c7t['weapon']['pierce'];
                            }
                            if (0x0 >= cbV) break;
                        }
                    }
                    cbU -= 0.12;
                    var cc8 = c7t['x'] + cbU * Math['sin'](cbG + Math['PI']) * Math['cos'](cbH),
                        cc9 = (cc6 = cbP + cbU * Math['sin'](cbH), c7t['z'] + cbU * Math['cos'](cbG + Math['PI']) * Math['cos'](cbH)),
                        cca = 0x0,
                        ccb = 0x0;
                    if (cbr['length'] && (c8H['terrain'] ? ccb = Math['PI'] / 0x2 : cc6 >= c8H['obj']['y'] + c8H['obj']['height'] ? ccb = Math['PI'] / 0x2 : cc6 <= c8H['obj']['y'] - c8H['obj']['height'] ? ccb = -Math['PI'] / 0x2 : cc8 <= c8H['obj']['x'] - c8H['obj']['width'] ? cca = -Math['PI'] / 0x2 : cc8 >= c8H['obj']['x'] + c8H['obj']['width'] ? cca = Math['PI'] / 0x2 : cc9 <= c8H['obj']['z'] - c8H['obj']['length'] && (cca = Math['PI']), !c8F && c8C['effect'](cc8, cc6, cc9, cca, ccb, 0x0)), c8F) {
                        var ccc = c7t['weapon'] && c7t['weapon']['trail'] ? 0x1 : 0x0;
                        for (cbQ = 0x0; cbQ < this['list']['length']; ++cbQ)(this['list'][cbQ]['active'] || this['list'][cbQ]['spectating']) && this['list'][cbQ] != c7t && (cbr['length'] && !c8H['player'] ? c8F['send'](this['list'][cbQ]['id'], '9', c7t['sid'], Math['round'](cc8), Math['round'](cc6), Math['round'](cc9), cca['round'](0x1), ccb['round'](0x1), ccc) : c8F['send'](this['list'][cbQ]['id'], '9', c7t['sid'], Math['round'](cc8), Math['round'](cc6), Math['round'](cc9), void 0x0, void 0x0, ccc));
                    }
                    if (c7t['isYou'] && cbU >= c8E['tracerMinDst']) {
                        var ccd = c8D['randInt'](0x0, c7t['weaponMeshes'][c7t['weaponIndex']]['muzzles']['length'] - 0x1),
                            cce = c7t['weaponMeshes'][c7t['weaponIndex']]['muzzles'][ccd]['getWorldPosition'](),
                            ccf = c7t['weapon'] && c7t['weapon']['scope'] && 0x0 == c7t['aimVal'] ? 0x7 : 0x0,
                            ccg = cce['x'] - ccf * Math['sin'](cbG + Math['PI']) * Math['cos'](cbH),
                            cch = cce['y'] - ccf * Math['sin'](cbH),
                            cci = cce['z'] - ccf * Math['cos'](cbG + Math['PI']) * Math['cos'](cbH);
                        c8D['getDistance3D'](ccg, cch, cci, cc8, cc6, cc9), cca = c8D['getDirection'](cci, ccg, cc9, cc8), ccb = c8D['getDirection'](c8D['getDistance'](ccg, cci, cc8, cc9), cc6, 0x0, cch);
                        c8C['physObj'](ccg, cch, cci, cca, ccb, Math['min'](cbU + ccf, c8E['tracerMaxDst']), c7t['weapon'] && c7t['weapon']['trail'], 0x0, c7t);
                    }
                } else if (c8F) {
                    cbJ = (c7t['spread'] + (c7t['weapon']['innac'] || 0x0)) * c8E['spreadAdj'], cbG = c7t['xDire'] + c8D['randFloat'](-cbJ, cbJ), cbH = c7t['yDire'] + c7t['recoilAnimY'] * c8E['recoilMlt'] + c8D['randFloat'](-cbJ, cbJ);
                    c7r['projectiles']['init'](c7t['x'], c7t['y'] + c7t['height'] - c8E['cameraHeight'], c7t['z'], cbG, cbH, c7t['weapon']['projectile'], c7t, {
                        'weaponId': c7r['weapons']['findIndexBySrc'](c7t['weapon']['src']),
                        'weapon': c7t['weapon']
                    });
                }
            c7w && c8F && c7r['incStat']('h', c7t);
        }, this['spray'] = function(c7s) {
            if (c7r['now'] - c7s['lastSpray'] >= c8E['sprayTimer']) {
                cbr['length'] = 0x0;
                for (var c7t = 0x0, c7u = 0x1 / (c8E['sprayRange'] * Math['sin'](c7s['xDire'] + Math['PI']) * Math['cos'](c7s['yDire'])), c7w = 0x1 / (c8E['sprayRange'] * Math['cos'](c7s['xDire'] + Math['PI']) * Math['cos'](c7s['yDire'])), c8B = 0x1 / (c8E['sprayRange'] * Math['sin'](c7s['yDire'])), c8C = 0x0; c8C < c7r['map']['manager']['objects']['length']; ++c8C)(c8H = c7r['map']['manager']['objects'][c8C])['noShoot'] || c8H['noVis'] || (c7t = c8D['lineInRect'](c7s['x'], c7s['z'], c7s['y'] + c7s['height'] - c8E['cameraHeight'], c7u, c7w, c8B, c8H['x'] - c8H['width'], c8H['z'] - c8H['length'], c8H['y'] - c8H['height'], c8H['x'] + c8H['width'], c8H['z'] + c8H['length'], c8H['y'] + c8H['height'])) && 0x1 >= c7t && cbr['push']({
                    'obj': c8H,
                    'dst': c7t
                });
                if (cbr['length'] && (cbr['sort'](c8D['orderByDst']), c8H = cbr[0x0]['obj'])) {
                    var c8G = c8E['sprayRange'] * cbr[0x0]['dst'] - 0.1,
                        c8I = c7s['y'] + c7s['height'] - c8E['cameraHeight'] + c8G * Math['sin'](c7s['yDire']),
                        c8J = c7s['x'] + c8G * Math['sin'](c7s['xDire'] + Math['PI']) * Math['cos'](c7s['yDire']),
                        caJ = c7s['z'] + c8G * Math['cos'](c7s['xDire'] + Math['PI']) * Math['cos'](c7s['yDire']),
                        cct = 0x0,
                        ccu = 0x0;
                    c8I >= c8H['y'] + c8H['height'] ? ccu = -0x5a : c8I <= c8H['y'] - c8H['height'] ? ccu = 0x5a : c8J <= c8H['x'] - c8H['width'] ? cct = -0x5a : c8J >= c8H['x'] + c8H['width'] ? cct = 0x5a : caJ <= c8H['z'] - c8H['length'] && (cct = 0xb4);
                    var ccv = c8E['sprayScale'] / 0x2;
                    if (ccu) {
                        if (c8H['width'] < ccv || c8H['length'] < ccv) return;
                        caJ - ccv < c8H['z'] - c8H['length'] ? caJ = c8H['z'] - c8H['length'] + ccv : caJ + ccv > c8H['z'] + c8H['length'] && (caJ = c8H['z'] + c8H['length'] - ccv), c8J - ccv < c8H['x'] - c8H['width'] ? c8J = c8H['x'] - c8H['width'] + ccv : c8J + ccv > c8H['x'] + c8H['width'] && (c8J = c8H['x'] + c8H['width'] - ccv);
                    } else {
                        if (c8H['height'] < ccv) return;
                        if (0x5a == cct || -0x5a == cct) {
                            if (c8H['length'] < ccv) return;
                            caJ - ccv < c8H['z'] - c8H['length'] ? caJ = c8H['z'] - c8H['length'] + ccv : caJ + ccv > c8H['z'] + c8H['length'] && (caJ = c8H['z'] + c8H['length'] - ccv);
                        } else {
                            if (c8H['width'] < ccv) return;
                            c8J - ccv < c8H['x'] - c8H['width'] ? c8J = c8H['x'] - c8H['width'] + ccv : c8J + ccv > c8H['x'] + c8H['width'] && (c8J = c8H['x'] + c8H['width'] - ccv);
                        }
                        c8I + ccv > c8H['y'] + c8H['height'] && (c8I = c8H['y'] + c8H['height'] - ccv);
                    }
                    c7s['lastSpray'] = c7r['now'], c7r['playSound'] && c7r['playSound']('spray', 0.4, c7s, !0x0), c8F['broadcast']('game' + c7r['sid'], 'sp', c7s['sid'], c7s['sprayIndex'], c8J['round'](0x2), c8I['round'](0x2), caJ['round'](0x2), cct, ccu);
                }
            }
        }, this['interact'] = function(c7s) {
            if (c7r['now'] - c7s['lastInteract'] >= c8E['interactTimer']) {
                if (c7s['lastInteract'] = c7r['now'], 'inf' != c7s['team'])
                    for (var c7t = 0x0; c7t < c7r['map']['manager']['pickups']['length']; ++c7t)
                        if (null != (c8G = c7r['map']['manager']['pickups'][c7t])['pickup'] && c7s['collides'](c8G) && -0x1 == c7s['loadout']['indexOf'](c8G['pickup']) && c7s['score'] >= c8G['scoreP']) {
                            if (c7r['weapons'][c7s['loadout'][0x0]] && c7r['weapons'][c7s['loadout'][0x0]]['melee'] && 0x1 == c7s['loadout']['length']) c8H = void 0x0, c7s['loadout'][0x0] = c8G['pickup'], c7s['weaponIndex'] = 0x0, c8G['pickupRep'] && null == c8H && this['addPicked'](c7s, c8G['pickup']);
                            else if (c7r['weapons'][c8G['pickup']]['type']) c7r['weapons'][c7s['loadout'][0x0]]['type'] ? (c8H = c7s['loadout'][0x0], c7s['loadout'][0x0] = c8G['pickup'], c7s['weaponIndex'] = 0x0) : !c7r['weapons'][c7s['loadout'][0x0]]['type'] && (c8H = c7r['weapons'][c7s['loadout'][0x1]] && c7r['weapons'][c7s['loadout'][0x1]]['melee'] ? void 0x0 : c7s['loadout'][0x1], c7s['loadout'][0x1] = c8G['pickup'], c7s['weaponIndex'] = 0x1), this['removePicked'](c7s, c8H), c8G['pickupRep'] && null == c8H && this['addPicked'](c7s, c8G['pickup']);
                            else if (!c7r['weapons'][c8G['pickup']]['type']) {
                                c8H = c7r['weapons'][c7s['loadout'][0x0]] && c7r['weapons'][c7s['loadout'][0x0]]['melee'] ? void 0x0 : c7s['loadout'][0x0];
                                var c7u = !0x1;
                                c7r['weapons'][c7s['loadout'][0x0]]['type'] ? (c7s['loadout']['splice'](0x0, 0x0, c8G['pickup']), c7r['weapons'][c7s['loadout'][0x1]] && c7r['weapons'][c7s['loadout'][0x1]]['melee'] && (c7s['loadout']['length'] = 0x1), c8H = void 0x0) : !c7r['weapons'][c7s['loadout'][0x0]]['type'] && (!(c7r['weapons'][c7s['loadout'][0x0]] && c7r['weapons'][c7s['loadout'][0x0]]['melee']) && (c7u = this['removePicked'](c7s, c7s['loadout'][0x0])), c7s['loadout'][0x0] = c8G['pickup']), c8G['pickupRep'] && (null == c8H || c7u) && this['addPicked'](c7s, c8G['pickup']), c7s['weaponIndex'] = 0x0;
                            }
                            c8G['pickupRep'] && (c8G['pickup'] = c8H), c8F['broadcast']('game' + c7r['sid'], 'inat', c7s['sid'], c7s['loadout'], c7s['weaponIndex'], c8G['uid'], c8G['pickupRep'] ? c8H : c8G['pickup']), c7s['updateLoadout'](c7r, c7s['weaponIndex'], !0x0, ...c7s['loadout']), 0x0 == c8G['scoreP'] || c8G['method'] || (c8F['send'](c7s['id'], 'am', ['Purchased', null]), this['score'](c7s, -c8G['scoreP']));
                            break;
                        }
                for (c7t = 0x0; c7t < c7r['map']['manager']['gates']['length']; ++c7t)
                    if (((c8G = c7r['map']['manager']['gates'][c7t])['active'] || !c8G['active'] && c8G['closeable']) && c7s['collides'](c8G, c8G['tRadius']) && c7s['score'] >= c8G['scoreP']) {
                        0x0 != c8G['scoreP'] && (c8F['send'](c7s['id'], 'am', [c8G['method'] ? 'Unlocked' : 'Purchased', null]), !c8G['method'] && this['score'](c7s, -c8G['scoreP'])), c8F['broadcast']('game' + c7r['sid'], 'gte', c8G['uid'], !c8G['active'] && c8G['closeable']), c8G['active'] = !c8G['active'];
                        break;
                    }
            }
        }, this['findEmptyPickup'] = function() {
            for (var c7s, c7t = 0x0; c7t < c7r['map']['manager']['pickups']['length']; ++c7t)
                if ((c7s = c7r['map']['manager']['pickups'][c7t])['pickupRep'] && null == c7s['pickup']) return c7s['uid'];
            return null;
        }, this['addPicked'] = function(c7r, c7s) {
            -0x1 == c7r['lastPicked']['indexOf'](c7s) && c7r['lastPicked']['push'](c7s);
        }, this['removePicked'] = function(c7r, c7s) {
            var c7t = c7r['lastPicked']['indexOf'](c7s);
            return -0x1 < c7t && c7r['lastPicked']['splice'](c7t, 0x1), -0x1 < c7t;
        }, this['dropWeapon'] = function(c7s, c7t) {
            if (c7r['map']['manager']['pickups']['length']) {
                var c7u, c7w = c7s['weaponIndex'],
                    c8B = c7s['loadout'][c7w],
                    c8C = [c7s['x'] + c8D['randInt'](-0x5, 0x5), c7s['y'] + 0x1, c7s['z'] + c8D['randInt'](-0x5, 0x5)];
                if (c7t) {
                    for (var c8E = 0x0; c8E < c7s['loadout']['length']; c8E++) c8B = c7s['loadout'][c8E], (c7u = this['findEmptyPickup']()) && -0x1 < c7s['lastPicked']['indexOf'](c8B) && !c7r['weapons'][c8B]['melee'] && (c8C = [c7s['x'] + c8D['randInt'](-0x5, 0x5), c7s['y'] + 0x1, c7s['z'] + c8D['randInt'](-0x5, 0x5)], c7r['updatePickup'](c7u, c8B, null, c8C), c8F['broadcast']('game' + c7r['sid'], 'inat', -0x1, null, null, c7u, c8B, !0x0, c8C));
                    c7s['lastPicked']['length'] = 0x0;
                } else if (!c7r['weapons'][c8B]['melee']) {
                    var c8G = (c7u = this['findEmptyPickup']()) && -0x1 < c7s['lastPicked']['indexOf'](c8B);
                    c8G && (this['removePicked'](c7s, c8B), c7r['updatePickup'](c7u, c8B, null, c8C)), c7s['loadout'] = 0x1 == c7s['loadout']['length'] ? [] : [c7s['loadout'][c7w ? 0x0 : 0x1]], c7s['weaponIndex'] = 0x0, c8F['broadcast']('game' + c7r['sid'], 'inat', c7s['sid'], c7s['loadout'], c7s['weaponIndex'], c7u, c8B, c8G, c8C), c7s['updateLoadout'](c7r, c7s['weaponIndex'], !0x0, ...c7s['loadout']);
                }
            }
        }, this['updateInteract'] = function(c7s, c7t, c7u = 'Pickup\x20weapon') {
            if ((c7r['map']['manager']['pickups']['length'] || c7r['map']['manager']['gates']['length']) && c7s['isYou']) {
                inner = 'Press\x20<span\x20style=\x22color:#fbc02d\x22>[' + c8D['getKeyName'](c7r['controls']['interactKey']) + ']</span>\x20to\x20' + c7u;
                var c7w = c7t ? 'block' : 'none';
                interactMsg['innerHTML'] != inner && (interactMsg['innerHTML'] = inner), interactMsg['style']['display'] != c7w && (interactMsg['style']['display'] = c7w);
            }
        };
        var ccS = [];
        this['syncLeaders'] = function() {
            var c7s = c7r['mode']['leaderStat'] || 'score';
            c8I = c7r['mode']['killSort'] ? this['list']['slice']()['sort'](c8D['orderByKills']) : this['list']['slice']()['sort'](c8D['orderByScore']), ccS['length'] = 0x0;
            for (var c7t = 0x0, c7u = 0x0, c7w = 0x0; c7w < c8I['length']; ++c7w) c8I[c7w]['spectating'] ? c7u++ : 0xa > c7t && (c7t++, ccS['push'](c8I[c7w]['sid'], c8I[c7w]['account'] ? c8I[c7w]['account']['name'] : c8I[c7w]['name'], c8I[c7w]['team'], c7r['mode']['killSort'] ? c8I[c7w]['kills'] : c8E['endForm'][c7s] ? c8E['endForm'][c7s](c8I[c7w][c7s], c7r, c8I[c7w]) : c8I[c7w][c7s], c8I[c7w]['account'] ? c8I[c7w]['account']['clan'] : 0x0, c8I[c7w]['account'] ? c8I[c7w]['account']['featured'] : 0x0));
            c8F['broadcast']('game' + c7r['sid'], '7', ccS, c7u);
        }, this['score'] = function(c7s, c7t, c7u) {
            c8F && (c7s['score'] += c7t, null == c7r['host'] && 0x32c8 < c7s['score'] && (c7s['score'] = 0x32c8, c7t = 0x0), c8F['send'](c7s['id'], '5', c7t), this['syncLeaders'](), c7r['mode']['teams'] && c7s['team'] && c7r['teams'] && !c7r['mode']['noScoreC'] && (!c7u || !c7r['mode']['objective']) && (c7r['teams'][c7s['team']] ? c7r['teams'][c7s['team']] += c7t : c7r['teams'][c7s['team']] = c7t, c8F['broadcast']('game' + c7r['sid'], 'ts', c7s['team'], c7r['teams'][c7s['team']])));
        }, this['tickPlayer'] = function(c7r, c7s) {
            c7r['playTime'] += c7s, c7r['account'] && (c7r['logTime'] += c7s), 0x0 < c7r['hitTimer'] && (c7r['hitTimer'] -= c7s), c7r['ticker'] -= c7s, 0x0 >= c7r['ticker'] && (c7r['ticker'] = 0x1f4, 0x0 >= c7r['hitTimer'] && !c7r['challMode'] && this['changeHealth'](c7r, null, -c7r['maxHealth'] * (c7r['regen'] || 0x0)));
        }, this['changeHealth'] = function(c7s, c7t, c7u, c7w) {
            if ((!c7r['waitTimers'] || c7r['waitTimers'][0x0]['canDMG']) && !(0x0 > c7u && c7s['health'] == c7s['maxHealth']) && (c7t && c7t['account'] && c7t['account']['hack'] && c7u && (c7u *= 0.2), c7t && 0.1 <= c7t['avgSpn'] && (c7u *= 0.2), c7t && !1 && (c7u *= 0.1), c7t && !1 && 0x190 >= c7r['now'] - c7t['lastHack'] && (c7u *= 0.2), !(!c7w && c7s['team'] && c7t && c7s['team'] == c7t['team'] && 0x0 < c7u))) {
                if (c7t && c7t != c7s && 0x0 < c7u && c8F['send'](c7t['id'], '4'), c7s['dummy']) return !0x0;
                0x0 < c7u && (c7s['hitTimer'] = c7s['regenDelay'] || 0x0), c7s['health'] -= c7u, c7s['health'] = Math['max'](Math['min'](c7s['maxHealth'], c7s['health']), 0x0), c7t ? (c8F['send'](c7s['id'], 'h', Math['ceil'](c7s['health']), null, Math['round'](c7t['x']), Math['round'](c7t['z'])), c7t != c7s && (c7s['dmgReceived'][c7t['id']] ? (c7s['dmgReceived'][c7t['id']]['val'] += c7u, c7s['dmgReceived'][c7t['id']]['time'] = c7r['now']) : c7s['dmgReceived'][c7t['id']] = {
                    'time': c7r['now'],
                    'val': c7u
                })) : c8F['send'](c7s['id'], 'h', Math['ceil'](c7s['health']));
                for (var c8B = 0x0; c8B < this['list']['length']; ++c8B) this['list'][c8B] != c7s && c8F['send'](this['list'][c8B]['id'], 'h', Math['ceil'](c7s['health']), c7s['sid']);
                return 0x0 >= c7s['health'];
            }
        }, this['changePosition'] = function(c7r, c7s, c7t, c7u, c7w) {
            c7r['x'] = c7r['oldX'] = c7s, c7r['y'] = c7r['oldY'] = c7t, c7r['z'] = c7r['oldZ'] = c7u, c7w && (c7r['lastX'] = c7s, c7r['lastY'] = c7t, c7r['lastZ'] = c7u, c7r['stepVal'] = 0x0, c7r['xVel'] = 0x0, c7r['yVel'] = 0x0, c7r['zVel'] = 0x0);
        }, this['swapMelee'] = function(c7r, c7s) {
            0x1 >= c7r['ammos']['length'] || (c7r['weaponIndex'] == c7r['ammos']['length'] - 0x1 ? this['swapWeapon'](c7r, 0x1, !0x1, void 0x0, void 0x0, c7s) : this['swapWeapon'](c7r, null, null, void 0x0, c7r['ammos']['length'] - 0x1, c7s));
        }, this['swapSecondary'] = function(c7s, c7t) {
            if (!(0x1 >= c7s['ammos']['length']))
                for (var c7u, c7w = 0x0; c7w < c7s['ammos']['length']; ++c7w) c7u = c7s['loadout'][c7w], c7r['weapons'][c7u] && c7r['weapons'][c7u]['secondary'] && (c7s['weaponIndex'] == c7w ? this['swapWeapon'](c7s, null, null, void 0x0, 0x0, c7t) : this['swapWeapon'](c7s, null, null, void 0x0, c7w, c7t));
        }, this['swapWeapon'] = function(c7t, c7u, c7w, c8B, c8C, c8E) {
            if (!(0x1 >= c7t['ammos']['length'] && c7u || c8B > c7t['ammos']['length'])) {
                var c8F = c7t['weaponIndex'];
                if (c7u && (0x1 != c7u && -0x1 != c7u && (c7u = 0x0), c7t['weaponIndex'] += c7u, 0x1 == c7u ? c7t['weaponIndex'] > c7t['ammos']['length'] - 0x2 && (c7t['weaponIndex'] = 0x0) : 0x0 > c7t['weaponIndex'] ? c7t['weaponIndex'] = Math['min'](c7t['ammos']['length'] - 0x1, 0x2) : c7t['weaponIndex'] = 0x0), null != c8B && (c7t['weaponIndex'] = c8B), null != c8C && (c7t['weaponIndex'] = c8C), (null != c7u || null != c8C) && (c8F != c7t['weaponIndex'] || c7w) && (c7t['reloadTimer'] = 0x0, c7t['didShoot'] = !0x1, c7t['burstCount'] = 0x0), c7t['weapon'] = c7r['weapons'][c7t['loadout'][c7t['weaponIndex']]], c7t['weapon'] || (c7t['weapon'] = c7r['weapons'][c7t['loadout'][0x0]], c7t['weapon'] && (c7t['weaponIndex'] = 0x0)), c7s && (c8F != c7t['weaponIndex'] || c7w)) {
                    this['cancelInspect'](c7t);
                    for (var c8G = 0x0; c8G < c7t['weaponMeshes']['length']; ++c8G) c7t['weaponMeshes'][c8G]['visible'] = !0x1;
                    c7t['weaponMeshes'][c7t['weaponIndex']] && (c7t['weaponMeshes'][c7t['weaponIndex']]['visible'] = !this['isWeaponHidden'](c7t, c7t['weaponIndex']) || !c7t['isYou']);
                }
                if (null == c8B && c7t['weapon'] && (!c7s || c7t['isYou']) && (c7t['isYou'] && c8F == c7t['weaponIndex'] || c8E || (c7t['swapTime'] = c7t['weapon']['swapTime']), c7t['isYou'] && (c8F != c7t['weaponIndex'] || c7w))) {
                    var c8H, c8I = '';
                    for (c8G = 0x0; c8G < c7t['ammos']['length']; ++c8G) c8H = c8G == c7t['weaponIndex'], c7r['weapons'][c7t['loadout'][c8G]]['icon'] && (c8I += '<div\x20class=\x27weaponItem\x27>' + (0x0 < c8G ? '<div\x20class=\x27weapKey\x27>' + (c7r['weapons'][c7t['loadout'][c8G]]['melee'] ? '[' + c8D['getKeyName'](c7r['controls']['meleeKey']) + ']' : '[' + c8D['getKeyName'](c7r['controls']['swapKey']) + ']') + '</div>' : '') + '<img\x20style=\x27opacity:' + (c8H ? 0x1 : 0.7) + (c8G ? ';margin-right:25px' : '') + '\x27\x20class=\x27weaponIcon\x27\x20src=\x27' + (c7r['weapons'][c7t['loadout'][c8G]]['melee'] ? './textures/melee/icon_' + (c7r['store']['skins'][c7t['meleeIndex']] && c7r['store']['skins'][c7t['meleeIndex']]['id'] || 0x0) : './textures/weapons/' + c7r['weapons'][c7t['loadout'][c8G]]['icon']) + '.png\x27\x20/></div>');
                    c8E || (c7t['swapTween'] && c7t['swapTween']['stop'](), c7t['swapTweenA'] = 0.5, c7t['swapTween'] = new TWEEN['Tween'](c7t)['to']({
                        'swapTweenA': 0x1
                    }, 0x4b0)['easing'](TWEEN['Easing']['Elastic']['Out'])['start'](), c8F != c7t['weaponIndex'] && 0x1 == c7t['aimVal'] && (c7t['swapTweenAnim'] && c7t['swapTweenAnim']['stop'](), c7t['swapTweenR'] = c7t['weapon']['swapWiggle'] || 0.6, c7t['swapTweenAnim'] = new TWEEN['Tween'](c7t)['to']({
                        'swapTweenR': 0x0
                    }, c7t['weapon']['swapTime'] + 0xdc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()), c8F != c7t['weaponIndex'] && 0x1 == c7t['aimVal'] && (c7t['meleeAnim']['anim'] && c7t['meleeAnim']['anim']['stop'](), c7t['resetMeleeAnim'](), c7t['meleeAnim']['armR'] = 0.15, c7t['weapon']['melee'] && (c7t['meleeAnim']['anim'] = new TWEEN['Tween'](c7t['meleeAnim'])['to']({
                        'armR': 0x0
                    }, 0x2bc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()))), weaponDisplay['innerHTML'] = c8I, this['updatePlayerAmmo'](c7t);
                }
            }
        }, this['taunt'] = function(c7s, c7t) {
            c7s && c7s['active'] && c8E['taunts'][c7t] && (!c7s['lastTaunt'] || 0x0 <= c7r['now'] - c7s['lastTaunt']) && (c7s['lastTaunt'] = c7r['now'] + c8E['taunts'][c7t]['tm'], c7r['playSound'](c8E['taunts'][c7t]['id'], 0.3, c7s, !0x0, c8D['randFloat'](0.9, 0x1)));
        }, this['checkStreak'] = function(c7s) {
            for (var c7t = 0x0; c7t < c7r['streaks']['length']; ++c7t) c7s['realKillStreak'] == c7r['streaks'][c7t]['kills'] && this['addStreak'](c7s, c7t);
            c7s['realKillStreak'] >= c7r['maxStreak'] && (c7s['realKillStreak'] = 0x0);
        }, this['useStreak'] = function(c7s, c7t) {
            c7s['streaks'][c7t] && c7s['streaks'][c7t]['streak']['activate'](c7r, c7s) && (0x1 < c7s['streaks'][c7t]['cnt'] ? c7s['streaks'][c7t]['cnt']-- : c7s['streaks'][c7t] = null, c8F['send'](c7s['id'], 'st', c7t, 0x1));
        }, this['addStreak'] = function(c7s, c7t) {
            c7s['streaks'][c7t] ? c7s['streaks'][c7t]['cnt']++ : c7s['streaks'][c7t] = {
                'cnt': 0x1,
                'streak': c7r['streaks'][c7t]
            }, c8F['send'](c7s['id'], 'st', c7t);
        }, this['kill'] = function(c7s, c7t, c7u, c7w, c8B) {
            if (c7s['dummy'] || c7s['active']) {
                var c8C = !0x1;
                if (c7s['dummy'] || (c7s['active'] = !0x1, c7s['isYou'] && this['toggleAim'](c7s, 0x0), c7s['objInstances'] && this['disposeMesh'](c7s)), c8F) {
                    var c8D, c8G = 0x0;
                    if (c7s['deaths']++, c7r['mode']['noStreaks'] || c7s['deathStreak']++, c7s['lives'] && !c7r['waitTimers'] && (c7s['lives']--, c8F['send'](c7s['id'], 'lv', c7s['lives'])), c7r['kills']++, c7t && c7t != c7s && (!c7s['dummy'] && c7t['kills']++, !c7r['mode']['noStreaks'] && (c7t['streak']++, c7t['killStreak']++, c7t['realKillStreak']++, c7t['deathStreak'] = 0x0, this['checkStreak'](c7t), 0x0 == c7t['killStreak'] % 0x5 && (c8G = c7t['killStreak']), c7r['now'] - c7t['lastKill'] >= c8E['feedTimer'] && (c7t['streak'] = 0x0)), c7t['lastKill'] = c7r['now'], !c8B && c7r['config']['killRewards'] && !c7r['mode']['noKillRewards'] && ((c8D = c8J['reward'](this, c7t, c7s, c7u, c7r)) && c8F['send'](c7t['id'], '6', c8D, c7u['headShot'] ? 0x1 : 0x0, c7t['kills']), this['score'](c7t, c8J['getScore'](c8D), !0x0), c8C = !0x0), c7r['players']['dropWeapon'](c7s, !0x0)), c7u && c7u['weapon'] && delete c7u['weapon'], !c7s['dummy'])
                        for (var c8H = 0x0; c8H < this['list']['length']; ++c8H) !c7r['mode']['noAssists'] && c7s['dmgReceived'][this['list'][c8H]['id']] && c7t != this['list'][c8H] && c7s['dmgReceived'][this['list'][c8H]['id']]['val'] >= c8E['assistMin'] && c7r['now'] - c7s['dmgReceived'][this['list'][c8H]['id']]['time'] <= c8E['assistTime'] && (this['list'][c8H]['assists']++, this['score'](this['list'][c8H], c8E['assistScore'], !0x0), c8F['send'](this['list'][c8H]['id'], '10'), c8C = !0x0), this['list'][c8H] == c7s ? c8F['send'](c7s['id'], '3', c7s['sid'], c7s['deaths'], c7t ? c7t['sid'] : 0x0, [c7t ? null == c7u['weaponId'] ? c7t['loadout'][c7t['weaponIndex']] : c7u['weaponId'] : -0x1, c8D ? c8J['getScore'](c8D) : 0x0], c7u, c7w) : c8F['send'](this['list'][c8H]['id'], '3', c7s['sid'], c7s['deaths'], c7t ? c7t['sid'] : 0x0, null, c7u, c7w);
                    c7r['mode']['onKill'] && c7r['mode']['onKill'](c7r, c8F, c7s, c7t, c7u), c8G && c8F['broadcast']('game' + c7r['sid'], 'kst', c7t['sid'], c8G);
                }
                c8F && !c8C && this['syncLeaders']();
            }
        }, this['indexBySid'] = function(c7r) {
            for (var c7s = 0x0; c7s < this['list']['length']; ++c7s)
                if (this['list'][c7s]['sid'] == c7r) return c7s;
            return -0x1;
        }, this['findBySid'] = function(c7r) {
            for (var c7s = 0x0; c7s < this['list']['length']; ++c7s)
                if (this['list'][c7s]['sid'] === c7r) return this['list'][c7s];
            return null;
        };
    };
}, function(cdN, cdO, cdP) {
    cdP['r'](cdO);
    var cdQ = {};
    cdP['r'](cdQ), cdP['d'](cdQ, 'FunctionToString', function() {
        return ceH;
    }), cdP['d'](cdQ, 'InboundFilters', function() {
        return cf8;
    });
    var cdR = {};
    cdP['r'](cdR), cdP['d'](cdR, 'GlobalHandlers', function() {
        return cnS;
    }), cdP['d'](cdR, 'TryCatch', function() {
        return cm2;
    }), cdP['d'](cdR, 'Breadcrumbs', function() {
        return cmu;
    }), cdP['d'](cdR, 'LinkedErrors', function() {
        return cnV;
    }), cdP['d'](cdR, 'UserAgent', function() {
        return cnX;
    });
    var cdS = {};
    cdP['r'](cdS), cdP['d'](cdS, 'BaseTransport', function() {
        return cka;
    }), cdP['d'](cdS, 'FetchTransport', function() {
        return ckc;
    }), cdP['d'](cdS, 'XHRTransport', function() {
        return ckd;
    });
    var cdT, cdU, cdV, cdW = cdP(0x0);
    (cdU = cdT || (cdT = {}))['Fatal'] = 'fatal', cdU['Error'] = 'error', cdU['Warning'] = 'warning', cdU['Log'] = 'log', cdU['Info'] = 'info', cdU['Debug'] = 'debug', cdU['Critical'] = 'critical',
        function(cdN) {
            cdN['fromString'] = function(cdO) {
                switch (cdO) {
                    case 'debug':
                        return cdN['Debug'];
                    case 'info':
                        return cdN['Info'];
                    case 'warn':
                    case 'warning':
                        return cdN['Warning'];
                    case 'error':
                        return cdN['Error'];
                    case 'fatal':
                        return cdN['Fatal'];
                    case 'critical':
                        return cdN['Critical'];
                    case 'log':
                    default:
                        return cdN['Log'];
                }
            };
        }(cdT || (cdT = {})),
        function(cdN) {
            cdN['Unknown'] = 'unknown', cdN['Skipped'] = 'skipped', cdN['Success'] = 'success', cdN['RateLimit'] = 'rate_limit', cdN['Invalid'] = 'invalid', cdN['Failed'] = 'failed';
        }(cdV || (cdV = {})),
        function(cdN) {
            cdN['fromHttpCode'] = function(cdO) {
                return 0xc8 <= cdO && 0x12c > cdO ? cdN['Success'] : 0x1ad === cdO ? cdN['RateLimit'] : 0x190 <= cdO && 0x1f4 > cdO ? cdN['Invalid'] : 0x1f4 <= cdO ? cdN['Failed'] : cdN['Unknown'];
            };
        }(cdV || (cdV = {}));
    var ce2 = cdP(0x9);

    function ce3(cdN) {
        for (var cdO = [], cdP = 0x1; cdP < arguments['length']; cdP++) cdO[cdP - 0x1] = arguments[cdP];
        var cdQ = Object(ce2['b'])();
        if (cdQ && cdQ[cdN]) return cdQ[cdN]['apply'](cdQ, cdW['d'](cdO));
        throw new Error('No\x20hub\x20defined\x20or\x20' + cdN + '\x20was\x20not\x20found\x20on\x20the\x20hub,\x20please\x20open\x20a\x20bug\x20report.');
    }

    function ce8(cdN) {
        var cdO;
        try {
            throw new Error('Sentry\x20syntheticException');
        } catch (ceb) {
            cdO = ceb;
        }
        return ce3('captureException', cdN, {
            'originalException': cdN,
            'syntheticException': cdO
        });
    }

    function cec(cdN, cdO) {
        var cdP;
        try {
            throw new Error(cdN);
        } catch (ceg) {
            cdP = ceg;
        }
        return ce3('captureMessage', cdN, cdO, {
            'originalException': cdN,
            'syntheticException': cdP
        });
    }

    function ceh(cdN) {
        return ce3('captureEvent', cdN);
    }

    function cej(cdN) {
        ce3('configureScope', cdN);
    }

    function cel(cdN) {
        ce3('addBreadcrumb', cdN);
    }

    function cen(cdN, cdO) {
        ce3('setContext', cdN, cdO);
    }

    function ceq(cdN) {
        ce3('setExtras', cdN);
    }

    function ces(cdN) {
        ce3('setTags', cdN);
    }

    function ceu(cdN, cdO) {
        ce3('setExtra', cdN, cdO);
    }

    function cex(cdN, cdO) {
        ce3('setTag', cdN, cdO);
    }

    function ceA(cdN) {
        ce3('setUser', cdN);
    }

    function ceC(cdN) {
        ce3('withScope', cdN);
    }
    var ceE, ceF = cdP(0xa),
        ceG = cdP(0xd),
        ceH = function() {
            function cdN() {
                this['name'] = cdN['id'];
            }
            return cdN['prototype']['setupOnce'] = function() {
                ceE = Function['prototype']['toString'], Function['prototype']['toString'] = function() {
                    for (var cdN = [], cdO = 0x0; cdO < arguments['length']; cdO++) cdN[cdO] = arguments[cdO];
                    var cdP = this['__sentry__'] ? this['__sentry_original__'] : this;
                    return ceE['apply'](cdP, cdN);
                };
            }, cdN['id'] = 'FunctionToString', cdN;
        }(),
        ceI = cdP(0x18),
        ceJ = cdP(0x2),
        ceK = cdP(0x5);

    function ceP(cdN, cdO) {
        return void 0x0 === cdO && (cdO = 0x0), 'string' != typeof cdN || 0x0 === cdO ? cdN : cdN['length'] <= cdO ? cdN : cdN['substr'](0x0, cdO) + '...';
    }

    function ceS(cdN, cdO) {
        if (!Array['isArray'](cdN)) return '';
        for (var cdP, cdQ = [], cdR = 0x0; cdR < cdN['length']; cdR++) {
            cdP = cdN[cdR];
            try {
                cdQ['push'](cdP + '');
            } catch (ceY) {
                cdQ['push']('[value\x20cannot\x20be\x20serialized]');
            }
        }
        return cdQ['join'](cdO);
    }

    function ceZ(cdN, cdO) {
        if (void 0x0 === cdO && (cdO = 0x28), !cdN['length']) return '[object\x20has\x20no\x20keys]';
        if (cdN[0x0]['length'] >= cdO) return ceP(cdN[0x0], cdO);
        for (var cdP, cdQ = cdN['length']; 0x0 < cdQ; cdQ--)
            if (!((cdP = cdN['slice'](0x0, cdQ)['join'](',\x20'))['length'] > cdO)) return cdQ === cdN['length'] ? cdP : ceP(cdP, cdO);
        return '';
    }

    function cf4(cdN, cdO) {
        return Object(ceK['g'])(cdO) ? cdO['test'](cdN) : !('string' != typeof cdO) && cdN['includes'](cdO);
    }
    var cf7 = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/],
        cf8 = function() {
            function cdN(cdO) {
                void 0x0 === cdO && (cdO = {}), this['_options'] = cdO, this['name'] = cdN['id'];
            }
            return cdN['prototype']['setupOnce'] = function() {
                Object(ceF['b'])(function(cdO) {
                    var cdP = Object(ce2['b'])();
                    if (!cdP) return cdO;
                    var cdQ = cdP['getIntegration'](cdN);
                    if (cdQ) {
                        var cdR = cdP['getClient'](),
                            cdS = cdR ? cdR['getOptions']() : {},
                            cdT = cdQ['_mergeOptions'](cdS);
                        if (cdQ['_shouldDropEvent'](cdO, cdT)) return null;
                    }
                    return cdO;
                });
            }, cdN['prototype']['_shouldDropEvent'] = function(cdN, cdO) {
                return this['_isSentryError'](cdN, cdO) ? (ceI['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20internal\x20Sentry\x20Error.\x0aEvent:\x20' + Object(ceJ['d'])(cdN)), !0x0) : this['_isIgnoredError'](cdN, cdO) ? (ceI['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`ignoreErrors`\x20option.\x0aEvent:\x20' + Object(ceJ['d'])(cdN)), !0x0) : this['_isBlacklistedUrl'](cdN, cdO) ? (ceI['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`blacklistUrls`\x20option.\x0aEvent:\x20' + Object(ceJ['d'])(cdN) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](cdN)), !0x0) : !this['_isWhitelistedUrl'](cdN, cdO) && (ceI['a']['warn']('Event\x20dropped\x20due\x20to\x20not\x20being\x20matched\x20by\x20`whitelistUrls`\x20option.\x0aEvent:\x20' + Object(ceJ['d'])(cdN) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](cdN)), !0x0);
            }, cdN['prototype']['_isSentryError'] = function(cdN, cdO) {
                if (void 0x0 === cdO && (cdO = {}), !cdO['ignoreInternal']) return !0x1;
                try {
                    return 'SentryError' === cdN['exception']['values'][0x0]['type'];
                } catch (cfs) {
                    return !0x1;
                }
            }, cdN['prototype']['_isIgnoredError'] = function(cdN, cdO) {
                return void 0x0 === cdO && (cdO = {}), !(!cdO['ignoreErrors'] || !cdO['ignoreErrors']['length']) && this['_getPossibleEventMessages'](cdN)['some'](function(cdN) {
                    return cdO['ignoreErrors']['some'](function(cdO) {
                        return cf4(cdN, cdO);
                    });
                });
            }, cdN['prototype']['_isBlacklistedUrl'] = function(cdN, cdO) {
                if (void 0x0 === cdO && (cdO = {}), !cdO['blacklistUrls'] || !cdO['blacklistUrls']['length']) return !0x1;
                var cdP = this['_getEventFilterUrl'](cdN);
                return !!cdP && cdO['blacklistUrls']['some'](function(cdN) {
                    return cf4(cdP, cdN);
                });
            }, cdN['prototype']['_isWhitelistedUrl'] = function(cdN, cdO) {
                if (void 0x0 === cdO && (cdO = {}), !cdO['whitelistUrls'] || !cdO['whitelistUrls']['length']) return !0x0;
                var cdP = this['_getEventFilterUrl'](cdN);
                return !cdP || cdO['whitelistUrls']['some'](function(cdN) {
                    return cf4(cdP, cdN);
                });
            }, cdN['prototype']['_mergeOptions'] = function(cdN) {
                return void 0x0 === cdN && (cdN = {}), {
                    'blacklistUrls': cdW['d'](this['_options']['blacklistUrls'] || [], cdN['blacklistUrls'] || []),
                    'ignoreErrors': cdW['d'](this['_options']['ignoreErrors'] || [], cdN['ignoreErrors'] || [], cf7),
                    'ignoreInternal': void 0x0 === this['_options']['ignoreInternal'] || this['_options']['ignoreInternal'],
                    'whitelistUrls': cdW['d'](this['_options']['whitelistUrls'] || [], cdN['whitelistUrls'] || [])
                };
            }, cdN['prototype']['_getPossibleEventMessages'] = function(cdN) {
                if (cdN['message']) return [cdN['message']];
                if (cdN['exception']) try {
                    var cdO = cdN['exception']['values'][0x0],
                        cdP = cdO['type'],
                        cdQ = cdO['value'];
                    return ['' + cdQ, cdP + ':\x20' + cdQ];
                } catch (cfK) {
                    return ceI['a']['error']('Cannot\x20extract\x20message\x20for\x20event\x20' + Object(ceJ['d'])(cdN)), [];
                }
                return [];
            }, cdN['prototype']['_getEventFilterUrl'] = function(cdN) {
                try {
                    if (cdN['stacktrace']) {
                        var cdO = cdN['stacktrace']['frames'];
                        return cdO[cdO['length'] - 0x1]['filename'];
                    }
                    if (cdN['exception']) {
                        var cdP = cdN['exception']['values'][0x0]['stacktrace']['frames'];
                        return cdP[cdP['length'] - 0x1]['filename'];
                    }
                    return null;
                } catch (cfO) {
                    return ceI['a']['error']('Cannot\x20extract\x20url\x20for\x20event\x20' + Object(ceJ['d'])(cdN)), null;
                }
            }, cdN['id'] = 'InboundFilters', cdN;
        }(),
        cf9 = cdP(0x6),
        cfa = function(cdN) {
            function cdO(cdO) {
                var cdP = this['constructor'],
                    cdQ = cdN['call'](this, cdO) || this;
                return cdQ['message'] = cdO, cdQ['name'] = cdP['prototype']['constructor']['name'], Object['setPrototypeOf'](cdQ, cdP['prototype']), cdQ;
            }
            return cdW['b'](cdO, cdN), cdO;
        }(Error),
        cfb = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w\.-]+)(?::(\d+))?\/(.+)/,
        cfc = function() {
            function cdN(cdN) {
                'string' == typeof cdN ? this['_fromString'](cdN) : this['_fromComponents'](cdN), this['_validate']();
            }
            return cdN['prototype']['toString'] = function(cdN) {
                void 0x0 === cdN && (cdN = !0x1);
                var cdO = this,
                    cdP = cdO['host'],
                    cdQ = cdO['path'],
                    cdR = cdO['pass'],
                    cdS = cdO['port'],
                    cdT = cdO['projectId'];
                return cdO['protocol'] + '://' + cdO['user'] + (cdN && cdR ? ':' + cdR : '') + '@' + cdP + (cdS ? ':' + cdS : '') + '/' + (cdQ ? cdQ + '/' : cdQ) + cdT;
            }, cdN['prototype']['_fromString'] = function(cdN) {
                var cdO = cfb['exec'](cdN);
                if (!cdO) throw new cfa('Invalid\x20Dsn');
                var cdP = cdW['c'](cdO['slice'](0x1), 0x6),
                    cdQ = cdP[0x0],
                    cdR = cdP[0x1],
                    cdS = cdP[0x2],
                    cdT = void 0x0 === cdS ? '' : cdS,
                    cdU = cdP[0x3],
                    cdV = cdP[0x4],
                    ce2 = void 0x0 === cdV ? '' : cdV,
                    ce3 = '',
                    ce8 = cdP[0x5],
                    cec = ce8['split']('/');
                0x1 < cec['length'] && (ce3 = cec['slice'](0x0, -0x1)['join']('/'), ce8 = cec['pop']()), Object['assign'](this, {
                    'host': cdU,
                    'pass': cdT,
                    'path': ce3,
                    'projectId': ce8,
                    'port': ce2,
                    'protocol': cdQ,
                    'user': cdR
                });
            }, cdN['prototype']['_fromComponents'] = function(cdN) {
                this['protocol'] = cdN['protocol'], this['user'] = cdN['user'], this['pass'] = cdN['pass'] || '', this['host'] = cdN['host'], this['port'] = cdN['port'] || '', this['path'] = cdN['path'] || '', this['projectId'] = cdN['projectId'];
            }, cdN['prototype']['_validate'] = function() {
                var cdN = this;
                if (['protocol', 'user', 'host', 'projectId']['forEach'](function(cdO) {
                        if (!cdN[cdO]) throw new cfa('Invalid\x20Dsn');
                    }), 'http' !== this['protocol'] && 'https' !== this['protocol']) throw new cfa('Invalid\x20Dsn');
                if (this['port'] && Number['isNaN'](parseInt(this['port'], 0xa))) throw new cfa('Invalid\x20Dsn');
            }, cdN;
        }(),
        cfd = function() {
            function cdN(cdN) {
                this['dsn'] = cdN, this['_dsnObject'] = new cfc(cdN);
            }
            return cdN['prototype']['getDsn'] = function() {
                return this['_dsnObject'];
            }, cdN['prototype']['getStoreEndpoint'] = function() {
                return '' + this['_getBaseUrl']() + this['getStoreEndpointPath']();
            }, cdN['prototype']['getStoreEndpointWithUrlEncodedAuth'] = function() {
                var cdN = {
                    'sentry_key': this['_dsnObject']['user'],
                    'sentry_version': '7'
                };
                return this['getStoreEndpoint']() + '?' + Object(cf9['d'])(cdN);
            }, cdN['prototype']['_getBaseUrl'] = function() {
                var cdN = this['_dsnObject'],
                    cdO = cdN['protocol'] ? cdN['protocol'] + ':' : '',
                    cdP = cdN['port'] ? ':' + cdN['port'] : '';
                return cdO + '//' + cdN['host'] + cdP;
            }, cdN['prototype']['getStoreEndpointPath'] = function() {
                var cdN = this['_dsnObject'];
                return (cdN['path'] ? '/' + cdN['path'] : '') + '/api/' + cdN['projectId'] + '/store/';
            }, cdN['prototype']['getRequestHeaders'] = function(cdN, cdO) {
                var cdP = this['_dsnObject'],
                    cdQ = ['Sentry\x20sentry_version=7'];
                return cdQ['push']('sentry_timestamp=' + new Date()['getTime']()), cdQ['push']('sentry_client=' + cdN + '/' + cdO), cdQ['push']('sentry_key=' + cdP['user']), cdP['pass'] && cdQ['push']('sentry_secret=' + cdP['pass']), {
                    'Content-Type': 'application/json',
                    'X-Sentry-Auth': cdQ['join'](',\x20')
                };
            }, cdN['prototype']['getReportDialogEndpoint'] = function(cdN) {
                void 0x0 === cdN && (cdN = {});
                var cdO = this['_dsnObject'],
                    cdP = this['_getBaseUrl']() + (cdO['path'] ? '/' + cdO['path'] : '') + '/api/embed/error-page/',
                    cdQ = [];
                for (var cdR in cdQ['push']('dsn=' + cdO['toString']()), cdN)
                    if ('user' == cdR) {
                        if (!cdN['user']) continue;
                        cdN['user']['name'] && cdQ['push']('name=' + encodeURIComponent(cdN['user']['name'])), cdN['user']['email'] && cdQ['push']('email=' + encodeURIComponent(cdN['user']['email']));
                    } else cdQ['push'](encodeURIComponent(cdR) + '=' + encodeURIComponent(cdN[cdR]));
                return cdQ['length'] ? cdP + '?' + cdQ['join']('&') : cdP;
            }, cdN;
        }(),
        cfe = cdP(0x49),
        cff = [];

    function cgz(cdN) {
        var cdO = {};
        return function(cdN) {
            var cdO = cdN['defaultIntegrations'] && cdW['d'](cdN['defaultIntegrations']) || [],
                cdP = cdN['integrations'],
                cdQ = [];
            if (Array['isArray'](cdP)) {
                var cdR = cdP['map'](function(cdN) {
                        return cdN['name'];
                    }),
                    cdS = [];
                cdO['forEach'](function(cdN) {
                    -0x1 === cdR['indexOf'](cdN['name']) && -0x1 === cdS['indexOf'](cdN['name']) && (cdQ['push'](cdN), cdS['push'](cdN['name']));
                }), cdP['forEach'](function(cdN) {
                    -0x1 === cdS['indexOf'](cdN['name']) && (cdQ['push'](cdN), cdS['push'](cdN['name']));
                });
            } else {
                if ('function' != typeof cdP) return cdW['d'](cdO);
                cdQ = cdP(cdO), cdQ = Array['isArray'](cdQ) ? cdQ : [cdQ];
            }
            return cdQ;
        }(cdN)['forEach'](function(cdN) {
            cdO[cdN['name']] = cdN,
                function(cdN) {
                    -0x1 !== cff['indexOf'](cdN['name']) || (cdN['setupOnce'](ceF['b'], ce2['b']), cff['push'](cdN['name']), ceI['a']['log']('Integration\x20installed:\x20' + cdN['name']));
                }(cdN);
        }), cdO;
    }
    var cgN = function() {
            function cdN(cdN, cdO) {
                this['_processing'] = !0x1, this['_backend'] = new cdN(cdO), this['_options'] = cdO, cdO['dsn'] && (this['_dsn'] = new cfc(cdO['dsn'])), this['_integrations'] = cgz(this['_options']);
            }
            return cdN['prototype']['captureException'] = function(cdN, cdO, cdP) {
                var cdQ = this,
                    cdR = cdO && cdO['event_id'];
                return this['_processing'] = !0x0, this['_getBackend']()['eventFromException'](cdN, cdO)['then'](function(cdN) {
                    return cdQ['_processEvent'](cdN, cdO, cdP);
                })['then'](function(cdN) {
                    cdR = cdN && cdN['event_id'], cdQ['_processing'] = !0x1;
                })['catch'](function(cdN) {
                    ceI['a']['error'](cdN), cdQ['_processing'] = !0x1;
                }), cdR;
            }, cdN['prototype']['captureMessage'] = function(cdN, cdO, cdP, cdQ) {
                var cdR = this,
                    cdS = cdP && cdP['event_id'];
                return this['_processing'] = !0x0, (Object(ceK['f'])(cdN) ? this['_getBackend']()['eventFromMessage']('' + cdN, cdO, cdP) : this['_getBackend']()['eventFromException'](cdN, cdP))['then'](function(cdN) {
                    return cdR['_processEvent'](cdN, cdP, cdQ);
                })['then'](function(cdN) {
                    cdS = cdN && cdN['event_id'], cdR['_processing'] = !0x1;
                })['catch'](function(cdN) {
                    ceI['a']['error'](cdN), cdR['_processing'] = !0x1;
                }), cdS;
            }, cdN['prototype']['captureEvent'] = function(cdN, cdO, cdP) {
                var cdQ = this,
                    cdR = cdO && cdO['event_id'];
                return this['_processing'] = !0x0, this['_processEvent'](cdN, cdO, cdP)['then'](function(cdN) {
                    cdR = cdN && cdN['event_id'], cdQ['_processing'] = !0x1;
                })['catch'](function(cdN) {
                    ceI['a']['error'](cdN), cdQ['_processing'] = !0x1;
                }), cdR;
            }, cdN['prototype']['getDsn'] = function() {
                return this['_dsn'];
            }, cdN['prototype']['getOptions'] = function() {
                return this['_options'];
            }, cdN['prototype']['flush'] = function(cdN) {
                var cdO = this;
                return this['_isClientProcessing'](cdN)['then'](function(cdP) {
                    return cdO['_processingInterval'] && clearInterval(cdO['_processingInterval']), cdO['_getBackend']()['getTransport']()['close'](cdN)['then'](function(cdN) {
                        return cdP && cdN;
                    });
                });
            }, cdN['prototype']['close'] = function(cdN) {
                var cdO = this;
                return this['flush'](cdN)['then'](function(cdN) {
                    return cdO['getOptions']()['enabled'] = !0x1, cdN;
                });
            }, cdN['prototype']['getIntegrations'] = function() {
                return this['_integrations'] || {};
            }, cdN['prototype']['getIntegration'] = function(cdN) {
                try {
                    return this['_integrations'][cdN['id']] || null;
                } catch (chp) {
                    return ceI['a']['warn']('Cannot\x20retrieve\x20integration\x20' + cdN['id'] + '\x20from\x20the\x20current\x20Client'), null;
                }
            }, cdN['prototype']['_isClientProcessing'] = function(cdN) {
                var cdO = this;
                return new Promise(function(cdP) {
                    var cdQ = 0x0;
                    cdO['_processingInterval'] && clearInterval(cdO['_processingInterval']), cdO['_processingInterval'] = setInterval(function() {
                        cdO['_processing'] ? (cdQ += 0x1, cdN && cdQ >= cdN && cdP(!0x1)) : cdP(!0x0);
                    }, 0x1);
                });
            }, cdN['prototype']['_getBackend'] = function() {
                return this['_backend'];
            }, cdN['prototype']['_isEnabled'] = function() {
                return !0x1 !== this['getOptions']()['enabled'] && void 0x0 !== this['_dsn'];
            }, cdN['prototype']['_prepareEvent'] = function(cdN, cdO, cdP) {
                var cdQ = this['getOptions'](),
                    cdR = cdQ['environment'],
                    cdS = cdQ['release'],
                    cdT = cdQ['dist'],
                    cdU = cdQ['maxValueLength'],
                    cdV = void 0x0 === cdU ? 0xfa : cdU,
                    ce2 = cdW['a']({}, cdN);
                void 0x0 === ce2['environment'] && void 0x0 !== cdR && (ce2['environment'] = cdR), void 0x0 === ce2['release'] && void 0x0 !== cdS && (ce2['release'] = cdS), void 0x0 === ce2['dist'] && void 0x0 !== cdT && (ce2['dist'] = cdT), ce2['message'] && (ce2['message'] = ceP(ce2['message'], cdV));
                var ce3 = ce2['exception'] && ce2['exception']['values'] && ce2['exception']['values'][0x0];
                ce3 && ce3['value'] && (ce3['value'] = ceP(ce3['value'], cdV));
                var ce8 = ce2['request'];
                ce8 && ce8['url'] && (ce8['url'] = ceP(ce8['url'], cdV)), void 0x0 === ce2['event_id'] && (ce2['event_id'] = Object(ceJ['g'])()), this['_addIntegrations'](ce2['sdk']);
                var cec = cfe['a']['resolve'](ce2);
                return cdO && (cec = cdO['applyToEvent'](ce2, cdP)), cec;
            }, cdN['prototype']['_addIntegrations'] = function(cdN) {
                var cdO = Object['keys'](this['_integrations']);
                cdN && 0x0 < cdO['length'] && (cdN['integrations'] = cdO);
            }, cdN['prototype']['_processEvent'] = function(cdN, cdO, cdP) {
                var cdQ = this,
                    cdR = this['getOptions'](),
                    cdS = cdR['beforeSend'],
                    cdT = cdR['sampleRate'];
                return this['_isEnabled']() ? 'number' == typeof cdT && Math['random']() > cdT ? cfe['a']['reject']('This\x20event\x20has\x20been\x20sampled,\x20will\x20not\x20send\x20event.') : new cfe['a'](function(cdR, cdT) {
                    cdQ['_prepareEvent'](cdN, cdP, cdO)['then'](function(cdN) {
                        if (null !== cdN) {
                            var cdP = cdN;
                            try {
                                if (cdO && cdO['data'] && !0x0 === cdO['data']['__sentry__'] || !cdS) return cdQ['_getBackend']()['sendEvent'](cdP), void cdR(cdP);
                                var cdU = cdS(cdN, cdO);
                                if (void 0x0 === cdU) ceI['a']['error']('`beforeSend`\x20method\x20has\x20to\x20return\x20`null`\x20or\x20a\x20valid\x20event.');
                                else if (Object(ceK['j'])(cdU)) cdQ['_handleAsyncBeforeSend'](cdU, cdR, cdT);
                                else {
                                    if (null === (cdP = cdU)) return ceI['a']['log']('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.'), void cdR(null);
                                    cdQ['_getBackend']()['sendEvent'](cdP), cdR(cdP);
                                }
                            } catch (chV) {
                                cdQ['captureException'](chV, {
                                    'data': {
                                        '__sentry__': !0x0
                                    },
                                    'originalException': chV
                                }), cdT('`beforeSend`\x20throw\x20an\x20error,\x20will\x20not\x20send\x20event.');
                            }
                        } else cdT('An\x20event\x20processor\x20returned\x20null,\x20will\x20not\x20send\x20event.');
                    });
                }) : cfe['a']['reject']('SDK\x20not\x20enabled,\x20will\x20not\x20send\x20event.');
            }, cdN['prototype']['_handleAsyncBeforeSend'] = function(cdN, cdO, cdP) {
                var cdQ = this;
                cdN['then'](function(cdN) {
                    return null === cdN ? void cdP('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.') : (cdQ['_getBackend']()['sendEvent'](cdN), void cdO(cdN));
                })['catch'](function(cdN) {
                    cdP('beforeSend\x20rejected\x20with\x20' + cdN);
                });
            }, cdN;
        }(),
        cgO = function() {
            function cdN() {}
            return cdN['prototype']['sendEvent'] = function() {
                return Promise['resolve']({
                    'reason': 'NoopTransport:\x20Event\x20has\x20been\x20skipped\x20because\x20no\x20Dsn\x20is\x20configured.',
                    'status': cdV['Skipped']
                });
            }, cdN['prototype']['close'] = function() {
                return Promise['resolve'](!0x0);
            }, cdN;
        }(),
        cgP = function() {
            function cdN(cdN) {
                this['_options'] = cdN, this['_options']['dsn'] || ceI['a']['warn']('No\x20DSN\x20provided,\x20backend\x20will\x20not\x20do\x20anything.'), this['_transport'] = this['_setupTransport']();
            }
            return cdN['prototype']['_setupTransport'] = function() {
                return new cgO();
            }, cdN['prototype']['eventFromException'] = function() {
                throw new cfa('Backend\x20has\x20to\x20implement\x20`eventFromException`\x20method');
            }, cdN['prototype']['eventFromMessage'] = function() {
                throw new cfa('Backend\x20has\x20to\x20implement\x20`eventFromMessage`\x20method');
            }, cdN['prototype']['sendEvent'] = function(cdN) {
                this['_transport']['sendEvent'](cdN)['catch'](function(cdN) {
                    ceI['a']['error']('Error\x20while\x20sending\x20event:\x20' + cdN);
                });
            }, cdN['prototype']['getTransport'] = function() {
                return this['_transport'];
            }, cdN;
        }();

    function ci7() {
        if (!('fetch' in Object(ceJ['e'])())) return !0x1;
        try {
            return new Headers(), new Request(''), new Response(), !0x0;
        } catch (ci8) {
            return !0x1;
        }
    }

    function ci9() {
        if (!ci7()) return !0x1;
        try {
            return new Request('_', {
                'referrerPolicy': 'origin'
            }), !0x0;
        } catch (cia) {
            return !0x1;
        }
    }
    /**
     * TraceKit - Cross brower stack traces
     *
     * This was originally forked from github.com/occ/TraceKit, but has since been
     * largely modified and is now maintained as part of Sentry JS SDK.
     *
     * NOTE: Last merge with upstream repository
     * Jul 11,2018 - #f03357c
     *
     * https://github.com/csnover/TraceKit
     * @license MIT
     * @namespace TraceKit
     */
    /**
     * TraceKit - Cross brower stack traces
     *
     * This was originally forked from github.com/occ/TraceKit, but has since been
     * largely modified and is now maintained as part of Sentry JS SDK.
     *
     * NOTE: Last merge with upstream repository
     * Jul 11,2018 - #f03357c
     *
     * https://github.com/csnover/TraceKit
     * @license MIT
     * @namespace TraceKit
     */
    var cib = Object(ceJ['e'])(),
        cic = {
            '_report': !0x1,
            '_collectWindowErrors': !0x1,
            '_computeStackTrace': !0x1,
            '_linesOfContext': !0x1
        },
        cid = '?',
        cie = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;

    function cif(cdN, cdO) {
        return Object['prototype']['hasOwnProperty']['call'](cdN, cdO);
    }

    function cii() {
        return 'undefined' == typeof document || null == document['location'] ? '' : document['location']['href'];
    }
    cic['_report'] = function() {
        function cdN(cdN, cdO, cdP) {
            var cdQ = null;
            if (!cdO || cic['_collectWindowErrors']) {
                for (var cdR in cdU)
                    if (cif(cdU, cdR)) try {
                        cdU[cdR](cdN, cdO, cdP);
                    } catch (cip) {
                        cdQ = cip;
                    }
                if (cdQ) throw cdQ;
            }
        }

        function cdO(cdO, cdP, cdR, cdT, cdU) {
            var cdV = null;
            if (cdU = Object(ceK['d'])(cdU) ? cdU['error'] : cdU, cdO = Object(ceK['d'])(cdO) ? cdO['message'] : cdO, ce2) cic['_computeStackTrace']['_augmentStackTraceWithInitialElement'](ce2, cdP, cdR, cdO), cdQ();
            else if (cdU && Object(ceK['c'])(cdU))(cdV = cic['_computeStackTrace'](cdU))['mechanism'] = 'onerror', cdN(cdV, !0x0, cdU);
            else {
                var ce3, ce8 = {
                        'url': cdP,
                        'line': cdR,
                        'column': cdT
                    },
                    cec = cdO;
                if ('[object\x20String]' === {}['toString']['call'](cdO)) {
                    var ceh = cdO['match'](cie);
                    ceh && (ce3 = ceh[0x1], cec = ceh[0x2]);
                }
                ce8['func'] = cid, ce8['context'] = null, cdN(cdV = {
                    'name': ce3,
                    'message': cec,
                    'mode': 'onerror',
                    'mechanism': 'onerror',
                    'stack': [cdW['a']({}, ce8, {
                        'url': ce8['url'] || cii()
                    })]
                }, !0x0, null);
            }
            return !!cdS && cdS['apply'](this, arguments);
        }

        function cdP(cdO) {
            var cdP = cdO && (cdO['detail'] ? cdO['detail']['reason'] : cdO['reason']) || cdO,
                cdQ = cic['_computeStackTrace'](cdP);
            cdQ['mechanism'] = 'onunhandledrejection', cdQ['message'] || (cdQ['message'] = JSON['stringify'](Object(cf9['b'])(cdP))), cdN(cdQ, !0x0, cdP);
        }

        function cdQ() {
            var cdO = ce2,
                cdP = cdV;
            ce2 = null, cdV = null, cdN(cdO, !0x1, cdP);
        }

        function cdR(cdN) {
            if (ce2) {
                if (cdV === cdN) return;
                cdQ();
            }
            var cdO = cic['_computeStackTrace'](cdN);
            throw ce2 = cdO, cdV = cdN, setTimeout(function() {
                cdV === cdN && cdQ();
            }, cdO['incomplete'] ? 0x7d0 : 0x0), cdN;
        }
        var cdS, cdT, cdU = [],
            cdV = null,
            ce2 = null;
        return cdR['_subscribe'] = function(cdN) {
            cdU['push'](cdN);
        }, cdR['_installGlobalHandler'] = function() {
            !0x0 === cdT || (cdS = cib['onerror'], cib['onerror'] = cdO, cdT = !0x0);
        }, cdR['_installGlobalUnhandledRejectionHandler'] = function() {
            cib['onunhandledrejection'] = cdP;
        }, cdR;
    }(), cic['_computeStackTrace'] = function() {
        function cdN(cdN) {
            if (!cdN || !cdN['stack']) return null;
            for (var cdO, cdP, cdQ, cdR = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, cdS = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i, cdT = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i, cdU = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i, cdV = /\((\S*)(?::(\d+))(?::(\d+))\)/, cdW = cdN['stack']['split']('\x0a'), ce2 = [], ce3 = /^(.*) is undefined$/ ['exec'](cdN['message']), ce8 = 0x0, cec = cdW['length']; ce8 < cec; ++ce8) {
                if (cdP = cdR['exec'](cdW[ce8])) {
                    var ceh = cdP[0x2] && 0x0 === cdP[0x2]['indexOf']('native');
                    cdP[0x2] && 0x0 === cdP[0x2]['indexOf']('eval') && (cdO = cdV['exec'](cdP[0x2])) && (cdP[0x2] = cdO[0x1], cdP[0x3] = cdO[0x2], cdP[0x4] = cdO[0x3]), cdQ = {
                        'url': cdP[0x2],
                        'func': cdP[0x1] || cid,
                        'args': ceh ? [cdP[0x2]] : [],
                        'line': cdP[0x3] ? +cdP[0x3] : null,
                        'column': cdP[0x4] ? +cdP[0x4] : null
                    };
                } else if (cdP = cdT['exec'](cdW[ce8])) cdQ = {
                    'url': cdP[0x2],
                    'func': cdP[0x1] || cid,
                    'args': [],
                    'line': +cdP[0x3],
                    'column': cdP[0x4] ? +cdP[0x4] : null
                };
                else {
                    if (!(cdP = cdS['exec'](cdW[ce8]))) continue;
                    cdP[0x3] && -0x1 < cdP[0x3]['indexOf']('\x20>\x20eval') && (cdO = cdU['exec'](cdP[0x3])) ? (cdP[0x1] = cdP[0x1] || 'eval', cdP[0x3] = cdO[0x1], cdP[0x4] = cdO[0x2], cdP[0x5] = '') : 0x0 == ce8 && !cdP[0x5] && void 0x0 !== cdN['columnNumber'] && (ce2[0x0]['column'] = cdN['columnNumber'] + 0x1), cdQ = {
                        'url': cdP[0x3],
                        'func': cdP[0x1] || cid,
                        'args': cdP[0x2] ? cdP[0x2]['split'](',') : [],
                        'line': cdP[0x4] ? +cdP[0x4] : null,
                        'column': cdP[0x5] ? +cdP[0x5] : null
                    };
                }!cdQ['func'] && cdQ['line'] && (cdQ['func'] = cid), cdQ['context'] = null, ce2['push'](cdQ);
            }
            return ce2['length'] ? (ce2[0x0] && ce2[0x0]['line'] && !ce2[0x0]['column'] && ce3 && (ce2[0x0]['column'] = null), {
                'mode': 'stack',
                'name': cdN['name'],
                'message': cdN['message'],
                'stack': ce2
            }) : null;
        }

        function cdO(cdN, cdO, cdP, cdQ) {
            var cdR = {
                'url': cdO,
                'line': cdP
            };
            if (cdR['url'] && cdR['line']) {
                if (cdN['incomplete'] = !0x1, cdR['func'] || (cdR['func'] = cid), cdR['context'] || (cdR['context'] = null), / '([^']+)' / ['exec'](cdQ) && (cdR['column'] = null), 0x0 < cdN['stack']['length'] && cdN['stack'][0x0]['url'] === cdR['url']) {
                    if (cdN['stack'][0x0]['line'] === cdR['line']) return !0x1;
                    if (!cdN['stack'][0x0]['line'] && cdN['stack'][0x0]['func'] === cdR['func']) return cdN['stack'][0x0]['line'] = cdR['line'], cdN['stack'][0x0]['context'] = cdR['context'], !0x1;
                }
                return cdN['stack']['unshift'](cdR), cdN['partial'] = !0x0, !0x0;
            }
            return cdN['incomplete'] = !0x0, !0x1;
        }

        function cdP(cdN, cdQ) {
            for (var cdR, cdS, cdT = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, cdU = [], cdV = {}, cdW = !0x1, ce2 = cdP['caller']; ce2 && !cdW; ce2 = ce2['caller'])
                if (ce2 !== cjV && ce2 !== cic['_report']) {
                    if (cdS = {
                            'url': null,
                            'func': cid,
                            'args': [],
                            'line': null,
                            'column': null
                        }, ce2['name'] ? cdS['func'] = ce2['name'] : (cdR = cdT['exec'](ce2['toString']())) && (cdS['func'] = cdR[0x1]), void 0x0 === cdS['func']) try {
                        cdS['func'] = cdR['input']['substring'](0x0, cdR['input']['indexOf']('{'));
                    } catch (cjn) {}
                    cdV['' + ce2] ? cdW = !0x0 : cdV['' + ce2] = !0x0, cdU['push'](cdS);
                }
            cdQ && cdU['splice'](0x0, cdQ);
            var ce3 = {
                'mode': 'callers',
                'name': cdN['name'],
                'message': cdN['message'],
                'stack': cdU
            };
            return cdO(ce3, cdN['sourceURL'] || cdN['fileName'], cdN['line'] || cdN['lineNumber'], cdN['message'] || cdN['description']), ce3;
        }

        function cdQ(cdO, cdQ) {
            var cdR = null;
            cdQ = null == cdQ ? 0x0 : +cdQ;
            try {
                if (cdR = function(cdN) {
                        var cdO = cdN['stacktrace'];
                        if (cdO) {
                            for (var cdP, cdQ, cdR = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, cdS = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, cdT = cdO['split']('\x0a'), cdU = [], cdV = 0x0; cdV < cdT['length']; cdV += 0x2) cdQ = null, (cdP = cdR['exec'](cdT[cdV])) ? cdQ = {
                                'url': cdP[0x2],
                                'line': +cdP[0x1],
                                'column': null,
                                'func': cdP[0x3],
                                'args': []
                            } : (cdP = cdS['exec'](cdT[cdV])) && (cdQ = {
                                'url': cdP[0x6],
                                'line': +cdP[0x1],
                                'column': +cdP[0x2],
                                'func': cdP[0x3] || cdP[0x4],
                                'args': cdP[0x5] ? cdP[0x5]['split'](',') : []
                            }), cdQ && (!cdQ['func'] && cdQ['line'] && (cdQ['func'] = cid), cdQ['line'] && (cdQ['context'] = null), !cdQ['context'] && (cdQ['context'] = [cdT[cdV + 0x1]]), cdU['push'](cdQ));
                            return cdU['length'] ? {
                                'mode': 'stacktrace',
                                'name': cdN['name'],
                                'message': cdN['message'],
                                'stack': cdU
                            } : null;
                        }
                    }(cdO)) return cdR;
            } catch (cjC) {}
            try {
                if (cdR = cdN(cdO)) return cdR;
            } catch (cjD) {}
            try {
                if (cdR = function(cdN) {
                        var cdO = cdN['message']['split']('\x0a');
                        if (0x4 > cdO['length']) return null;
                        var cdP, cdQ = /^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i,
                            cdR = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i,
                            cdS = /^\s*Line (\d+) of function script\s*$/i,
                            cdT = [],
                            cdU = cib && cib['document'] && cib['document']['getElementsByTagName']('script'),
                            cdV = [];
                        for (var cdW in cdU) cif(cdU, cdW) && !cdU[cdW]['src'] && cdV['push'](cdU[cdW]);
                        for (var ce2, ce3 = 0x2; ce3 < cdO['length']; ce3 += 0x2) ce2 = null, (cdP = cdQ['exec'](cdO[ce3])) ? ce2 = {
                            'url': cdP[0x2],
                            'func': cdP[0x3],
                            'args': [],
                            'line': +cdP[0x1],
                            'column': null
                        } : (cdP = cdR['exec'](cdO[ce3])) ? ce2 = {
                            'url': cdP[0x3],
                            'func': cdP[0x4],
                            'args': [],
                            'line': +cdP[0x1],
                            'column': null
                        } : (cdP = cdS['exec'](cdO[ce3])) && (ce2 = {
                            'url': cii()['replace'](/#.*$/, ''),
                            'func': '',
                            'args': [],
                            'line': cdP[0x1],
                            'column': null
                        }), ce2 && (!ce2['func'] && (ce2['func'] = cid), ce2['context'] = [cdO[ce3 + 0x1]], cdT['push'](ce2));
                        return cdT['length'] ? {
                            'mode': 'multiline',
                            'name': cdN['name'],
                            'message': cdO[0x0],
                            'stack': cdT
                        } : null;
                    }(cdO)) return cdR;
            } catch (cjQ) {}
            try {
                if (cdR = cdP(cdO, cdQ + 0x1)) return cdR;
            } catch (cjR) {}
            return {
                'original': cdO,
                'name': cdO['name'],
                'message': cdO['message'],
                'mode': 'failed'
            };
        }
        return cdQ['_augmentStackTraceWithInitialElement'] = cdO, cdQ['_computeStackTraceFromStackProp'] = cdN, cdQ;
    }(), cic['_collectWindowErrors'] = !0x0, cic['_linesOfContext'] = 0xb;
    var cjS = cic['_report']['_subscribe'],
        cjT = cic['_report']['_installGlobalHandler'],
        cjU = cic['_report']['_installGlobalUnhandledRejectionHandler'],
        cjV = cic['_computeStackTrace'],
        cjW = 0x32;

    function cjX(cdN) {
        var cdO = ck3(cdN['stack']),
            cdP = {
                'type': cdN['name'],
                'value': cdN['message']
            };
        return cdO && cdO['length'] && (cdP['stacktrace'] = {
            'frames': cdO
        }), void 0x0 === cdP['type'] && '' === cdP['value'] && (cdP['value'] = 'Unrecoverable\x20error\x20caught'), cdP;
    }

    function ck1(cdN) {
        return {
            'exception': {
                'values': [cjX(cdN)]
            }
        };
    }

    function ck3(cdN) {
        if (!cdN || !cdN['length']) return [];
        var cdO = cdN,
            cdP = cdO[0x0]['func'] || '',
            cdQ = cdO[cdO['length'] - 0x1]['func'] || '';
        return (cdP['includes']('captureMessage') || cdP['includes']('captureException')) && (cdO = cdO['slice'](0x1)), cdQ['includes']('sentryWrapped') && (cdO = cdO['slice'](0x0, -0x1)), cdO['map'](function(cdN) {
            return {
                'colno': cdN['column'],
                'filename': cdN['url'] || cdO[0x0]['url'],
                'function': cdN['func'] || '?',
                'in_app': !0x0,
                'lineno': cdN['line']
            };
        })['slice'](0x0, cjW)['reverse']();
    }
    var ck9 = function() {
            function cdN(cdN) {
                this['_limit'] = cdN, this['_buffer'] = [];
            }
            return cdN['prototype']['isReady'] = function() {
                return void 0x0 === this['_limit'] || this['length']() < this['_limit'];
            }, cdN['prototype']['add'] = function(cdN) {
                var cdO = this;
                return this['isReady']() ? (-0x1 === this['_buffer']['indexOf'](cdN) && this['_buffer']['push'](cdN), cdN['then'](function() {
                    return cdO['remove'](cdN);
                })['catch'](function() {
                    return cdO['remove'](cdN)['catch'](function() {});
                }), cdN) : Promise['reject'](new cfa('Not\x20adding\x20Promise\x20due\x20to\x20buffer\x20limit\x20reached.'));
            }, cdN['prototype']['remove'] = function(cdN) {
                return this['_buffer']['splice'](this['_buffer']['indexOf'](cdN), 0x1)[0x0];
            }, cdN['prototype']['length'] = function() {
                return this['_buffer']['length'];
            }, cdN['prototype']['drain'] = function(cdN) {
                var cdO = this;
                return new Promise(function(cdP) {
                    var cdQ = setTimeout(function() {
                        cdN && 0x0 < cdN && cdP(!0x1);
                    }, cdN);
                    Promise['all'](cdO['_buffer'])['then'](function() {
                        clearTimeout(cdQ), cdP(!0x0);
                    })['catch'](function() {
                        cdP(!0x0);
                    });
                });
            }, cdN;
        }(),
        cka = function() {
            function cdN(cdN) {
                this['options'] = cdN, this['_buffer'] = new ck9(0x1e), this['url'] = new cfd(this['options']['dsn'])['getStoreEndpointWithUrlEncodedAuth']();
            }
            return cdN['prototype']['sendEvent'] = function() {
                throw new cfa('Transport\x20Class\x20has\x20to\x20implement\x20`sendEvent`\x20method');
            }, cdN['prototype']['close'] = function(cdN) {
                return this['_buffer']['drain'](cdN);
            }, cdN;
        }(),
        ckb = Object(ceJ['e'])(),
        ckc = function(cdN) {
            function cdO() {
                return null !== cdN && cdN['apply'](this, arguments) || this;
            }
            return cdW['b'](cdO, cdN), cdO['prototype']['sendEvent'] = function(cdN) {
                var cdO = {
                    'body': JSON['stringify'](cdN),
                    'method': 'POST',
                    'referrerPolicy': ci9() ? 'origin' : ''
                };
                return this['_buffer']['add'](ckb['fetch'](this['url'], cdO)['then'](function(cdN) {
                    return {
                        'status': cdV['fromHttpCode'](cdN['status'])
                    };
                }));
            }, cdO;
        }(cka),
        ckd = function(cdN) {
            function cdO() {
                return null !== cdN && cdN['apply'](this, arguments) || this;
            }
            return cdW['b'](cdO, cdN), cdO['prototype']['sendEvent'] = function(cdN) {
                var cdO = this;
                return this['_buffer']['add'](new Promise(function(cdP, cdQ) {
                    var cdR = new XMLHttpRequest();
                    cdR['onreadystatechange'] = function() {
                        0x4 !== cdR['readyState'] || (0xc8 === cdR['status'] && cdP({
                            'status': cdV['fromHttpCode'](cdR['status'])
                        }), cdQ(cdR));
                    }, cdR['open']('POST', cdO['url']), cdR['send'](JSON['stringify'](cdN));
                }));
            }, cdO;
        }(cka),
        cke = function(cdN) {
            function cdO() {
                return null !== cdN && cdN['apply'](this, arguments) || this;
            }
            return cdW['b'](cdO, cdN), cdO['prototype']['_setupTransport'] = function() {
                if (!this['_options']['dsn']) return cdN['prototype']['_setupTransport']['call'](this);
                var cdO = this['_options']['transportOptions'] ? this['_options']['transportOptions'] : {
                    'dsn': this['_options']['dsn']
                };
                return this['_options']['transport'] ? new this['_options']['transport'](cdO) : ci7() ? new ckc(cdO) : new ckd(cdO);
            }, cdO['prototype']['eventFromException'] = function(cdN, cdO) {
                var cdP, cdQ = this;
                if (Object(ceK['d'])(cdN) && cdN['error']) return cdN = cdN['error'], cdP = ck1(cjV(cdN)), cfe['a']['resolve'](this['_buildEvent'](cdP, cdO));
                if (Object(ceK['a'])(cdN) || Object(ceK['b'])(cdN)) {
                    var cdR = cdN,
                        cdS = cdR['name'] || (Object(ceK['a'])(cdR) ? 'DOMError' : 'DOMException'),
                        cdU = cdR['message'] ? cdS + ':\x20' + cdR['message'] : cdS;
                    return this['eventFromMessage'](cdU, cdT['Error'], cdO)['then'](function(cdN) {
                        return Object(ceJ['a'])(cdN, cdU), cfe['a']['resolve'](cdQ['_buildEvent'](cdN, cdO));
                    });
                }
                if (Object(ceK['c'])(cdN)) return cdP = ck1(cjV(cdN)), cfe['a']['resolve'](this['_buildEvent'](cdP, cdO));
                if (Object(ceK['e'])(cdN) && cdO && cdO['syntheticException']) return cdP = function(cdN, cdO) {
                    var cdP = Object['keys'](cdN)['sort'](),
                        cdQ = {
                            'extra': {
                                '__serialized__': Object(cf9['c'])(cdN)
                            },
                            'message': 'Non-Error\x20exception\x20captured\x20with\x20keys:\x20' + ceZ(cdP)
                        };
                    if (cdO) {
                        var cdR = ck3(cjV(cdO)['stack']);
                        cdQ['stacktrace'] = {
                            'frames': cdR
                        };
                    }
                    return cdQ;
                }(cdN, cdO['syntheticException']), Object(ceJ['a'])(cdP, 'Custom\x20Object', void 0x0, {
                    'handled': !0x0,
                    'synthetic': !0x0,
                    'type': 'generic'
                }), cdP['level'] = cdT['Error'], cfe['a']['resolve'](this['_buildEvent'](cdP, cdO));
                var cdV = cdN;
                return this['eventFromMessage'](cdV, void 0x0, cdO)['then'](function(cdN) {
                    return Object(ceJ['a'])(cdN, '' + cdV, void 0x0, {
                        'handled': !0x0,
                        'synthetic': !0x0,
                        'type': 'generic'
                    }), cdN['level'] = cdT['Error'], cfe['a']['resolve'](cdQ['_buildEvent'](cdN, cdO));
                });
            }, cdO['prototype']['_buildEvent'] = function(cdN, cdO) {
                return cdW['a']({}, cdN, {
                    'event_id': cdO && cdO['event_id']
                });
            }, cdO['prototype']['eventFromMessage'] = function(cdN, cdO, cdP) {
                void 0x0 === cdO && (cdO = cdT['Info']);
                var cdQ = {
                    'event_id': cdP && cdP['event_id'],
                    'level': cdO,
                    'message': cdN
                };
                if (this['_options']['attachStacktrace'] && cdP && cdP['syntheticException']) {
                    var cdR = ck3(cjV(cdP['syntheticException'])['stack']);
                    cdQ['stacktrace'] = {
                        'frames': cdR
                    };
                }
                return cfe['a']['resolve'](cdQ);
            }, cdO;
        }(cgP),
        ckf = 'sentry.javascript.browser',
        ckg = function(cdN) {
            function cdO(cdO) {
                return void 0x0 === cdO && (cdO = {}), cdN['call'](this, cke, cdO) || this;
            }
            return cdW['b'](cdO, cdN), cdO['prototype']['_prepareEvent'] = function(cdO, cdP, cdQ) {
                return cdO['platform'] = cdO['platform'] || 'javascript', cdO['sdk'] = cdW['a']({}, cdO['sdk'], {
                    'name': ckf,
                    'packages': cdW['d'](cdO['sdk'] && cdO['sdk']['packages'] || [], [{
                        'name': 'npm:@sentry/browser',
                        'version': '5.4.3'
                    }]),
                    'version': '5.4.3'
                }), cdN['prototype']['_prepareEvent']['call'](this, cdO, cdP, cdQ);
            }, cdO['prototype']['showReportDialog'] = function(cdN) {
                void 0x0 === cdN && (cdN = {});
                var cdO = Object(ceJ['e'])()['document'];
                if (cdO) {
                    if (!this['_isEnabled']()) return void ceI['a']['error']('Trying\x20to\x20call\x20showReportDialog\x20with\x20Sentry\x20Client\x20is\x20disabled');
                    var cdP = cdN['dsn'] || this['getDsn']();
                    if (!cdN['eventId']) return void ceI['a']['error']('Missing\x20`eventId`\x20option\x20in\x20showReportDialog\x20call');
                    if (!cdP) return void ceI['a']['error']('Missing\x20`Dsn`\x20option\x20in\x20showReportDialog\x20call');
                    var cdQ = cdO['createElement']('script');
                    cdQ['async'] = !0x0, cdQ['src'] = new cfd(cdP)['getReportDialogEndpoint'](cdN), cdN['onLoad'] && (cdQ['onload'] = cdN['onLoad']), (cdO['head'] || cdO['body'])['appendChild'](cdQ);
                }
            }, cdO;
        }(cgN);
    var cle, clf, clg = 0x3e8,
        clh = 0x0;

    function cli(cdN, cdO, cdP) {
        if (void 0x0 === cdO && (cdO = {}), 'function' != typeof cdN) return cdN;
        try {
            if (cdN['__sentry__']) return cdN;
            if (cdN['__sentry_wrapped__']) return cdN['__sentry_wrapped__'];
        } catch (clm) {
            return cdN;
        }
        var cdQ = function() {
            cdP && 'function' == typeof cdP && cdP['apply'](this, arguments);
            var cdQ = Array['prototype']['slice']['call'](arguments);
            try {
                var cdR = cdQ['map'](function(cdN) {
                    return cli(cdN, cdO);
                });
                return cdN['handleEvent'] ? cdN['handleEvent']['apply'](this, cdR) : cdN['apply'](this, cdR);
            } catch (clr) {
                throw clh += 0x1, setTimeout(function() {
                    clh -= 0x1;
                }), ceC(function(cdP) {
                    cdP['addEventProcessor'](function(clr) {
                        var cdP = cdW['a']({}, clr);
                        return cdO['mechanism'] && Object(ceJ['a'])(cdP, void 0x0, void 0x0, cdO['mechanism']), cdP['extra'] = cdW['a']({}, cdP['extra'], {
                            'arguments': Object(cf9['b'])(cdQ, 0x3)
                        }), cdP;
                    }), ce8(clr);
                }), clr;
            }
        };
        try {
            for (var cdR in cdN) Object['prototype']['hasOwnProperty']['call'](cdN, cdR) && (cdQ[cdR] = cdN[cdR]);
        } catch (clw) {}
        cdN['prototype'] = cdN['prototype'] || {}, cdQ['prototype'] = cdN['prototype'], Object['defineProperty'](cdN, '__sentry_wrapped__', {
            'enumerable': !0x1,
            'value': cdQ
        }), Object['defineProperties'](cdQ, {
            '__sentry__': {
                'enumerable': !0x1,
                'value': !0x0
            },
            '__sentry_original__': {
                'enumerable': !0x1,
                'value': cdN
            }
        });
        try {
            Object['getOwnPropertyDescriptor'](cdQ, 'name')['configurable'] && Object['defineProperty'](cdQ, 'name', {
                'get': function() {
                    return cdN['name'];
                }
            });
        } catch (clx) {}
        return cdQ;
    }
    var cly = 0x0;

    function clz(cdN, cdO) {
        return void 0x0 === cdO && (cdO = !0x1),
            function(cdP) {
                if (cle = void 0x0, cdP && clf !== cdP) {
                    clf = cdP;
                    var cdQ = function() {
                        var cdO;
                        try {
                            cdO = cdP['target'] ? clL(cdP['target']) : clL(cdP);
                        } catch (clF) {
                            cdO = '<unknown>';
                        }
                        0x0 === cdO['length'] || Object(ce2['b'])()['addBreadcrumb']({
                            'category': 'ui.' + cdN,
                            'message': cdO
                        }, {
                            'event': cdP,
                            'name': cdN
                        });
                    };
                    cly && clearTimeout(cly), cdO ? cly = setTimeout(cdQ) : cdQ();
                }
            };
    }

    function clG() {
        return function(cdN) {
            var cdO;
            try {
                cdO = cdN['target'];
            } catch (clJ) {
                return;
            }
            var cdP = cdO && cdO['tagName'];
            cdP && ('INPUT' === cdP || 'TEXTAREA' === cdP || cdO['isContentEditable']) && (!cle && clz('input')(cdN), clearTimeout(cle), cle = setTimeout(function() {
                cle = void 0x0;
            }, clg));
        };
    }

    function clL(cdN) {
        for (var cdO, cdP = cdN, cdQ = [], cdR = 0x0, cdS = 0x0, cdT = '\x20>\x20' ['length']; cdP && cdR++ < 0x5 && !('html' === (cdO = clT(cdP)) || 0x1 < cdR && cdS + cdQ['length'] * cdT + cdO['length'] >= 0x50);) cdQ['push'](cdO), cdS += cdO['length'], cdP = cdP['parentNode'];
        return cdQ['reverse']()['join']('\x20>\x20');
    }

    function clT(cdN) {
        var cdO, cdP, cdQ, cdR, cdS, cdT = [];
        if (!cdN || !cdN['tagName']) return '';
        if (cdT['push'](cdN['tagName']['toLowerCase']()), cdN['id'] && cdT['push']('#' + cdN['id']), (cdO = cdN['className']) && Object(ceK['h'])(cdO))
            for (cdP = cdO['split'](/\s+/), cdS = 0x0; cdS < cdP['length']; cdS++) cdT['push']('.' + cdP[cdS]);
        var cdU = ['type', 'name', 'title', 'alt'];
        for (cdS = 0x0; cdS < cdU['length']; cdS++) cdQ = cdU[cdS], (cdR = cdN['getAttribute'](cdQ)) && cdT['push']('[' + cdQ + '=\x22' + cdR + '\x22]');
        return cdT['join']('');
    }
    var cm2 = function() {
        function cdN() {
            this['_ignoreOnError'] = 0x0, this['name'] = cdN['id'];
        }
        return cdN['prototype']['_wrapTimeFunction'] = function(cdN) {
            return function() {
                for (var cdO = [], cdP = 0x0; cdP < arguments['length']; cdP++) cdO[cdP] = arguments[cdP];
                var cdQ = cdO[0x0];
                return cdO[0x0] = cli(cdQ, {
                    'mechanism': {
                        'data': {
                            'function': cmp(cdN)
                        },
                        'handled': !0x0,
                        'type': 'instrument'
                    }
                }), cdN['apply'](this, cdO);
            };
        }, cdN['prototype']['_wrapRAF'] = function(cdN) {
            return function(cdO) {
                return cdN(cli(cdO, {
                    'mechanism': {
                        'data': {
                            'function': 'requestAnimationFrame',
                            'handler': cmp(cdN)
                        },
                        'handled': !0x0,
                        'type': 'instrument'
                    }
                }));
            };
        }, cdN['prototype']['_wrapEventTarget'] = function(cdN) {
            var cdO = Object(ceJ['e'])(),
                cdP = cdO[cdN] && cdO[cdN]['prototype'];
            cdP && cdP['hasOwnProperty'] && cdP['hasOwnProperty']('addEventListener') && (Object(cf9['a'])(cdP, 'addEventListener', function(cdO) {
                return function(cdP, cdQ, cdR) {
                    try {
                        cdQ['handleEvent'] = cli(cdQ['handleEvent']['bind'](cdQ), {
                            'mechanism': {
                                'data': {
                                    'function': 'handleEvent',
                                    'handler': cmp(cdQ),
                                    'target': cdN
                                },
                                'handled': !0x0,
                                'type': 'instrument'
                            }
                        });
                    } catch (cmh) {}
                    return cdO['call'](this, cdP, cli(cdQ, {
                        'mechanism': {
                            'data': {
                                'function': 'addEventListener',
                                'handler': cmp(cdQ),
                                'target': cdN
                            },
                            'handled': !0x0,
                            'type': 'instrument'
                        }
                    }), cdR);
                };
            }), Object(cf9['a'])(cdP, 'removeEventListener', function(cdN) {
                return function(cdO, cdP, cdQ) {
                    var cdR = cdP;
                    try {
                        cdR = cdR && (cdR['__sentry_wrapped__'] || cdR);
                    } catch (cmn) {}
                    return cdN['call'](this, cdO, cdR, cdQ);
                };
            }));
        }, cdN['prototype']['setupOnce'] = function() {
            this['_ignoreOnError'] = this['_ignoreOnError'];
            var cdN = Object(ceJ['e'])();
            Object(cf9['a'])(cdN, 'setTimeout', this['_wrapTimeFunction']['bind'](this)), Object(cf9['a'])(cdN, 'setInterval', this['_wrapTimeFunction']['bind'](this)), Object(cf9['a'])(cdN, 'requestAnimationFrame', this['_wrapRAF']['bind'](this)), ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload']['forEach'](this['_wrapEventTarget']['bind'](this));
        }, cdN['id'] = 'TryCatch', cdN;
    }();

    function cmp(cdN) {
        try {
            return cdN && cdN['name'] || '<anonymous>';
        } catch (cmr) {
            return '<anonymous>';
        }
    }
    var cms, cmt = Object(ceJ['e'])(),
        cmu = function() {
            function cdN(cdO) {
                this['name'] = cdN['id'], this['_options'] = cdW['a']({
                    'console': !0x0,
                    'dom': !0x0,
                    'fetch': !0x0,
                    'history': !0x0,
                    'sentry': !0x0,
                    'xhr': !0x0
                }, cdO);
            }
            return cdN['prototype']['_instrumentConsole'] = function() {
                'console' in cmt && ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(cdO) {
                    cdO in cmt['console'] && Object(cf9['a'])(cmt['console'], cdO, function(cdP) {
                        return function() {
                            for (var cdQ = [], cdR = 0x0; cdR < arguments['length']; cdR++) cdQ[cdR] = arguments[cdR];
                            var cdS = {
                                'category': 'console',
                                'data': {
                                    'extra': {
                                        'arguments': Object(cf9['b'])(cdQ, 0x3)
                                    },
                                    'logger': 'console'
                                },
                                'level': cdT['fromString'](cdO),
                                'message': ceS(cdQ, '\x20')
                            };
                            'assert' === cdO && !0x1 === cdQ[0x0] && (cdS['message'] = 'Assertion\x20failed:\x20' + (ceS(cdQ['slice'](0x1), '\x20') || 'console.assert'), cdS['data']['extra']['arguments'] = Object(cf9['b'])(cdQ['slice'](0x1), 0x3)), cdN['addBreadcrumb'](cdS, {
                                'input': cdQ,
                                'level': cdO
                            }), cdP && Function['prototype']['apply']['call'](cdP, cmt['console'], cdQ);
                        };
                    });
                });
            }, cdN['prototype']['_instrumentDOM'] = function() {
                'document' in cmt && (cmt['document']['addEventListener']('click', clz('click'), !0x1), cmt['document']['addEventListener']('keypress', clG(), !0x1), ['EventTarget', 'Node']['forEach'](function(cdN) {
                    var cdO = cmt[cdN] && cmt[cdN]['prototype'];
                    cdO && cdO['hasOwnProperty'] && cdO['hasOwnProperty']('addEventListener') && (Object(cf9['a'])(cdO, 'addEventListener', function(cdN) {
                        return function(cdO, cdP, cdQ) {
                            return cdP && cdP['handleEvent'] ? ('click' === cdO && Object(cf9['a'])(cdP, 'handleEvent', function(cdN) {
                                return function(cdO) {
                                    return clz('click')(cdO), cdN['call'](this, cdO);
                                };
                            }), 'keypress' === cdO && Object(cf9['a'])(cdP, 'handleEvent', clG())) : ('click' === cdO && clz('click', !0x0)(this), 'keypress' === cdO && clG()(this)), cdN['call'](this, cdO, cdP, cdQ);
                        };
                    }), Object(cf9['a'])(cdO, 'removeEventListener', function(cdN) {
                        return function(cdO, cdP, cdQ) {
                            var cdR = cdP;
                            try {
                                cdR = cdR && (cdR['__sentry_wrapped__'] || cdR);
                            } catch (cmP) {}
                            return cdN['call'](this, cdO, cdR, cdQ);
                        };
                    }));
                }));
            }, cdN['prototype']['_instrumentFetch'] = function() {
                (function() {
                    if (!ci7()) return !0x1;
                    var cdN = function(cdN) {
                            return -0x1 !== cdN['toString']()['indexOf']('native');
                        },
                        cdO = Object(ceJ['e'])(),
                        cdP = null,
                        cdQ = cdO['document'];
                    if (cdQ) {
                        var cdR = cdQ['createElement']('iframe');
                        cdR['hidden'] = !0x0;
                        try {
                            cdQ['head']['appendChild'](cdR), cdR['contentWindow'] && cdR['contentWindow']['fetch'] && (cdP = cdN(cdR['contentWindow']['fetch'])), cdQ['head']['removeChild'](cdR);
                        } catch (cmW) {
                            ceI['a']['warn']('Could\x20not\x20create\x20sandbox\x20iframe\x20for\x20pure\x20fetch\x20check,\x20bailing\x20to\x20window.fetch:\x20', cmW);
                        }
                    }
                    return null === cdP && (cdP = cdN(cdO['fetch'])), cdP;
                }() && Object(cf9['a'])(cmt, 'fetch', function(cdO) {
                    return function() {
                        for (var cdP = [], cdQ = 0x0; cdQ < arguments['length']; cdQ++) cdP[cdQ] = arguments[cdQ];
                        var cdR, cdS = cdP[0x0],
                            cdU = 'GET';
                        'string' == typeof cdS ? cdR = cdS : 'Request' in cmt && cdS instanceof Request ? (cdR = cdS['url'], cdS['method'] && (cdU = cdS['method'])) : cdR = cdS + '', cdP[0x1] && cdP[0x1]['method'] && (cdU = cdP[0x1]['method']);
                        var cdV = Object(ce2['b'])()['getClient'](),
                            cdW = cdV && cdV['getDsn']();
                        if (cdW) {
                            var ce3 = new cfd(cdW)['getStoreEndpoint']();
                            if (ce3 && cdR['includes'](ce3)) return 'POST' === cdU && cdP[0x1] && cdP[0x1]['body'] && cnO(cdP[0x1]['body']), cdO['apply'](cmt, cdP);
                        }
                        var ce8 = {
                            'method': cdU,
                            'url': cdR
                        };
                        return cdO['apply'](cmt, cdP)['then'](function(cdO) {
                            return ce8['status_code'] = cdO['status'], cdN['addBreadcrumb']({
                                'category': 'fetch',
                                'data': ce8,
                                'type': 'http'
                            }, {
                                'input': cdP,
                                'response': cdO
                            }), cdO;
                        })['catch'](function(cdO) {
                            throw cdN['addBreadcrumb']({
                                'category': 'fetch',
                                'data': ce8,
                                'level': cdT['Error'],
                                'type': 'http'
                            }, {
                                'error': cdO,
                                'input': cdP
                            }), cdO;
                        });
                    };
                }));
            }, cdN['prototype']['_instrumentHistory'] = function() {
                function cdO(cdN) {
                    return function() {
                        for (var cdO = [], cdP = 0x0; cdP < arguments['length']; cdP++) cdO[cdP] = arguments[cdP];
                        var cdR = 0x2 < cdO['length'] ? cdO[0x2] : void 0x0;
                        return cdR && cdQ(cms, cdR + ''), cdN['apply'](this, cdO);
                    };
                }
                var cdP = this;
                if (function() {
                        var cdN = Object(ceJ['e'])(),
                            cdO = cdN['chrome'],
                            cdP = cdO && cdO['app'] && cdO['app']['runtime'],
                            cdQ = 'history' in cdN && !!cdN['history']['pushState'] && !!cdN['history']['replaceState'];
                        return !cdP && cdQ;
                    }()) {
                    var cdQ = function(cdO, cdP) {
                            var cdQ = Object(ceJ['f'])(cmt['location']['href']),
                                cdR = Object(ceJ['f'])(cdP),
                                cdS = Object(ceJ['f'])(cdO);
                            cdS['path'] || (cdS = cdQ), cms = cdP, cdQ['protocol'] === cdR['protocol'] && cdQ['host'] === cdR['host'] && (cdP = cdR['relative']), cdQ['protocol'] === cdS['protocol'] && cdQ['host'] === cdS['host'] && (cdO = cdS['relative']), cdN['addBreadcrumb']({
                                'category': 'navigation',
                                'data': {
                                    'from': cdO,
                                    'to': cdP
                                }
                            });
                        },
                        cdR = cmt['onpopstate'];
                    cmt['onpopstate'] = function() {
                        for (var cdN = [], cdO = 0x0; cdO < arguments['length']; cdO++) cdN[cdO] = arguments[cdO];
                        var cdS = cmt['location']['href'];
                        if (cdQ(cms, cdS), cdR) return cdR['apply'](cdP, cdN);
                    }, Object(cf9['a'])(cmt['history'], 'pushState', cdO), Object(cf9['a'])(cmt['history'], 'replaceState', cdO);
                }
            }, cdN['prototype']['_instrumentXHR'] = function() {
                if ('XMLHttpRequest' in cmt) {
                    var cdO = XMLHttpRequest['prototype'];
                    Object(cf9['a'])(cdO, 'open', function(cdN) {
                        return function() {
                            for (var cdO = [], cdP = 0x0; cdP < arguments['length']; cdP++) cdO[cdP] = arguments[cdP];
                            var cdQ = cdO[0x1];
                            this['__sentry_xhr__'] = {
                                'method': cdO[0x0],
                                'url': cdO[0x1]
                            };
                            var cdR = Object(ce2['b'])()['getClient'](),
                                cdS = cdR && cdR['getDsn']();
                            if (cdS) {
                                var cdT = new cfd(cdS)['getStoreEndpoint']();
                                Object(ceK['h'])(cdQ) && cdT && cdQ['includes'](cdT) && (this['__sentry_own_request__'] = !0x0);
                            }
                            return cdN['apply'](this, cdO);
                        };
                    }), Object(cf9['a'])(cdO, 'send', function(cdO) {
                        return function() {
                            function cdP() {
                                if (0x4 === cdS['readyState']) {
                                    if (cdS['__sentry_own_request__']) return;
                                    try {
                                        cdS['__sentry_xhr__'] && (cdS['__sentry_xhr__']['status_code'] = cdS['status']);
                                    } catch (cnD) {}
                                    cdN['addBreadcrumb']({
                                        'category': 'xhr',
                                        'data': cdS['__sentry_xhr__'],
                                        'type': 'http'
                                    }, {
                                        'xhr': cdS
                                    });
                                }
                            }
                            for (var cdQ = [], cdR = 0x0; cdR < arguments['length']; cdR++) cdQ[cdR] = arguments[cdR];
                            var cdS = this;
                            return cdS['__sentry_own_request__'] && cnO(cdQ[0x0]), ['onload', 'onerror', 'onprogress']['forEach'](function(cdN) {
                                ! function(cdN, cdO) {
                                    cdN in cdO && 'function' == typeof cdO[cdN] && Object(cf9['a'])(cdO, cdN, function(cdO) {
                                        return cli(cdO, {
                                            'mechanism': {
                                                'data': {
                                                    'function': cdN,
                                                    'handler': cdO && cdO['name'] || '<anonymous>'
                                                },
                                                'handled': !0x0,
                                                'type': 'instrument'
                                            }
                                        });
                                    });
                                }(cdN, cdS);
                            }), 'onreadystatechange' in cdS && 'function' == typeof cdS['onreadystatechange'] ? Object(cf9['a'])(cdS, 'onreadystatechange', function(cdN) {
                                return cli(cdN, {
                                    'mechanism': {
                                        'data': {
                                            'function': 'onreadystatechange',
                                            'handler': cdN && cdN['name'] || '<anonymous>'
                                        },
                                        'handled': !0x0,
                                        'type': 'instrument'
                                    }
                                }, cdP);
                            }) : cdS['onreadystatechange'] = cdP, cdO['apply'](this, cdQ);
                        };
                    });
                }
            }, cdN['addBreadcrumb'] = function(cdO, cdP) {
                Object(ce2['b'])()['getIntegration'](cdN) && Object(ce2['b'])()['addBreadcrumb'](cdO, cdP);
            }, cdN['prototype']['setupOnce'] = function() {
                this['_options']['console'] && this['_instrumentConsole'](), this['_options']['dom'] && this['_instrumentDOM'](), this['_options']['xhr'] && this['_instrumentXHR'](), this['_options']['fetch'] && this['_instrumentFetch'](), this['_options']['history'] && this['_instrumentHistory']();
            }, cdN['id'] = 'Breadcrumbs', cdN;
        }();

    function cnO(cdN) {
        try {
            var cdO = JSON['parse'](cdN);
            cmu['addBreadcrumb']({
                'category': 'sentry',
                'event_id': cdO['event_id'],
                'level': cdO['level'] || cdT['fromString']('error'),
                'message': Object(ceJ['d'])(cdO)
            }, {
                'event': cdO
            });
        } catch (cnR) {
            ceI['a']['error']('Error\x20while\x20adding\x20sentry\x20type\x20breadcrumb');
        }
    }
    var cnS = function() {
            function cdN(cdO) {
                this['name'] = cdN['id'], this['_options'] = cdW['a']({
                    'onerror': !0x0,
                    'onunhandledrejection': !0x0
                }, cdO);
            }
            return cdN['prototype']['setupOnce'] = function() {
                Error['stackTraceLimit'] = 0x32, cjS(function(cdO, cdP, cdQ) {
                    if (!(0x0 < clh)) {
                        var cdR = Object(ce2['b'])()['getIntegration'](cdN);
                        cdR && Object(ce2['b'])()['captureEvent'](cdR['_eventFromGlobalHandler'](cdO), {
                            'data': {
                                'stack': cdO
                            },
                            'originalException': cdQ
                        });
                    }
                }), this['_options']['onerror'] && (ceI['a']['log']('Global\x20Handler\x20attached:\x20onerror'), cjT()), this['_options']['onunhandledrejection'] && (ceI['a']['log']('Global\x20Handler\x20attached:\x20onunhandledrejection'), cjU());
            }, cdN['prototype']['_eventFromGlobalHandler'] = function(cdN) {
                if (!Object(ceK['h'])(cdN['message']) && 'onunhandledrejection' !== cdN['mechanism']) {
                    var cdO = cdN['message'];
                    cdN['message'] = cdO['error'] && Object(ceK['h'])(cdO['error']['message']) ? cdO['error']['message'] : 'No\x20error\x20message';
                }
                var cdP = ck1(cdN),
                    cdQ = {
                        'mode': cdN['mode']
                    };
                cdN['message'] && (cdQ['message'] = cdN['message']), cdN['name'] && (cdQ['name'] = cdN['name']);
                var cdR = Object(ce2['b'])()['getClient'](),
                    cdS = cdR && cdR['getOptions']()['maxValueLength'] || 0xfa,
                    cdT = cdN['original'] ? ceP(JSON['stringify'](Object(cf9['b'])(cdN['original'])), cdS) : '',
                    cdU = 'onunhandledrejection' === cdN['mechanism'] ? 'UnhandledRejection' : 'Error';
                return Object(ceJ['a'])(cdP, cdT, cdU, {
                    'data': cdQ,
                    'handled': !0x1,
                    'type': cdN['mechanism']
                }), cdP;
            }, cdN['id'] = 'GlobalHandlers', cdN;
        }(),
        cnT = 'cause',
        cnU = 0x5,
        cnV = function() {
            function cdN(cdO) {
                void 0x0 === cdO && (cdO = {}), this['name'] = cdN['id'], this['_key'] = cdO['key'] || cnT, this['_limit'] = cdO['limit'] || cnU;
            }
            return cdN['prototype']['setupOnce'] = function() {
                Object(ceF['b'])(function(cdO, cdP) {
                    var cdQ = Object(ce2['b'])()['getIntegration'](cdN);
                    return cdQ ? cdQ['_handler'](cdO, cdP) : cdO;
                });
            }, cdN['prototype']['_handler'] = function(cdN, cdO) {
                if (!(cdN['exception'] && cdN['exception']['values'] && cdO && cdO['originalException'] instanceof Error)) return cdN;
                var cdP = this['_walkErrorTree'](cdO['originalException'], this['_key']);
                return cdN['exception']['values'] = cdW['d'](cdP, cdN['exception']['values']), cdN;
            }, cdN['prototype']['_walkErrorTree'] = function(cdN, cdO, cdP) {
                if (void 0x0 === cdP && (cdP = []), !(cdN[cdO] instanceof Error) || cdP['length'] + 0x1 >= this['_limit']) return cdP;
                var cdQ = cjX(cjV(cdN[cdO]));
                return this['_walkErrorTree'](cdN[cdO], cdO, cdW['d']([cdQ], cdP));
            }, cdN['id'] = 'LinkedErrors', cdN;
        }(),
        cnW = Object(ceJ['e'])(),
        cnX = function() {
            function cdN() {
                this['name'] = cdN['id'];
            }
            return cdN['prototype']['setupOnce'] = function() {
                Object(ceF['b'])(function(cdO) {
                    if (Object(ce2['b'])()['getIntegration'](cdN)) {
                        if (!cnW['navigator'] || !cnW['location']) return cdO;
                        var cdP = cdO['request'] || {};
                        return cdP['url'] = cdP['url'] || cnW['location']['href'], cdP['headers'] = cdP['headers'] || {}, cdP['headers']['User-Agent'] = cnW['navigator']['userAgent'], cdW['a']({}, cdO, {
                            'request': cdP
                        });
                    }
                    return cdO;
                });
            }, cdN['id'] = 'UserAgent', cdN;
        }(),
        cnY = [new cdQ['InboundFilters'](), new cdQ['FunctionToString'](), new cm2(), new cmu(), new cnS(), new cnV(), new cnX()];

    function cos(cdN) {
        void 0x0 === cdN && (cdN = {}), void 0x0 === cdN['defaultIntegrations'] && (cdN['defaultIntegrations'] = cnY),
            function(cdN, cdO) {
                !0x0 === cdO['debug'] && ceI['a']['enable'](), Object(ce2['b'])()['bindClient'](new cdN(cdO));
            }(ckg, cdN);
    }

    function cow(cdN) {
        void 0x0 === cdN && (cdN = {}), cdN['eventId'] || (cdN['eventId'] = Object(ce2['b'])()['lastEventId']());
        var cdO = Object(ce2['b'])()['getClient']();
        cdO && cdO['showReportDialog'](cdN);
    }

    function coz() {
        return Object(ce2['b'])()['lastEventId']();
    }

    function coA() {}

    function coB(cdN) {
        cdN();
    }

    function coD(cdN) {
        var cdO = Object(ce2['b'])()['getClient']();
        return cdO ? cdO['flush'](cdN) : Promise['reject'](!0x1);
    }

    function coG(cdN) {
        var cdO = Object(ce2['b'])()['getClient']();
        return cdO ? cdO['close'](cdN) : Promise['reject'](!0x1);
    }

    function coJ(cdN) {
        cli(cdN)();
    }
    cdP['d'](cdO, 'Integrations', function() {
        return coN;
    }), cdP['d'](cdO, 'Severity', function() {
        return cdT;
    }), cdP['d'](cdO, 'Status', function() {
        return cdV;
    }), cdP['d'](cdO, 'addGlobalEventProcessor', function() {
        return ceF['b'];
    }), cdP['d'](cdO, 'addBreadcrumb', function() {
        return cel;
    }), cdP['d'](cdO, 'captureException', function() {
        return ce8;
    }), cdP['d'](cdO, 'captureEvent', function() {
        return ceh;
    }), cdP['d'](cdO, 'captureMessage', function() {
        return cec;
    }), cdP['d'](cdO, 'configureScope', function() {
        return cej;
    }), cdP['d'](cdO, 'getHubFromCarrier', function() {
        return ce2['c'];
    }), cdP['d'](cdO, 'getCurrentHub', function() {
        return ce2['b'];
    }), cdP['d'](cdO, 'Hub', function() {
        return ce2['a'];
    }), cdP['d'](cdO, 'Scope', function() {
        return ceF['a'];
    }), cdP['d'](cdO, 'setContext', function() {
        return cen;
    }), cdP['d'](cdO, 'setExtra', function() {
        return ceu;
    }), cdP['d'](cdO, 'setExtras', function() {
        return ceq;
    }), cdP['d'](cdO, 'setTag', function() {
        return cex;
    }), cdP['d'](cdO, 'setTags', function() {
        return ces;
    }), cdP['d'](cdO, 'setUser', function() {
        return ceA;
    }), cdP['d'](cdO, 'Span', function() {
        return ceG['a'];
    }), cdP['d'](cdO, 'withScope', function() {
        return ceC;
    }), cdP['d'](cdO, 'BrowserClient', function() {
        return ckg;
    }), cdP['d'](cdO, 'defaultIntegrations', function() {
        return cnY;
    }), cdP['d'](cdO, 'forceLoad', function() {
        return coA;
    }), cdP['d'](cdO, 'init', function() {
        return cos;
    }), cdP['d'](cdO, 'lastEventId', function() {
        return coz;
    }), cdP['d'](cdO, 'onLoad', function() {
        return coB;
    }), cdP['d'](cdO, 'showReportDialog', function() {
        return cow;
    }), cdP['d'](cdO, 'flush', function() {
        return coD;
    }), cdP['d'](cdO, 'close', function() {
        return coG;
    }), cdP['d'](cdO, 'wrap', function() {
        return coJ;
    }), cdP['d'](cdO, 'SDK_NAME', function() {
        return ckf;
    }), cdP['d'](cdO, 'SDK_VERSION', function() {
        return '5.4.3';
    }), cdP['d'](cdO, 'Transports', function() {
        return cdS;
    });
    var coL = {},
        coM = Object(ceJ['e'])();
    coM['Sentry'] && coM['Sentry']['Integrations'] && (coL = coM['Sentry']['Integrations']);
    var coN = cdW['a']({}, coL, cdQ, cdR);
}, function(coO, coP, coQ) {
    coQ['d'](coP, 'a', function() {
        return coU;
    });
    var coR, coS, coT = coQ(0x5);
    (coS = coR || (coR = {}))['PENDING'] = 'PENDING', coS['RESOLVED'] = 'RESOLVED', coS['REJECTED'] = 'REJECTED';
    var coU = function() {
        function coO(coO) {
            var coP = this;
            this['_state'] = coR['PENDING'], this['_handlers'] = [], this['_resolve'] = function(coO) {
                coP['_setResult'](coO, coR['RESOLVED']);
            }, this['_reject'] = function(coO) {
                coP['_setResult'](coO, coR['REJECTED']);
            }, this['_setResult'] = function(coO, coQ) {
                return coP['_state'] === coR['PENDING'] ? Object(coT['j'])(coO) ? void coO['then'](coP['_resolve'], coP['_reject']) : (coP['_value'] = coO, coP['_state'] = coQ, void coP['_executeHandlers']()) : void 0x0;
            }, this['_executeHandlers'] = function() {
                if (coP['_state'] !== coR['PENDING']) return coP['_state'] === coR['REJECTED'] ? coP['_handlers']['forEach'](function(coO) {
                    return coO['onFail'] && coO['onFail'](coP['_value']);
                }) : coP['_handlers']['forEach'](function(coO) {
                    return coO['onSuccess'] && coO['onSuccess'](coP['_value']);
                }), void(coP['_handlers'] = []);
            }, this['_attachHandler'] = function(coO) {
                coP['_handlers'] = coP['_handlers']['concat'](coO), coP['_executeHandlers']();
            };
            try {
                coO(this['_resolve'], this['_reject']);
            } catch (cp5) {
                this['_reject'](cp5);
            }
        }
        return coO['prototype']['then'] = function(coP, coQ) {
            var coR = this;
            return new coO(function(coO, coS) {
                coR['_attachHandler']({
                    'onFail': function(coP) {
                        if (coQ) try {
                            return void coO(coQ(coP));
                        } catch (cpc) {
                            return void coS(cpc);
                        } else coS(coP);
                    },
                    'onSuccess': function(coQ) {
                        if (coP) try {
                            return void coO(coP(coQ));
                        } catch (cpe) {
                            return void coS(cpe);
                        } else coO(coQ);
                    }
                });
            });
        }, coO['prototype']['catch'] = function(coO) {
            return this['then'](function(coO) {
                return coO;
            }, coO);
        }, coO['prototype']['toString'] = function() {
            return '[object\x20SyncPromise]';
        }, coO['resolve'] = function(coP) {
            return new coO(function(coO) {
                coO(coP);
            });
        }, coO['reject'] = function(coP) {
            return new coO(function(coO, coQ) {
                coQ(coP);
            });
        }, coO;
    }();
}, function(cpm, cpn) {
    cpm['exports'] = function(cpm, cpn) {
        var cpq;
        this['sounds'] = [], this['listener'] = {}, this['rate'] = 0x1, this['setVolume'] = function(cpm) {
            Howler['volume'](cpm);
        }, this['getSound'] = function(cpm, cpn) {
            var cpu = cpm + (cpn || '') + (window['activeHacker'] ? 'hckd' : '');
            (cpq = this['sounds'][cpu]) || (cpq = new Howl({
                'src': '.././sound/' + (window['activeHacker'] ? 'fart_0' : cpm) + '.mp3'
            }), this['sounds'][cpu] = cpq);
        }, this['play'] = function(cpm, cpn, cpx, cpy) {
            if (this['getSound'](cpm), this['rate'] && (!cpx || !cpq['isPlaying'])) {
                cpq['isPlaying'] = !0x0;
                var cpz = cpq['play']();
                cpq['volume'](cpn || 0x1, cpz), cpq['loop'](cpx, cpz), cpq['rate']((cpy || 0x1) * this['rate'], cpz);
            }
        }, this['stop'] = function(cpm) {
            this['getSound'](cpm), cpq && (cpq['isPlaying'] = !0x1, cpq['stop']());
        }, this['play3Dv'] = function(cpB, cpC, cpD, cpE, cpF, cpG, cpH, cpI) {
            var cpJ = 0x1 - cpm['getDistance3D'](cpC, cpD, cpE, cpI['x'], cpI['y'], cpI['z']) / cpF;
            if (0.1 < cpJ) {
                this['getSound'](cpB, '3dv');
                var cpK = cpq['play']();
                cpG = (cpG || 0x1) * cpJ * cpn['otherSoundMlt'], cpq['volume'](cpG, cpK), cpq['rate'](cpH || 0x1, cpK);
            }
        }, this['play3D'] = function(cpm, cpM, cpN, cpO, cpP, cpQ, cpR, cpS) {
            this['getSound'](cpm, '3d');
            var cpT = cpq['play']();
            0.05 < (cpP = (cpP || 0x1) * cpn['otherSoundMlt']) && (cpq['volume'](cpP, cpT), cpq['rate'](cpQ || 0x1, cpT), cpq['pos'](cpM, cpN, cpO, cpT), cpq['pannerAttr']({
                'refDistance': cpR || 0x19,
                'rolloffFactor': cpS || 0x1
            }, cpT));
        };
    };
}, function(cpU, cpV, cpW) {
    var cpX = cpW(0x4),
        cpY = cpW(0x8),
        cpZ = cpW(0x17),
        cq0 = new cpX['Vector3'](),
        cq1 = cpZ['generateCube'](null, 0x1, 0x1, 0x1, {}),
        cq2 = function(cpU) {
            this['mesh'] = new cpX['Mesh'](cq1), this['init'] = function(cpV) {
                this['dst'] = cpV['dst'], this['spd'] = cpV['spd'], this['xS'] = cpV['xS'], this['zS'] = cpV['zS'], this['yS'] = cpV['yS'], this['scale'] = 0.45, this['len'] = 0x0, this['mesh']['material'] = cpU['getMat']('default', {
                    'mat': cpX['MeshBasicMaterial'],
                    'color': 0xededed,
                    'transparent': !0x0,
                    'opacity': 0.21
                });
                var cpW = cpV['mesh']['position']['x'],
                    cpY = cpV['mesh']['position']['y'],
                    cpZ = cpV['mesh']['position']['z'];
                cpU['moveMesh'](this['mesh'], cpW, cpY, cpZ), this['mesh']['lookAt'](cpW + this['xS'], cpY + this['yS'], cpZ + this['zS']), this['mesh']['rotateX'](Math['PI'] / 0x2), cpU['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']), this['mesh']['visible'] = !0x0;
            }, this['update'] = function(cpV) {
                this['mesh']['visible'] && (this['len'] < this['dst'] && (this['len'] += this['spd'] * cpV, this['len'] >= this['dst'] && (this['len'] = this['dst'])), this['scale'] -= 0.00036 * cpV, cpU['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']), 0x0 >= this['scale'] && (this['scale'] = 0x0, this['mesh']['visible'] = !0x1));
            };
        };

    function cq9() {
        cpX['Object3D']['call'](this), this['largeSpawnCount'] = 0x8, this['smallSpawnCount'] = 0xf, this['emissiveness'] = 0.55, this['velocityDamping'] = 0x3, this['lifeSpeedMin'] = 2.2, this['lifeSpeedRange'] = 0x3;
        var cpU = new cpX['Geometry']({
                'dynamic': !0x0
            }),
            cpV = new cpX['Color'](0xbbbbbb);
        this['mesh'] = new cpX['Mesh'](cpU, new cpX['StrippedLambertMaterial']({
            'color': cpV,
            'emissive': cpV['multiplyScalar'](this['emissiveness']),
            'smoothShading': !0x0
        })), this['mesh']['castShadow'] = !0x0, this['mesh']['receiveShadow'] = !0x0, this['add'](this['mesh']), this['cubeTemplate'] = new cpX['BoxGeometry'](0x1, 0x1, 0x1);
        for (var cpW = 0x0; cpW < this['cubeTemplate']['faces']['length']; cpW++) this['cubeTemplate']['faces'][cpW]['materialIndex'] = 0x0;
        this['cubeTemplate']['faceVertexUvs'] = [
            []
        ], this['entities'] = [];
    }
    cq9['staticMatrix'] = new cpX['Matrix4'](), cq9['prototype'] = Object['create'](cpX['Object3D']['prototype']), Object['defineProperty'](cq9, 'finished', function() {
        return 0x0 === this['entities']['length'];
    }), cq9['prototype']['explodeAt'] = function(cpU, cpV, cpW, cpX) {
        this['sizeMin'] = 0.35 * cpX, this['sizeRange'] = 2.2 * cpX, this['velocityMin'] = 0x1e * cpX, this['velocityRange'] = 0x11 * cpX, cq0['set'](cpU, cpV, cpW);
        for (var cpY = 0x0; cpY < this['largeSpawnCount']; cpY++) this['spawnEntity'](0.1 * Math['random']() + 0.9, cq0, !0x1);
        for (cpY = 0x0; cpY < this['smallSpawnCount']; cpY++) this['spawnEntity'](0.9 * Math['random'](), cq0, !0x1);
    }, cq9['prototype']['spawnEntity'] = function(cpU, cpV) {
        for (var cpW = Math['pow'](cpU, 2.5), cpX = cpW * this['sizeRange'] + this['sizeMin'], cpY = (0x1 - cpW) * this['velocityRange'] + this['velocityMin'], cpZ = this['_randomVector']()['normalize']()['multiplyScalar'](cpY), cq0 = cpW * this['lifeSpeedRange'] + this['lifeSpeedMin'], cq1 = 0x0;;) {
            for (var cq2 = !0x0, cqr = 0x0; cqr < this['entities']['length']; cqr++)
                if (this['entities'][cqr]['index'] === cq1) {
                    cq2 = !0x1;
                    break;
                }
            if (cq2) break;
            cq1++;
        }
        0x8 * cq1 > this['mesh']['geometry']['vertices']['length'] - 0x1 && this['mesh']['geometry']['merge'](this['cubeTemplate'], cq9['emptyMatrix']), this['entities']['push']({
            'index': cq1,
            'rank': cpW,
            'rankSeed': cpU,
            'life': 0x0,
            'lifeSpeed': cq0,
            'size': cpX,
            'position': cpV['clone'](),
            'velocity': cpZ
        });
    }, cq9['prototype']['destroyEntity'] = function(cpU) {
        this['entities']['splice'](this['entities']['indexOf'](cpU), 0x1);
        for (var cpV = 0x8 * cpU['index']; cpV < 0x8 * (cpU['index'] + 0x1); cpV++) this['mesh']['geometry']['vertices'][cpV]['set'](0x0, 0x0, 0x0);
        this['mesh']['geometry']['verticesNeedUpdate'] = !0x0, this['mesh']['geometry']['elementsNeedUpdate'] = !0x0, this['_cleanGeometry']();
    }, cq9['prototype']['update'] = function(cpU) {
        cpU /= 0x3e8;
        for (var cpV, cpW = 0x0; cpW < this['entities']['length']; cpW++) {
            (cpV = this['entities'][cpW])['life'] += cpU * cpV['lifeSpeed'], cpV['velocity']['multiplyScalar'](0x1 - this['velocityDamping'] * cpU), cpV['position']['add'](cpV['velocity']['clone']()['multiplyScalar'](cpU));
            var cpX = 0x2 - Math['pow'](cpV['life'] / Math['sqrt'](0x2), 0x2);
            cpX *= cpV['size'];
            for (var cpY = 0x8 * cpV['index']; cpY < 0x8 * (cpV['index'] + 0x1); cpY++) {
                var cpZ = this['mesh']['geometry']['vertices'][cpY],
                    cq0 = this['cubeTemplate']['vertices'][cpY % 0x8];
                cpZ['set'](cpV['position']['x'], cpV['position']['y'], cpV['position']['z'])['addScaledVector'](cq0, cpX);
            }
            0x0 >= cpX && this['destroyEntity'](cpV);
        }
        this['mesh']['geometry']['verticesNeedUpdate'] = !0x0, this['mesh']['geometry']['elementsNeedUpdate'] = !0x0, this['mesh']['geometry']['computeBoundingSphere']();
    }, cq9['prototype']['_cleanGeometry'] = function() {
        for (var cpU, cpV = this['mesh']['geometry']['vertices'], cpW = this['mesh']['geometry']['faces'], cpX = -0x1, cpY = 0x0; cpY < this['entities']['length']; cpY++)(cpU = this['entities'][cpY])['index'] > cpX && (cpX = cpU['index']);
        var cpZ = cpX + 0x1;
        cpV['splice'](0x8 * cpZ, cpV['length'] - 0x8 * cpZ), cpW['splice'](0xc * cpZ, cpW['length'] - 0xc * cpZ);
    }, cq9['prototype']['_randomVector'] = function() {
        return new cpX['Vector3'](Math['random']() - 0.5, Math['random']() - 0.5, Math['random']() - 0.5);
    };
    var cqH = [{
            'mat': cpX['MeshBasicMaterial'],
            'snd': {
                'rng': 0x1a,
                'src': ['whizz_0', 'whizz_1'],
                'vol': 0.12
            },
            'spd': 1.7,
            'scale': 0x1,
            'length': 0xd,
            'color': 0xffffdb
        }, {
            'spd': [0.03, 0.031],
            'rand': !0x0,
            'carryV': !0x0,
            'grav': 0.0003,
            'spn': [0.04, 0.05],
            'scale': 0.15,
            'length': 0.5,
            'color': 0x9a7b3e
        }, {
            'spd': [0.03, 0.031],
            'rand': !0x0,
            'carryV': !0x0,
            'grav': 0.0003,
            'spn': [0.03, 0.05],
            'scale': 0.1,
            'length': 0.4,
            'color': 0x9a7b3e
        }],
        cqI = function(cpU) {
            this['mesh'] = new cpX['Mesh'](cpU['cubeGeo']), this['init'] = function(cpV, cpW, cpZ, cq0, cq1, cq2, cq9, cqH) {
                this['dst'] = cq2, this['scale'] = cq9['scale'], this['spd'] = cq9['spd'][0x1] ? cpY['randFloat'](cq9['spd'][0x0], cq9['spd'][0x1]) : cq9['spd'];
                var cqI = cq9 && cq9['carryV'] && cqH;
                cq0 -= Math['PI'], this['xS'] = this['spd'] * Math['sin'](cq0) * Math['cos'](cq1) + (cqI ? cqH['xVel'] : 0x0), this['zS'] = this['spd'] * Math['cos'](cq0) * Math['cos'](cq1) + (cqI ? cqH['zVel'] : 0x0), this['yS'] = this['spd'] * Math['sin'](cq1) + (cqI ? cqH['yVel'] : 0x0), this['grav'] = cq9['grav'], this['spin'] = cq9['spn'] ? cq9['spn'][0x1] ? cpY['randFloat'](cq9['spn'][0x0], cq9['spn'][0x1]) : cq9['spn'] : 0x0, this['mesh']['receiveShadow'] = cq9['mat'] != cpX['MeshBasicMaterial'], this['mesh']['material'] = cpU['getMat']('default', {
                    'fog': cq9['mat'] != cpX['MeshBasicMaterial'],
                    'color': cq9['color'],
                    'emissive': cq9['emis'],
                    'mat': cq9['mat']
                }), this['layer'] = cqH && cqH['isYou'] ? 0x1 : 0x0, this['sound'] = cqH && cqH['isYou'] ? null : cq9['snd'], this['soundPlayed'] = !0x1, this['mesh']['layers']['set'](this['layer']), cpU['moveMesh'](this['mesh'], cpV, cpW, cpZ), this['mesh']['lookAt'](cpV + this['xS'], cpW + this['yS'], cpZ + this['zS']), cq9 && cq9['rand'] && this['mesh']['rotateX'](cpY['randFloat'](-Math['PI'], Math['PI'])), cpU['scaleMesh'](this['mesh'], cq9['scale'], cq9['scale'], cq9['length']);
            }, this['checkSound'] = function() {
                if (this['sound'] && !this['soundPlayed']) {
                    var cpU = Howler['pos']();
                    cpY['getDistance3D'](cpU[0x0], cpU[0x1], cpU[0x2], this['mesh']['position']['x'], this['mesh']['position']['y'], this['mesh']['position']['z']) <= this['sound']['rng'] && (SOUND['play'](this['sound']['src'][cpY['randInt'](0x0, this['sound']['src']['length'] - 0x1)], this['sound']['vol'], !0x1, cpY['randFloat'](0.8, 1.2)), this['soundPlayed'] = !0x0);
                }
            }, this['update'] = function(cpU) {
                this['mesh']['visible'] && (this['mesh']['position']['x'] += this['xS'] * cpU, this['mesh']['position']['z'] += this['zS'] * cpU, this['mesh']['position']['y'] += this['yS'] * cpU, this['spin'] && this['mesh']['rotateX'](this['spin'] * cpU), this['yS'] -= (this['grav'] || 0x0) * cpU, this['dst'] -= this['spd'] * cpU, this['checkSound'](), 0x0 >= this['dst'] && (this['mesh']['visible'] = !0x1));
            };
        };
    cpX['Sprite']['prototype']['init'] = function(cpU, cpV, cpW, cpX, cpY, cpZ, cq0, cq1, cq2, cq9) {
        this['position']['x'] = cpU, this['position']['y'] = cpV, this['position']['z'] = cpW, this['xVel'] = cpX, this['yVel'] = cpY, this['zVel'] = cpZ, this['scale']['x'] = this['scale']['y'] = cq0, this['life'] = cq1 || 0x0, this['grav'] = cq2 || 0x0, this['area'] = cq9, this['updC'] = 0x0;
    }, cpX['Sprite']['prototype']['update'] = function(cpU) {
        if (this['visible']) {
            if (this['position']['x'] += this['xVel'] * cpU, this['position']['y'] += this['yVel'] * cpU, this['yVel'] -= this['grav'] * cpU, this['position']['z'] += this['zVel'] * cpU, this['area']) {
                var cpV = this['scale']['x'] / 0x2;
                this['position']['x'] - cpV >= this['area']['x'] + this['area']['w'] ? this['position']['x'] = this['area']['x'] - this['area']['w'] - cpV : this['position']['x'] + cpV <= this['area']['x'] - this['area']['w'] && (this['position']['x'] = this['area']['x'] + this['area']['w'] + cpV), this['position']['z'] - cpV >= this['area']['z'] + this['area']['l'] ? this['position']['z'] = this['area']['z'] - this['area']['l'] - cpV : this['position']['z'] + cpV <= this['area']['z'] - this['area']['l'] && (this['position']['z'] = this['area']['z'] + this['area']['l'] + cpV), this['position']['y'] - cpV >= this['area']['y'] + this['area']['h'] ? this['position']['y'] = this['area']['y'] - cpV : this['position']['y'] + cpV <= this['area']['y'] && (this['position']['y'] = this['area']['y'] + this['area']['h'] + cpV);
            }
            0x0 < this['life'] ? (this['life'] -= cpU, 0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1), this['updC']++) : 0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1);
        }
    };
    var cr7 = [Math['PI'] / 0x3, -Math['PI'] / 0x3],
        cr8 = [{
            'hole': !0x0,
            'count': 0x2,
            'grav': -0.00002,
            'scale': [0x5, 0x9],
            'speed': [0x0, 0.025],
            'spread': [-0.4, 0.4],
            'life': [0x12c, 0x1f4]
        }, {}, {
            'count': 0x1,
            'blending': 0x2,
            'scale': [0x5, 0x7],
            'speed': [0x0, 0x0],
            'spread': [0x0, 0x0],
            'life': [0x1e, 0x23]
        }, {
            'count': 0x1,
            'blending': 0x2,
            'scale': [0x7d0, 0x7d0],
            'speed': [0x0, 0x0],
            'spread': [0x0, 0x0]
        }, {
            'count': 0x4,
            'src': '0',
            'scale': [0x5, 0x6],
            'speed': [0x0, 0.01],
            'spread': [-0x1, 0x1],
            'life': [0x258, 0x320]
        }];
    cpU['exports'] = function(cpU) {
        var cpV, cpW, cpZ;
        this['particles'] = [], this['trails'] = [], this['physObjs'] = [], this['areas'] = [], this['active'] = !0x0, this['ExplosionManager'] = new cq9(), this['prefabs'] = [{
            'src': 'glow_0',
            'blending': 0x2,
            'spd': 0.008,
            'cnt': 2.2,
            'grav': [-0.015, -0.005],
            'scl': [0.7, 0x1],
            'dir': 0x0
        }, {
            'src': 'glow_1',
            'blending': 0x1,
            'spd': 0.003,
            'cnt': 0x8,
            'grav': [-0.2, -0.22],
            'scl': [0x1, 1.5],
            'dir': 0x0
        }, {
            'src': 'fog_0',
            'blending': 0x1,
            'spd': 0.002,
            'cnt': 0x6,
            'grav': [0x0, 0x0],
            'scl': [0x19, 0x1e],
            'dir': 0x0
        }], this['addTrail'] = function(cpV) {
            cpZ = null;
            for (var cpW = 0x0; cpW < this['trails']['length']; ++cpW)
                if (!this['trails'][cpW]['mesh']['visible']) {
                    cpZ = this['trails'][cpW];
                    break;
                }
            cpZ || (cpZ = new cq2(cpU), this['trails']['push'](cpZ), cpU['scene']['add'](cpZ['mesh'])), cpZ['init'](cpV);
        }, this['area'] = function(cpU, cpV, cpW, cpX, cpZ, cq0, cq1, cq2) {
            cpX /= 0x2, cq0 /= 0x2, this['areas']['push']({
                'f': cq2,
                'x': cpU,
                'y': cpV,
                'z': cpW,
                'w': cpX,
                'h': cpZ,
                'l': cq0
            });
            for (var cq9 = 0x0; cq9 < cq1['count']; ++cq9) this['add'](cq1['src'], cpU + cpY['randInt'](-cpX, cpX), cpV + cpY['randInt'](0x0, cpZ), cpW + cpY['randInt'](-cq0, cq0), cq1['spd'] * Math['sin'](cq1['dir']), cq1['grav'] ? cpY['randFloat'](cq1['grav'][0x0], cq1['grav'][0x1]) : 0x0, cq1['spd'] * Math['cos'](cq1['dir']), cpY['randFloat'](cq1['scl'][0x0], cq1['scl'][0x1]), 0x0, 0x0, cq1['blending'], this['areas'][this['areas']['length'] - 0x1]);
        }, this['effect'] = function(cpW, cpZ, cq0, cq1, cq2, cq9) {
            if (this['active'] && (0x0 == cpU['useDepthMap'] || '0' == cpU['useDepthMap'])) {
                cpV = cr8[cq9];
                for (var cqH = 0x0; cqH < cpV['count']; ++cqH) {
                    var cqI = cpY['randFloat'](cpV['speed'][0x0], cpV['speed'][0x1]),
                        cr7 = cq1 + cpY['randFloat'](cpV['spread'][0x0], cpV['spread'][0x1]),
                        crx = cq2 + cpY['randFloat'](cpV['spread'][0x0], cpV['spread'][0x1]);
                    this['add'](cq9, cpW, cpZ, cq0, cqI * Math['sin'](cr7) * Math['cos'](crx), cqI * Math['sin'](crx), cqI * Math['cos'](cr7) * Math['cos'](crx), cpY['randFloat'](cpV['scale'][0x0], cpV['scale'][0x1]), cpV['life'] ? cpY['randInt'](cpV['life'][0x0], cpV['life'][0x1]) : 0x0, cpV['grav'], cpV['blending'], null, cpV['src']);
                }
                cpV['hole'] && this['add'](0x1, cpW, cpZ, cq0, 0x0, 0x0, 0x0, cpY['randFloat'](0.4, 0x1), 0x1388, 0x0, cpX['SubtractiveBlending']);
            }
        }, this['add'] = function(cpV, cpY, cpZ, cq0, cq1, cq2, cq9, cqH, cqI, cr7, cr8, crJ, crK) {
            cpW = null;
            for (var crL = 0x0; crL < this['particles']['length']; ++crL)
                if (!this['particles'][crL]['visible'] && !this['particles'][crL]['static']) {
                    cpW = this['particles'][crL];
                    break;
                }
            cpW || (cpW = new cpX['Sprite'](), this['particles']['push'](cpW), cpU['scene']['add'](cpW)), this['setMaterial'](cpW, crK || cpV, cr8, !0x0), cpW['visible'] = !0x0, cpW['init'](cpY, cpZ, cq0, cq1, cq2, cq9, cqH, cqI, cr7, crJ);
        }, this['setMaterial'] = function(cpV, cpW, cpZ, cq0) {
            cpV['material'] = cpU['getMat']('particles/' + cpW, {
                'mat': cpX['SpriteMaterial'],
                'depthWrite': !0x1,
                'blending': cpZ || cpX['NormalBlending'],
                'rotation': cq0 ? cr7[cpY['randInt'](0x0, 0x2)] : 0x0
            });
        }, this['physObj'] = function(cpV, cpX, cpY, cpZ, cq0, cq1, cq2, cq9, cr7, cr8, cs0) {
            if (0x0 == cpU['useDepthMap'] || '0' == cpU['useDepthMap']) {
                cpW = null;
                for (var cs1 = 0x0; cs1 < this['physObjs']['length']; ++cs1)
                    if (!this['physObjs'][cs1]['mesh']['visible']) {
                        cpW = this['physObjs'][cs1];
                        break;
                    }
                cpW || (cpW = new cqI(cpU), this['physObjs']['push'](cpW), cpU['scene']['add'](cpW['mesh'])), cpW['sid'] = null == cs0 ? null : cs0, cpW['mesh']['visible'] = !0x0, cpW['init'](cpV, cpX, cpY, cpZ, cq0, cq1, cr8 || cqH[cq9], cr7), cq2 && this['showTrails'] && this['addTrail'](cpW);
            }
        }, this['disablePhys'] = function(cpU) {
            for (var cpV = 0x0; cpV < this['physObjs']['length']; ++cpV) this['physObjs'][cpV]['sid'] == cpU && (this['physObjs'][cpV]['mesh']['visible'] = !0x1);
        }, this['update'] = function(cpU, cpV) {
            if (cpV && cpV['active'])
                for (var cpW = 0x0; cpW < this['areas']['length']; ++cpW) this['areas'][cpW]['f'] && (this['areas'][cpW]['x'] = cpV['x'], this['areas'][cpW]['y'] = cpV['y'], this['areas'][cpW]['z'] = cpV['z']);
            for (cpW = 0x0; cpW < this['trails']['length']; ++cpW) this['trails'][cpW]['update'](cpU);
            for (cpW = 0x0; cpW < this['particles']['length']; ++cpW) this['particles'][cpW]['update'](cpU);
            for (cpW = 0x0; cpW < this['physObjs']['length']; ++cpW) this['physObjs'][cpW]['update'](cpU);
            this['ExplosionManager']['update'](cpU);
        }, this['reset'] = function() {
            this['particles']['length'] = 0x0, this['trails']['length'] = 0x0, this['physObjs']['length'] = 0x0, this['areas']['length'] = 0x0;
        };
    };
}, function(cs7, cs8) {
    cs7['exports'] = [{
        'name': 'Red\x20Dot',
        'src': 'attach_0',
        'dotSrc': 'dot_0',
        'aimOffY': 0.16,
        'scale': 1.2
    }];
}, function(cs9, csa) {
    cs9['exports'] = [{
        'name': 'Nuke',
        'kills': 0x19,
        'activate': function(cs9, csa) {
            return !cs9['nukeTimer'] && (cs9['incStat']('n', csa), cs9['startNuke'](csa), !0x0);
        }
    }];
}, function(csd, cse) {
    csd['exports'] = [{
        'name': 'Krunker',
        'opacity': 0.6
    }, {
        'name': 'Target',
        'opacity': 0.6
    }, {
        'name': 'GG',
        'opacity': 0.6
    }, {
        'name': 'Pumpkin',
        'opacity': 0.6
    }, {
        'name': 'Spooky',
        'opacity': 0.6
    }, {
        'name': 'Ded',
        'opacity': 0.6
    }, {
        'name': 'Sadface',
        'opacity': 0.6
    }, {
        'name': 'Laugh\x20Cry',
        'opacity': 0.7
    }, {
        'name': 'Sid',
        'opacity': 0.9
    }, {
        'name': 'Vince',
        'opacity': 0.9
    }, {
        'name': 'Kiki',
        'opacity': 0.6
    }, {
        'name': 'Ladder',
        'opacity': 0x1
    }, {
        'name': 'Dummy',
        'opacity': 0x1
    }, {
        'name': '8\x20Ball',
        'opacity': 0.6
    }, {
        'name': 'xD',
        'opacity': 0.6
    }, {
        'name': 'MMOK',
        'opacity': 0.7
    }, {
        'name': 'Madman',
        'opacity': 0.6
    }, {
        'name': 'Terminal',
        'opacity': 0.6
    }, {
        'name': 'YODO',
        'opacity': 0.6
    }, {
        'name': 'Crayon',
        'opacity': 0.6
    }, {
        'name': 'Myth',
        'opacity': 0.85
    }, {
        'name': 'SpikyJohn',
        'opacity': 0.85
    }, {
        'name': 'LevelGaming',
        'opacity': 0.9
    }, {
        'name': 'PolarAce',
        'opacity': 0.9
    }, {
        'name': 'MrsYiibby',
        'opacity': 0.85
    }, {
        'name': 'Vraxooo',
        'opacity': 0.85
    }, {
        'name': 'Jazzmittens',
        'opacity': 0.85
    }, {
        'name': 'Wolfmaan',
        'opacity': 0.85
    }, {
        'name': 'KPL',
        'opacity': 0.9
    }, {
        'name': 'BV\x20Hype',
        'opacity': 0.85
    }, {
        'name': 'LandPhil',
        'opacity': 0.85
    }, {
        'name': 'Deal\x20With\x20It',
        'opacity': 0.9
    }, {
        'name': 'Rice',
        'opacity': 0.9
    }, {
        'name': 'Lore',
        'opacity': 0.95
    }, {
        'name': 'Desu\x20Sid',
        'opacity': 0.85
    }, {
        'name': 'Anomaly',
        'opacity': 0.85
    }, {
        'name': 'FaZe',
        'opacity': 0.9
    }];
}, function(csf, csg) {
    var csh = ['Double\x20Kill', 'Triple\x20Kill', 'Quad\x20Kill', 'Multi\x20Kill', 'Mega\x20Kill', 'Ultra\x20Kill', 'Super\x20Kill'],
        csi = [];
    csf['exports']['reward'] = function(csf, csg, csl, csm, csn) {
        csi['length'] = 0x0;
        var cso = null == csm['weapon'] ? csg['weapon'] : csm['weapon'];
        if (csn['mode']['weaponOrder']) cso['melee'] ? csi['push']('Humiliation', null) : csi['push']('Promotion', 0x1);
        else {
            if (0x1 >= csn['kills'] && csi['push']('First\x20Blood', 0x19), cso['melee']) csi['push']('Execution', 0x96);
            else {
                cso['kill'] ? csi['push'](cso['kill'][0x0], cso['kill'][0x1]) : cso['scope'] && 0x1 == csg['aimVal'] ? csi['push']('No\x20Scope', 0x64) : !cso['scope'] || 0x0 == csg['aimVal'] && 0xb4 < csg['aimTime'] || 0x1 == csg['aimDir'] ? csi['push']('', 0x32) : csi['push']('Quick\x20Scope', 0x4b);
                var csp = csf['getSpin'](csg);
                !cso['nSkill'] && 0x168 <= csp && csi['push']('360!', 0x96), csm['headShot'] && csi['push']('Headshot', 0x32), csm['wallbang'] && csi['push']('Wallbang', 0x19), !cso['scope'] && 0xc8 < csm['dst'] * cso['range'] && csi['push']('Longshot', 0x19);
            }
            csl['flag'] && csi['push']('Snatched', 0x32), csg['health'] <= 0.2 * csg['maxHealth'] && csg['active'] && csi['push']('Close\x20Call', 0x14), 0x3 <= csg['deathStreak'] && csi['push']('Comeback', 0x19), 0xa <= csl['killStreak'] ? csi['push']('Buzzkill', 0x19) : 0x5 <= csl['killStreak'] && csi['push']('Buzzkill', 0xa), 0x0 < csg['slideTimer'] && csi['push']('Driftkill', 0x32), 0x190 <= csg['airTime'] && csi['push']('Mid\x20Air', 0x19);
            for (var csq = csh['length'] - 0x1; 0x0 <= csq; --csq)
                if (csg['streak'] > csq) {
                    csi['push'](csh[csq], 0x32 * (csq + 0x1));
                    break;
                }
        }
        return csi['length'] ? csi : null;
    }, csf['exports']['getScore'] = function(csf) {
        var csg = null;
        if (csf)
            for (var csh = 0x1; csh < csf['length']; csh += 0x2) csf[csh] && (csg += csf[csh]);
        return csg;
    };
}, function(csu, csv) {}, function(csw, csx, csy) {
    csy(0x8);
    csw['exports'] = function() {
        this['locale'] = 'en', this['defaultLocale'] = 'en', this['supported'] = ['en', 'es', 'de', 'kr'], this['translations'] = {};
        for (var csw = 0x0; csw < this['supported']['length']; csw++) this['translations'][this['supported'][csw]] = csy(0x52)('./' + this['supported'][csw] + '.js');
        this['saveLocale'] = function() {
            localStorage['setItem']('krk_lang', this['locale'] || this['defaultLocale']);
        }, this['setLocale'] = function(csw) {
            -0x1 < this['supported']['indexOf'](csw) && (this['locale'] = csw), this['saveLocale']();
        }, this['setLocaleFromStorage'] = function() {
            'undefined' != typeof Storage && this['setLocale'](localStorage['getItem']('krk_lang'));
        }, this['setLocaleFromStorage'](), this['encode'] = function(csw) {
            for (var csx = [], csy = csw['length'] - 0x1; 0x0 <= csy; csy--) csx['unshift'](['&#', csw[csy]['charCodeAt'](), ';']['join'](''));
            return csx['join']('');
        }, this['get'] = function(csw) {
            let csx = this['translations'][this['locale']][csw] || this['translations'][this['defaultLocale']][csw] || 'UNLOCALIZED\x20STRING';
            for (var csy = 0x1; csy < arguments['length']; csy++) csx = csx['replace']('{' + (csy - 0x1) + '}', arguments[csy]);
            return csx;
        };
    };
}, function(csH, csI, csJ) {
    var csK = {
        './de.js': 0x53,
        './en.js': 0x54,
        './es.js': 0x55,
        './kr.js': 0x56
    };

    function csL(csH) {
        var csI = csO(csH);
        return csJ(csI);
    }

    function csO(csH) {
        if (!csJ['o'](csK, csH)) {
            var csI = new Error('Cannot\x20find\x20module\x20\x27' + csH + '\x27');
            throw csI['code'] = 'MODULE_NOT_FOUND', csI;
        }
        return csK[csH];
    }
    csL['keys'] = function() {
        return Object['keys'](csK);
    }, csL['resolve'] = csO, csH['exports'] = csL, csL['id'] = 0x52;
}, function(csR, csS) {
    csR['exports'] = {
        'menu.btn.profile': 'Profil',
        'menu.btn.shop': 'Shop',
        'menu.btn.social': 'Social',
        'menu.btn.maps': 'Karten',
        'menu.btn.mods': 'Mods',
        'menu.btn.settings': 'Einstellungen',
        'menu.btn.customize': 'Anpassen',
        'menu.btn.invite': 'Einladen',
        'menu.btn.invite.clicked': 'Kopiert',
        'menu.btn.join': 'Beitreten',
        'menu.btn.host': 'Gastgeber\x20Spiel',
        'menu.btn.browser': 'Server\x20Browser',
        'generic.wait': 'Bitte\x20warten...',
        'generic.loading': 'LÄDT...',
        'generic.connecting': 'VERBINDET...',
        'generic.none': 'Nichts',
        'generic.select': 'Auswählen',
        'generic.delete': 'Löschen',
        'generic.save': 'Speichern',
        'generic.load': 'Laden',
        'generic.search': 'Suchen',
        'generic.leave': 'Verlassen',
        'generic.default': 'Voreinstellung',
        'generic.submit': 'Senden',
        'generic.create': 'Erstellen',
        'generic.failed': 'Fehlgeschlagen',
        'generic.success': 'Erfolgt!',
        'generic.name': 'Name',
        'generic.level': 'Level',
        'generic.score': 'Spielstand',
        'generic.off': 'Aus',
        'generic.score': 'Score',
        'generic.victory': 'SIEG',
        'generic.defeat': 'NIEDERLAGE',
        'generic.follow': 'Folgen',
        'generic.unfollow': 'Nicht\x20mehr\x20folgen',
        'generic.followers': 'Followers',
        'generic.following': 'folgt',
        'generic.games': 'Spiele',
        'generic.wins': 'Siege',
        'generic.clan': 'Clan',
        'generic.kills': 'Abschüsse',
        'generic.deaths': 'Tode',
        'generic.kdr': 'KDR',
        'generic.games.played': 'gespielte\x20Spiele',
        'generic.games.won': 'gewonnene\x20Spiele',
        'generic.timep': 'Spielzeit',
        'generic.time': 'Zeit',
        'generic.logout': 'Abmelden',
        'generic.logout.sessions': 'Abmelden\x20aus\x20allen\x20Sitzungen',
        'generic.username': 'Benutzername\x20eingeben',
        'generic.password': 'Passwort\x20eingeben',
        'generic.register': 'Registrieren',
        'generic.login': 'Einloggen',
        'generic.accuracy': 'Genauigkeit',
        'player.waiting': 'Warten\x20auf\x20Spieler',
        'player.died': 'Du\x20bist\x20gestorben',
        'player.killed': 'getötet\x20von',
        'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Abschuss-Strähne',
        'player.inactive': 'Wegen\x20Inaktivität\x20entfernt',
        'player.disconnect': 'NICHT\x20VERBUNDEN',
        'timer.end': 'Nächste\x20Runde\x20in\x20{0}',
        'leaderboard.empty': 'Leerer\x20Warteraum',
        'popup.checkpoint': 'Kontrollpunkt!',
        'app.play': 'KLICKEN\x20UM\x20ZU\x20SPIELEN',
        'app.play.controller': 'START\x20DRÜCKEN',
        'purchase.error': 'Fehler\x20aufgetreten',
        'purchase.error.click': 'Hier\x20klicken</a>\x20und\x20nochmal\x20versuchen!',
        'purchase.error.limit': 'Du\x20hast\x20möglicherweise\x20dein\x20tägliches\x20Transaktionslimit\x20überschritten.',
        'settings.reset': 'Einstellungen\x20zurücksetzen',
        'settings.reset.confirm': 'Bist\x20Du\x20sicher,\x20dass\x20du\x20all\x20Deine\x20Einstellungen\x20zurücksetzen\x20willst?\x20Dadurch\x20wird\x20auch\x20die\x20Seite\x20neu\x20geladen',
        'settings.controls.change': 'Kontrollen\x20ändern',
        'settings.controls.press': 'Irgendeine\x20Taste\x20drücken',
        'settings.server.header': 'Server',
        'settings.server.region': 'Voreinstellung\x20Region',
        'settings.quality.header': 'Qualität',
        'settings.quality.res': 'Auflösung',
        'settings.quality.part': 'Partikel',
        'settings.quality.trails': 'Geschossspuren',
        'settings.quality.mflash': 'Mündungsfeuer',
        'settings.interface.header': 'Schnittstelle',
        'settings.interface.ui': 'Benutzeroberfläche\x20anzeigen',
        'settings.interface.hp': 'Dynamische\x20HP\x20Balken',
        'settings.interface.chat': 'Chat\x20Box\x20anzeigen',
        'settings.interface.kills': 'Abschuss-Liste\x20anzeigen',
        'settings.interface.messages': 'Spielernachrichten\x20anzeigen',
        'settings.interface.unboxings': 'Ausgepackte\x20Kisten\x20anzeigen',
        'settings.interface.ping': 'Ping\x20anzeigen',
        'settings.interface.fps': 'FPS-Rate\x20anzeigen',
        'settings.interface.deaths': 'Tode\x20anzeigen',
        'settings.crosshair.header': 'Fadenkreuz',
        'settings.crosshair.type': 'Typ',
        'settings.crosshair.type.2': 'Benutzerdefiniert',
        'settings.crosshair.type.3': 'Mehrschichtig',
        'settings.crosshair.type.4': 'Bild',
        'settings.crosshair.style': 'Stil',
        'settings.crosshair.style.0': 'Kreuz',
        'settings.crosshair.style.1': 'Hohler\x20Kreis',
        'settings.crosshair.style.2': 'Voller\x20Kreis',
        'settings.crosshair.style.3': 'Hohles\x20Quadrat',
        'settings.crosshair.style.4': 'Volles\x20Quadrat',
        'settings.crosshair.image': 'Bild',
        'settings.crosshair.image.paste': 'Fadenkreuz-Bild',
        'settings.crosshair.always': 'Immer\x20anzeigen',
        'settings.crosshair.color': 'Farbe',
        'settings.crosshair.shadow': 'Schatten',
        'settings.crosshair.size': 'Größe',
        'settings.crosshair.thickness': 'Dicke',
        'settings.onKillS.style.0': 'Voreinstellung',
        'settings.onKillS.style.1': 'Auflösung\x20reduzieren',
        'settings.onKillS.style.2': 'FOV\x20reduzieren',
        'settings.onKillS.style.3': 'FOV\x20erhöhen',
        'settings.gameplay.header': 'Spielverlauf',
        'settings.gameplay.sensitivity': 'Empfindlichkeit',
        'settings.gameplay.aimsens': 'Zielempfindlichkeit',
        'settings.gameplay.fov': 'Sichtfeld',
        'settings.gameplay.fps': 'FOV\x20für\x20Waffen',
        'settings.gameplay.streamer': 'Streamer\x20Modus',
        'settings.gameplay.challenge': 'Challenge\x20Modus',
        'settings.gameplay.invert': 'Y-Achse\x20umkehren',
        'settings.gameplay.onkillS': 'Beim\x20Abschuss',
        'settings.audio.header': 'Audio',
        'settings.audio.sound': 'Ton',
        'settings.audio.voice': 'Lautstärke\x20Stimmen',
        'settings.editing.header': 'Bearbeiten',
        'settings.editing.weapon': 'Waffe\x20anzeigen',
        'settings.editing.bobbing': 'Waffe\x20rotieren',
        'settings.editing.depth': 'Todeskarte',
        'settings.editing.green': 'Grüner\x20Bildschirm',
        'settings.shaders.header': 'Schatten',
        'settings.shaders.ambient': 'Umgebungsschatten',
        'settings.mods.header': 'Mods',
        'settings.mods.load': 'Mods\x20laden',
        'settings.mods.auto': 'Mods\x20automatisch\x20laden',
        'settings.mods.borders': 'Zielfernrohr-Begrenzung',
        'settings.mods.scope': 'Zielfernrohr-Bild',
        'settings.mods.scope.paste': 'Zielfernrohr-Bild\x20URL',
        'settings.mods.dot': 'Laserpunkt-Bild',
        'settings.mods.dot.paste': 'Laserpunkt-Bild\x20URL',
        'settings.mods.endmessage': 'Match\x20Endnachricht',
        'settings.mods.profile': 'Profil-Bild',
        'settings.mods.profile.paste': 'Profil-Bild\x20URL',
        'windows.settings.header': 'Spieleinstellungen',
        'windows.servers.header': 'Server\x20Browser',
        'windows.servers.none': 'Keine\x20Spiele\x20zum\x20Beitreten\x20gefunden...',
        'windows.servers.host': '+\x20Gastgeber-Spiel',
        'windows.servers.hide': 'Volle\x20ausblenden',
        'windows.servers.online': '{0}\x20gesamt\x20online',
        'windows.loadout.header': 'Auslastung\x20ändern',
        'windows.loadout.class': 'Klasse',
        'windows.loadout.primary': 'Primär',
        'windows.loadout.secondary': 'Sekundär',
        'windows.loadout.melee': 'Nahkampf',
        'windows.loadout.hat': 'Hut',
        'windows.loadout.body': 'Körper',
        'windows.loadout.spray': 'Sprühdose',
        'windows.mods.header': 'Mods\x20Manager',
        'windows.mods.guide': 'Mod\x20Guide',
        'windows.mods.list': 'Mods\x20Liste',
        'windows.mods.publish': 'Mods\x20Veröffentlichen',
        'windows.mods.viewer': 'Ansicht',
        'windows.mods.drop': 'Mods\x20hier\x20hinziehen\x20oder\x20klicken',
        'windows.mods.paste': 'Mod-Url\x20einfügen',
        'windows.mods.load': 'Mods\x20laden',
        'windows.account.header': 'Konto',
        'windows.account.recover': 'Kontaktiere\x20<a>krunker@yendis.ch</a>\x20zur\x20Wiederherstellung\x20eines\x20Kontos',
        'windows.class.header': 'Klasse\x20auswählen',
        'windows.controls.header': 'Kontrollen\x20bearbeiten',
        'windows.controls.forward': 'Vorwärts',
        'windows.controls.backward': 'Rückwärts',
        'windows.controls.left': 'Links',
        'windows.controls.right': 'Rechts',
        'windows.controls.reload': 'Neu\x20laden',
        'windows.controls.aim': 'Zielen',
        'windows.controls.inspect': 'Untersuchen',
        'windows.controls.spray': 'Sprühen',
        'windows.controls.jump': 'Springen',
        'windows.controls.crouch': 'Kriechen',
        'windows.controls.next': 'Nächste\x20Waffe',
        'windows.controls.previous': 'Vorherige\x20Waffe',
        'windows.controls.chat': 'Chat',
        'windows.controls.voice': 'Stimme',
        'windows.controls.list': 'Spieler\x20Liste',
        'windows.controls.interact': 'Interagieren',
        'windows.controls.drop': 'Fallenlassen',
        'windows.host.header': 'Individuelles\x20Gastgeber-Spiel',
        'windows.host.maps': 'Karten\x20auswählen',
        'windows.host.cmaps': 'Community\x20Karte',
        'windows.host.raw': 'Karten-Rohdaten',
        'windows.host.modes': 'Modi\x20auswählen',
        'windows.host.classes': 'Klassen\x20auswählen',
        'windows.host.settings': 'Server\x20Einstellungen',
        'windows.host.preset': 'Gastgeber\x20Voreinstellungen',
        'windows.host.preset.load': 'Voreinstellung\x20laden...',
        'windows.host.preset.name': 'Name\x20Voreinstellung',
        'windows.host.start': 'Spiel\x20starten',
        'windows.spray.header': 'Sprühdose\x20auswählen',
        'windows.spray.default': 'Voreingestellte\x20Sprühdose',
        'windows.maps.header': 'Benutzerdefinierte\x20Karten',
        'windows.maps.none': 'Keine\x20Karten\x20gefunden!',
        'windows.maps.name': 'Kartenname',
        'windows.maps.editor': 'Karteneditor',
        'windows.maps.publish': 'Karte\x20veröffentlichen',
        'windows.maps.community': 'Karten\x20Community',
        'windows.publish.map.header': 'Karte\x20veröffentlichen',
        'windows.publish.map.thumbnail': 'Keine\x20Vorschauansicht',
        'windows.publish.map.paste': 'Kartendaten\x20einfügen',
        'windows.publish.map.update': 'Veröffentlichen/Aktualisieren',
        'windows.publish.map.login': 'Anmelden</a>\x20um\x20Karten\x20zu\x20erstellen\x20und\x20hochzuladen!',
        'windows.theatre.header': 'Theater\x20Modus',
        'windows.theatre.record': 'Aufzeichnung\x20aktivieren',
        'windows.theatre.key': 'Aufzeichnungstaste',
        'windows.clans.header': 'Clans',
        'windows.clans.members': 'Mitglieder\x20({0})',
        'windows.clans.requests': 'Anfragen',
        'windows.clans.requests.none': 'Keine\x20Anfragen',
        'windows.clans.page': '[{0}]\x20Clan\x20Seite',
        'windows.clans.create': 'Clan\x20erstellen',
        'windows.clans.name': 'Clan\x20Name',
        'windows.clans.view': 'Clans\x20ansehen',
        'windows.clans.join': 'Clan\x20beitreten',
        'windows.clans.login': 'Anmelden</a>\x20um\x20Clan\x20zu\x20erstellen\x20oder\x20beizutreten!',
        'windows.store.header': 'Shop',
        'windows.store.spin': '{0}\x20Drehung(en)',
        'windows.store.agree': 'Mit\x20dem\x20Kauf\x20erklärst\x20Du\x20Dich\x20mit\x20den\x20{0}Geschäftsbedingungen\x20einverstanden.',
        'windows.store.purchase': 'KR\x20kaufen',
        'windows.store.market': 'Marktplatz',
        'windows.store.market2': 'Krunker\x20Markt',
        'windows.store.buy': 'Gegenstände\x20kaufen\x20und\x20verkaufen\x20auf\x20dem',
        'windows.store.wheels': 'Preisräder',
        'windows.store.unlock': 'Neue\x20Waffenoberflächen\x20und\x20Gegenstände\x20freischalten',
        'windows.store.amount': '{0}\x20KR\x20in\x20Konto',
        'windows.store.login': 'Anmelden</a>\x20um\x20Gegenstände\x20aus\x20dem\x20Shop\x20zu\x20kaufen\x20und\x20freizuschalten!',
        'windows.store.purchasing': 'Kauf\x20wird\x20durchgeführt...',
        'windows.store.unboxed': '{0}{1}\x20ausgepackt',
        'windows.skin.header': 'Oberfläche\x20auswählen',
        'windows.hat.header': 'Hut\x20auswählen',
        'windows.back.header': 'Rückseite\x20auswählen',
        'windows.mods.community.header': 'Community\x20Mods',
        'windows.mods.community.fav': 'Deine\x20Favoriten',
        'windows.mods.community.new': 'Neue\x20Mods',
        'windows.mods.community.hot': 'Heiß',
        'windows.mods.community.name': 'Mod-Name',
        'windows.mods.community.none': 'Keine\x20Mods\x20gefunden!',
        'windows.publish.mod.header': 'Mods\x20veröffentlichen',
        'windows.publish.mod.thumbnail': 'Keine\x20Vorschauansicht',
        'windows.publish.mod.name': 'Mods-Name',
        'windows.publish.mod.paste': 'Mods-Url',
        'windows.publish.mod.update': 'Veröffentlichen/Aktualisieren',
        'windows.publish.mod.login': '<a>Anmelden</a>\x20um\x20Mods\x20zu\x20erstellen\x20und\x20hochzuladen!',
        'windows.secondary.header': 'Sekundäre\x20auswählen',
        'windows.secondary.unlocked': 'Freigeschaltet\x20bei\x20Level\x20{0}',
        'windows.secondary.req': 'Erfordert\x20Level\x20{0}',
        'windows.advertise.header': 'Inserieren',
        'windows.players.header': 'Spieler\x20Liste',
        'windows.players.none': 'Keine\x20Spieler\x20im\x20Moment...',
        'windows.join.header': 'Beitreten',
        'windows.join.code': 'Spiel\x20URL/Code\x20eingeben',
        'windows.client.header': 'Client',
        'windows.client.windows': 'Windows\x20Installer',
        'windows.client.mac': 'macOS\x20Installer',
        'windows.client.linux': 'Linux\x20Installer',
        'thumbnail.upload.limit': 'Fehlgeschlagen.\x2040kb\x20Limit\x20für\x20Vorschauansicht',
        'thumbnail.upload.error': 'Fehler\x20Vorschauansicht',
        'mod.extracting': 'entpackt\x20{0}/{1}',
        'mod.disabled': 'Mods\x20deaktiviert',
        'mod.error': 'Mod\x20Fehler!',
        'mod.loading': 'Mod\x20Lädt...',
        'mod.invalid': 'Ungültige\x20Mod-Datei!',
        'matchmaker.full': 'VOLL',
        'matchmaker.full2': 'Das\x20Spiel\x20ist\x20voll.',
        'matchmaker.none': 'Spiel\x20nicht\x20gefunden.',
        'adblocker': 'Schalte\x20Deinen\x20AdBlocker\x20aus\x20um\x20gratis\x20Krunkies\x20zu\x20erhalten.',
        'streamers.views': '{0}\x20Betrachter',
        'streamers.none': 'Keine\x20aktiven\x20Streams!',
        'error.extentions': 'Schalte\x20Erweiterungen\x20aus,\x20falls\x20Du\x20welche\x20hast.',
        'error.seek': 'Klicke\x20und\x20versuche,\x20eine\x20neues\x20Spiel\x20zu\x20finden.',
        'custom.map.missing': 'Wähle\x20mindestens\x20eine\x20Karte\x20aus',
        'custom.mode.missing': 'Wähle\x20mindestens\x20einen\x20Modus\x20aus',
        'custom.class.missing': 'Wähle\x20mindestens\x20eine\x20Klasse\x20aus',
        'server.config.maxPlayers': 'Spieler',
        'server.config.minPlayers': 'Mindestanzahl\x20Spieler',
        'server.config.lives': 'Leben',
        'server.config.gameTime': 'Minuten',
        'server.config.gravMlt': 'Schwerkraft',
        'server.config.jumpMlt': 'Sprungkraft',
        'server.config.deltaMlt': 'Zeitskala',
        'server.config.strafeSpd': 'Strafe-Geschwindigkeit',
        'server.config.healthMlt': 'Leben-Multiplikator',
        'server.config.impulseMlt': 'Waffen-Impuls',
        'server.config.nameTeam1': 'Team\x201\x20Name',
        'server.config.nameTeam2': 'Team\x202\x20Name',
        'server.config.selTeam': 'Team\x20auswählen',
        'server.config.allowSpect': 'Zuschauen',
        'server.config.killRewards': 'Abschussprämien',
        'server.config.canSlide': 'Rutschen',
        'server.config.autoJump': 'Automatisch\x20Springen',
        'server.config.thirdPerson': 'Dritte\x20Person',
        'server.config.nameTags': 'Nametags\x20ausblenden',
        'server.config.private': 'Privat',
        'social.login': 'Anmelden/Registrieren',
        'social.login.failed': 'Anmeldung\x20fehlgeschlagen',
        'social.login.buy': 'Zum\x20Kaufen\x20anmelden',
        'social.login.sell': 'Zum\x20Verkaufen\x20anmelden',
        'social.login.proccessing': 'Anmeldung\x20läuft...',
        'social.since': 'Seit',
        'social.user.maps': 'Benutzerkarten',
        'social.user.mods': 'Benutzer\x20Mods',
        'social.maps.none': 'Keine\x20Karten\x20gefunden...',
        'social.market.head': 'Gegenstand\x20Kopf',
        'social.market.back': 'Gegenstand\x20Rücken',
        'social.market.none': 'Keine\x20Gegenstände\x20gefunden',
        'social.market.grace': 'bereit\x20in\x20{0}',
        'social.market.sort': 'Filtern/Sortieren',
        'social.market.filter': 'Suchen',
        'social.market.price.high': 'Höchster\x20Preis',
        'social.market.price.low': 'Niedrigster\x20Preis',
        'social.market.price.list': 'Preis\x20anzeigen\x20in',
        'social.market.searching': 'Suchen',
        'social.market.listed': 'angezeigt\x20vor\x20{0}',
        'social.market.list': 'Gegenstand\x20anzeigen',
        'social.market.unlist': 'Nicht\x20mehr\x20anzeigen',
        'social.market.unlisting': 'Gegenstand\x20wird\x20nicht\x20mehr\x20angezeigt...',
        'social.market.posting': 'Gegenstand\x20wird\x20gepostet...',
        'social.market.req': 'Level\x20{0}\x20erforderlich',
        'social.market.cant': 'Kannst\x20Du\x20Dir\x20nicht\x20leisten',
        'social.market.purchase': 'Kaufen',
        'social.market.fee': 'Keine\x20Gebühr\x20fürs\x20Listen',
        'social.market.failed': 'Fehlgeschlagen.\x20Versuche\x20es\x20erneut.'
    };
}, function(csT, csU) {
    csT['exports'] = {
        'menu.btn.ranked': 'Ranked',
        'menu.btn.shop': 'Shop',
        'menu.btn.social': 'Social',
        'menu.btn.maps': 'Maps',
        'menu.btn.mods': 'Mods',
        'menu.btn.settings': 'Settings',
        'menu.btn.customize': 'Customize',
        'menu.btn.invite': 'Invite',
        'menu.btn.invite.clicked': 'Copied',
        'menu.btn.join': 'Join',
        'menu.btn.host': 'Host\x20Game',
        'menu.btn.browser': 'Server\x20Browser',
        'generic.wait': 'Please\x20wait...',
        'generic.loading': 'LOADING...',
        'generic.connecting': 'CONNECTING...',
        'generic.none': 'None',
        'generic.select': 'Select',
        'generic.delete': 'Delete',
        'generic.save': 'Save',
        'generic.load': 'Load',
        'generic.search': 'Search',
        'generic.leave': 'Leave',
        'generic.default': 'Default',
        'generic.submit': 'Submit',
        'generic.create': 'Create',
        'generic.failed': 'Failed',
        'generic.success': 'Success!',
        'generic.name': 'Name',
        'generic.level': 'Level',
        'generic.score': 'Score',
        'generic.off': 'Off',
        'generic.score': 'Score',
        'generic.victory': 'VICTORY',
        'generic.defeat': 'DEFEAT',
        'generic.matchover': 'MATCH\x20OVER',
        'generic.follow': 'Follow',
        'generic.unfollow': 'Unfollow',
        'generic.followers': 'Followers',
        'generic.following': 'following',
        'generic.games': 'Games',
        'generic.wins': 'Wins',
        'generic.clan': 'Clan',
        'generic.kills': 'Kills',
        'generic.deaths': 'Deaths',
        'generic.kdr': 'KDR',
        'generic.games.played': 'Games\x20Played',
        'generic.games.won': 'Games\x20Won',
        'generic.timep': 'Time\x20Played',
        'generic.time': 'Time',
        'generic.logout': 'Logout',
        'generic.logout.sessions': 'Logout\x20of\x20all\x20Sessions',
        'generic.username': 'Enter\x20Username',
        'generic.password': 'Enter\x20Password',
        'generic.register': 'Register',
        'generic.login': 'Login',
        'generic.accuracy': 'Accuracy',
        'player.waiting': 'waiting\x20for\x20players',
        'player.died': 'You\x20died',
        'player.killed': 'Killed\x20By',
        'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Kill\x20Streak',
        'player.inactive': 'Kicked\x20for\x20inactivity',
        'player.disconnect': 'DISCONNECTED',
        'timer.end': 'Next\x20Round\x20in\x20{0}',
        'leaderboard.empty': 'Empty\x20Lobby',
        'popup.checkpoint': 'Checkpoint!',
        'app.play': 'CLICK\x20TO\x20PLAY',
        'app.play.controller': 'PRESS\x20START',
        'purchase.error': 'Error\x20occurred',
        'purchase.error.click': 'click\x20here</a>\x20and\x20try\x20again!',
        'purchase.error.limit': 'You\x20may\x20have\x20exceeded\x20your\x20daily\x20transaction\x20limit',
        'settings.reset': 'Reset',
        'settings.reset.confirm': 'Are\x20you\x20sure\x20you\x20want\x20to\x20reset\x20all\x20your\x20settings?\x20This\x20will\x20also\x20refresh\x20the\x20page',
        'settings.import': 'Import',
        'settings.export': 'Export',
        'settings.controls.change': 'Change\x20Controls',
        'settings.controls.press': 'Press\x20any\x20Key',
        'settings.local.header': 'Localization',
        'settings.local.region': 'Default\x20Region',
        'settings.local.lang': 'Language',
        'settings.quality.header': 'Quality',
        'settings.quality.res': 'Resolution',
        'settings.quality.part': 'Particles',
        'settings.quality.trails': 'Bullet\x20Trails',
        'settings.quality.mflash': 'Muzzle\x20Flash',
        'settings.quality.flap': 'Sniper\x20Flap',
        'settings.interface.header': 'Interface',
        'settings.interface.scale': 'UI\x20Scale',
        'settings.interface.ui': 'Show\x20UI',
        'settings.interface.hp': 'Dynamic\x20HP\x20Bars',
        'settings.interface.chat': 'Show\x20Chat\x20Box',
        'settings.interface.kills': 'Show\x20Kill\x20Feed',
        'settings.interface.messages': 'Show\x20Player\x20Messages',
        'settings.interface.unboxings': 'Show\x20Unboxings',
        'settings.interface.ping': 'Show\x20Ping',
        'settings.interface.fps': 'Show\x20FPS',
        'settings.interface.deaths': 'Show\x20Deaths',
        'settings.crosshair.header': 'Crosshair',
        'settings.crosshair.type': 'Type',
        'settings.crosshair.type.2': 'Custom',
        'settings.crosshair.type.3': 'Layered',
        'settings.crosshair.type.4': 'Image',
        'settings.crosshair.style': 'Style',
        'settings.crosshair.style.0': 'Cross',
        'settings.crosshair.style.1': 'Hollow\x20Circle',
        'settings.crosshair.style.2': 'Solid\x20Circle',
        'settings.crosshair.style.3': 'Hollow\x20Square',
        'settings.crosshair.style.4': 'Solid\x20Square',
        'settings.crosshair.image': 'Image',
        'settings.crosshair.image.paste': 'Crosshair\x20Image',
        'settings.crosshair.always': 'Always\x20Show',
        'settings.crosshair.color': 'Color',
        'settings.crosshair.shadow': 'Shadow',
        'settings.crosshair.size': 'Size',
        'settings.crosshair.thickness': 'Thickness',
        'settings.onKillS.style.0': 'Default',
        'settings.onKillS.style.1': 'Reduce\x20Resolution',
        'settings.onKillS.style.2': 'Reduce\x20FOV',
        'settings.onKillS.style.3': 'Increase\x20FOV',
        'settings.gameplay.header': 'Gameplay',
        'settings.gameplay.sensitivity': 'Sensitivity',
        'settings.gameplay.aimsens': 'Aim\x20Sensitivity',
        'settings.gameplay.fov': 'Field\x20of\x20View',
        'settings.gameplay.lagComp': 'Lag\x20Compensation',
        'settings.gameplay.streamer': 'Streamer\x20Mode',
        'settings.gameplay.challenge': 'Challenge\x20Mode',
        'settings.gameplay.invert': 'Invert\x20Y-Axis',
        'settings.gameplay.onkillS': 'On\x20Kill',
        'settings.gameplay.scrollDir': 'Scroll\x20Direction',
        'settings.gameplay.hideNames': 'Nametags',
        'settings.gameplay.hideNames.team': 'Team\x20Only',
        'settings.gameplay.hideNames.enemy': 'Enemy\x20Only',
        'settings.gameplay.hideNames.all': 'Everyone',
        'settings.audio.header': 'Audio',
        'settings.audio.sound': 'Sound',
        'settings.audio.voice': 'Voice\x20Volume',
        'settings.viewmodel.header': 'View\x20Model',
        'settings.viewmodel.fps': 'Weapon\x20FOV',
        'settings.viewmodel.bobbing': 'Weapon\x20Bobbing',
        'settings.viewmodel.leaning': 'Weapon\x20Leaning',
        'settings.viewmodel.show.primary': 'Show\x20Primary',
        'settings.viewmodel.show.secondary': 'Show\x20Secondary',
        'settings.viewmodel.show.melee': 'Show\x20Melee',
        'settings.viewmodel.xOff': 'Weapon\x20X\x20Offset',
        'settings.viewmodel.yOff': 'Weapon\x20Y\x20Offset',
        'settings.editing.header': 'Editing',
        'settings.editing.health.high': 'HUD\x20Health\x20High',
        'settings.editing.health.low': 'HUD\x20Health\x20Low',
        'settings.editing.score.color': 'Popup\x20Score\x20Color',
        'settings.editing.score.scale': 'Popup\x20Score\x20Scale',
        'settings.editing.saturation': 'Saturation',
        'settings.editing.vignette': 'Vignette',
        'settings.editing.depth': 'Depth\x20Map',
        'settings.editing.green': 'Green\x20Screen',
        'settings.shaders.header': 'Shaders',
        'settings.shaders.ambient': 'Ambient\x20Shading',
        'settings.mods.header': 'Customization',
        'settings.mods.load': 'Load\x20Mods',
        'settings.mods.auto': 'Auto-Load\x20Mod',
        'settings.mods.borders': 'Scope\x20Borders',
        'settings.mods.scope': 'Scope\x20Image',
        'settings.mods.scope.paste': 'Scope\x20Image\x20URL',
        'settings.mods.hitmarker': 'Hitmarker\x20Image',
        'settings.mods.hitmarker.paste': 'Hitmarker\x20Image\x20URL',
        'settings.mods.dot': 'Red\x20Dot\x20Image',
        'settings.mods.dot.paste': 'Red\x20Dot\x20URL',
        'settings.mods.endmessage': 'Match\x20End\x20Message',
        'settings.mods.profile': 'Profile\x20Image',
        'settings.mods.profile.paste': 'Profile\x20Image\x20URL',
        'settings.mods.ammo': 'Ammo\x20Icon\x20Image',
        'settings.mods.ammo.paste': 'Ammo\x20Icon\x20Image\x20URL',
        'settings.mods.kills': 'Kills\x20Icon\x20Image',
        'settings.mods.kills.paste': 'Kills\x20Icon\x20Image\x20URL',
        'settings.mods.deaths': 'Deaths\x20Icon\x20Image',
        'settings.mods.deaths.paste': 'Deaths\x20Icon\x20Image\x20URL',
        'settings.mods.timer': 'Timer\x20Icon\x20Image',
        'settings.mods.timer.paste': 'Timer\x20Icon\x20Image\x20URL',
        'settings.mods.damage': 'Damage\x20Overlay\x20Image',
        'settings.mods.damage.paste': 'Damage\x20Overlay\x20Image\x20URL',
        'settings.mods.overlay': 'Game\x20Overlay\x20Image',
        'settings.mods.overlay.paste': 'Game\x20Overlay\x20Image\x20URL',
        'windows.settings.header': 'Game\x20Settings',
        'windows.servers.header': 'Server\x20Browser',
        'windows.servers.none': 'No\x20Joinable\x20Games\x20Found...',
        'windows.servers.host': '+\x20Host\x20Game',
        'windows.servers.hide': 'Hide\x20Full',
        'windows.servers.online': '{0}\x20total\x20online',
        'windows.loadout.header': 'Change\x20Loadout',
        'windows.loadout.class': 'Class',
        'windows.loadout.primary': 'Primary',
        'windows.loadout.secondary': 'Secondary',
        'windows.loadout.melee': 'Melee',
        'windows.loadout.hat': 'Hat',
        'windows.loadout.body': 'Body',
        'windows.loadout.spray': 'Spray',
        'windows.loadout.color.skin': 'Skin\x20Color',
        'windows.mods.header': 'Mod\x20Manager',
        'windows.mods.guide': 'Mod\x20Guide',
        'windows.mods.list': 'Mods\x20List',
        'windows.mods.publish': 'Publish\x20Mod',
        'windows.mods.viewer': 'Viewer',
        'windows.mods.drop': 'drop\x20mod\x20file\x20here\x20or\x20click',
        'windows.mods.paste': 'Paste\x20Mod\x20Url',
        'windows.mods.load': 'Load\x20Mod',
        'windows.account.header': 'Account',
        'windows.account.recover': 'To\x20recover\x20an\x20account\x20contact\x20<a>krunker@yendis.ch</a>',
        'windows.class.header': 'Select\x20Class',
        'windows.controls.header': 'Change\x20Controls',
        'windows.controls.forward': 'Forward',
        'windows.controls.backward': 'Backward',
        'windows.controls.left': 'Left',
        'windows.controls.right': 'Right',
        'windows.controls.reload': 'Reload',
        'windows.controls.aim': 'Aim',
        'windows.controls.inspect': 'Inspect',
        'windows.controls.spray': 'Spray',
        'windows.controls.jump': 'Jump',
        'windows.controls.crouch': 'Crouch',
        'windows.controls.prim': 'Primary\x20Weapon',
        'windows.controls.swap': 'Secondary\x20Weapon',
        'windows.controls.melee': 'Melee\x20Weapon',
        'windows.controls.chat': 'Chat',
        'windows.controls.voice': 'Voice',
        'windows.controls.list': 'Player\x20List',
        'windows.controls.interact': 'Interact',
        'windows.controls.drop': 'Drop',
        'windows.host.header': 'Host\x20Custom\x20Game',
        'windows.host.maps': 'Select\x20Maps',
        'windows.host.cmaps': 'Community\x20Map',
        'windows.host.raw': 'Raw\x20Map\x20Data',
        'windows.host.modes': 'Select\x20Modes',
        'windows.host.classes': 'Select\x20Classes',
        'windows.host.settings': 'Server\x20Settings',
        'windows.host.preset': 'Host\x20Presets',
        'windows.host.preset.load': 'Loading\x20Preset...',
        'windows.host.preset.name': 'Preset\x20name',
        'windows.host.start': 'Start\x20Game',
        'windows.spray.header': 'Select\x20Spray',
        'windows.spray.default': 'Default\x20Spray',
        'windows.maps.header': 'Custom\x20Maps',
        'windows.maps.none': 'No\x20maps\x20found!',
        'windows.maps.name': 'Map\x20Name',
        'windows.maps.editor': 'Map\x20Editor',
        'windows.maps.publish': 'Publish\x20Map',
        'windows.maps.community': 'Map\x20Community',
        'windows.publish.map.header': 'Publish\x20Map',
        'windows.publish.map.thumbnail': 'No\x20Thumbnail',
        'windows.publish.map.paste': 'Paste\x20Map\x20Data',
        'windows.publish.map.update': 'Publish/Update',
        'windows.publish.map.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20maps!',
        'windows.theatre.header': 'Theatre\x20Mode',
        'windows.theatre.record': 'Enable\x20Recording',
        'windows.theatre.key': 'Record\x20Key',
        'windows.clans.header': 'Clans',
        'windows.clans.members': 'Members\x20({0})',
        'windows.clans.requests': 'Requests',
        'windows.clans.requests.none': 'No\x20Requests',
        'windows.clans.page': '[{0}]\x20Clan\x20Page',
        'windows.clans.create': 'Create\x20Clan',
        'windows.clans.name': 'Clan\x20Name',
        'windows.clans.view': 'View\x20Clans',
        'windows.clans.join': 'Join\x20Clan',
        'windows.clans.login': 'Login</a>\x20to\x20create\x20and\x20join\x20a\x20clan!',
        'windows.store.header': 'Store',
        'windows.store.spin': '{0}\x20Spin',
        'windows.store.agree': 'By\x20purchasing\x20you\x20agree\x20to\x20the\x20{0}Terms',
        'windows.store.purchase': 'Purchase\x20KR',
        'windows.store.voucher': 'Redeem\x20Voucher',
        'windows.store.voucherinfo': 'Get\x20Vouchers\x20from\x20certain\x20Streamers\x20&\x20Events',
        'windows.store.market': 'Marketplace',
        'windows.store.market2': 'Krunker\x20Market',
        'windows.store.buy': 'Buy\x20and\x20Sell\x20Items\x20on\x20the',
        'windows.store.wheels': 'Prize\x20Wheels',
        'windows.store.unlock': 'Unlock\x20new\x20weapon\x20skins\x20and\x20items',
        'windows.store.amount': '{0}\x20KR\x20in\x20account',
        'windows.store.login': 'Login</a>\x20to\x20buy\x20and\x20unlock\x20items\x20from\x20the\x20store!',
        'windows.store.purchasing': 'Purchasing...',
        'windows.store.unboxed': '{0}{1}\x20unboxed',
        'windows.skin.header': 'Select\x20Skin',
        'windows.hat.header': 'Select\x20Hat',
        'windows.back.header': 'Select\x20Back',
        'windows.melee.header': 'Select\x20Melee',
        'windows.mods.community.header': 'Community\x20Mods',
        'windows.mods.community.fav': 'Your\x20Favorites',
        'windows.mods.community.new': 'New\x20Mods',
        'windows.mods.community.hot': 'Hot',
        'windows.mods.community.name': 'Mod\x20Name',
        'windows.mods.community.none': 'No\x20Mods\x20found!',
        'windows.publish.mod.header': 'Publish\x20Mod',
        'windows.publish.mod.thumbnail': 'No\x20Thumbnail',
        'windows.publish.mod.name': 'Mod\x20Name',
        'windows.publish.mod.paste': 'Mod\x20Url',
        'windows.publish.mod.update': 'Publish/Update',
        'windows.publish.mod.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20mods!',
        'windows.secondary.header': 'Select\x20Secondary',
        'windows.secondary.unlocked': 'Unlocked\x20at\x20lvl\x20{0}',
        'windows.secondary.req': 'Req\x20lvl\x20{0}',
        'windows.advertise.header': 'Advertise',
        'windows.players.header': 'Player\x20List',
        'windows.players.none': 'No\x20players\x20currently...',
        'windows.join.header': 'Join',
        'windows.join.code': 'Enter\x20Game\x20URL/Code',
        'windows.client.header': 'Client',
        'windows.client.windows': 'Windows\x20Installer',
        'windows.client.mac': 'macOS\x20Installer',
        'windows.client.linux': 'Linux\x20Installer',
        'windows.ranked.header': 'Ranked',
        'windows.ranked.login': 'Login</a>\x20to\x20play\x20in\x20ranked\x20games!',
        'windows.ranked.level': 'You\x20must\x20be\x20at\x20least\x20<span\x20color=\x22black\x22>level\x20{0}</span>\x20to\x20play\x20in\x20ranked\x20games!\x20Right\x20now\x20you\x20are\x20at\x20<span\x20color=\x22black\x22>level\x20{1}</span>.',
        'windows.ranked.mode.r1v1': '1v1\x20Ranked',
        'windows.ranked.mode.r2v2': '2v2\x20Ranked',
        'windows.ranked.mode.r4v4': '4v4\x20Ranked',
        'thumbnail.upload.limit': 'Failed.\x2040kb\x20Thumbnail\x20Limit',
        'thumbnail.upload.error': 'Thumbnail\x20Error',
        'mod.extracting': 'extracting\x20{0}/{1}',
        'mod.disabled': 'mods\x20disabled',
        'mod.error': 'mod\x20error!',
        'mod.loading': 'loading\x20mod...',
        'mod.invalid': 'invalid\x20mod\x20file!',
        'matchmaker.full': 'FULL',
        'matchmaker.full2': 'Game\x20is\x20full.',
        'matchmaker.none': 'Game\x20not\x20found.',
        'adblocker': 'Disable\x20your\x20ad\x20blocker\x20to\x20receive\x20free\x20Krunkies.',
        'streamers.views': '{0}\x20viewers',
        'streamers.none': 'No\x20active\x20streams!',
        'error.extentions': 'If\x20you\x20have\x20any\x20extensions,\x20Disable\x20them',
        'error.seek': 'Try\x20seeking\x20a\x20new\x20game\x20by\x20clicking',
        'custom.map.missing': 'Select\x20at\x20least\x20one\x20Map',
        'custom.mode.missing': 'Select\x20at\x20least\x20one\x20Mode',
        'custom.class.missing': 'Select\x20at\x20least\x20one\x20Class',
        'server.config.maxPlayers': 'Players',
        'server.config.minPlayers': 'Min\x20Players',
        'server.config.lives': 'Lives',
        'server.config.gameTime': 'Minutes',
        'server.config.gravMlt': 'Gravity',
        'server.config.jumpMlt': 'Jump\x20Force',
        'server.config.deltaMlt': 'Time\x20Scale',
        'server.config.strafeSpd': 'Strafe\x20Speed',
        'server.config.healthMlt': 'Health\x20Multiplier',
        'server.config.impulseMlt': 'Weapon\x20Impulse',
        'server.config.nameTeam1': 'Team\x201\x20Name',
        'server.config.nameTeam2': 'Team\x202\x20Name',
        'server.config.selTeam': 'Select\x20Team',
        'server.config.allowSpect': 'Spectating',
        'server.config.killRewards': 'Kill\x20Rewards',
        'server.config.headshotOnly': 'Headshots\x20Only',
        'server.config.noSecondary': 'Disable\x20Secondaries',
        'server.config.canSlide': 'Sliding',
        'server.config.autoJump': 'Auto\x20Jump',
        'server.config.thirdPerson': '3rd\x20Person',
        'server.config.nameTags': 'Hide\x20Nametags',
        'server.config.noReload': 'No\x20Reload',
        'server.config.private': 'Private',
        'social.login': 'Login/Register',
        'social.login.failed': 'Login\x20Failed',
        'social.login.buy': 'Login\x20to\x20Buy',
        'social.login.sell': 'Login\x20to\x20Sell',
        'social.login.gift': 'Login\x20to\x20Gift',
        'social.login.proccessing': 'Logging\x20in...',
        'social.since': 'Since',
        'social.user.maps': 'User\x20Maps',
        'social.user.mods': 'User\x20Mods',
        'social.maps.none': 'No\x20Maps\x20found...',
        'social.market.head': 'Head\x20Item',
        'social.market.back': 'Back\x20Item',
        'social.market.melee': 'Melee\x20Item',
        'social.market.none': 'No\x20Items\x20Found',
        'social.market.grace': 'ready\x20in\x20{0}',
        'social.market.sort': 'Filter/Sort',
        'social.market.filter': 'Search',
        'social.market.price.high': 'Highest\x20Price',
        'social.market.price.low': 'Lowest\x20Price',
        'social.market.price.list': 'List\x20Price\x20in',
        'social.market.searching': 'Searching',
        'social.market.listed': 'listed\x20{0}\x20ago',
        'social.market.list': 'List\x20Item',
        'social.market.unlist': 'Unlist',
        'social.market.unlisting': 'Unlisting\x20Item...',
        'social.market.posting': 'Posting\x20Item...',
        'social.market.req': 'lvl\x20{0}\x20required',
        'social.market.cant': 'Can\x27t\x20Afford',
        'social.market.purchase': 'Purchase',
        'social.market.fee': 'No\x20List\x20Fee',
        'social.market.failed': 'Failed.\x20Try\x20Again',
        'queue.status.queuing': 'Queuing',
        'queue.status.queued': 'Finding\x20match\x20({0}\x20of\x20{1})',
        'queue.status.creating-game': 'Creating\x20game',
        'queue.status.host': 'Creating\x20game',
        'queue.status.join': 'Joining\x20game',
        'social.market.gift.amount': 'Gift\x20Amount\x20in',
        'social.market.fee.gift': 'No\x20Gift\x20Fee',
        'social.market.gift': 'Gift\x20KR'
    };
}, function(csV, csW) {
    csV['exports'] = {
        'adblocker': '&#68;&#101;&#115;&#97;&#99;&#116;&#105;&#118;&#97;&#32;&#116;&#117;&#32;&#97;&#100;&#32;&#98;&#108;&#111;&#99;&#107;&#101;&#114;&#32;&#112;&#97;&#114;&#97;&#32;&#114;&#101;&#99;&#105;&#98;&#105;&#114;&#32;&#75;&#114;&#117;&#110;&#107;&#105;&#101;&#115;&#32;&#103;&#114;&#97;&#116;&#105;&#115;&#46;',
        'app.play': '&#67;&#76;&#73;&#67;&#75;&#32;&#80;&#65;&#82;&#65;&#32;&#74;&#85;&#71;&#65;&#82;',
        'app.play.controller': '&#80;&#82;&#69;&#83;&#73;&#79;&#78;&#65;&#32;&#83;&#84;&#65;&#82;&#84;',
        'custom.class.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#97;&#32;&#67;&#108;&#97;&#115;&#101;',
        'custom.map.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#32;&#77;&#97;&#112;&#97;',
        'custom.mode.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#32;&#77;&#111;&#100;&#111;',
        'error.extentions': '&#83;&#105;&#32;&#116;&#105;&#101;&#110;&#101;&#115;&#32;&#101;&#120;&#116;&#101;&#110;&#115;&#105;&#111;&#110;&#101;&#115;&#46;&#32;&#68;&#101;&#115;&#97;&#99;&#116;&#65533;&#118;&#97;&#108;&#97;&#115;',
        'error.seek': '&#73;&#110;&#116;&#101;&#110;&#116;&#97;&#32;&#98;&#117;&#115;&#99;&#97;&#114;&#32;&#117;&#110;&#32;&#110;&#117;&#101;&#118;&#111;&#32;&#106;&#117;&#101;&#103;&#111;&#32;&#104;&#97;&#99;&#105;&#101;&#110;&#100;&#111;&#32;&#99;&#108;&#105;&#99;&#107;',
        'generic.accuracy': '&#80;&#114;&#101;&#99;&#105;&#115;&#105;&#65533;&#110;',
        'generic.clan': '&#67;&#108;&#97;&#110;',
        'generic.connecting': '&#67;&#79;&#78;&#69;&#67;&#84;&#65;&#78;&#68;&#79;&#46;&#46;&#46;',
        'generic.create': '&#67;&#114;&#101;&#97;&#114;',
        'generic.deaths': '&#77;&#117;&#101;&#114;&#116;&#101;&#115;',
        'generic.default': '&#80;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
        'generic.defeat': '&#68;&#69;&#82;&#82;&#79;&#84;&#65;',
        'generic.delete': '&#69;&#108;&#105;&#109;&#105;&#110;&#97;&#114;',
        'generic.failed': '&#70;&#97;&#108;&#108;&#105;&#100;&#111;',
        'generic.follow': '&#83;&#101;&#103;&#117;&#105;&#114;',
        'generic.followers': '&#83;&#101;&#103;&#117;&#105;&#100;&#111;&#114;&#101;&#115;',
        'generic.following': '&#83;&#105;&#103;&#117;&#105;&#101;&#110;&#100;&#111;',
        'generic.games': '&#74;&#117;&#101;&#103;&#111;&#115;',
        'generic.games.played': '&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#74;&#117;&#103;&#97;&#100;&#97;&#115;',
        'generic.games.won': '&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#71;&#97;&#110;&#97;&#100;&#97;&#115;',
        'generic.kdr': '&#84;&#65;&#77;',
        'generic.kills': '&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
        'generic.leave': '&#83;&#97;&#108;&#105;&#114;',
        'generic.level': '&#78;&#105;&#118;&#101;&#108;',
        'generic.load': '&#67;&#97;&#114;&#103;&#97;&#114;',
        'generic.loading': '&#67;&#65;&#82;&#71;&#65;&#78;&#68;&#79;&#46;&#46;&#46;',
        'generic.login': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#83;&#101;&#115;&#105;&#65533;&#110;',
        'generic.logout': '&#67;&#101;&#114;&#114;&#97;&#114;&#32;&#83;&#101;&#115;&#105;&#65533;&#110;',
        'generic.logout.sessions': '&#67;&#101;&#114;&#114;&#97;&#114;&#32;&#84;&#111;&#100;&#97;&#115;&#32;&#108;&#97;&#115;&#32;&#83;&#101;&#115;&#105;&#111;&#110;&#101;&#115;',
        'generic.name': '&#78;&#111;&#109;&#98;&#114;&#101;',
        'generic.none': '&#78;&#105;&#110;&#103;&#117;&#110;&#111;',
        'generic.off': '&#79;&#102;&#102;',
        'generic.password': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#97;&#115;&#101;&#65533;&#97;',
        'generic.register': '&#82;&#101;&#103;&#105;&#115;&#116;&#114;&#97;&#114;&#115;&#101;',
        'generic.save': '&#71;&#117;&#97;&#114;&#100;&#97;&#114;',
        'generic.score': '&#80;&#117;&#110;&#116;&#117;&#97;&#99;&#105;&#65533;&#110;',
        'generic.search': '&#66;&#117;&#115;&#99;&#97;&#114;',
        'generic.select': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;',
        'generic.submit': '&#69;&#110;&#116;&#114;&#101;&#103;&#97;&#114;',
        'generic.success': '&#65533;&#65533;&#120;&#105;&#116;&#111;&#33;',
        'generic.time': '&#84;&#105;&#101;&#109;&#112;&#111;',
        'generic.timep': '&#84;&#105;&#101;&#109;&#112;&#111;&#32;&#100;&#101;&#32;&#74;&#117;&#101;&#103;&#111;',
        'generic.unfollow': '&#68;&#101;&#106;&#97;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#103;&#117;&#105;&#114;',
        'generic.username': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;',
        'generic.victory': '&#86;&#73;&#67;&#84;&#79;&#82;&#73;&#65;',
        'generic.wait': '&#70;&#97;&#118;&#111;&#114;&#32;&#101;&#115;&#112;&#101;&#114;&#97;&#114;&#46;&#46;&#46;',
        'generic.wins': '&#86;&#105;&#99;&#116;&#111;&#114;&#105;&#97;&#115;',
        'leaderboard.empty': '&#76;&#111;&#98;&#98;&#121;&#32;&#86;&#97;&#99;&#65533;&#111;',
        'matchmaker.full': '&#70;&#85;&#76;&#76;',
        'matchmaker.full2': '&#76;&#97;&#32;&#112;&#97;&#114;&#116;&#105;&#100;&#97;&#32;&#101;&#115;&#116;&#65533;&#32;&#102;&#117;&#108;&#108;&#46;',
        'matchmaker.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#65533;&#32;&#112;&#97;&#114;&#116;&#105;&#100;&#97;&#46;',
        'menu.btn.browser': '&#66;&#117;&#115;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
        'menu.btn.customize': '&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#114;',
        'menu.btn.host': '&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
        'menu.btn.invite': '&#73;&#110;&#118;&#105;&#116;&#97;&#114;',
        'menu.btn.invite.clicked': '&#67;&#111;&#112;&#105;&#97;&#100;&#111;',
        'menu.btn.join': '&#85;&#110;&#105;&#114;&#115;&#101;',
        'menu.btn.maps': '&#77;&#97;&#112;&#97;&#115;',
        'menu.btn.mods': '&#77;&#111;&#100;&#115;',
        'menu.btn.profile': '&#80;&#101;&#114;&#102;&#105;&#108;',
        'menu.btn.settings': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;',
        'menu.btn.shop': '&#84;&#105;&#101;&#110;&#100;&#97;',
        'menu.btn.social': '&#83;&#111;&#99;&#105;&#97;&#108;',
        'mod.disabled': '&#109;&#111;&#100;&#115;&#32;&#100;&#101;&#115;&#97;&#99;&#116;&#105;&#118;&#97;&#100;&#111;&#115;',
        'mod.error': '&#65533;&#101;&#114;&#114;&#111;&#114;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#33;',
        'mod.extracting': '&#101;&#120;&#116;&#114;&#97;&#121;&#101;&#110;&#100;&#111;&#32;{0}&#47;{1}',
        'mod.invalid': '&#65533;&#97;&#114;&#99;&#104;&#105;&#118;&#111;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#32;&#105;&#110;&#118;&#65533;&#108;&#105;&#100;&#111;&#33;',
        'mod.loading': '&#99;&#97;&#114;&#103;&#97;&#110;&#100;&#111;&#32;&#109;&#111;&#100;&#46;&#46;&#46;',
        'player.died': '&#72;&#97;&#115;&#32;&#109;&#117;&#101;&#114;&#116;&#111;',
        'player.disconnect': '&#68;&#69;&#83;&#67;&#79;&#78;&#69;&#67;&#84;&#65;&#68;&#79;',
        'player.inactive': '&#68;&#101;&#115;&#99;&#111;&#110;&#101;&#99;&#116;&#97;&#100;&#111;&#32;&#112;&#111;&#114;&#32;&#105;&#110;&#97;&#99;&#116;&#105;&#118;&#105;&#100;&#97;&#100;',
        'player.killed': '&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#100;&#111;&#32;&#80;&#111;&#114;',
        'player.killstreak': '{0}&#32;&#116;&#105;&#101;&#110;&#101;&#32;&#82;&#97;&#99;&#104;&#97;&#32;&#100;&#101;&#32;{1}&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
        'player.waiting': '&#101;&#115;&#112;&#101;&#114;&#97;&#110;&#100;&#111;&#32;&#106;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
        'popup.checkpoint': '&#65533;&#67;&#104;&#101;&#99;&#107;&#112;&#111;&#105;&#110;&#116;&#33;',
        'purchase.error': '&#79;&#99;&#117;&#114;&#114;&#105;&#65533;&#32;&#117;&#110;&#32;&#101;&#114;&#114;&#111;&#114;',
        'purchase.error.click': '&#65533;&#99;&#108;&#105;&#99;&#107;&#32;&#97;&#113;&#117;&#65533;&#60;&#47;&#97;&#62;&#32;&#101;&#32;&#105;&#110;&#116;&#65533;&#110;&#116;&#97;&#108;&#111;&#32;&#100;&#101;&#32;&#110;&#117;&#101;&#118;&#111;&#33;',
        'purchase.error.limit': '&#69;&#115;&#32;&#112;&#111;&#115;&#105;&#98;&#108;&#101;&#32;&#113;&#117;&#101;&#32;&#104;&#97;&#121;&#97;&#115;&#32;&#101;&#120;&#99;&#101;&#100;&#105;&#100;&#111;&#32;&#116;&#117;&#32;&#108;&#65533;&#109;&#105;&#116;&#101;&#32;&#100;&#105;&#97;&#114;&#105;&#111;&#32;&#100;&#101;&#32;&#116;&#114;&#97;&#110;&#115;&#97;&#99;&#99;&#105;&#111;&#110;&#101;&#115;',
        'server.config.allowSpect': '&#69;&#115;&#112;&#101;&#99;&#116;&#97;&#114;',
        'server.config.autoJump': '&#65;&#117;&#116;&#111;&#32;&#83;&#97;&#108;&#116;&#97;&#114;',
        'server.config.canSlide': '&#68;&#101;&#115;&#108;&#105;&#122;&#97;&#114;',
        'server.config.deltaMlt': '&#69;&#115;&#99;&#97;&#108;&#97;&#32;&#100;&#101;&#32;&#84;&#105;&#101;&#109;&#112;&#111;',
        'server.config.gameTime': '&#77;&#105;&#110;&#117;&#116;&#111;&#115;',
        'server.config.gravMlt': '&#71;&#114;&#97;&#118;&#101;&#100;&#97;&#100;',
        'server.config.healthMlt': '&#77;&#117;&#108;&#116;&#105;&#112;&#108;&#105;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#86;&#105;&#100;&#97;',
        'server.config.impulseMlt': '&#73;&#109;&#112;&#117;&#108;&#115;&#111;&#32;&#100;&#101;&#32;&#65;&#114;&#109;&#97;',
        'server.config.jumpMlt': '&#73;&#110;&#116;&#101;&#110;&#115;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#83;&#97;&#108;&#116;&#111;&#115;',
        'server.config.killRewards': '&#82;&#101;&#99;&#111;&#109;&#112;&#101;&#110;&#115;&#97;&#32;&#112;&#111;&#114;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
        'server.config.lives': '&#86;&#105;&#100;&#97;&#115;',
        'server.config.maxPlayers': '&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
        'server.config.minPlayers': '&#77;&#65533;&#110;&#105;&#109;&#111;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
        'server.config.nameTags': '&#69;&#115;&#99;&#111;&#110;&#100;&#101;&#114;&#32;&#83;&#101;&#65533;&#97;&#108;&#32;&#100;&#101;&#108;&#32;&#78;&#111;&#109;&#98;&#114;&#101;',
        'server.config.nameTeam1': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#69;&#113;&#117;&#105;&#112;&#111;&#32;&#49;',
        'server.config.nameTeam2': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#69;&#113;&#117;&#105;&#112;&#111;&#32;&#50;',
        'server.config.private': '&#80;&#114;&#105;&#118;&#97;&#100;&#111;',
        'server.config.selTeam': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#69;&#113;&#117;&#105;&#112;&#111;',
        'server.config.strafeSpd': '&#86;&#101;&#108;&#111;&#99;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#82;&#65533;&#102;&#97;&#103;&#97;',
        'server.config.thirdPerson': '&#51;&#114;&#97;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;',
        'settings.audio.header': '&#65;&#117;&#100;&#105;&#111;',
        'settings.audio.sound': '&#83;&#111;&#110;&#105;&#100;&#111;',
        'settings.audio.voice': '&#86;&#111;&#108;&#117;&#109;&#101;&#110;&#32;&#100;&#101;&#32;&#86;&#111;&#99;&#101;&#115;',
        'settings.controls.change': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#111;&#108;&#101;&#115;',
        'settings.controls.press': '&#80;&#114;&#101;&#115;&#105;&#111;&#110;&#97;&#32;&#99;&#117;&#97;&#108;&#113;&#117;&#105;&#101;&#114;&#32;&#84;&#101;&#99;&#108;&#97;',
        'settings.crosshair.always': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#83;&#105;&#101;&#109;&#112;&#114;&#101;',
        'settings.crosshair.color': '&#67;&#111;&#108;&#111;&#114;',
        'settings.crosshair.header': '&#82;&#101;&#116;&#65533;&#99;&#117;&#108;&#111;',
        'settings.crosshair.image': '&#73;&#109;&#97;&#103;&#101;&#110;',
        'settings.crosshair.image.paste': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#82;&#101;&#116;&#65533;&#99;&#117;&#108;&#111;',
        'settings.crosshair.shadow': '&#83;&#111;&#109;&#98;&#114;&#97;',
        'settings.crosshair.size': '&#84;&#97;&#109;&#97;&#65533;&#111;',
        'settings.crosshair.style': '&#69;&#115;&#116;&#105;&#108;&#111;',
        'settings.crosshair.style.0': '&#67;&#114;&#117;&#122;',
        'settings.crosshair.style.1': '&#67;&#65533;&#114;&#99;&#117;&#108;&#111;&#32;&#86;&#97;&#99;&#65533;&#111;',
        'settings.crosshair.style.2': '&#67;&#65533;&#114;&#99;&#117;&#108;&#111;&#32;&#77;&#97;&#99;&#105;&#122;&#111;',
        'settings.crosshair.style.3': '&#67;&#117;&#97;&#100;&#114;&#97;&#100;&#111;&#32;&#86;&#97;&#99;&#65533;&#111;',
        'settings.crosshair.style.4': '&#67;&#117;&#97;&#100;&#114;&#97;&#100;&#111;&#32;&#77;&#97;&#99;&#105;&#122;&#111;',
        'settings.crosshair.thickness': '&#71;&#114;&#111;&#115;&#111;&#114;',
        'settings.crosshair.type': '&#84;&#105;&#112;&#111;',
        'settings.crosshair.type.2': '&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#111;',
        'settings.crosshair.type.3': '&#80;&#111;&#114;&#32;&#67;&#97;&#112;&#97;&#115;',
        'settings.crosshair.type.4': '&#73;&#109;&#97;&#103;&#101;&#110;',
        'settings.editing.bobbing': '&#68;&#101;&#115;&#99;&#117;&#97;&#100;&#114;&#101;&#32;&#100;&#101;&#32;&#65;&#112;&#117;&#110;&#116;&#101;',
        'settings.editing.depth': '&#77;&#97;&#112;&#97;&#32;&#100;&#101;&#32;&#80;&#114;&#111;&#102;&#117;&#110;&#100;&#105;&#100;&#97;&#100;',
        'settings.editing.green': '&#80;&#97;&#110;&#116;&#97;&#108;&#108;&#97;&#32;&#86;&#101;&#114;&#100;&#101;',
        'settings.editing.header': '&#69;&#100;&#105;&#99;&#105;&#65533;&#110;',
        'settings.editing.weapon': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#65;&#114;&#109;&#97;',
        'settings.gameplay.aimsens': '&#83;&#101;&#110;&#115;&#105;&#98;&#105;&#108;&#105;&#100;&#97;&#100;&#32;&#97;&#108;&#32;&#65;&#112;&#117;&#110;&#116;&#97;&#114;',
        'settings.gameplay.challenge': '&#77;&#111;&#100;&#111;&#32;&#67;&#104;&#97;&#108;&#108;&#101;&#110;&#103;&#101;',
        'settings.gameplay.fov': '&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
        'settings.gameplay.fps': '&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;&#32;&#100;&#101;&#32;&#65;&#114;&#109;&#97;',
        'settings.gameplay.header': '&#74;&#117;&#103;&#97;&#98;&#105;&#108;&#105;&#100;&#97;&#100;',
        'settings.gameplay.invert': '&#73;&#110;&#118;&#101;&#114;&#116;&#105;&#114;&#32;&#69;&#106;&#101;&#32;&#89;',
        'settings.gameplay.onkillS': '&#65;&#108;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#114;',
        'settings.gameplay.sensitivity': '&#83;&#101;&#110;&#115;&#105;&#98;&#105;&#108;&#105;&#100;&#97;&#100;',
        'settings.gameplay.streamer': '&#77;&#111;&#100;&#111;&#32;&#83;&#116;&#114;&#101;&#97;&#109;&#101;&#114;',
        'settings.interface.chat': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#67;&#97;&#106;&#97;&#32;&#100;&#101;&#32;&#67;&#104;&#97;&#116;',
        'settings.interface.deaths': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#77;&#117;&#101;&#114;&#116;&#101;&#115;',
        'settings.interface.fps': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#70;&#80;&#83;',
        'settings.interface.header': '&#73;&#110;&#116;&#101;&#114;&#102;&#97;&#122;',
        'settings.interface.hp': '&#66;&#97;&#114;&#114;&#97;&#115;&#32;&#68;&#105;&#110;&#65533;&#109;&#105;&#99;&#97;&#115;&#32;&#100;&#101;&#32;&#72;&#80;',
        'settings.interface.kills': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#72;&#105;&#115;&#116;&#111;&#114;&#105;&#97;&#108;&#32;&#100;&#101;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
        'settings.interface.messages': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#65;&#112;&#101;&#114;&#116;&#117;&#114;&#97;&#115;&#32;&#100;&#101;&#32;&#67;&#97;&#106;&#97;&#115;',
        'settings.interface.ping': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#80;&#73;&#78;&#71;',
        'settings.interface.ui': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#73;&#110;&#116;&#101;&#114;&#102;&#97;&#122;',
        'settings.mods.auto': '&#65;&#117;&#116;&#111;&#45;&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;',
        'settings.mods.borders': '&#66;&#111;&#114;&#100;&#101;&#115;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#77;&#105;&#114;&#105;&#108;&#108;&#97;',
        'settings.mods.dot': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#117;&#110;&#116;&#111;&#32;&#82;&#111;&#106;&#111;',
        'settings.mods.dot.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#117;&#110;&#116;&#111;&#32;&#82;&#111;&#106;&#111;',
        'settings.mods.endmessage': '&#77;&#101;&#110;&#115;&#97;&#106;&#101;&#32;&#70;&#105;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
        'settings.mods.header': '&#77;&#111;&#100;&#115;',
        'settings.mods.load': '&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;&#115;',
        'settings.mods.profile': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#101;&#114;&#102;&#105;&#108;',
        'settings.mods.profile.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#101;&#114;&#102;&#105;&#108;',
        'settings.mods.scope': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#32;&#77;&#105;&#114;&#105;&#108;&#108;&#97;',
        'settings.mods.scope.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#77;&#105;&#114;&#105;&#108;&#97;',
        'settings.onKillS.style.0': '&#80;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
        'settings.onKillS.style.1': '&#82;&#101;&#100;&#117;&#99;&#105;&#114;&#32;&#82;&#101;&#115;&#111;&#108;&#117;&#99;&#105;&#65533;&#110;',
        'settings.onKillS.style.2': '&#82;&#101;&#100;&#117;&#99;&#105;&#114;&#32;&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
        'settings.onKillS.style.3': '&#65;&#117;&#109;&#101;&#110;&#116;&#97;&#114;&#32;&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
        'settings.quality.header': '&#67;&#97;&#108;&#105;&#100;&#97;&#100;',
        'settings.quality.mflash': '&#67;&#111;&#109;&#98;&#117;&#115;&#116;&#105;&#65533;&#110;',
        'settings.quality.part': '&#80;&#97;&#114;&#116;&#65533;&#99;&#117;&#108;&#97;&#115;',
        'settings.quality.res': '&#82;&#101;&#115;&#111;&#108;&#117;&#99;&#105;&#65533;&#110;',
        'settings.quality.trails': '&#82;&#97;&#115;&#116;&#114;&#111;&#115;&#32;&#100;&#101;&#32;&#66;&#97;&#108;&#97;',
        'settings.reset': '&#82;&#101;&#115;&#116;&#97;&#98;&#108;&#101;&#99;&#101;&#114;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;',
        'settings.reset.confirm': '&#65533;&#69;&#115;&#116;&#65533;&#115;&#32;&#115;&#101;&#103;&#117;&#114;&#111;&#32;&#100;&#101;&#32;&#113;&#117;&#101;&#114;&#101;&#114;&#32;&#114;&#101;&#115;&#116;&#97;&#98;&#108;&#101;&#99;&#101;&#114;&#32;&#116;&#111;&#100;&#97;&#115;&#32;&#116;&#117;&#115;&#32;&#99;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#63;&#32;&#69;&#115;&#116;&#111;&#32;&#116;&#97;&#109;&#98;&#105;&#65533;&#110;&#32;&#118;&#111;&#108;&#118;&#101;&#114;&#65533;&#32;&#97;&#32;&#99;&#97;&#114;&#103;&#97;&#114;&#32;&#108;&#97;&#32;&#112;&#65533;&#103;&#105;&#110;&#97;',
        'settings.server.header': '&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
        'settings.server.region': '&#82;&#101;&#103;&#105;&#65533;&#110;&#32;&#112;&#111;&#114;&#32;&#100;&#101;&#102;&#101;&#99;&#116;&#111;',
        'settings.shaders.ambient': '&#83;&#111;&#109;&#98;&#114;&#101;&#111;&#32;&#100;&#101;&#32;&#65;&#109;&#98;&#105;&#101;&#110;&#116;&#101;',
        'settings.shaders.header': '&#83;&#111;&#109;&#98;&#114;&#101;&#97;&#100;&#111;&#114;&#101;&#115;',
        'social.login': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#47;&#82;&#101;&#103;&#105;&#115;&#116;&#114;&#97;&#114;&#115;&#101;',
        'social.login.buy': '&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#112;&#97;&#114;&#97;&#32;&#67;&#111;&#109;&#112;&#114;&#97;&#114;',
        'social.login.failed': '&#73;&#110;&#105;&#99;&#105;&#111;&#32;&#100;&#101;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#102;&#97;&#108;&#108;&#105;&#100;&#111;',
        'social.login.proccessing': '&#73;&#110;&#105;&#99;&#105;&#97;&#110;&#100;&#111;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#46;&#46;&#46;',
        'social.login.sell': '&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#112;&#97;&#114;&#97;&#32;&#86;&#101;&#110;&#100;&#101;&#114;',
        'social.maps.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#77;&#97;&#112;&#97;&#115;&#46;&#46;&#46;',
        'social.market.back': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#69;&#115;&#112;&#97;&#108;&#100;&#97;',
        'social.market.cant': '&#83;&#97;&#108;&#100;&#111;&#32;&#73;&#110;&#115;&#117;&#102;&#105;&#99;&#105;&#101;&#110;&#116;&#101;',
        'social.market.failed': '&#70;&#97;&#108;&#108;&#105;&#100;&#111;&#46;&#32;&#73;&#110;&#116;&#101;&#110;&#116;&#97;&#32;&#100;&#101;&#32;&#110;&#117;&#101;&#118;&#111;',
        'social.market.fee': '&#83;&#105;&#110;&#32;&#67;&#111;&#115;&#116;&#111;&#32;&#100;&#101;&#32;&#73;&#110;&#99;&#108;&#117;&#105;&#114;',
        'social.market.filter': '&#66;&#117;&#115;&#99;&#97;',
        'social.market.grace': '&#108;&#105;&#115;&#116;&#111;&#32;&#101;&#110;&#32;{0}',
        'social.market.head': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#67;&#97;&#98;&#101;&#122;&#97;',
        'social.market.list': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#76;&#105;&#115;&#116;&#97;',
        'social.market.listed': '&#105;&#110;&#99;&#108;&#117;&#105;&#100;&#111;&#32;&#104;&#97;&#99;&#101;&#32;{0}',
        'social.market.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#73;&#116;&#101;&#109;&#115;',
        'social.market.posting': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#110;&#100;&#111;&#32;&#73;&#116;&#101;&#109;&#46;&#46;&#46;',
        'social.market.price.high': '&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#109;&#65533;&#115;&#32;&#97;&#108;&#116;&#111;',
        'social.market.price.list': '&#76;&#105;&#115;&#116;&#97;&#114;&#32;&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#101;&#110;',
        'social.market.price.low': '&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#109;&#65533;&#115;&#32;&#98;&#97;&#106;&#111;',
        'social.market.purchase': '&#67;&#111;&#109;&#112;&#114;&#97;&#114;',
        'social.market.req': '&#78;&#118;&#108;&#32;{0}&#32;&#114;&#101;&#113;&#117;&#101;&#114;&#105;&#100;&#111;',
        'social.market.searching': '&#66;&#117;&#115;&#99;&#97;&#110;&#100;&#111;',
        'social.market.sort': '&#70;&#105;&#108;&#116;&#114;&#97;&#114;&#47;&#79;&#114;&#103;&#97;&#110;&#105;&#122;&#97;&#114;',
        'social.market.unlist': '&#69;&#120;&#99;&#108;&#117;&#105;&#114;',
        'social.market.unlisting': '&#69;&#120;&#99;&#108;&#117;&#121;&#101;&#110;&#100;&#111;&#32;&#73;&#116;&#101;&#109;&#46;&#46;&#46;',
        'social.since': '&#68;&#101;&#115;&#100;&#101;',
        'social.user.maps': '&#77;&#97;&#112;&#97;&#115;&#32;&#100;&#101;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;&#115;',
        'social.user.mods': '&#77;&#111;&#100;&#115;&#32;&#100;&#101;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;&#115;',
        'streamers.none': '&#65533;&#78;&#111;&#32;&#104;&#97;&#121;&#32;&#115;&#116;&#114;&#101;&#97;&#109;&#115;&#32;&#97;&#99;&#116;&#105;&#118;&#111;&#115;&#33;',
        'streamers.views': '{0}&#32;&#118;&#101;&#115;&#112;&#101;&#99;&#116;&#97;&#100;&#111;&#114;&#101;&#115;',
        'thumbnail.upload.error': '&#69;&#114;&#114;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
        'thumbnail.upload.limit': '&#69;&#114;&#114;&#111;&#114;&#46;&#32;&#76;&#65533;&#109;&#105;&#116;&#101;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;&#32;&#100;&#101;&#32;&#52;&#48;&#107;&#98;',
        'timer.end': '&#80;&#114;&#65533;&#120;&#105;&#109;&#97;&#32;&#82;&#111;&#110;&#100;&#97;&#32;&#101;&#110;&#32;{0}',
        'windows.account.header': '&#67;&#117;&#101;&#110;&#116;&#97;',
        'windows.account.recover': '&#80;&#97;&#114;&#97;&#32;&#114;&#101;&#99;&#117;&#112;&#101;&#114;&#97;&#114;&#32;&#117;&#110;&#97;&#32;&#99;&#117;&#101;&#110;&#116;&#97;&#44;&#32;&#99;&#111;&#110;&#116;&#97;&#99;&#116;&#97;&#114;&#32;&#97;&#32;&#60;&#97;&#62;&#107;&#114;&#117;&#110;&#107;&#101;&#114;&#64;&#121;&#101;&#110;&#100;&#105;&#115;&#46;&#99;&#104;&#60;&#47;&#97;&#62;',
        'windows.advertise.header': '&#65;&#110;&#117;&#110;&#99;&#105;&#97;&#114;',
        'windows.back.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#69;&#115;&#112;&#97;&#108;&#100;&#97;',
        'windows.clans.create': '&#67;&#114;&#101;&#97;&#114;&#32;&#67;&#108;&#97;&#110;',
        'windows.clans.header': '&#67;&#108;&#97;&#110;&#101;&#115;',
        'windows.clans.join': '&#85;&#110;&#105;&#114;&#115;&#101;&#32;&#97;&#32;&#67;&#108;&#97;&#110;',
        'windows.clans.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#117;&#110;&#32;&#99;&#108;&#97;&#110;&#32;&#111;&#32;&#117;&#110;&#105;&#114;&#116;&#101;&#32;&#97;&#32;&#117;&#110;&#111;&#33;',
        'windows.clans.members': '&#77;&#105;&#101;&#109;&#98;&#114;&#111;&#115;&#32;&#40;{0}&#41;',
        'windows.clans.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#67;&#108;&#97;&#110;',
        'windows.clans.page': '&#91;{0}&#93;&#32;&#80;&#65533;&#103;&#105;&#110;&#97;&#32;&#100;&#101;&#108;&#32;&#67;&#108;&#97;&#110;',
        'windows.clans.requests': '&#83;&#111;&#108;&#105;&#99;&#105;&#116;&#117;&#100;&#101;&#115;',
        'windows.clans.requests.none': '&#78;&#111;&#32;&#72;&#97;&#121;&#32;&#83;&#111;&#108;&#105;&#99;&#105;&#116;&#117;&#100;&#101;&#115;',
        'windows.clans.view': '&#86;&#101;&#114;&#32;&#67;&#108;&#97;&#110;&#101;&#115;',
        'windows.class.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#108;&#97;&#115;&#101;',
        'windows.client.header': '&#67;&#108;&#105;&#101;&#110;&#116;&#101;',
        'windows.client.linux': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#76;&#105;&#110;&#117;&#120;',
        'windows.client.mac': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#109;&#97;&#99;&#79;&#83;',
        'windows.client.windows': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#87;&#105;&#110;&#100;&#111;&#119;&#115;',
        'windows.controls.aim': '&#65;&#112;&#117;&#110;&#116;&#97;&#114;',
        'windows.controls.backward': '&#65;&#116;&#114;&#65533;&#115;',
        'windows.controls.chat': '&#67;&#104;&#97;&#116;',
        'windows.controls.crouch': '&#65;&#103;&#97;&#99;&#104;&#97;&#114;&#115;&#101;',
        'windows.controls.drop': '&#83;&#111;&#108;&#116;&#97;&#114;',
        'windows.controls.forward': '&#65;&#100;&#101;&#108;&#97;&#110;&#116;&#101;',
        'windows.controls.header': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#111;&#108;&#101;&#115;',
        'windows.controls.inspect': '&#73;&#110;&#115;&#112;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;',
        'windows.controls.interact': '&#73;&#110;&#116;&#101;&#114;&#97;&#99;&#116;&#117;&#97;&#114;',
        'windows.controls.jump': '&#83;&#97;&#108;&#116;&#97;&#114;',
        'windows.controls.left': '&#73;&#122;&#113;&#117;&#105;&#101;&#114;&#100;&#97;',
        'windows.controls.list': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
        'windows.controls.next': '&#65;&#114;&#109;&#97;&#32;&#83;&#105;&#103;&#117;&#105;&#101;&#110;&#116;&#101;',
        'windows.controls.previous': '&#65;&#114;&#109;&#97;&#32;&#65;&#110;&#116;&#101;&#114;&#105;&#111;&#114;',
        'windows.controls.reload': '&#82;&#101;&#99;&#97;&#114;&#103;&#97;&#114;',
        'windows.controls.right': '&#68;&#101;&#114;&#101;&#99;&#104;&#97;',
        'windows.controls.spray': '&#83;&#112;&#114;&#97;&#121;',
        'windows.controls.voice': '&#86;&#111;&#122;',
        'windows.hat.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#97;&#98;&#101;&#122;&#97;',
        'windows.host.classes': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#108;&#97;&#115;&#101;&#115;',
        'windows.host.cmaps': '&#77;&#97;&#112;&#97;&#32;&#67;&#111;&#109;&#117;&#110;&#105;&#116;&#97;&#114;&#105;&#111;',
        'windows.host.header': '&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#97;',
        'windows.host.maps': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#77;&#97;&#112;&#97;&#115;',
        'windows.host.modes': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#77;&#111;&#100;&#111;&#115;',
        'windows.host.preset': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;&#32;&#100;&#101;&#108;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;',
        'windows.host.preset.load': '&#67;&#97;&#114;&#103;&#97;&#110;&#100;&#111;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;&#46;&#46;&#46;',
        'windows.host.preset.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#32;&#108;&#97;&#115;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;',
        'windows.host.raw': '&#68;&#97;&#116;&#111;&#115;&#32;&#110;&#111;&#32;&#112;&#114;&#111;&#99;&#101;&#115;&#97;&#100;&#111;&#115;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;',
        'windows.host.settings': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#65533;&#110;&#32;&#100;&#101;&#108;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;',
        'windows.host.start': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
        'windows.join.code': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#85;&#82;&#76;&#47;&#67;&#65533;&#100;&#105;&#103;&#111;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
        'windows.join.header': '&#85;&#110;&#105;&#114;&#115;&#101;',
        'windows.loadout.body': '&#67;&#117;&#101;&#114;&#112;&#111;',
        'windows.loadout.class': '&#67;&#108;&#97;&#115;&#101;',
        'windows.loadout.hat': '&#67;&#97;&#98;&#101;&#122;&#97;',
        'windows.loadout.header': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#76;&#111;&#97;&#100;&#111;&#117;&#116;',
        'windows.loadout.melee': '&#77;&#101;&#108;&#101;&#101;',
        'windows.loadout.primary': '&#80;&#114;&#105;&#109;&#97;&#114;&#105;&#97;',
        'windows.loadout.secondary': '&#83;&#101;&#99;&#117;&#110;&#100;&#97;&#114;&#105;&#97;',
        'windows.loadout.spray': '&#83;&#112;&#114;&#97;&#121;',
        'windows.maps.community': '&#67;&#111;&#109;&#117;&#110;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;&#115;',
        'windows.maps.editor': '&#69;&#100;&#105;&#116;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;&#115;',
        'windows.maps.header': '&#77;&#97;&#112;&#97;&#115;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#111;&#115;',
        'windows.maps.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#97;&#112;&#97;',
        'windows.maps.none': '&#65533;&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#109;&#97;&#112;&#97;&#115;&#33;',
        'windows.maps.publish': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#97;&#112;&#97;',
        'windows.mods.community.fav': '&#84;&#117;&#115;&#32;&#70;&#97;&#118;&#111;&#114;&#105;&#116;&#111;&#115;',
        'windows.mods.community.header': '&#77;&#111;&#100;&#115;&#32;&#67;&#111;&#109;&#117;&#110;&#105;&#116;&#97;&#114;&#105;&#111;&#115;',
        'windows.mods.community.hot': '&#72;&#111;&#116;',
        'windows.mods.community.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
        'windows.mods.community.new': '&#77;&#111;&#100;&#115;&#32;&#78;&#117;&#101;&#118;&#111;&#115;',
        'windows.mods.community.none': '&#65533;&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#77;&#111;&#100;&#115;&#33;',
        'windows.mods.drop': '&#97;&#114;&#114;&#97;&#115;&#116;&#97;&#114;&#32;&#97;&#114;&#99;&#104;&#105;&#118;&#111;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#32;&#97;&#113;&#117;&#65533;&#32;&#111;&#32;&#99;&#108;&#105;&#99;&#107;',
        'windows.mods.guide': '&#71;&#117;&#65533;&#97;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
        'windows.mods.header': '&#71;&#101;&#115;&#116;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
        'windows.mods.list': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
        'windows.mods.load': '&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;',
        'windows.mods.paste': '&#80;&#101;&#103;&#97;&#114;&#32;&#85;&#114;&#108;&#32;&#100;&#101;&#32;&#77;&#111;&#100;',
        'windows.mods.publish': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#111;&#100;',
        'windows.mods.viewer': '&#86;&#105;&#115;&#116;&#97;',
        'windows.players.header': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
        'windows.players.none': '&#78;&#111;&#32;&#104;&#97;&#121;&#32;&#106;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;&#32;&#97;&#99;&#116;&#117;&#97;&#108;&#109;&#101;&#110;&#116;&#101;&#46;&#46;&#46;',
        'windows.publish.map.header': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#97;&#112;&#97;',
        'windows.publish.map.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#121;&#32;&#115;&#117;&#98;&#105;&#114;&#32;&#109;&#97;&#112;&#97;&#115;&#33;',
        'windows.publish.map.paste': '&#80;&#101;&#103;&#97;&#114;&#32;&#68;&#97;&#116;&#111;&#115;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;',
        'windows.publish.map.thumbnail': '&#83;&#105;&#110;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
        'windows.publish.map.update': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#47;&#65;&#99;&#116;&#117;&#97;&#108;&#105;&#122;&#97;&#114;',
        'windows.publish.mod.header': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#111;&#100;',
        'windows.publish.mod.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#121;&#32;&#115;&#117;&#98;&#105;&#114;&#32;&#109;&#111;&#100;&#115;&#33;',
        'windows.publish.mod.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
        'windows.publish.mod.paste': '&#85;&#114;&#108;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
        'windows.publish.mod.thumbnail': '&#83;&#105;&#110;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
        'windows.publish.mod.update': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#47;&#65;&#99;&#116;&#117;&#97;&#108;&#105;&#122;&#97;&#114;',
        'windows.secondary.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#83;&#101;&#99;&#117;&#110;&#100;&#97;&#114;&#105;&#111;',
        'windows.secondary.req': '&#78;&#118;&#108;&#32;&#82;&#101;&#113;&#32;{0}',
        'windows.secondary.unlocked': '&#68;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#100;&#111;&#32;&#101;&#110;&#32;&#101;&#108;&#32;&#78;&#118;&#108;&#32;{0}',
        'windows.servers.header': '&#66;&#117;&#115;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
        'windows.servers.hide': '&#72;&#105;&#100;&#101;&#32;&#70;&#117;&#108;&#108;',
        'windows.servers.host': '&#43;&#32;&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
        'windows.servers.none': '&#78;&#111;&#32;&#72;&#97;&#121;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#112;&#97;&#114;&#97;&#32;&#85;&#110;&#105;&#114;&#115;&#101;&#46;&#46;&#46;',
        'windows.servers.online': '{0}&#32;&#116;&#111;&#116;&#97;&#108;&#101;&#115;&#32;&#101;&#110;&#32;&#108;&#65533;&#110;&#101;&#97;',
        'windows.settings.header': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#100;&#101;&#108;&#32;&#74;&#117;&#101;&#103;&#111;',
        'windows.skin.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#65;&#115;&#112;&#101;&#99;&#116;&#111;',
        'windows.spray.default': '&#83;&#112;&#114;&#97;&#121;&#32;&#112;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
        'windows.spray.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#83;&#112;&#114;&#97;&#121;',
        'windows.store.agree': '&#65;&#108;&#32;&#99;&#111;&#109;&#112;&#114;&#97;&#114;&#44;&#32;&#97;&#99;&#101;&#112;&#116;&#97;&#115;&#32;&#108;&#111;&#115;&#32;{0}&#84;&#65533;&#114;&#109;&#105;&#110;&#111;&#115;',
        'windows.store.amount': '{0}&#32;&#75;&#82;&#32;&#101;&#110;&#32;&#108;&#97;&#32;&#99;&#117;&#101;&#110;&#116;&#97;',
        'windows.store.buy': '&#67;&#111;&#109;&#112;&#114;&#97;&#32;&#121;&#32;&#86;&#101;&#110;&#100;&#101;&#32;&#105;&#116;&#101;&#109;&#115;&#32;&#101;&#110;&#32;&#101;&#108;&#32;',
        'windows.store.header': '&#84;&#105;&#101;&#110;&#100;&#97;',
        'windows.store.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#111;&#109;&#112;&#114;&#97;&#114;&#32;&#121;&#32;&#100;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#114;&#32;&#105;&#116;&#101;&#109;&#115;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#116;&#105;&#101;&#110;&#100;&#97;&#33;',
        'windows.store.market': '&#77;&#101;&#114;&#99;&#97;&#100;&#111;',
        'windows.store.market2': '&#75;&#114;&#117;&#110;&#107;&#101;&#114;&#32;&#77;&#97;&#114;&#107;&#101;&#116;',
        'windows.store.purchase': '&#67;&#111;&#109;&#112;&#114;&#97;&#114;&#32;&#75;&#82;',
        'windows.store.purchasing': '&#67;&#111;&#109;&#112;&#114;&#97;&#110;&#100;&#111;&#46;&#46;&#46;',
        'windows.store.spin': '{0}&#32;&#71;&#105;&#114;&#97;&#114;',
        'windows.store.unboxed': '{0}{1}&#32;&#97;&#98;&#114;&#105;&#65533;',
        'windows.store.unlock': '&#68;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#32;&#110;&#117;&#101;&#118;&#111;&#115;&#32;&#97;&#115;&#112;&#101;&#99;&#116;&#111;&#115;&#32;&#112;&#97;&#114;&#97;&#32;&#97;&#114;&#109;&#97;&#115;&#32;&#101;&#32;&#105;&#116;&#101;&#109;&#115;',
        'windows.store.wheels': '&#82;&#117;&#101;&#100;&#97;&#115;&#32;&#100;&#101;&#32;&#80;&#114;&#101;&#109;&#105;&#111;&#115;',
        'windows.theatre.header': '&#77;&#111;&#100;&#111;&#32;&#84;&#101;&#97;&#116;&#114;&#111;',
        'windows.theatre.key': '&#84;&#101;&#99;&#108;&#97;&#32;&#100;&#101;&#32;&#71;&#114;&#97;&#98;&#97;&#114;',
        'windows.theatre.record': '&#80;&#101;&#114;&#109;&#105;&#116;&#105;&#114;&#32;&#71;&#114;&#97;&#98;&#97;&#114;'
    };
}, function(csX, csY) {
    csX['exports'] = {
        'adblocker': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#75;&#114;&#117;&#110;&#107;&#105;&#101;&#115;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'app.play': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
        'app.play.controller': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53948;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;',
        'custom.class.missing': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'custom.map.missing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'custom.mode.missing': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'error.extentions': '&#21344;&#49910;&#50137;&#50713;&#21344;&#49941;&#49661;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#45796;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'error.seek': '&#21344;&#50137;&#50713;&#21344;&#50025;&#47484;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#49891;&#48669;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;',
        'generic.accuracy': '&#21344;&#50137;&#50713;&#54869;&#21344;&#50137;&#50713;',
        'generic.clan': '&#53364;&#21344;&#50137;&#50713;',
        'generic.connecting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'generic.create': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.deaths': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.default': '&#21344;&#50025;&#48376;&#21344;&#50137;&#50713;',
        'generic.defeat': '&#21344;&#49915;&#48196;&#50713;',
        'generic.delete': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.failed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.follow': '&#21344;&#49899;&#47196;&#50872;&#50713;',
        'generic.followers': '&#21344;&#49899;&#47196;&#50872;&#50713;',
        'generic.following': '&#21344;&#49899;&#47364;&#50713;&#21344;&#50137;&#50713;',
        'generic.games': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.games.played': '&#52824;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.games.won': '&#21344;&#49849;&#47756;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.kdr': '&#75;&#68;&#82;',
        'generic.kills': '&#52376;&#52824;',
        'generic.leave': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.level': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.load': '&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.loading': '&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'generic.login': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;',
        'generic.logout': '&#21344;&#49912;&#44536;&#50500;&#50872;&#50713;',
        'generic.logout.sessions': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49892;&#50872;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44536;&#50500;&#50872;&#50713;',
        'generic.name': '&#21344;&#49905;&#47756;&#50713;',
        'generic.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.off': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.password': '&#21344;&#50137;&#50713;&#21344;&#49915;&#48196;&#50713;&#54840;&#32;&#21344;&#49929;&#47364;&#50713;',
        'generic.register': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.save': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.score': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.search': '&#21344;&#49903;&#49340;&#50713;',
        'generic.select': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.submit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.success': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
        'generic.time': '&#21344;&#49884;&#44260;&#50713;',
        'generic.timep': '&#21344;&#49884;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49884;&#44260;&#50713;',
        'generic.unfollow': '&#21344;&#49899;&#47196;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'generic.username': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49944;&#47756;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
        'generic.victory': '&#21344;&#49849;&#47756;&#50713;',
        'generic.wait': '&#21344;&#50137;&#50713;&#21344;&#49884;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49941;&#47364;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'generic.wins': '&#21344;&#49849;&#47756;&#50713;',
        'leaderboard.empty': '&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#48669;&#50713;',
        'matchmaker.full': '&#21344;&#49912;&#50872;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#52284;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
        'matchmaker.full2': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#52284;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
        'matchmaker.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
        'menu.btn.browser': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'menu.btn.customize': '&#52964;&#21344;&#50137;&#50713;&#21344;&#49910;&#47756;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'menu.btn.host': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'menu.btn.invite': '&#21344;&#49901;&#45840;&#50713;&#21344;&#49913;&#44621;&#50713;',
        'menu.btn.invite.clicked': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49913;&#47364;&#50713;',
        'menu.btn.join': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
        'menu.btn.maps': '&#21344;&#50137;&#50713;',
        'menu.btn.mods': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'menu.btn.profile': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'menu.btn.settings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'menu.btn.shop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'menu.btn.social': '&#21344;&#49920;&#49661;&#50713;',
        'mod.disabled': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;',
        'mod.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
        'mod.extracting': '{0}&#47;{1}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
        'mod.invalid': '&#21344;&#50137;&#50713;&#54952;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
        'mod.loading': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'player.died': '&#89;&#111;&#117;&#32;&#100;&#105;&#101;&#100;',
        'player.disconnect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'player.inactive': '&#54876;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49961;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
        'player.killed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'player.killstreak': '{0}&#21344;&#50137;&#50713;&#40;&#21344;&#50137;&#50713;&#41;&#32;{1}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52376;&#52824;',
        'player.waiting': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50612;&#47484;&#32;&#21344;&#50137;&#50713;&#21344;&#49941;&#47756;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
        'popup.checkpoint': '&#52404;&#53356;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;&#33;',
        'purchase.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49961;&#49340;&#50713;&#21344;&#49961;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
        'purchase.error.click': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#60;&#47;&#97;&#62;&#21344;&#50137;&#50713;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49941;&#50137;&#50713;&#32;&#21344;&#49884;&#46328;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
        'purchase.error.limit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#47364;&#50713;&#32;&#21344;&#49916;&#46328;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44260;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
        'server.config.allowSpect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
        'server.config.autoJump': '&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'server.config.canSlide': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
        'server.config.deltaMlt': '&#53440;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'server.config.gameTime': '&#21344;&#49884;&#44260;&#50713;&#40;&#21344;&#50137;&#50713;&#41;',
        'server.config.gravMlt': '&#21344;&#49961;&#47364;&#50713;',
        'server.config.healthMlt': '&#52404;&#21344;&#50137;&#50713;&#32;&#21344;&#49849;&#49661;&#50713;',
        'server.config.impulseMlt': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#47364;&#50713;',
        'server.config.jumpMlt': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'server.config.killRewards': '&#52376;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'server.config.lives': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'server.config.maxPlayers': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;',
        'server.config.minPlayers': '&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;',
        'server.config.nameTags': '&#21344;&#49905;&#47756;&#50713;&#54364;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'server.config.nameTeam1': '&#49;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
        'server.config.nameTeam2': '&#50;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
        'server.config.private': '&#21344;&#50137;&#50713;&#21344;&#49915;&#48196;&#50713;',
        'server.config.selTeam': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'server.config.strafeSpd': '&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49928;&#46328;&#50713;',
        'server.config.thirdPerson': '&#51;&#21344;&#50137;&#50713;&#52845;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.audio.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.audio.sound': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.audio.voice': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.controls.change': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.controls.press': '&#21344;&#49891;&#48196;&#50713;&#32;&#53412;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'settings.crosshair.always': '&#21344;&#49939;&#49340;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.crosshair.color': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.image': '&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.image.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.shadow': '&#21344;&#49939;&#47756;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.size': '&#53356;&#21344;&#50137;&#50713;',
        'settings.crosshair.style': '&#21344;&#50137;&#50713;&#53440;&#21344;&#50137;&#50713;',
        'settings.crosshair.style.0': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.style.1': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.style.2': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.style.3': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50041;&#44033;&#21344;&#50137;&#50713;',
        'settings.crosshair.style.4': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50041;&#44033;&#21344;&#50137;&#50713;',
        'settings.crosshair.thickness': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.type': '&#53440;&#21344;&#50137;&#50713;',
        'settings.crosshair.type.2': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.type.3': '&#21344;&#50137;&#50713;&#21344;&#49905;&#50613;&#50713;&#21344;&#50137;&#50713;',
        'settings.crosshair.type.4': '&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
        'settings.editing.bobbing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50045;&#47548;',
        'settings.editing.depth': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
        'settings.editing.green': '&#21344;&#49939;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#53356;&#21344;&#50137;&#50713;',
        'settings.editing.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.editing.weapon': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.gameplay.aimsens': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44260;&#50713;&#21344;&#50137;&#50713;',
        'settings.gameplay.challenge': '&#52300;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.gameplay.fov': '&#21344;&#49884;&#50556;&#44260;&#50713;',
        'settings.gameplay.fps': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#70;&#79;&#86;',
        'settings.gameplay.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49884;&#47364;&#50713;&#21344;&#50137;&#50713;',
        'settings.gameplay.invert': '&#89;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.gameplay.onkillS': '&#52376;&#52824;&#32;&#21344;&#50137;&#50713;',
        'settings.gameplay.sensitivity': '&#21344;&#49912;&#44260;&#50713;&#21344;&#50137;&#50713;',
        'settings.gameplay.streamer': '&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.interface.chat': '&#52292;&#21344;&#50137;&#50713;&#52285;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.interface.deaths': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.interface.fps': '&#70;&#80;&#83;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.interface.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49905;&#50137;&#50713;',
        'settings.interface.hp': '&#21344;&#50137;&#50713;&#21344;&#49905;&#45442;&#50713;&#21344;&#50137;&#50713;&#32;&#72;&#80;&#32;&#21344;&#50137;&#50713;',
        'settings.interface.kills': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#52285;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.interface.messages': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#49960;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.interface.ping': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.interface.ui': '&#85;&#73;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.interface.unboxings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'settings.mods.auto': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.borders': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.dot': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.dot.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#32;&#85;&#82;&#76;',
        'settings.mods.endmessage': '&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49960;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.profile': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.profile.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
        'settings.mods.scope': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
        'settings.mods.scope.paste': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
        'settings.onKillS.style.0': '&#21344;&#50025;&#48376;&#21344;&#50137;&#50713;',
        'settings.onKillS.style.1': '&#21344;&#49940;&#49340;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.onKillS.style.2': '&#70;&#79;&#86;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.onKillS.style.3': '&#70;&#79;&#86;&#32;&#54869;&#21344;&#50137;&#50713;',
        'settings.quality.header': '&#54408;&#21344;&#50137;&#50713;',
        'settings.quality.mflash': '&#21344;&#49916;&#44621;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.quality.part': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#54952;&#21344;&#50137;&#50713;',
        'settings.quality.res': '&#21344;&#49940;&#49340;&#50713;&#21344;&#50137;&#50713;',
        'settings.quality.trails': '&#21344;&#49916;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.reset': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44621;&#50713;&#54868;',
        'settings.reset.confirm': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44621;&#50713;&#54868;&#21344;&#49913;&#49884;&#44192;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;&#63;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52840;&#32;&#21344;&#49932;&#45768;&#45840;&#50713;&#46;',
        'settings.server.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.server.region': '&#21344;&#50025;&#48376;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'settings.shaders.ambient': '&#21344;&#49944;&#48669;&#50713;&#21344;&#50137;&#50713;&#53944;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
        'settings.shaders.header': '&#21344;&#50137;&#50713;&#21344;&#49905;&#45840;&#50713;',
        'social.login': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.login.buy': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
        'social.login.failed': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.login.proccessing': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'social.login.sell': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#49892;&#47756;&#50713;&#21344;&#49913;&#44621;&#50713;',
        'social.maps.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
        'social.market.back': '&#21344;&#49885;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.cant': '&#21344;&#49944;&#44621;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.failed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;&#32;&#21344;&#49941;&#50137;&#50713;&#32;&#21344;&#49884;&#46328;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'social.market.fee': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.filter': '&#21344;&#49903;&#49340;&#50713;',
        'social.market.grace': '{0}&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.head': '&#21344;&#49928;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.listed': '{0}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
        'social.market.posting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'social.market.price.high': '&#21344;&#49933;&#44260;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#49661;&#50713;',
        'social.market.price.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
        'social.market.price.low': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#49661;&#50713;',
        'social.market.purchase': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.req': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#49661;&#50713;',
        'social.market.searching': '&#21344;&#49903;&#49340;&#50713;&#32;&#21344;&#50137;&#50713;',
        'social.market.sort': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.unlist': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.market.unlisting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'social.since': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'social.user.maps': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
        'social.user.mods': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'streamers.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
        'streamers.views': '{0}&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52397;&#32;&#21344;&#50137;&#50713;',
        'thumbnail.upload.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'thumbnail.upload.limit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52;&#48;&#107;&#98;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#53356;&#21344;&#50025;&#47564;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49903;&#45768;&#45840;&#50713;&#46;',
        'timer.end': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49948;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;{0}',
        'windows.account.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.account.recover': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52397;&#21344;&#50137;&#50713;&#32;&#60;&#97;&#62;&#107;&#114;&#117;&#110;&#107;&#101;&#114;&#64;&#121;&#101;&#110;&#100;&#105;&#115;&#46;&#99;&#104;&#60;&#47;&#97;&#62;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'windows.advertise.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.back.header': '&#21344;&#49885;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.clans.create': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.clans.header': '&#53364;&#21344;&#50137;&#50713;',
        'windows.clans.join': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.clans.login': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
        'windows.clans.members': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#40;{0}&#41;',
        'windows.clans.name': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
        'windows.clans.page': '&#91;{0}&#93;&#32;&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.clans.requests': '&#21344;&#50137;&#50713;&#52397;',
        'windows.clans.requests.none': '&#21344;&#50137;&#50713;&#52397;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.clans.view': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.class.header': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.client.header': '&#53364;&#21344;&#50137;&#50713;&#21344;&#49905;&#50613;&#50713;&#53944;',
        'windows.client.linux': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.client.mac': '&#21344;&#50137;&#50713;&#79;&#83;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.client.windows': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.aim': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.backward': '&#21344;&#49944;&#47364;&#50713;',
        'windows.controls.chat': '&#52292;&#21344;&#50137;&#50713;',
        'windows.controls.crouch': '&#21344;&#50137;&#50713;&#53356;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.drop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.forward': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.inspect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.interact': '&#21344;&#50137;&#50713;&#54840;&#32;&#21344;&#49948;&#50872;&#50713;',
        'windows.controls.jump': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.left': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.list': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.next': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.previous': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.reload': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.right': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.spray': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.controls.voice': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.hat.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.host.classes': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.host.cmaps': '&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;&#32;&#21344;&#50137;&#50713;',
        'windows.host.header': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.host.maps': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.host.modes': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.host.preset': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
        'windows.host.preset.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'windows.host.preset.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
        'windows.host.raw': '&#21344;&#49905;&#44260;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.host.settings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.host.start': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.join.code': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;&#47;&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
        'windows.join.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
        'windows.loadout.body': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.loadout.class': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.loadout.hat': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.loadout.header': '&#21344;&#49912;&#46328;&#50713;&#21344;&#49891;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.loadout.melee': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.loadout.primary': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.loadout.secondary': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.loadout.spray': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.maps.community': '&#21344;&#50137;&#50713;&#32;&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;',
        'windows.maps.editor': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.maps.header': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
        'windows.maps.name': '&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
        'windows.maps.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
        'windows.maps.publish': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
        'windows.mods.community.fav': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#52286;&#21344;&#50137;&#50713;',
        'windows.mods.community.header': '&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.mods.community.hot': '&#21344;&#49912;&#44621;&#50713;',
        'windows.mods.community.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
        'windows.mods.community.new': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.mods.community.none': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
        'windows.mods.drop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50025;&#50640;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44144;&#45442;&#50713;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'windows.mods.guide': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
        'windows.mods.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#45840;&#50713;&#21344;&#50137;&#50713;',
        'windows.mods.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.mods.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.mods.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'windows.mods.publish': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
        'windows.mods.viewer': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.players.header': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.players.none': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50612;&#44032;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
        'windows.publish.map.header': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
        'windows.publish.map.login': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'windows.publish.map.paste': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
        'windows.publish.map.thumbnail': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.publish.map.update': '&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;',
        'windows.publish.mod.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
        'windows.publish.mod.login': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
        'windows.publish.mod.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
        'windows.publish.mod.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
        'windows.publish.mod.thumbnail': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.publish.mod.update': '&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;',
        'windows.secondary.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54364;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.secondary.req': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#49661;&#50713;',
        'windows.secondary.unlocked': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.servers.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.servers.hide': '&#54400;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.servers.host': '&#43;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.servers.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#45840;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
        'windows.servers.online': '&#21344;&#50137;&#50713;&#32;{0}&#21344;&#50137;&#50713;&#32;&#21344;&#49849;&#46960;&#50713;&#21344;&#50137;&#50713;',
        'windows.settings.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.skin.header': '&#21344;&#50137;&#50713;&#53416;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.spray.default': '&#21344;&#50025;&#48376;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.spray.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.store.agree': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49933;&#46121;&#45768;&#45840;&#50713;&#46;',
        'windows.store.amount': '{0}&#32;&#75;&#82;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
        'windows.store.buy': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#47756;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'windows.store.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.store.login': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#44;&#32;&#21344;&#49929;&#49661;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
        'windows.store.market': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50137;&#50713;',
        'windows.store.market2': '&#75;&#114;&#117;&#110;&#107;&#101;&#114;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.store.purchase': '&#75;&#82;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.store.purchasing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
        'windows.store.spin': '{0}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.store.unlock': '&#21344;&#50137;&#50713;&#21344;&#49912;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53416;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49929;&#49661;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
        'windows.store.wheels': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50052;&#47131;',
        'windows.theatre.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
        'windows.theatre.key': '&#82;&#101;&#99;&#111;&#114;&#100;&#32;&#75;&#101;&#121;',
        'windows.theatre.record': '&#21344;&#50137;&#50713;&#54868;&#32;&#54876;&#21344;&#50137;&#50713;&#54868;'
    };
}, function(csZ, ct0, ct1) {
    (function(ct0) {
        var ct3 = ct1(0x24),
            ct4 = ct1(0x75),
            ct5 = {
                'Content-Type': 'application/x-www-form-urlencoded'
            };

        function ct6(csZ, ct0) {
            !ct3['isUndefined'](csZ) && ct3['isUndefined'](csZ['Content-Type']) && (csZ['Content-Type'] = ct0);
        }
        var ct9, cta = {
            'adapter': ('undefined' == typeof XMLHttpRequest ? void 0x0 !== ct0 && (ct9 = ct1(0x5f)) : ct9 = ct1(0x5f), ct9),
            'transformRequest': [function(csZ, ct0) {
                return ct4(ct0, 'Content-Type'), ct3['isFormData'](csZ) || ct3['isArrayBuffer'](csZ) || ct3['isBuffer'](csZ) || ct3['isStream'](csZ) || ct3['isFile'](csZ) || ct3['isBlob'](csZ) ? csZ : ct3['isArrayBufferView'](csZ) ? csZ['buffer'] : ct3['isURLSearchParams'](csZ) ? (ct6(ct0, 'application/x-www-form-urlencoded;charset=utf-8'), csZ['toString']()) : ct3['isObject'](csZ) ? (ct6(ct0, 'application/json;charset=utf-8'), JSON['stringify'](csZ)) : csZ;
            }],
            'transformResponse': [function(csZ) {
                if ('string' == typeof csZ) try {
                    csZ = JSON['parse'](csZ);
                } catch (cte) {}
                return csZ;
            }],
            'timeout': 0x0,
            'xsrfCookieName': 'XSRF-TOKEN',
            'xsrfHeaderName': 'X-XSRF-TOKEN',
            'maxContentLength': -0x1,
            'validateStatus': function(csZ) {
                return 0xc8 <= csZ && 0x12c > csZ;
            }
        };
        cta['headers'] = {
            'common': {
                'Accept': 'application/json,\x20text/plain,\x20*/*'
            }
        }, ct3['forEach'](['delete', 'get', 'head'], function(csZ) {
            cta['headers'][csZ] = {};
        }), ct3['forEach'](['post', 'put', 'patch'], function(csZ) {
            cta['headers'][csZ] = ct3['merge'](ct5);
        }), csZ['exports'] = cta;
    }['call'](this, ct1(0xe)));
}, function(cti, ctj, ctk) {
    var ctl = ctk(0x7),
        ctm = ctk(0x8),
        ctn = ctk(0x59);
    cti['exports'] = {
        'ahNum': 0x0,
        'socket': null,
        'connected': !0x1,
        'socketId': -0x1,
        'sendQueue': [],
        'connect': function(cti, ctj, ctk) {
            if (!this['DfxcJC']) {
                var ctn = ctl['enableHttps'] ? 'wss:' : 'ws:',
                    cts = this;
                try {
                    var ctt = !0x1;
                    this['DfxcJC'] = new WebSocket(ctn + cti), this['DfxcJC']['binaryType'] = 'arraybuffer', this['DfxcJC']['onmessage'] = function(cti) {
                        var ctj = ctm['jPnw'](cti['data'])[0x0],
                            ctl = ctj[0x0],
                            ctn = ctj[0x1];
                        'io-init' == ctl ? cts['socketId'] = ctn[0x0] : ctk[ctl] ? ctk[ctl]['apply'](void 0x0, ctn) : console['error']('Received\x20unregistered\x20event', ctl);
                    }, this['DfxcJC']['onopen'] = function() {
                        cts['connected'] = !0x0, ctj();
                        for (let cti of cts['sendQueue']) cts['send'](cti[0x0], ...cti[0x1]);
                    }, this['DfxcJC']['onclose'] = function() {
                        cts['connected'] = !0x1, ctt || ctj('Disconnected.\x20Try\x20connecting\x20to\x20another\x20server.');
                    }, this['DfxcJC']['onerror'] = function() {
                        this['DfxcJC']['readyState'] != WebSocket['OPEN'] && (ctt = !0x0, console['error']('Socket\x20error', arguments), ctj('Socket\x20error'));
                    };
                } catch (ctz) {
                    console['error']('Socket\x20connection\x20error:', ctz), ctj(ctz);
                }
            }
        },
        'send': function(cti, ...ctj) {
            if (!this['DfxcJC'] || this['DfxcJC']['readyState'] !== WebSocket['OPEN']) return console['warn']('Socket\x20not\x20open\x20yet', cti, ctj), void this['sendQueue']['push']([cti, ctj]);
            this['ahNum'] = ctm['IVFXPaTF'](this['ahNum'], ctn);
            var ctk = ctm['gutb']([cti, ctj], this['ahNum']);
            this['DfxcJC']['send'](ctk);
        },
        'socketReady': function() {
            return this['DfxcJC'] && this['connected'];
        }
    };
}, function(ctD) {
    ctD['exports'] = 0xb1b9;
}, function(ctE, ctF, ctG) {
    (function(ctF) {
        var ctI = ctG(0x27),
            ctJ = ctG(0x8),
            ctK = ctG(0x7),
            ctL = ctG(0x45),
            ctM = ctG(0x23),
            ctN = 0x0;
        ctE['exports']['validConfig'] = function(ctE) {
            if (ctE['modes'])
                for (var ctF = 0x0; ctF < ctE['modes']['length']; ++ctF)
                    if (!ctI['modes'][ctE['modes'][ctF]]) return 'Invalid\x20Mode\x20in\x20Config.';
            if (ctE['classes'])
                for (ctF = 0x0; ctF < ctE['classes']['length']; ++ctF)
                    if (!ctL[ctE['classes'][ctF]]) return 'Invalid\x20Class\x20in\x20Config.';
            if (ctE['settings']) {
                var ctG = 0x0;
                for (var ctM in ctE['settings'])
                    if (ctE['settings']['hasOwnProperty'](ctM)) {
                        var ctN = ctE['settings'][ctM],
                            ctT = -0x1;
                        for (ctF = 0x0; ctF < ctK['serverConfig']['length']; ++ctF)
                            if (ctK['serverConfig'][ctF]['varN'] == ctM) {
                                ctT = ctF;
                                break;
                            }
                        if (0x0 > ctT) return 'Invalid\x20Setting\x20in\x20Config.';
                        var ctU = ctK['serverConfig'][ctT];
                        if (!ctU['input'] && !ctU['bool']) {
                            if (!ctJ['isNumber'](ctN)) return 'Invalid\x20Config\x20Value.';
                            if (ctN > (ctU['maxF'] || ctU['max']) || ctN < ctU['min']) return 'Config\x20Value\x20out\x20of\x20Range.';
                        }
                        if (++ctG > ctK['serverConfig']['length'] + 0x1) return 'Settings\x20Mismatch.';
                    }
            }
            return null;
        }, ctE['exports']['validMap'] = function(ctE, ctF) {
            if (!ctJ['isString'](ctE['name']) || !ctE['name']['replace'](/\s/g, '')['length']) return 'Missing\x20map\x20name.';
            if (-0x1 !== ctE['name']['indexOf']('<') || -0x1 !== ctE['name']['indexOf']('>')) return 'Illegal\x20characters\x20in\x20map\x20name.';
            if (0x10 < ctE['name']['length']) return 'Map\x20name\x20too\x20long.';
            if (!ctJ['isArray'](ctE['spawns']) || !ctE['spawns']['length']) return 'Missing\x20spawn\x20points.';
            if (ctE['spawns']['length'] > ctK['spawnLimit']) return 'Too\x20many\x20spawn\x20points.';
            for (var ctG, ctI = 0x0; ctI < ctE['spawns']['length']; ++ctI) {
                if (ctG = ctE['spawns'][ctI], !ctJ['isArray'](ctG) || !ctG['length'] || 0x3 > ctG['length'] || 0x5 < ctG['length']) return 'Spawn\x20point\x20error.';
                for (var ctL = 0x0; ctL < ctG['length']; ++ctL) {
                    if (0x3 > ctL && !ctJ['isNumber'](ctG[ctL])) return 'Spawn\x20point\x20error.';
                    if (0x3 == ctL && null == ctG[ctL] && 0x1 == ctG[ctL] && 0x2 == ctG[ctL]) return 'Spawn\x20team\x20error.';
                }
            }
            if (!ctJ['isArray'](ctE['objects']) || !ctE['objects']['length']) return 'Missing\x20objects.';
            if (ctE['objects']['length'] > (ctF ? ctK['objectLimitF'] : ctK['objectLimit'])) return 'Map\x20exceeds\x20object\x20limit.';
            var ctM, ctN = 0x0;
            for (ctI = 0x0; ctI < ctE['objects']['length']; ++ctI) {
                if (0x1e == (ctM = ctE['objects'][ctI])['i']) {
                    if (ctN++, null != ctM['st'] && 'string' != typeof ctM['st']) return 'Object\x20sign\x20text\x20error.';
                    if ((ctM['st'] || '')['length'] > ctK['signTextLimit']) return 'Object\x20sign\x20text\x20to\x20long.';
                    if (ctN > ctK['signLimit']) return 'Too\x20many\x20signs.';
                    if (ctM['sf'] && ctM['sf'] > ctK['signFontMax'] || ctM['sf'] && ctM['sf'] < ctK['signFontMin']) return 'Object\x20sign\x20font\x20error.';
                }
                if (!ctJ['isArray'](ctM['s']) || 0x3 != ctM['s']['length'] || !ctJ['arrayInts'](ctM['s'])) return 'Object\x20scale\x20error.';
                if (!ctJ['isArray'](ctM['p']) || 0x3 != ctM['p']['length'] || !ctJ['arrayInts'](ctM['p'])) return 'Object\x20position\x20error.';
                if (ctJ['isArray'](ctM['r'])) {
                    if (0x3 != ctM['r']['length'] || !ctJ['arrayInts'](ctM['r'])) return 'Object\x20rotation\x20value\x20error.';
                } else if (null != ctM['r']) return 'Object\x20rotation\x20error.';
                if (null != ctM['d'] && !ctJ['isNumber'](ctM['d'])) return 'Object\x20direction\x20error.';
                ctM['col'] = !!ctM['col'];
            }
            return null;
        }, ctE['exports']['obj'] = function(cu2, cu3, cu4, cu5, cu6, cu7, cu8, cu9, cua) {
            this['isCustom'] = cu2, this['isPrimary'] = 0x0 == cu3, this['sid'] = ctN++, this['gameInstance'] = null, this['connectedClients'] = 0x0, this['password'] = void 0x0, this['pendingGameId'] = null, this['gameClosed'] = !0x1, this['map'] = new ctI['manager'](cu5, cu7, ctJ, ctK), this['store'] = ctG(0x46), this['attach'] = ctG(0x4c), this['weapons'] = ctG(0x16), this['classes'] = ctL, this['streaks'] = ctG(0x4d), this['maxStreak'] = this['streaks']['sort']((ctE, ctF) => ctE['kills'] < ctF['kills'] ? 0x1 : ctF['kills'] < ctE['kills'] ? -0x1 : 0x0)[0x0]['kills'], this['sprays'] = ctG(0x4e), this['triggers'] = ctG(0x28), this['projectiles'] = new(ctG(0x5b))(this, cu8), this['controls'] = null, this['players'] = new(ctG(0x47))['manager'](this, cu5, cu6, cu7, ctJ, ctK, cu8), this['endData'] = {
                'ed': [],
                'vo': null
            }, this['endTimer'] = 0x0, this['banList'] = [], this['destObjs'] = [], this['hideWeapon'] = [!0x1, !0x1, !0x1];
            var cud, cue, cuf, cug = this;
            this['applyConfig'] = function(ctE, ctF, ctG, ctI) {
                ctE = ctE || {}, this['config'] = {};
                for (var ctL, ctM = 0x0; ctM < ctK['serverConfig']['length']; ++ctM)
                    if ((ctL = ctK['serverConfig'][ctM])['bool']) this['config'][ctL['varN']] = null == ctE[ctL['varN']] ? ctL['def'] : !!ctE[ctL['varN']];
                    else if (ctL['input']) {
                    var ctN = ctE[ctL['varN']];
                    ctJ['isString'](ctN) || (ctN = ctL['def']), this['config'][ctL['varN']] = ctJ['sanitizeStr'](ctN), 0x10 < ctN['length'] && (ctN = ctN['substring'](0x0, 0x10));
                } else {
                    ctN = ctE[ctL['varN']];
                    ctJ['isNumber'](ctN) || (ctN = ctL['def']), this['config'][ctL['varN']] = ctJ['limitMM'](ctN, ctL['min'], ctF && ctL['maxF'] || ctL['max']);
                }
                if (this['config']['maps'] = ctE['maps'], !ctJ['isArray'](this['config']['maps']) || !this['config']['maps']['length'] || this['config']['maps']['length'] > this['map']['maps']['length']) {
                    this['config']['maps'] = [];
                    for (ctM = 0x0; ctM < this['map']['maps']['length']; ctM++) this['config']['maps']['push'](ctM);
                } else
                    for (ctM = 0x0; ctM < this['config']['maps']['length']; ctM++)
                        if (!this['map']['maps'][this['config']['maps'][ctM]]) {
                            this['config']['maps'] = [0x0];
                            break;
                        } if (this['config']['modes'] = ctE['modes'], !ctJ['isArray'](this['config']['modes']) || !this['config']['modes']['length'] || this['config']['modes']['length'] > this['map']['modes']['length']) this['config']['modes'] = null;
                else
                    for (ctM = 0x0; ctM < this['config']['modes']['length']; ctM++)
                        if (!this['map']['modes'][this['config']['modes'][ctM]]) {
                            this['config']['modes'] = null;
                            break;
                        } var cu2 = !0x1;
                if (this['config']['classes'] = ctE['classes'], !ctJ['isArray'](this['config']['classes']) || !this['config']['classes']['length'] || this['config']['classes']['length'] > this['classes']['length']) cu2 = !0x0;
                else
                    for (ctM = 0x0; ctM < this['config']['classes']['length']; ctM++)
                        if (!this['classes'][this['config']['classes'][ctM]]) {
                            cu2 = !0x0;
                            break;
                        } if (cu2) {
                    this['config']['classes'] = [];
                    for (ctM = 0x0; ctM < this['classes']['length']; ctM++) this['config']['classes']['push'](ctM);
                }
                this['config']['isFromQueue'] = ctI;
            }, this['applyConfig'](), this['getInfo'] = function() {
                return this['mode']['alias'] + '_' + this['map']['maps'][this['mapIndex']]['name'];
            }, this['customMap'] = function(ctF, ctG, ctI, ctJ, ctL) {
                if (ctF) try {
                    var ctM = JSON['parse'](ctF);
                    if (cu8 && (this['customMapData'] = {
                            'data': ctF,
                            'id': ctG,
                            'featured': ctJ,
                            'creator': ctI
                        }), !ctL) {
                        var ctN = ctE['exports']['validMap'](ctM, ctJ);
                        if (ctN) return ctN;
                    }
                    for (var cu2 = 0x0; cu2 < ctM['objects']['length']; ++cu2) {
                        if (ctM['objects'][cu2]['i'] = ctK['prefabIDS'][ctM['objects'][cu2]['i'] || ctM['objects'][cu2]['id'] || 0x0], !ctM['objects'][cu2]['i']) return 'Object\x20ID\x20error.';
                        if (ctM['objects'][cu2]['t'] = ctK['textureIDS'][ctM['objects'][cu2]['t'] || 0x0], !ctM['objects'][cu2]['t']) return 'Object\x20Texture\x20error.';
                    }
                    ctM['creator'] = ctI, this['map']['setMaps']([ctM]), this['config']['maps'] = [0x0];
                } catch (cux) {
                    return 'Map\x20error\x20occured.';
                }
            }, this['playSound'] = function(ctE, ctF, ctG, ctI, ctJ) {
                if (ctF)
                    if (cu6) cu6['play'](ctE, ctF, !0x1, ctJ);
                    else
                        for (var ctK = 0x0; ctK < this['players']['list']['length']; ++ctK)((cud = this['players']['list'][ctK])['active'] || cud['spectating']) && (ctG != cud || ctI) && cu8['send'](cud['id'], 's', ctE, ctG['sid'], ctF);
            }, this['playerSound'] = function(ctE, ctF, ctG, ctI, ctK, ctL) {
                cud = ctI || this['players']['findBySid'](ctF);
                var ctM = Howler['pos']();
                cud && !(ctL && ctL < ctJ['getDistance3D'](cud['x'], cud['y'], cud['z'], ctM[0x0], ctM[0x1], ctM[0x2])) && cu6['play3D'](ctE, cud['x'], cud['y'], cud['z'], ctG || 0x1, ctK);
            }, this['moveObj'] = function(ctE, ctF, ctG, ctI) {
                ctE['x'] = ctF, ctE['y'] = ctG, ctE['z'] = ctI, ctE['meshRef'] && ctE['meshRef']['position']['set'](ctF, ctG, ctI);
            }, this['explosion'] = function(ctE, ctF, ctG, ctI, ctK, ctL, ctM) {
                for (var ctN = 0x0; ctN < this['players']['list']['length']; ++ctN)
                    if (((cud = this['players']['list'][ctN])['active'] || cud['spectating']) && (cu8['send'](cud['id'], 'ex', Math['round'](ctE), Math['round'](ctF), Math['round'](ctG), Math['round'](ctI)), cud['active'])) {
                        var cu2 = ctJ['getDistance3D'](ctE, ctF, ctG, cud['x'], cud['y'], cud['z']),
                            cu3 = 0x1 - cu2 / ctI;
                        0x0 < cu3 && this['players']['changeHealth'](cud, ctL, ctK * cu3, ctL == cud) && this['players']['kill'](cud, ctL, {
                            'dst': cu2,
                            'weaponId': ctM['weaponId'],
                            'weapon': ctM['weapon']
                        });
                    }
            };
            var cuZ = [];
            this['getSpawnPoint'] = function(ctE, ctF, ctG) {
                if (ctG) return this['map']['spawns'][0x0];
                cuZ['length'] = 0x0;
                for (var ctI, ctL = 0x0; ctL < this['map']['spawns']['length']; ++ctL) {
                    this['map']['spawns'][ctL]['dst'] = 0x0;
                    for (var ctM = 0x0; ctM < this['players']['list']['length']; ++ctM)(cud = this['players']['list'][ctM]) && cud['active'] && cud != ctF && (!ctE || cud['team'] != ctE) && !this['canSee'](cud, this['map']['spawns'][ctL]['x'], this['map']['spawns'][ctL]['y'] + ctK['playerHeight'], this['map']['spawns'][ctL]['z']) && (this['map']['spawns'][ctL]['dst']++, 0x0);
                }
                this['map']['spawns']['sort'](ctJ['orderByDst']), ctI = this['map']['spawns'][0x0]['dst'];
                for (ctL = 0x0; ctL < this['map']['spawns']['length']; ++ctL)
                    if (this['map']['spawns'][ctL]['dst'] == ctI) {
                        this['map']['spawns'][ctL]['dst'] = 0x0;
                        for (ctM = 0x0; ctM < this['players']['list']['length']; ++ctM)(cud = this['players']['list'][ctM])['active'] && cud != ctF && (!ctE || cud['team'] != ctE) && (this['map']['spawns'][ctL]['dst'] += ctJ['getDistance3D'](this['map']['spawns'][ctL]['x'], this['map']['spawns'][ctL]['y'], this['map']['spawns'][ctL]['z'], cud['x'], cud['y'], cud['z']));
                        (ctE && this['map']['spawns'][ctL]['team'] == ctE || !this['map']['spawns'][ctL]['team']) && cuZ['push'](this['map']['spawns'][ctL]);
                    }
                return cuZ['sort'](ctJ['orderByDst']), cuZ['reverse'](), cuZ[0x0] || this['map']['spawns'][0x0];
            }, this['canSee'] = function(ctE, ctF, ctG, ctI, ctL) {
                if (!ctE) return !0x1;
                ctL = ctL || 0x0;
                for (var ctM, ctN = ctJ['getDistance3D'](ctE['x'], ctE['y'], ctE['z'], ctF, ctG, ctI), cu2 = ctJ['getDirection'](ctE['z'], ctE['x'], ctI, ctF), cu3 = ctJ['getDirection'](ctJ['getDistance'](ctE['x'], ctE['z'], ctF, ctI), ctG, 0x0, ctE['y']), cu4 = 0x1 / (ctN * Math['sin'](cu2 - Math['PI']) * Math['cos'](cu3)), cu5 = 0x1 / (ctN * Math['cos'](cu2 - Math['PI']) * Math['cos'](cu3)), cu6 = 0x1 / (ctN * Math['sin'](cu3)), cu7 = ctE['y'] + ctE['height'] - ctK['cameraHeight'], cu8 = 0x0; cu8 < this['map']['manager']['objects']['length']; ++cu8)
                    if (!(ctM = this['map']['manager']['objects'][cu8])['noShoot'] && ctM['active'] && !ctM['transparent']) {
                        var cu9 = ctJ['lineInRect'](ctE['x'], ctE['z'], cu7, cu4, cu5, cu6, ctM['x'] - Math['max'](0x0, ctM['width'] - ctL), ctM['z'] - Math['max'](0x0, ctM['length'] - ctL), ctM['y'] - Math['max'](0x0, ctM['height'] - ctL), ctM['x'] + Math['max'](0x0, ctM['width'] - ctL), ctM['z'] + Math['max'](0x0, ctM['length'] - ctL), ctM['y'] + Math['max'](0x0, ctM['height'] - ctL));
                        if (cu9 && 0x1 > cu9) return cu9;
                    }
                var cua = this['map']['terrain'];
                if (cua) {
                    var cud = cua['raycast'](ctE['x'], -ctE['z'], cu7, 0x1 / cu4, -0x1 / cu5, 0x1 / cu6);
                    if (cud) return ctJ['getDistance3D'](ctE['x'], ctE['y'], ctE['z'], cud['x'], cud['z'], -cud['y']);
                }
                return null;
            }, this['updateAccounts'] = function() {
                for (var ctE = [], ctF = 0x0; ctF < this['players']['list']['length']; ++ctF)(cud = this['players']['list'][ctF])['account'] && !cud['account']['hack'] && cud['logTime'] >= cud['playTime'] / 0x3 && (cud['account']['timePlayed'] += cud['playTime'] || 0x0, null == this['host'] && (cud['account']['games']++, cud['account']['kills'] += cud['kills'], cud['account']['deaths'] += cud['deaths'], cud['account']['score'] += cud['score'], cud['didWin'] && cud['account']['wins']++), cu8['send'](cud['id'], 'ua', cud['account']['getData']()), ctE['push'](cud));
                ctE['length'] && this['saveRewards'](ctE);
            }, this['saveRewards'] = function(ctE) {
                for (var ctF = '', ctG = 0x0; ctG < ctE['length']; ++ctG) ctE[ctG] && ctE[ctG]['account'] && ctE[ctG]['reward'] && (ctF += (ctF['length'] ? ',' : '') + ctE[ctG]['account']['id'] + ',' + ctE[ctG]['reward']);
                ctF['length'] && cu4['call'](0x14, [ctF], function(ctF, ctG) {
                    if (ctG && ctG[0x0] && ctG[0x0][0x0] && (ctG = ctG[0x0][0x0]['result'])) try {
                        ctG = ctG['split'](',');
                        for (var ctI, ctJ = 0x0; ctJ < ctG['length']; ++ctJ)(ctI = parseInt(ctG[ctJ])) && ctE[ctJ] && (ctE[ctJ]['account']['funds'] = ctI, cu8['send'](ctE[ctJ]['id'], 'uf', ctI));
                    } catch (cvw) {}
                });
            }, this['incStat'] = function(ctE, ctF) {
                ctF && ctF['account'] && null == this['host'] && (!ctF['account']['stats'][ctE] && (ctF['account']['stats'][ctE] = 0x0), ctF['account']['stats'][ctE]++);
            }, this['savePlayerData'] = function(ctE) {
                if (cu4 && ctE['account']) {
                    var ctF = ctE['account'];
                    ctF && cu4['call'](0x2, [ctF['id'], ctF['kills'], ctF['wins'], ctF['games'], ctF['deaths'], ctF['score'], ctF['clan'], ctF['timePlayed'], JSON['stringify'](ctF['stats'])]);
                }
            }, this['lockPlayer'] = function(ctE, ctF) {
                ctE['locked'] = ctF, cu8['send'](ctE['id'], 'lock', ctF);
            }, this['updateTeam'] = function(ctE, ctF) {
                ctE['team'] = ctF;
                for (var ctG = 0x0; ctG < ctE['sentTo']['length']; ++ctG) cu8['send'](ctE['sentTo'][ctG], 'tm', ctE['sid'], ctF);
                this['players']['syncLeaders']();
            }, this['startNuke'] = function(ctE) {
                this['nukeTimer'] = 0x2710, this['nukePlayer'] = ctE, cu8['broadcast']('game' + this['sid'], 'n', 0x0);
            };
            var cvH = [];
            this['infectRandom'] = function() {
                cvH['length'] = 0x0;
                for (var ctE = 0x0; ctE < this['players']['list']['length']; ++ctE) this['players']['list'][ctE]['active'] && cvH['push'](ctE);
                var ctF = 0x1;
                0xe <= cvH['length'] ? ctF = 0x3 : 0x8 <= cvH['length'] && (ctF = 0x2);
                var ctG;
                for (ctE = 0x0; ctE < ctF; ++ctE) ctG = ctJ['randInt'](0x0, cvH['length'] - 0x1), (cud = this['players']['list'][cvH[ctG]]) && (this['updateTeam'](cud, 'inf'), this['players']['kill'](cud, null, null, !0x0), cu8['broadcast']('game' + this['sid'], 'ac', cud['sid'], null, 'got\x20infected')), cvH['splice'](ctG, 0x1);
            }, this['pickSimon'] = function() {
                cvH['length'] = 0x0;
                for (var ctE = null, ctF = 0x0; ctF < this['players']['list']['length']; ++ctF)
                    if (this['players']['list'][ctF]['active']) {
                        if (this['host'] == this['players']['list'][ctF]['id']) {
                            ctE = this['players']['list'][ctF];
                            break;
                        }
                        cvH['push'](ctF);
                    }
                ctE || (ctE = this['players']['list'][cvH[ctJ['randInt'](0x0, cvH['length'] - 0x1)]]), ctE && (this['updateTeam'](ctE, 'simon'), ctE['maxHealth'] = 0x1388, ctE['health'] = ctE['maxHealth'], cu8['send'](ctE['id'], 'h', ctE['health']));
            }, this['lockSeekers'] = function() {
                for (var ctE = 0x0; ctE < this['players']['list']['length']; ++ctE) this['players']['list'][ctE]['active'] && 'seek' == this['players']['list'][ctE]['team'] && this['lockPlayer'](this['players']['list'][ctE], !0x0);
            }, this['pickSeeker'] = function() {
                cvH['length'] = 0x0;
                for (var ctE = 0x0; ctE < this['players']['list']['length']; ++ctE) this['players']['list'][ctE]['active'] && cvH['push'](ctE);
                (cud = this['players']['list'][cvH[ctJ['randInt'](0x0, cvH['length'] - 0x1)]]) && (this['updateTeam'](cud, 'seek'), this['lockPlayer'](cud, !0x0));
            }, this['releaseSeeker'] = function() {
                for (var ctE = 0x0; ctE < this['players']['list']['length']; ++ctE) 'seek' == (cud = this['players']['list'][ctE])['team'] && this['lockPlayer'](cud, !0x1);
            }, this['destroyObj'] = function(ctE) {
                for (var ctF = 0x0; ctF < cug['map']['manager']['objects']['length']; ++ctF)
                    if ((cud = cug['map']['manager']['objects'][ctF])['uid'] == ctE) {
                        cud['active'] = !0x1, cud['meshRef'] && (cud['meshRef']['visible'] = !0x1), cu5 && cu5['updateShadowMap']();
                        break;
                    }
            }, this['capFlag'] = function(ctE, ctF) {
                cu8 && (ctE['caps']++, ctE['flag'] = null, this['teams'][ctE['team']] ? this['teams'][ctE['team']]++ : this['teams'][ctE['team']] = 0x1, cu8['broadcast']('game' + this['sid'], 'ts', ctE['team'], this['teams'][ctE['team']]), cu8['broadcast']('game' + cug['sid'], 'ac', ctE['sid'], null, 'captured\x20the\x20Flag'), cu8['send'](ctE['id'], 'am', ['Capture', 0x96]), this['players']['score'](ctE, 0x96), this['resetFlag'](ctF));
            }, this['updateFlagCol'] = function(ctE, ctF) {
                ctF && ctF['team'] && ctE['teamCol'] != ctF['team'] && ctE['meshRef'] && (ctE['teamCol'] = ctF['team'], ctE['meshRef']['material'] = cu5['getMat']('crystal_0', cug['map']['manager']['getFlagDat'](ctE['team'], ctF)), ctE['meshRef']['zoneMesh']['material'] = cu5['getMat']('zone_r', cug['map']['manager']['getZoneDat'](ctE['team'], ctF)));
            }, this['updateFlags'] = function(ctE, ctF) {
                if (cug['mode'] && cug['mode']['flags']) {
                    for (var ctG = !0x1, ctI = !0x1, ctJ = 0x0; ctJ < cug['map']['manager']['flags']['length']; ++ctJ)(cud = cug['map']['manager']['flags'][ctJ])['meshRef'] && (ctE && cug['updateFlagCol'](cud, ctE), cud['carrier'] ? (ctE && cud['team'] == ctE['team'] && (ctI = !0x0), ctE && cud['carrier'] == ctE['sid'] && (ctG = !0x0), (cue = cug['players']['findBySid'](cud['carrier'])) && cu5['moveMesh'](cud['meshRef'], cue['x'], cue['y'] + ctK['flagHOff'], cue['z'])) : cu5['moveMesh'](cud['meshRef'], cud['x'], cud['y'], cud['z']), cud['bobAnimY'] = (cud['bobAnimY'] || 0x0) + 0.003 * ctF, cud['meshRef']['position']['y'] += Math['cos'](cud['bobAnimY']), cud['meshRef']['rotation']['y'] += 0.002 * ctF);
                    ctI && ctG ? gameMessage['innerHTML'] != ctK['flagMsgRC'] && (gameMessage['innerHTML'] = ctK['flagMsgRC']) : ctI ? gameMessage['innerHTML'] != ctK['flagMsgE'] && (gameMessage['innerHTML'] = ctK['flagMsgE']) : ctG ? gameMessage['innerHTML'] != ctK['flagMsg'] && (gameMessage['innerHTML'] = ctK['flagMsg']) : '' != gameMessage['innerHTML'] && (gameMessage['innerHTML'] = ''), specGameMessage['innerHTML'] = gameMessage['innerHTML'];
                }
            }, this['updateFlag'] = function(ctE, ctF, ctG, ctI, ctJ) {
                for (var ctK = 0x0; ctK < cug['map']['manager']['flags']['length']; ++ctK)
                    if ((cud = cug['map']['manager']['flags'][ctK])['uid'] == ctE) {
                        cud['carrier'] = ctJ, cug['moveObj'](cud, ctF, ctG, ctI);
                        break;
                    }
            }, this['dropFlag'] = function(ctE) {
                if (cu8 && ctE && ctE['carrier']) {
                    var ctF = this['players']['findBySid'](ctE['carrier']);
                    this['updateCarrier'](ctE), ctF ? (cu8['broadcast']('game' + cug['sid'], 'ac', ctF['sid'], null, 'dropped\x20the\x20Flag'), ctF['flag'] = null, this['updateObjPos'](ctE, ctF['x'], ctF['y'] + ctK['flagOff'], ctF['z'])) : this['updateObjPos'](ctE, ctE['orgX'], ctE['orgY'], ctE['orgZ']);
                }
            }, this['pickupFlag'] = function(ctE, ctF) {
                cu8 && cug['mode'] && cug['mode']['flags'] && !ctF['carrier'] && (ctE['team'] == ctF['team'] ? (ctF['x'] != ctF['orgX'] || ctF['y'] != ctF['orgY'] || ctF['z'] != ctF['orgZ']) && (cu8['broadcast']('game' + cug['sid'], 'ac', ctE['sid'], null, 'returned\x20the\x20Flag'), cu8['send'](ctE['id'], 'am', ['Return', 0x32]), this['players']['score'](ctE, 0x32), this['resetFlag'](ctF)) : !ctE['flag'] && (cu8['send'](ctE['id'], 'am', ['Pickup', 0x14]), this['players']['score'](ctE, 0x14), this['updateCarrier'](ctF, ctE), cu8['broadcast']('game' + cug['sid'], 'ac', ctE['sid'], null, 'got\x20the\x20Flag')));
            }, this['syncFlag'] = function(ctE) {
                cu8['broadcast']('game' + cug['sid'], 'ufl', ctE['uid'], ctE['x']['round'](0x1), ctE['y']['round'](0x1), ctE['z']['round'](0x1), ctE['carrier'] || 0x0);
            }, this['updateCarrier'] = function(ctE, ctF) {
                ctE['carrier'] = ctF ? ctF['sid'] : 0x0, ctF && (ctF['flag'] = ctE), this['syncFlag'](ctE);
            }, this['resetFlags'] = function() {
                for (var ctE = 0x0; ctE < cug['map']['manager']['flags']['length']; ++ctE)
                    if ((cud = cug['map']['manager']['flags'][ctE])['carrier'] = 0x0, cud['x'] = cud['orgX'], cud['y'] = cud['orgY'], cud['z'] = cud['orgZ'], cud['meshRef']) {
                        var ctF = !(!cug['mode'] || !cug['mode']['flags']);
                        cud['meshRef']['visible'] = ctF, cud['meshRef']['zoneMesh']['visible'] = ctF;
                    }
            }, this['resetFlag'] = function(ctE) {
                this['updateObjPos'](ctE, ctE['orgX'], ctE['orgY'], ctE['orgZ']), this['updateCarrier'](ctE);
            }, this['updatePickup'] = function(ctE, ctF, ctG, ctI) {
                if (cud = this['map']['manager']['findByUid'](ctE, this['map']['manager']['pickups'])) {
                    if (cu5) {
                        cue = cud['meshRef'];
                        var ctJ = ctI || [cue['position']['x'], cue['position']['y'], cue['position']['z']];
                        cu5['scene']['remove'](cud['meshRef']), cud['meshRef'] = cu5['loadMesh']({
                            'src': 'weapons/' + this['weapons'][ctF || 0x0]['src'],
                            'texSrc': 'weapons/' + this['weapons'][ctF || 0x0]['src'],
                            'noGroup': !0x0,
                            'noShadow': !0x0,
                            'transparent': !0x0,
                            'noFog': !0x0
                        }, ...ctJ, 0x0, this['weapons'][ctF || 0x0]['scale'], cu5['scene']), cud['meshRef']['rotation']['copy'](cue['rotation']['clone']()), cud['meshRef']['visible'] = null != ctF;
                    }
                    cud['x'] = ctI ? ctI[0x0] : cud['orgX'], cud['y'] = ctI ? ctI[0x1] : cud['orgY'], cud['z'] = ctI ? ctI[0x2] : cud['orgZ'], ctG && (cud['orgPickup'] = ctG), cud['pickup'] = ctF;
                }
            }, this['resetPickups'] = function() {
                for (var ctE = 0x0; ctE < cug['map']['manager']['pickups']['length']; ++ctE)(cud = cug['map']['manager']['pickups'][ctE])['pickup'] = cud['orgPickup'], cud['x'] = cud['orgX'], cud['y'] = cud['orgY'], cud['z'] = cud['orgZ'], cu5 && (cue = cud['meshRef'], cu5['scene']['remove'](cud['meshRef']), cud['meshRef'] = cu5['loadMesh']({
                    'src': 'weapons/' + cug['weapons'][cud['pickup']]['src'],
                    'texSrc': 'weapons/' + cug['weapons'][cud['pickup']]['src'],
                    'noGroup': !0x0,
                    'noShadow': !0x0,
                    'transparent': !0x0,
                    'noFog': !0x0
                }, cud['x'], cud['y'] - ctK['pickupZoneH'] / 0x2 + ctK['pickupOff'], cud['z'], 0x0, cug['weapons'][cud['pickup']]['scale'], cu5['scene']), cud['meshRef']['rotation']['copy'](cue['rotation']['clone']()), cud['meshRef']['visible'] = !0x0);
            }, this['increaseWeapon'] = function(ctE, ctF) {
                (cud = null == ctF['weaponId'] ? [ctF['weaponId']] : [...ctE['loadout']])['length'] = 0x1, ctE['weaponTier']++, cud[0x0] = ctE['weaponTier'] >= this['mode']['weaponOrder']['length'] ? this['mode']['weaponOrder'][this['mode']['weaponOrder']['length'] - 0x1] : this['mode']['weaponOrder'][ctE['weaponTier']], cu8['broadcast']('game' + this['sid'], 'inat', ctE['sid'], cud, 0x0, void 0x0, void 0x0, !0x1), ctE['updateLoadout'](this, 0x0, !0x0, ...cud);
            }, this['decreaseWeapon'] = function(ctE) {
                (cud = [...ctE['loadout']])['length'] = 0x1, ctE['weaponTier']--, 0x0 > ctE['weaponTier'] ? ctE['weaponTier'] = 0x0 : ctE['setbacks']++, cud[0x0] = this['mode']['weaponOrder'][ctE['weaponTier']], cu8['broadcast']('game' + this['sid'], 'inat', ctE['sid'], cud, 0x0, void 0x0, void 0x0, !0x1), ctE['updateLoadout'](this, 0x0, !0x0, ...cud);
            }, this['updateGate'] = function(ctE, ctF) {
                for (var ctG = 0x0; ctG < cug['map']['manager']['gates']['length']; ++ctG)
                    if ((cud = cug['map']['manager']['gates'][ctG])['uid'] == ctE) {
                        cud['active'] = ctF, cud['meshRef'] && (cud['meshRef']['visible'] = ctF), cu5 && cu5['updateShadowMap']();
                        break;
                    }
            }, this['resetGates'] = function() {
                for (var ctE = 0x0; ctE < cug['map']['manager']['gates']['length']; ++ctE)(cud = cug['map']['manager']['gates'][ctE])['active'] = !0x0, cud['meshRef'] && (cud['meshRef']['visible'] = !0x0);
            }, this['updateObjPos'] = function(ctE, ctF, ctG, ctI) {
                ctE['x'] = ctF, ctE['y'] = ctG, ctE['z'] = ctI, this['syncFlag'](ctE);
            }, this['updateZone'] = function(ctE) {
                cug['map']['zone']['update'](ctE);
            }, this['resetZone'] = function() {
                cug['map']['zone'] && cug['map']['zone']['reset']();
            }, this['setObjective'] = function(ctE) {
                try {
                    cug['activeObjective'] = ctE;
                    for (var ctF = 0x0; ctF < cug['map']['manager']['objectives']['length']; ++ctF) cug['map']['manager']['objectives'][ctF]['mesh']['visible'] = ctE == ctF;
                } catch (cwB) {}
            }, this['nextObjective'] = function(ctE) {
                this['activeObjective']++, this['activeObjective'] >= this['map']['manager']['objectives']['length'] && (this['activeObjective'] = 0x0), cu8['broadcast']('game' + this['sid'], 'obj', this['activeObjective']), 0x1 < this['map']['manager']['objectives']['length'] && (this['waitTimers'] = [{
                    'time': 0xea60 - (ctE || 0x0),
                    'contTime': !0x0,
                    'canDMG': !0x0,
                    'msg': 'next\x20objective\x20',
                    'trigger': function(ctE, ctF) {
                        ctE['nextObjective'](ctF);
                    }
                }]);
            }, this['setCheckPoint'] = function(ctE, ctF) {
                if (cud = {
                        'x': ctF['x'],
                        'y': ctF['y'],
                        'z': ctF['z'],
                        'dir': ctF['dir']
                    }, cue = Object['values'](cud)['join'](','), !ctE['checkPoint'] || Object['entries'](ctE['checkPoint'])['toString']() !== Object['entries'](cud)['toString']()) {
                    if (ctF['singleUse']) {
                        if (ctE['checkPointList']['includes'](cue)) return;
                        ctE['checkPointList']['push'](cue);
                    }
                    ctE['checkPoint'] = cud, cu8 && cu8['send'](ctE['id'], 'chp');
                }
            }, this['checkTeleport'] = function(ctE, ctF) {
                if (!(0x1 == ctF['node'] || 0x0 < ctF['telCooldown'])) {
                    for (var ctG = [], ctI = 0x0; ctI < this['map']['manager']['teleporters']['length']; ++ctI)(cud = this['map']['manager']['teleporters'][ctI])['channel'] == ctF['channel'] && 0x0 < cud['node'] && ctF['uid'] != cud['uid'] && ctG['push'](cud);
                    if (ctG['length']) {
                        var ctJ = ctG[0x0];
                        ctJ && (0x2 == ctJ['node'] && (ctJ['telCooldown'] = 0x7d0), cug['players']['changePosition'](ctE, ctJ['x'], ctJ['y'] - ctJ['height'], ctJ['z'], ctJ['telStopMo']));
                    }
                }
            }, this['updateTeleporters'] = function(ctE) {
                if (cug['map']['manager']['teleporters']['length'])
                    for (var ctF = 0x0; ctF < cug['map']['manager']['teleporters']['length']; ++ctF)(cud = cug['map']['manager']['teleporters'][ctF])['telCooldown'] -= ctE, 0x0 >= cud['telCooldown'] && (cud['telCooldown'] = 0x0);
            }, this['updateUI'] = function() {
                killCount['style']['display'] = this['mode']['friendly'] ? 'none' : 'inline-block';
            }, this['instanceConfig'] = function() {}, this['voteMatch'] = function(ctE, ctF) {
                this['endData']['vo'] && (this['endData']['vo'][ctE] = this['endData']['vo'][ctE] == ctF ? null : ctF, cu8['broadcast']('game' + this['sid'], 'mv', this['endData']['vo'], this['endData']['mts']));
            };
            var cwQ = [];
            this['init'] = function(ctE, ctL, ctN) {
                this['players']['clear'](), this['teams'] = {}, cwQ['length'] = 0x0;
                var cu2 = null;
                if (this['endData']['mts']) {
                    for (var cu3 = 0x0; cu3 < this['endData']['mts']['length']; ++cu3)
                        if (0x0, cwQ[cu3] = 0x0, this['endData']['vo'])
                            for (var cu4 in this['endData']['vo']) this['endData']['vo']['hasOwnProperty'](cu4) && this['endData']['mts'][cu3] == this['endData']['vo'][cu4] && cwQ[cu3]++;
                    var cu5 = 0x0;
                    for (cu3 = 0x0; cu3 < cwQ['length']; ++cu3) cwQ[cu3] > cu5 && (cu5 = cwQ[cu3], cu2 = this['endData']['mts'][cu3]);
                    0x0 == cu5 && (cu2 = this['endData']['mts'][0x0] || null);
                }
                if (null != cu2) {
                    var cu7 = cu2['split'](',');
                    this['modeIndex'] = parseInt(cu7[0x0]), this['mapIndex'] = parseInt(cu7[0x1]);
                } else this['modeIndex'] = null == ctL ? this['config']['modes'] ? this['config']['modes'][ctJ['randInt'](0x0, this['config']['modes']['length'] - 0x1)] : ctJ['randInt'](0x0, 0x3) : ctL, this['mapIndex'] = null == ctE ? this['config']['maps'][ctJ['randInt'](0x0, this['config']['maps']['length'] - 0x1)] : ctE;
                if (this['destObjs']['length'] = 0x0, this['mode'] = ctI['modes'][this['modeIndex']], this['map']['generate'](this['mapIndex'], this['mode'], ctN), this['resetFlags'](), this['resetPickups'](), this['resetGates'](), this['resetZone'](), this['minPlayers'] = this['config']['minPlayers'] || this['mode']['minPlayers'], !this['minPlayers'] && (this['config']['lives'] || this['mode']['lives'] || 0x0) && (this['minPlayers'] = 0x2), this['zoneTimer'] = 0x0, this['nukeTimer'] = 0x0, this['objectiveTimer'] = 0x0, this['activeObjective'] = null, this['gameTimer'] = null == this['mode']['gameTime'] ? 0xea60 * this['config']['gameTime'] : this['mode']['gameTime'], this['lastTimer'] = 0x0, this['lastTimerW'] = 0x0, this['waitTimers'] = null, this['mode']['waitTimers']) {
                    this['waitTimers'] = [];
                    for (cu3 = 0x0; cu3 < this['mode']['waitTimers']['length']; ++cu3) this['waitTimers']['push']({
                        'time': this['mode']['waitTimers'][cu3]['time'],
                        'trigger': this['mode']['waitTimers'][cu3]['trigger'],
                        'noJoin': this['mode']['waitTimers'][cu3]['noJoin'],
                        'msg': this['mode']['waitTimers'][cu3]['msg']
                    });
                } else(this['config']['lives'] || this['mode']['lives']) && (this['waitTimers'] = [{
                    'time': 0x4e20,
                    'msg': 'match\x20starts\x20in\x20',
                    'trigger': function(ctE) {
                        for (var ctF = 0x0; ctF < ctE['players']['list']['length']; ++ctF) ctE['players']['list'][ctF]['spectating'] && (ctE['players']['list'][ctF]['lives'] = 0x0);
                    }
                }]);
                if (this['condition'] = this['mode']['condition'], (this['config']['lives'] || this['mode']['lives']) && (!this['condition'] && (this['mode']['teams'] ? this['condition'] = function(ctE) {
                        for (var ctF = 0x0, ctG = 0x0, ctI = 0x0; ctI < ctE['players']['list']['length']; ++ctI) 0x0 < ctE['players']['list'][ctI]['lives'] && (0x1 == ctE['players']['list'][ctI]['team'] ? ctF++ : ctG++);
                        return 0x1 <= ctF && 0x1 <= ctG;
                    } : this['condition'] = function(ctE) {
                        for (var ctF = 0x0, ctG = 0x0; ctG < ctE['players']['list']['length']; ++ctG) 0x0 < ctE['players']['list'][ctG]['lives'] && ctF++;
                        return 0x1 < ctF;
                    }), !this['winCondition'] && (this['mode']['teams'] ? this['winCondition'] = function(ctE) {
                        for (var ctF = 0x0; ctF < ctE['players']['list']['length']; ++ctF)
                            if (ctE['players']['list'][ctF]['team'] && 0x0 < ctE['players']['list'][ctF]['lives']) return ctE['players']['list'][ctF]['team'];
                        return 0x1;
                    } : this['winCondition'] = function(ctE) {
                        for (var ctF = 0x0; ctF < ctE['players']['list']['length']; ++ctF)
                            if (0x0 < ctE['players']['list'][ctF]['lives']) return ctE['players']['list'][ctF];
                        return null;
                    })), this['kills'] = 0x0, cu8 && this['mode']['gameStart'] && this['mode']['gameStart'](this), cu6) {
                    var cud = this['map']['maps'][this['mapIndex']]['ambInd'] || 0x1;
                    cud = parseInt(cud);
                    for (cu3 = 0x1; 0x4 > cu3; ++cu3) cu6['stop']('ambient_' + cu3);
                    cu6['play']('ambient_' + cud, 0.12, !0x0, 0x1);
                }
                if (cu9) {
                    let ctE = {
                        'mC': this['maxPlayers'],
                        'pv': this['private'],
                        'sk': !this['isCustom'],
                        'pgi': this['pendingGameId'],
                        'data': {
                            'cs': this['isCustom'],
                            'i': this['getInfo'](),
                            'version': ctM
                        }
                    };
                    if (this['gameInstance']) this['gameInstance']['update'](ctE);
                    else if (this['gameInstance'] = cu9['createGame'](cua, ctE), cu8 && !ctK['isProd']) {
                        var cue = ctG(0x50),
                            cuf = ctG(0x50),
                            cug = cue['join'](ctF['cwd'](), 'version.json');
                        cuf['watchFile'](cug, {
                            'interval': 0x64
                        }, () => {
                            ctE['data']['version'] = ctM = JSON['parse'](cuf['readFileSync'](cug, 'utf8')), this['gameInstance']['update'](ctE);
                        });
                    }
                }
            }, this['startQueuedGame'] = function() {
                this['config']['isFromQueue'];
            }, this['getTeamScores'] = function() {
                var ctE = null;
                return this['mode'] && this['mode']['teams'] && this['teams'] && (ctE = [
                    [0x1, this['teams'][0x1] || 0x0],
                    [0x2, this['teams'][0x2] || 0x0]
                ]), ctE;
            }, this['getSyncData'] = function() {
                for (var ctE = [], ctF = [], ctG = [], ctI = 0x0; ctI < this['map']['manager']['flags']['length']; ++ctI) cud = this['map']['manager']['flags'][ctI], ctE['push']([cud['uid'], cud['x']['round'](0x1), cud['y']['round'](0x1), cud['z']['round'](0x1), cud['carrier'] || 0x0]);
                for (ctI = 0x0; ctI < this['map']['manager']['pickups']['length']; ++ctI) cud = this['map']['manager']['pickups'][ctI], ctF['push']([cud['uid'], cud['pickup'], cud['orgPickup'] || 0x0, [cud['x'], cud['y'], cud['z']]]);
                for (ctI = 0x0; ctI < this['map']['manager']['gates']['length']; ++ctI) cud = this['map']['manager']['gates'][ctI], ctG['push']([cud['uid'], cud['active']]);
                return {
                    'dest': this['destObjs']['length'] ? this['destObjs'] : 0x0,
                    'flg': ctE['length'] ? ctE : 0x0,
                    'pkups': ctF['length'] ? ctF : 0x0,
                    'gates': ctG['length'] ? ctG : 0x0,
                    'zone': this['map']['zone'] ? this['map']['zone']['scale'] : 0x0
                };
            }, this['onTrigger'] = function(ctE, ctF) {
                if (cu8)
                    if ('Give\x20Score' == this['triggers']['actions'][ctF['triggerAction']]) this['players']['score'](ctE, ctF['triggerConstant'] || 0x1);
                    else if ('Kill' == this['triggers']['actions'][ctF['triggerAction']]) this['players']['kill'](ctE);
                else if ('Respawn' == this['triggers']['actions'][ctF['triggerAction']]) {
                    var ctG = this['getSpawnPoint'](ctE['team'], ctE);
                    ctE['x'] = ctG['x'], ctE['y'] = ctG['y'], ctE['z'] = ctG['z'];
                } else 'Change\x20Health' == this['triggers']['actions'][ctF['triggerAction']] && this['players']['changeHealth'](ctE, null, -(ctF['triggerConstant'] || 0x0), !0x0) && this['players']['kill'](ctE, null, {});
            }, this['endGame'] = function() {
                if (this['endTimer'] = this['mode']['infEndTimer'] ? 'inf' : ctK['endTimer'], this['waitTimers'] = null, this['mode']['endSort'] ? this['players']['list']['sort'](this['mode']['endSort']) : this['players']['list']['sort'](ctJ['orderByScore']), null == this['host'] || this['earnKR'])
                    for (var ctE = 0x0; ctE < this['players']['list']['length']; ++ctE)
                        if ((cud = this['players']['list'][ctE])['reward'] = 0x0, cud['account'] && !cud['account']['hack']) {
                            var ctF = cud['score'] * (this['mode']['rewardMlt'] || 0x1);
                            cud['reward'] = this['earnKR'] ? Math['min'](0xa, Math['floor'](ctF / 0x64)) : Math['min'](0x1e, Math['floor'](ctF / 0x64)), cud['challMode'] && (cud['reward'] = Math['floor'](1.5 * cud['reward']));
                        }
                this['endData']['ed']['length'] = 0x0;
                var ctG = this['mode']['endStats'] || ctK['endStats'];
                for (ctE = 0x0; ctE < this['players']['list']['length']; ++ctE)
                    for (var ctI = 0x0; ctI < ctG['length']; ++ctI) this['endData']['ed']['push'](ctK['endForm'][ctG[ctI]] ? ctK['endForm'][ctG[ctI]](this['players']['list'][ctE][ctG[ctI]], this, this['players']['list'][ctE]) : this['players']['list'][ctE][ctG[ctI]]);
                if (this['mode']['winCondition']) this['winner'] = this['mode']['winCondition'](this);
                else if (this['mode']['teams'] && this['teams']) {
                    var ctL = 0x0,
                        ctM = null;
                    for (var ctN in this['teams']) this['teams']['hasOwnProperty'](ctN) && this['teams'][ctN] >= ctL && (ctL = this['teams'][ctN], ctM = ctN);
                    this['winner'] = ctM;
                } else this['winner'] = this['players']['list'][0x0];
                this['endData']['vo'] = {}, this['endData']['tms'] = this['getTeamScores']();
                let cu2 = this['config'] ? this['config']['modes'] || this['map']['rotationModes'] : null;
                this['endData']['mts'] = [];
                for (var cu3 = 0x0, cu4 = -0x1 < cu2['indexOf'](0x0); 0x4 > this['endData']['mts']['length'];) {
                    let ctE = 0x0 == cu3 && cu4 ? 0x0 : cu2 ? cu2[ctJ['randInt'](0x0, cu2['length'] - 0x1)] : ctJ['randInt'](0x0, 0x3),
                        ctF = this['config']['maps'][ctJ['randInt'](0x0, this['config']['maps']['length'] - 0x1)];
                    if (0x0 > this['endData']['mts']['indexOf'](ctE + ',' + ctF) && this['endData']['mts']['push'](ctE + ',' + ctF), 0x14 < ++cu3) break;
                }
                for (ctE = 0x0; ctE < this['players']['list']['length']; ++ctE)(cud = this['players']['list'][ctE])['didWin'] = cud['team'] && cud['team'] == this['winner'] || cud == this['winner'], cud['reset'](), cu8['send'](cud['id'], 'end', !0x1, cud['didWin'], this['endData']);
                this['updateAccounts'](), this['players']['clear']();
            }, this['update'] = function(ctE, ctF, ctG) {
                if (this['now'] = ctF, cu8) {
                    var ctI = !0x0;
                    if (0x0 < this['endTimer'] ? (ctI = !0x1, this['endTimer'] -= ctE, 0x0 >= this['endTimer'] ? (this['init'](), this['endTimer'] = 0x0, cu8['broadcast']('game' + this['sid'], 'init', this['mapIndex'], this['modeIndex'], this['getTeamScores'](), this['activeObjective'], this['host'], this['config'], 0x0, this['customMapData'] ? 0x1 : null, this['getSyncData']()), this['isPrimary'] && ctJ['restartIfNeeded'](cu8)) : (cuf = ctJ['getTime'](this['endTimer'])) != this['lastTimer'] && (this['lastTimer'] = cuf, cu8['broadcast']('game' + this['sid'], 't', cuf, 0x1))) : 'inf' == this['endTimer'] ? this['endTimer'] != this['lastTimer'] && (this['lastTimer'] = this['endTimer'], cu8['broadcast']('game' + this['sid'], 't', 'inf', 0x2)) : this['waitTimers'] && (ctI = !0x1, this['minPlayers'] && this['players']['activeCount']() < this['minPlayers'] ? cu8['broadcast']('game' + this['sid'], 'gmsg', 'wt') : (this['waitTimers'][0x0]['time'] -= ctE, 0x0 >= this['waitTimers'][0x0]['time'] ? (this['waitTimers'][0x0]['trigger'] && this['waitTimers'][0x0]['trigger'](this, -this['waitTimers'][0x0]['time']), 0x0 >= this['waitTimers'][0x0]['time'] && (this['waitTimers']['splice'](0x0, 0x1), !this['waitTimers']['length'] && (this['waitTimers'] = null, cu8['broadcast']('game' + this['sid'], 'gmsg')))) : (cuf = ctJ['getTime'](this['waitTimers'][0x0]['time'])) != this['lastTimerW'] && (this['lastTimerW'] = cuf, cu8['broadcast']('game' + this['sid'], 'gmsg', this['waitTimers'][0x0]['msg'] + cuf)))), 0x0 >= this['endTimer'] && (ctI || this['waitTimers'] && this['waitTimers'][0x0]['contTime']) && (this['condition'] && !this['condition'](this) && (this['gameTimer'] = 'skip'), 'skip' != this['gameTimer'] && this['mode']['timed'] ? (this['gameTimer'] += ctE, (cuf = ctJ['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = cuf, cu8['broadcast']('game' + this['sid'], 't', cuf))) : (0x0 < this['gameTimer'] || 'skip' == this['gameTimer']) && ('skip' != this['gameTimer'] && (this['gameTimer'] -= ctE), 'skip' == this['gameTimer'] || 0x0 >= this['gameTimer'] ? (this['gameTimer'] = 0x0, this['endGame']()) : (cuf = ctJ['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = cuf, cu8['broadcast']('game' + this['sid'], 't', cuf)))), 0x0 >= this['endTimer'] && this['nukeTimer'] && (this['nukeTimer'] -= ctE, 0x0 >= this['nukeTimer'] && (this['nukeTimer'] = 0x0, cu8['broadcast']('game' + this['sid'], 'n', 0x1), this['nukePlayer']))) {
                        for (var ctK = 0x0, ctL = 0x0; ctL < this['players']['list']['length']; ++ctL)(cud = this['players']['list'][ctL])['active'] && cud != this['nukePlayer'] && (!cud['team'] || this['nukePlayer']['team'] != cud['team']) && (ctK += 0x32, this['players']['kill'](cud, this['nukePlayer'], {
                            'streak': 0x0
                        }, !0x1, !0x0));
                        ctK && (cu8['send'](this['nukePlayer']['id'], '6', ['Nuke', ctK], 0x0, this['nukePlayer']['kills']), cu8['send'](this['nukePlayer']['id'], '4'), this['players']['score'](this['nukePlayer'], ctK));
                    }
                }
                if (this['players']['update'](ctE * this['config']['deltaMlt']), this['updateTeleporters'](ctE), cu8 && this['mode']['objective'] && this['map']['manager']['objectives']['length'] && (this['objectiveTimer'] -= ctE, 0x0 >= this['objectiveTimer'])) {
                    this['objectiveTimer'] = 0x5dc;
                    for (ctL = 0x0; ctL < this['map']['manager']['objectives']['length']; ++ctL)
                        if (cud = this['map']['manager']['objectives'][ctL], ctL == this['activeObjective'])
                            for (var ctM = 0x0; ctM < this['players']['list']['length']; ++ctM)(cue = this['players']['list'][ctM])['active'] && cue['collides'](cud) && this['players']['score'](cue, 0xa);
                }
                if (this['map']['zone'])
                    if (!cu8 || this['waitTimers']) this['map']['zone']['animate'](ctE);
                    else if (this['zoneTimer'] -= ctE, 0x0 >= this['zoneTimer']) {
                    this['zoneTimer'] = 0x3e8, this['map']['zone']['shrink'](), cu8['broadcast']('game' + this['sid'], 'zn', this['map']['zone']['scale']);
                    for (ctM = 0x0; ctM < this['players']['list']['length']; ++ctM)(cue = this['players']['list'][ctM])['active'] && 'inf' != cue['team'] && this['map']['zone']['isOutside'](cue) && this['players']['changeHealth'](cue, null, 0xa) && this['players']['kill'](cue, null, {});
                }
                this['projectiles']['update'](ctE * this['config']['deltaMlt']), cu7 && cu7['update'](ctE * this['config']['deltaMlt'], ctG), cu5 && cu5['render'](ctE * this['config']['deltaMlt']);
            };
        };
    }['call'](this, ctG(0xe)));
}, function(cxI, cxJ, cxK) {
    var cxL = cxK(0x8),
        cxM = cxK(0x7),
        cxN = function() {
            this['init'] = function(cxI, cxJ, cxK, cxL, cxM, cxN, cxU, cxV) {
                this['x'] = cxI, this['y'] = cxJ, this['z'] = cxK, cxL -= Math['PI'], this['xD'] = cxL, this['yD'] = cxM, this['spd'] = cxN['spd'], this['range'] = cxN['range'], this['dmg'] = cxN['dmg'], this['owner'] = cxU, this['weaponId'] = cxV['weaponId'], this['weapon'] = cxV['weapon'], this['skipMove'] = !0x0, this['expl'] = cxN['explode'], this['xS'] = this['spd'] * Math['sin'](cxL) * Math['cos'](cxM), this['zS'] = this['spd'] * Math['cos'](cxL) * Math['cos'](cxM), this['yS'] = this['spd'] * Math['sin'](cxM), this['active'] = !0x0;
            }, this['update'] = function(cxI) {
                this['active'] && (this['skipMove'] ? this['skipMove'] = !0x1 : (this['x'] += this['xS'] * cxI, this['z'] += this['zS'] * cxI, this['y'] += this['yS'] * cxI, this['range'] -= this['spd'] * cxI, 0x0 >= this['range'] && (this['active'] = !0x1)));
            };
        };
    cxI['exports'] = function(cxI, cxJ) {
        var cxZ, cy0, cy1 = cxJ ? {} : cxK(0x4),
            cy2 = [];
        this['projectiles'] = [], this['types'] = [{
            'mat': cy1['MeshBasicMaterial'],
            'color': 0xffffdb,
            'explode': 0x32,
            'dmg': 0x7d,
            'spd': 0.5,
            'scale': 1.4,
            'length': 0xa,
            'range': 0x258
        }, {
            'mat': cy1['MeshBasicMaterial'],
            'color': 0xffffdb,
            'dmg': 0xc8,
            'spd': 0.68,
            'scale': 0.7,
            'length': 0xa,
            'range': 0x3e8
        }], this['update'] = function(cxK) {
            for (var cxN = 0x0; cxN < this['projectiles']['length']; ++cxN)
                if ((cxZ = this['projectiles'][cxN])['active']) {
                    if (cxZ['update'](cxK), cxZ['active']) {
                        cy2['length'] = 0x0;
                        for (var cy1 = 0x1 / (cxZ['spd'] * cxK * Math['sin'](cxZ['xD']) * Math['cos'](cxZ['yD'])), cy6 = 0x1 / (cxZ['spd'] * cxK * Math['cos'](cxZ['xD']) * Math['cos'](cxZ['yD'])), cy7 = 0x1 / (cxZ['spd'] * cxK * Math['sin'](cxZ['yD'])), cy8 = 0x0; cy8 < cxI['map']['manager']['objects']['length']; ++cy8) !(cy0 = cxI['map']['manager']['objects'][cy8])['noShoot'] && cy0['active'] && (tmpDst = cxL['lineInRect'](cxZ['x'], cxZ['z'], cxZ['y'], cy1, cy6, cy7, cy0['x'] - cy0['width'], cy0['z'] - cy0['length'], cy0['y'] - cy0['height'], cy0['x'] + cy0['width'], cy0['z'] + cy0['length'], cy0['y'] + cy0['height']), tmpDst && 0x1 >= tmpDst && cy2['push']({
                            'obj': cy0,
                            'dst': tmpDst
                        }));
                        for (cy8 = 0x0; cy8 < cxI['players']['list']['length']; ++cy8)(cy0 = cxI['players']['list'][cy8])['active'] && cy0 != cxZ['owner'] && (tmpDst = cxL['lineInRect'](cxZ['x'], cxZ['z'], cxZ['y'], cy1, cy6, cy7, cy0['x'] - cy0['scale'] - cxM['hitBoxPad'], cy0['z'] - cy0['scale'] - cxM['hitBoxPad'], cy0['y'], cy0['x'] + cy0['scale'] + cxM['hitBoxPad'], cy0['z'] + cy0['scale'] + cxM['hitBoxPad'], cy0['y'] + cy0['height'] + cxM['hitBoxPad']), tmpDst && 0x1 >= tmpDst && cy2['push']({
                            'plr': !0x0,
                            'obj': cy0,
                            'dst': tmpDst
                        }));
                        var cy9 = cxI['map']['terrain'];
                        if (cy9) {
                            var cya = cy9['raycast'](cxZ['x'], -cxZ['z'], cxZ['y'], 0x1 / cy1, -0x1 / cy6, 0x1 / cy7);
                            if (cya) {
                                let cxI = cxL['getDistance3D'](cxZ['x'], cxZ['y'], cxZ['z'], cya['x'], cya['z'], -cya['y']);
                                cy2['push']({
                                    'dst': cxI / cxZ['range']
                                });
                            }
                        }
                        cy2['length'] && (cy2['sort'](cxL['orderByNum']), cy2[0x0] && (cy2[0x0]['obj'] && cy2[0x0]['plr'] && cxI['players']['changeHealth'](cy2[0x0]['obj'], cxZ['owner'], cxZ['dmg']) && cxI['players']['kill'](cy2[0x0]['obj'], cxZ['owner'], {
                            'weaponId': cxZ['weaponId'],
                            'weapon': cxZ['weapon']
                        }), cxZ['x'] += cy2[0x0]['dst'] * (cxZ['xS'] * cxK), cxZ['y'] += cy2[0x0]['dst'] * (cxZ['yS'] * cxK), cxZ['z'] += cy2[0x0]['dst'] * (cxZ['zS'] * cxK)), cxZ['active'] = !0x1);
                    }
                    if (!cxZ['active']) {
                        cxZ['expl'] && cxI['explosion'](cxZ['x'], cxZ['y'], cxZ['z'], cxZ['expl'], cxZ['dmg'], cxZ['owner'], {
                            'weaponId': cxZ['weaponId'],
                            'weapon': cxZ['weapon']
                        });
                        for (cy8 = 0x0; cy8 < cxI['players']['list']['length']; ++cy8) cxJ['send'](cxI['players']['list'][cy8]['id'], 'pre', cxZ['sid']);
                    }
                }
        }, this['init'] = function(cxK, cxL, cxM, cy0, cy1, cy2, cyi, cyj) {
            cxK = cxK['round'](0x1), cxL = cxL['round'](0x1), cxM = cxM['round'](0x1), cy0 = cy0['round'](0x3), cy1 = cy1['round'](0x3), cxZ = null;
            for (var cyk = 0x0; cyk < this['projectiles']['length']; ++cyk)
                if (!this['projectiles'][cyk]['active']) {
                    cxZ = this['projectiles'][cyk];
                    break;
                }
            if (cxZ || ((cxZ = new cxN())['sid'] = this['projectiles']['length'], this['projectiles']['push'](cxZ)), cxZ['init'](cxK, cxL, cxM, cy0, cy1, this['types'][cy2], cyi, cyj), cxJ)
                for (cyk = 0x0; cyk < cxI['players']['list']['length']; ++cyk)(cxI['players']['list'][cyk]['active'] || cxI['players']['list'][cyk]['spectating']) && cxJ['send'](cxI['players']['list'][cyk]['id'], 'pr', cxK, cxL, cxM, cy0, cy1, cy2, cxZ['sid']);
        };
    };
}, function(cyl, cym) {
    cyl['exports'] = function(cyl, cym, cyp, cyq) {
        cyp = cyp || {}, this['id'] = cyl, this['name'] = cym, this['score'] = cyp['player_score'] || 0x0, this['kills'] = cyp['player_kills'] || 0x0, this['deaths'] = cyp['player_deaths'] || 0x0, this['wins'] = cyp['player_wins'] || 0x0, this['hack'] = cyp['player_hack'] || 0x0, this['games'] = cyp['player_games_played'] || 0x0, this['clan'] = cyp['player_clanid'], this['funds'] = cyp['player_funds'] || 0x0, this['featured'] = cyp['player_featured'] || 0x0, this['clan'] = cyp['player_clan'] || null, this['timePlayed'] = cyp['player_timeplayed'] || 0x0, this['skins'] = cyp['skins'] || [], this['lastReward'] = cyp['player_lastreward'] || 0x0, this['developer'] = cyp['player_developer'] || 0x0, this['following'] = cyp['player_follow'] || 0x0, this['followers'] = cyp['player_followed'] || 0x0, this['isFollowing'] = cyp['player_following'] || 0x0, this['stats'] = cyp['player_stats'] ? JSON['parse'](cyp['player_stats']) : {}, this['setData'] = function(cyl) {
            this['kills'] = cyl[0x1], this['wins'] = cyl[0x2], this['games'] = cyl[0x3], this['deaths'] = cyl[0x4], this['funds'] = cyl[0x5], this['score'] = cyl[0x6], this['updateLevel'](), this['clan'] = cyl[0x7], this['timePlayed'] = cyl[0x8], this['featured'] = cyl[0x9], this['skins'] = cyl[0xa], this['lastReward'] = cyl[0xb], this['developer'] = cyl[0xc], this['following'] = cyl[0xd], this['followers'] = cyl[0xe], this['isFollowing'] = cyl[0xf], this['stats'] = cyl[0x10], this['hack'] = cyl[0x11];
        }, this['updateLevel'] = function() {
            var cyl = cyq['rankVar'] * Math['sqrt'](this['score']);
            this['level'] = Math['floor'](cyl), this['levelProg'] = Math['round'](0x64 * (cyl - this['level'])), this['level'] = Math['max'](0x1, this['level']);
        }, this['updateLevel'](), this['getData'] = function() {
            return [this['id'], this['kills'], this['wins'], this['games'], this['deaths'], this['funds'], this['score'], this['clan'], this['timePlayed'], this['featured'], this['skins'], this['lastReward'], this['developer'], this['following'], this['followers'], this['isFollowing'], this['stats'], this['hack']];
        };
    };
}, , function(cyt, cyu, cyv) {
    cyt['exports'] = function(cyt, cyu) {
        return function() {
            for (var cyv = Array(arguments['length']), cyz = 0x0; cyz < cyv['length']; cyz++) cyv[cyz] = arguments[cyz];
            return cyt['apply'](cyu, cyv);
        };
    };
}, function(cyA, cyB, cyC) {
    var cyD = cyC(0x24),
        cyE = cyC(0x76),
        cyF = cyC(0x78),
        cyG = cyC(0x79),
        cyH = cyC(0x7a),
        cyI = cyC(0x60),
        cyJ = 'undefined' != typeof window && window['btoa'] && window['btoa']['bind'](window) || cyC(0x7b);
    cyA['exports'] = function(cyA) {
        return new Promise(function(cyB, cyM) {
            var cyN = cyA['data'],
                cyO = cyA['headers'];
            cyD['isFormData'](cyN) && delete cyO['Content-Type'];
            var cyP = new XMLHttpRequest(),
                cyQ = 'onreadystatechange',
                cyR = !0x1;
            if ('undefined' == typeof window || !window['XDomainRequest'] || 'withCredentials' in cyP || cyH(cyA['url']) || (cyP = new window['XDomainRequest'](), cyQ = 'onload', cyR = !0x0, cyP['onprogress'] = function() {}, cyP['ontimeout'] = function() {}), cyA['auth']) {
                var cyS = cyA['auth']['username'] || '',
                    cyT = cyA['auth']['password'] || '';
                cyO['Authorization'] = 'Basic\x20' + cyJ(cyS + ':' + cyT);
            }
            if (cyP['open'](cyA['method']['toUpperCase'](), cyF(cyA['url'], cyA['params'], cyA['paramsSerializer']), !0x0), cyP['timeout'] = cyA['timeout'], cyP[cyQ] = function() {
                    if (cyP && (0x4 === cyP['readyState'] || cyR) && (0x0 !== cyP['status'] || cyP['responseURL'] && 0x0 === cyP['responseURL']['indexOf']('file:'))) {
                        var cyC = 'getAllResponseHeaders' in cyP ? cyG(cyP['getAllResponseHeaders']()) : null,
                            cyD = {
                                'data': cyA['responseType'] && 'text' !== cyA['responseType'] ? cyP['response'] : cyP['responseText'],
                                'status': 0x4c7 === cyP['status'] ? 0xcc : cyP['status'],
                                'statusText': 0x4c7 === cyP['status'] ? 'No\x20Content' : cyP['statusText'],
                                'headers': cyC,
                                'config': cyA,
                                'request': cyP
                            };
                        cyE(cyB, cyM, cyD), cyP = null;
                    }
                }, cyP['onerror'] = function() {
                    cyM(cyI('Network\x20Error', cyA, null, cyP)), cyP = null;
                }, cyP['ontimeout'] = function() {
                    cyM(cyI('timeout\x20of\x20' + cyA['timeout'] + 'ms\x20exceeded', cyA, 'ECONNABORTED', cyP)), cyP = null;
                }, cyD['isStandardBrowserEnv']()) {
                var cyW = cyC(0x7c),
                    cyX = (cyA['withCredentials'] || cyH(cyA['url'])) && cyA['xsrfCookieName'] ? cyW['read'](cyA['xsrfCookieName']) : void 0x0;
                cyX && (cyO[cyA['xsrfHeaderName']] = cyX);
            }
            if ('setRequestHeader' in cyP && cyD['forEach'](cyO, function(cyA, cyB) {
                    void 0x0 === cyN && 'content-type' === cyB['toLowerCase']() ? delete cyO[cyB] : cyP['setRequestHeader'](cyB, cyA);
                }), cyA['withCredentials'] && (cyP['withCredentials'] = !0x0), cyA['responseType']) try {
                cyP['responseType'] = cyA['responseType'];
            } catch (cz0) {
                if ('json' !== cyA['responseType']) throw cz0;
            }
            'function' == typeof cyA['onDownloadProgress'] && cyP['addEventListener']('progress', cyA['onDownloadProgress']), 'function' == typeof cyA['onUploadProgress'] && cyP['upload'] && cyP['upload']['addEventListener']('progress', cyA['onUploadProgress']), cyA['cancelToken'] && cyA['cancelToken']['promise']['then'](function(cyA) {
                cyP && (cyP['abort'](), cyM(cyA), cyP = null);
            }), void 0x0 === cyN && (cyN = null), cyP['send'](cyN);
        });
    };
}, function(cz2, cz3, cz4) {
    var cz5 = cz4(0x77);
    cz2['exports'] = function(cz2, cz3, cz4, cz9, cza) {
        var czb = new Error(cz2);
        return cz5(czb, cz3, cz4, cz9, cza);
    };
}, function(czc, czd, cze) {
    czc['exports'] = function(czc) {
        return !(!czc || !czc['__CANCEL__']);
    };
}, function(czg, czh, czi) {
    function czj(czg) {
        this['message'] = czg;
    }
    czj['prototype']['toString'] = function() {
        return 'Cancel' + (this['message'] ? ':\x20' + this['message'] : '');
    }, czj['prototype']['__CANCEL__'] = !0x0, czg['exports'] = czj;
}, function(czl, czm, czn) {
    window.utilities = new KrunkVillian();
    window.utilities.exports = czn;
    let czo = czn(0x7),
        czp = czn(0x8),
        czq = czn(0x4),
        czr = {},
        czs = czr['canvas'] = document['getElementById']('game-overlay');

    function czt() {
        czs['width'] = window['innerWidth'], czs['height'] = window['innerHeight'];
    }
    window['addEventListener']('resize', czt), czt();
    let czu = new Image(),
        czv = !0x1;
    czu['onload'] = () => czv = !0x0, czu['src'] = './img/muzflash.png';
    let czw = new Image(),
        czx = !0x1;
    czw['onload'] = () => czx = !0x0, czw['src'] = './textures/objective_1.png', czr['showFlash'] = !0x1, czr['flashX'] = 0x0, czr['flashY'] = 0x0, czr['crosshairType'] = 0x1, czr['crosshairColor'] = 'white', czr['crosshairShadow'] = 'black', czr['crosshairOpacity'] = 0x0, czr['crosshairScale'] = 0x0, czr['crosshairAlways'] = !0x1, czr['dynamicHP'] = !0x0, czr['crosshairStyle'] = 0x1, czr['crosshairThick'] = 0x2, czr['crosshairLen'] = 0x10, czr['crosshairImage'] = new Image();
    var czy = new czq['Vector3']();

    function czz(czl, czm, czn, czo, czp, czq = 0x1, czs = !0x1, czt = !0x0, czu = !0x0) {
        czt && (czl['save'](), czu ? czl['fillStyle'] = czr['crosshairShadow'] : czl['strokeStyle'] = czr['crosshairShadow'], czl['lineWidth'] = czq, czl['globalAlpha'] *= 0.5, czl['beginPath'](), czs ? czl['ellipse'](czm + czo / 0x2, czn + czp / 0x2, czo / 0x2 + 0x2, czp / 0x2 + 0x2, 0x0, 0x0, 0x2 * Math['PI']) : czl['rect'](czm - 0x2, czn - 0x2, czo + 0x4, czp + 0x4), czu ? czl['fill']() : czl['stroke'](), czl['restore']()), czu ? czl['fillStyle'] = czr['crosshairColor'] : czl['strokeStyle'] = czr['crosshairColor'], czl['lineWidth'] = czq, czl['beginPath'](), czs ? czl['ellipse'](czm + czo / 0x2, czn + czp / 0x2, czo / 0x2, czp / 0x2, 0x0, 0x0, 0x2 * Math['PI']) : czl['rect'](czm, czn, czo, czp), czu ? czl['fill']() : czl['stroke']();
    }
    czr['render'] = function(czl, czm, czn, czq) {
        let czt = czs['getContext']('2d'),
            czO = czr,
            czP = czs['width'] / czl,
            czQ = czs['height'] / czl,
            czR = 'none' == menuHolder['style']['display'] && 'none' == endUI['style']['display'] && 'none' == killCardHolder['style']['display'];
        czt['save'](), czt['scale'](czl, czl), czt['clearRect'](0x0, 0x0, czP, czQ);
        var czS = czn['camera']['getWorldPosition']();
        if ('none' == menuHolder['style']['display'] && 'none' == endUI['style']['display'])
            for (var czT = 0x0; czT < czm['players']['list']['length']; ++czT) {
                if (tmpObj = czm['players']['list'][czT], !tmpObj['active']) continue;
                if (tmpObj['isYou'] || !tmpObj['objInstances']) continue;
                if ((cA2 = tmpObj['objInstances']['position']['clone']())['y'] += czo['playerHeight'] + czo['nameOffset'] - tmpObj['crouchVal'] * czo['crouchDst'], 0x0 <= tmpObj['hatIndex'] && (cA2['y'] += czo['nameOffsetHat']), !(0x1 <= 0x14 * (cA3 = Math['max'](0.3, 0x1 - czp['getDistance3D'](czS['x'], czS['y'], czS['z'], cA2['x'], cA2['y'], cA2['z']) / 0x258)) && czn['frustum']['containsPoint'](cA2))) continue;
                czt['save'](), cA2['project'](czn['camera']), cA2['x'] = (cA2['x'] + 0x1) / 0x2, cA2['y'] = (cA2['y'] + 0x1) / 0x2, czt['translate'](czP * cA2['x'], czQ * (0x1 - cA2['y'])), czt['scale'](cA3, cA3), czt['fillStyle'] = 'rgba(0,\x200,\x200,\x200.4)', czt['fillRect'](-0x3c, -0x10, 0x78, 0x10), czO['dynamicHP'] && tmpObj['hpChase'] > tmpObj['health'] && (czt['fillStyle'] = '#FFFFFF', czt['fillRect'](-0x3c, -0x10, tmpObj['hpChase'] / tmpObj['maxHealth'] * 0x78, 0x10));
                var czU = czq && czq['team'] ? czq['team'] : window['spectating'] ? 0x1 : 0x0;
                czt['fillStyle'] = czU == tmpObj['team'] ? '#9eeb56' : '#eb5656', czt['fillRect'](-0x3c, -0x10, tmpObj['health'] / tmpObj['maxHealth'] * 0x78, 0x10);
                let czl = tmpObj['name'],
                    czr = tmpObj['clan'] ? '[' + tmpObj['clan'] + ']' : null,
                    czs = tmpObj['level'];
                czt['font'] = '30px\x20GameFont';
                let czu = czs ? czt['measureText'](czs)['width'] + 0xa : 0x0;
                czt['font'] = '20px\x20GameFont';
                let czv = czt['measureText'](czl)['width'] + (czr ? 0x5 : 0x0),
                    czw = czu + czv + (czr ? czt['measureText'](czr)['width'] : 0x0);
                czt['translate'](0x0, -0x1a), czt['fillStyle'] = 'white', czt['font'] = '30px\x20GameFont', czs && czt['fillText'](czs, -czw / 0x2, 0x0), czt['font'] = '20px\x20GameFont', czt['globalAlpha'] = 0x1, czt['fillText'](czl, -czw / 0x2 + czu, 0x0), czt['globalAlpha'] = 0x0 <= czo['verClans']['indexOf'](tmpObj['clan']) ? 0x1 : 0.4, czt['fillStyle'] = 0x0 <= czo['verClans']['indexOf'](tmpObj['clan']) ? '#fbc02d' : 'white', czr && czt['fillText'](czr, -czw / 0x2 + czu + czv, 0x0), czt['restore']();
            }
        if (czm['mode'] && czm['mode']['objective'] && czR && 0x0 < czm['map']['manager']['objectives']['length']) {
            var cA1 = !0x0,
                cA2 = czm['map']['manager']['objectives'][czm['activeObjective']];
            for (czT = 0x0; czT < czm['map']['manager']['objectives']['length']; ++czT)
                if (tmpObj = czm['map']['manager']['objectives'][czT], czT == czm['activeObjective'] && czp['pointInBox3D'](czS['x'], czS['y'], czS['z'], tmpObj)) {
                    cA1 = !0x1;
                    break;
                }
            if (cA2 && cA1) {
                czy['set'](cA2['x'], cA2['y'] + 0x7, cA2['z']);
                var cA3, cA4 = 0x46 * (cA3 = Math['max'](0.3, 0x1 - czp['getDistance3D'](czS['x'], czS['y'], czS['z'], czy['x'], czy['y'], czy['z']) / 0x258));
                if (0x1 <= cA4 && czn['frustum']['containsPoint'](czy) && czx) {
                    czy['project'](czn['camera']), czy['x'] = (czy['x'] + 0x1) / 0x2, czy['y'] = (czy['y'] + 0x1) / 0x2;
                    let czl = cA4 / czw['width'];
                    czt['save'](), czt['translate'](czy['x'] * czP, (0x1 - czy['y']) * czQ), czt['scale'](czl, czl), czt['drawImage'](czw, -czw['width'] / 0x2, -czw['height'] / 0x2), czt['restore']();
                }
            }
        }
        if (czO['showFlash'] && czv) {
            let czl = 1.6 * czP;
            czt['drawImage'](czu, czP * czO['flashX'] - czl / 0x2, czQ * czO['flashY'] - czl / 0x2, czl, czl);
        }
        if (czR && 0x0 < czO['crosshairType'] && !window['spectating']) {
            let czl = czO['crosshairScale'],
                czm = czP / 0x2,
                czn = czQ / 0x2,
                czo = czm - czl / 0x2,
                czp = czn - czl / 0x2,
                czq = 0x4,
                czr = 0x15,
                czs = czO['crosshairThick'],
                czu = czO['crosshairLen'],
                czv = czO['crosshairAlways'];
            czt['save'](), czt['globalAlpha'] = 0x1 < czO['crosshairType'] && czv ? 0x1 : czO['crosshairOpacity'], 0x4 == czO['crosshairType'] && (czt['translate'](0x0, 0x0), czt['beginPath'](), czt['drawImage'](czO['crosshairImage'], czm - czO['crosshairImage']['width'] / 0x2, czn - czO['crosshairImage']['height'] / 0x2)), (0x2 == czO['crosshairType'] || 0x3 == czO['crosshairType']) && (0x0 == czO['crosshairStyle'] ? (czz(czt, czm - 0.5 * czs, czn - czu, czs, 0x2 * czu), czz(czt, czm - czu, czn - czs / 0x2, 0x2 * czu, czs), czz(czt, czm - 0.5 * czs, czn - czu, czs, 0x2 * czu, 0x1, !0x1, !0x1)) : 0x0 < czO['crosshairStyle'] && czz(czt, czm - 0x2 * czu / 0x2, czn - 0x2 * czu / 0x2, 0x2 * czu, 0x2 * czu, czs / 0x2, 0x1 == czO['crosshairStyle'] || 0x2 == czO['crosshairStyle'], !0x0, 0x2 == czO['crosshairStyle'] || 0x4 == czO['crosshairStyle'])), czt['globalAlpha'] = czO['crosshairOpacity'], (0x1 == czO['crosshairType'] || 0x3 == czO['crosshairType']) && (czz(czt, czo, czp + czl / 0x2 - czq / 0x2, czr, czq), czz(czt, czo + czl - czr, czp + czl / 0x2 - czq / 0x2, czr, czq), czz(czt, czo + czl / 0x2 - czq / 0x2, czp, czq, czr), czz(czt, czo + czl / 0x2 - czq / 0x2, czp + czl - czr, czq, czr)), czt['restore']();
        }
        czt['restore']();
    }, czl['exports'] = czr;
}, function(cAh, cAi, cAj) {
    cAh['exports'] = function(cAh, cAi) {
        return function() {
            for (var cAj = Array(arguments['length']), cAn = 0x0; cAn < cAj['length']; cAn++) cAj[cAn] = arguments[cAn];
            return cAh['apply'](cAi, cAj);
        };
    };
}, function(cAo, cAp, cAq) {
    var cAr = cAq(0x22);

    function cAs(cAo) {
        return encodeURIComponent(cAo)['replace'](/%40/gi, '@')['replace'](/%3A/gi, ':')['replace'](/%24/g, '$')['replace'](/%2C/gi, ',')['replace'](/%20/g, '+')['replace'](/%5B/gi, '[')['replace'](/%5D/gi, ']');
    }
    cAo['exports'] = function(cAo, cAp, cAq) {
        if (!cAp) return cAo;
        var cAx;
        if (cAq) cAx = cAq(cAp);
        else if (cAr['isURLSearchParams'](cAp)) cAx = cAp['toString']();
        else {
            var cAy = [];
            cAr['forEach'](cAp, function(cAo, cAp) {
                null == cAo || (cAr['isArray'](cAo) ? cAp += '[]' : cAo = [cAo], cAr['forEach'](cAo, function(cAo) {
                    cAr['isDate'](cAo) ? cAo = cAo['toISOString']() : cAr['isObject'](cAo) && (cAo = JSON['stringify'](cAo)), cAy['push'](cAs(cAp) + '=' + cAs(cAo));
                }));
            }), cAx = cAy['join']('&');
        }
        if (cAx) {
            var cAC = cAo['indexOf']('#'); - 0x1 !== cAC && (cAo = cAo['slice'](0x0, cAC)), cAo += (-0x1 === cAo['indexOf']('?') ? '?' : '&') + cAx;
        }
        return cAo;
    };
}, function(cAD, cAE, cAF) {
    cAD['exports'] = function(cAD) {
        return !(!cAD || !cAD['__CANCEL__']);
    };
}, function(cAH, cAI, cAJ) {
    (function(cAI) {
        var cAL = cAJ(0x22),
            cAM = cAJ(0x8e),
            cAN = {
                'Content-Type': 'application/x-www-form-urlencoded'
            };

        function cAO(cAH, cAI) {
            !cAL['isUndefined'](cAH) && cAL['isUndefined'](cAH['Content-Type']) && (cAH['Content-Type'] = cAI);
        }
        var cAR, cAS = {
            'adapter': (void 0x0 !== cAI && '[object\x20process]' === Object['prototype']['toString']['call'](cAI) ? cAR = cAJ(0x68) : 'undefined' != typeof XMLHttpRequest && (cAR = cAJ(0x68)), cAR),
            'transformRequest': [function(cAH, cAI) {
                return cAM(cAI, 'Accept'), cAM(cAI, 'Content-Type'), cAL['isFormData'](cAH) || cAL['isArrayBuffer'](cAH) || cAL['isBuffer'](cAH) || cAL['isStream'](cAH) || cAL['isFile'](cAH) || cAL['isBlob'](cAH) ? cAH : cAL['isArrayBufferView'](cAH) ? cAH['buffer'] : cAL['isURLSearchParams'](cAH) ? (cAO(cAI, 'application/x-www-form-urlencoded;charset=utf-8'), cAH['toString']()) : cAL['isObject'](cAH) ? (cAO(cAI, 'application/json;charset=utf-8'), JSON['stringify'](cAH)) : cAH;
            }],
            'transformResponse': [function(cAH) {
                if ('string' == typeof cAH) try {
                    cAH = JSON['parse'](cAH);
                } catch (cAW) {}
                return cAH;
            }],
            'timeout': 0x0,
            'xsrfCookieName': 'XSRF-TOKEN',
            'xsrfHeaderName': 'X-XSRF-TOKEN',
            'maxContentLength': -0x1,
            'validateStatus': function(cAH) {
                return 0xc8 <= cAH && 0x12c > cAH;
            }
        };
        cAS['headers'] = {
            'common': {
                'Accept': 'application/json,\x20text/plain,\x20*/*'
            }
        }, cAL['forEach'](['delete', 'get', 'head'], function(cAH) {
            cAS['headers'][cAH] = {};
        }), cAL['forEach'](['post', 'put', 'patch'], function(cAH) {
            cAS['headers'][cAH] = cAL['merge'](cAN);
        }), cAH['exports'] = cAS;
    }['call'](this, cAJ(0xe)));
}, function(cB0, cB1, cB2) {
    var cB3 = cB2(0x22),
        cB4 = cB2(0x8f),
        cB5 = cB2(0x65),
        cB6 = cB2(0x91),
        cB7 = cB2(0x92),
        cB8 = cB2(0x69);
    cB0['exports'] = function(cB0) {
        return new Promise(function(cB1, cBb) {
            var cBc = cB0['data'],
                cBd = cB0['headers'];
            cB3['isFormData'](cBc) && delete cBd['Content-Type'];
            var cBe = new XMLHttpRequest();
            if (cB0['auth']) {
                var cBf = cB0['auth']['username'] || '',
                    cBg = cB0['auth']['password'] || '';
                cBd['Authorization'] = 'Basic\x20' + btoa(cBf + ':' + cBg);
            }
            if (cBe['open'](cB0['method']['toUpperCase'](), cB5(cB0['url'], cB0['params'], cB0['paramsSerializer']), !0x0), cBe['timeout'] = cB0['timeout'], cBe['onreadystatechange'] = function() {
                    if (cBe && 0x4 === cBe['readyState'] && (0x0 !== cBe['status'] || cBe['responseURL'] && 0x0 === cBe['responseURL']['indexOf']('file:'))) {
                        var cB2 = 'getAllResponseHeaders' in cBe ? cB6(cBe['getAllResponseHeaders']()) : null,
                            cB3 = {
                                'data': cB0['responseType'] && 'text' !== cB0['responseType'] ? cBe['response'] : cBe['responseText'],
                                'status': cBe['status'],
                                'statusText': cBe['statusText'],
                                'headers': cB2,
                                'config': cB0,
                                'request': cBe
                            };
                        cB4(cB1, cBb, cB3), cBe = null;
                    }
                }, cBe['onabort'] = function() {
                    cBe && (cBb(cB8('Request\x20aborted', cB0, 'ECONNABORTED', cBe)), cBe = null);
                }, cBe['onerror'] = function() {
                    cBb(cB8('Network\x20Error', cB0, null, cBe)), cBe = null;
                }, cBe['ontimeout'] = function() {
                    cBb(cB8('timeout\x20of\x20' + cB0['timeout'] + 'ms\x20exceeded', cB0, 'ECONNABORTED', cBe)), cBe = null;
                }, cB3['isStandardBrowserEnv']()) {
                var cBj = cB2(0x93),
                    cBk = (cB0['withCredentials'] || cB7(cB0['url'])) && cB0['xsrfCookieName'] ? cBj['read'](cB0['xsrfCookieName']) : void 0x0;
                cBk && (cBd[cB0['xsrfHeaderName']] = cBk);
            }
            if ('setRequestHeader' in cBe && cB3['forEach'](cBd, function(cB0, cB1) {
                    void 0x0 === cBc && 'content-type' === cB1['toLowerCase']() ? delete cBd[cB1] : cBe['setRequestHeader'](cB1, cB0);
                }), cB0['withCredentials'] && (cBe['withCredentials'] = !0x0), cB0['responseType']) try {
                cBe['responseType'] = cB0['responseType'];
            } catch (cBn) {
                if ('json' !== cB0['responseType']) throw cBn;
            }
            'function' == typeof cB0['onDownloadProgress'] && cBe['addEventListener']('progress', cB0['onDownloadProgress']), 'function' == typeof cB0['onUploadProgress'] && cBe['upload'] && cBe['upload']['addEventListener']('progress', cB0['onUploadProgress']), cB0['cancelToken'] && cB0['cancelToken']['promise']['then'](function(cB0) {
                cBe && (cBe['abort'](), cBb(cB0), cBe = null);
            }), void 0x0 === cBc && (cBc = null), cBe['send'](cBc);
        });
    };
}, function(cBp, cBq, cBr) {
    var cBs = cBr(0x90);
    cBp['exports'] = function(cBp, cBq, cBr, cBw, cBx) {
        var cBy = new Error(cBp);
        return cBs(cBy, cBq, cBr, cBw, cBx);
    };
}, function(cBz, cBA, cBB) {
    var cBC = cBB(0x22);
    cBz['exports'] = function(cBz, cBA) {
        cBA = cBA || {};
        var cBB = {};
        return cBC['forEach'](['url', 'method', 'params', 'data'], function(cBz) {
            void 0x0 !== cBA[cBz] && (cBB[cBz] = cBA[cBz]);
        }), cBC['forEach'](['headers', 'auth', 'proxy'], function(cBH) {
            cBC['isObject'](cBA[cBH]) ? cBB[cBH] = cBC['deepMerge'](cBz[cBH], cBA[cBH]) : void 0x0 === cBA[cBH] ? cBC['isObject'](cBz[cBH]) ? cBB[cBH] = cBC['deepMerge'](cBz[cBH]) : void 0x0 !== cBz[cBH] && (cBB[cBH] = cBz[cBH]) : cBB[cBH] = cBA[cBH];
        }), cBC['forEach'](['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath'], function(cBC) {
            void 0x0 === cBA[cBC] ? void 0x0 !== cBz[cBC] && (cBB[cBC] = cBz[cBC]) : cBB[cBC] = cBA[cBC];
        }), cBB;
    };
}, function(cBJ, cBK, cBL) {
    function cBM(cBJ) {
        this['message'] = cBJ;
    }
    cBM['prototype']['toString'] = function() {
        return 'Cancel' + (this['message'] ? ':\x20' + this['message'] : '');
    }, cBM['prototype']['__CANCEL__'] = !0x0, cBJ['exports'] = cBM;
}, function(cBO, cBP, cBQ) {
    cBQ(0x3e), 'localhost' == location['hostname'] && (location['hostname'] = '127.0.0.1');
    var cBR = cBQ(0x7),
        cBS = 'undefined' != typeof Storage;

    function cBT(cBO) {
        cBS && localStorage['removeItem'](cBO);
    }
    window['saveVal'] = function(cBO, cBP) {
        cBS && localStorage['setItem'](cBO, cBP);
    }, window['getSavedVal'] = function(cBO) {
        return cBS ? localStorage['getItem'](cBO) : null;
    };
    var cBY = new(cBQ(0x51))();

    function cBZ() {
        for (var cBO = ['Ranked', 'Shop', 'Social', 'Maps', 'Mods', 'Settings', 'Host', 'Browser', 'Join'], cBP = 0x0; cBP < cBO['length']; cBP++) document['getElementById']('menuBtn' + cBO[cBP])['innerHTML'] = cBY['get']('menu.btn.' + cBO[cBP]['toLowerCase']());
        customizeButton['innerHTML'] = cBY['get']('menu.btn.customize'), inviteButton['innerHTML'] = cBY['get']('menu.btn.invite');
    }
    cBZ(), window['openURL'] = function(cBO) {
        window['open'](cBO, '_blank');
    };
    var cC3 = new URLSearchParams(window['location']['search'])['has']('autoQueue'),
        cC4 = cBQ(0x6d)['default'];
    cC4['PING_REGION_CACHE_KEY'] = 'pingRegion4';
    var cC5 = new cC4(cBR['matchmakerURL']),
        cC6 = null,
        cC7 = null;

    function cC8(cBO) {
        cC5['switchGame'](cBO);
    }
    async function cCa() {
        if (cCO && (!cC5['queueManager'] || 'Queued' == cC5['queueManager']['status'])) {
            await cC5['unqueue']();
            var cBO, cBP = Array['from'](document['getElementsByClassName']('queueCheckboxOption'));
            cBP['length'] ? (cBO = cBP['filter'](cBO => cBO['checked'])['map'](cBO => cBO['dataset']['queueId']), localStorage['lastQueues'] = JSON['stringify'](cBO)) : cBO = localStorage['lastQueues'] ? JSON['parse'](localStorage['lastQueues']) : [cBR['queues'][0x0]], cGz('Queuing');
            var cBQ = 'undefined' == typeof queueRegionSelect ? localStorage[cC4['PING_REGION_CACHE_KEY']] : queueRegionSelect['value'];
            cCK['send']('queue', cBO, cC5['hostname'], cBQ), showWindow();
        }
    }

    function cCg(cBO, cBP) {
        hostGameMsg && (hostGameMsg['innerHTML'] = cBO), cBP && function(cBO) {
            var cBP = cC5['generateHref'](cBO);
            window['history']['replaceState']({}, 'Krunker', cBP), windows[0x1]['lastLoadTime'] = 0x0, cC6 = cBO;
        }(cBP), cKr = null, cKs = null;
    }
    async function cCl(cBO) {
        return cBO ? void cC5['queue']({
            'clientId': cBO,
            'statusCallback': function(cBO, cBP) {
                cGz(cBO, cBP);
            },
            'hostCallback': function(cBO) {
                setTimeout(function() {
                    cCK['send']('pgi', cBO), cGz(null);
                }, 0x3e8 * cGx);
            }
        }) : void cGz(null);
    }
    window['switchServer'] = cC8, window['checkedSwitchServer'] = function(cBO, cBP) {
        cBP['innerText'] = '...', cC5['fetchGameInfo'](cBO)['then'](cBQ => {
            cBQ['clients'] >= cBQ['maxClients'] ? (cBP['innerHTML'] = cBY['get']('matchmaker.full'), setTimeout(() => {
                cBP['innerText'] = Math['min'](cBQ['clients'], cBQ['maxClients']) + '/' + cBQ['maxClients'];
            }, 0x3e8)) : cC8(cBO);
        });
    }, window['joinQueue'] = cCa, window['leaveQueue'] = function() {
        cCK['send']('unqueue'), cGz(null), cC5['unqueue']();
    }, Object['defineProperty'](window, 'createPrivateRoom', {
        'writeable': !0x1,
        'value': function() {
            for (var cBO, cBP = [], cBQ = document['getElementById']('rawMapData'), cBS = 0x0; cBS < cCT['length']; cBS++)(cBO = document['getElementById']('gameMap' + cBS)) && cBO['checked'] && cBP['push'](cBS);
            if (0x0 != cBP['length'] || cKr || '' != rawMapData['value']) {
                var cBT = [];
                for (cBS = 0x0; cBS < cCU['length']; cBS++) document['getElementById']('gameMode' + cBS)['checked'] && cBT['push'](cBS);
                if (0x0 != cBT['length']) {
                    var cBZ = [];
                    for (cBS = 0x0; cBS < cCL['classes']['length']; cBS++) document['getElementById']('gameClass' + cBS)['checked'] && cBZ['push'](cBS);
                    if (0x0 != cBZ['length']) {
                        var cC3, cC4 = {
                            'customMap': cKr,
                            'rawMapData': cBQ ? cBQ['value'] : null,
                            'private': makePrivate['checked'],
                            'maps': cBP,
                            'modes': cBT,
                            'classes': cBZ
                        };
                        for (cBS = 0x0; cBS < cBR['serverConfig']['length']; cBS++) cC3 = document['getElementById']('customS' + cBR['serverConfig'][cBS]['varN']), tmpV = cBR['serverConfig'][cBS]['bool'] ? cC3 ? cC3['checked'] : 0x0 : cBR['serverConfig'][cBS]['input'] ? cC3 ? cCC['sanitizeStr'](cC3['value']) : 0x0 : cC3 ? parseFloat(cC3['value']) : 0x0, cC4[cBR['serverConfig'][cBS]['varN']] = tmpV;
                        cCK['send']('custom', cC4), hostGameMsg['innerHTML'] = cBY['get']('generic.wait');
                    } else hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cBY['get']('custom.class.missing') + '</span>';
                } else hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cBY['get']('custom.mode.missing') + '</span>';
            } else hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cBY['get']('custom.map.missing') + '</span>';
        }
    }), Object['defineProperty'](console, '_commandLineAPI', {
        'get': function() {
            throw '';
        }
    });
    var cCB = cBQ(0x4);
    cCB['OBJLoader'] = cBQ(0x40)(cCB), cCB['Shaders'] = cBQ(0x41)(cCB);
    var cCC = cBQ(0x8),
        cCD = cBQ(0x63),
        cCE = new(cBQ(0x39))(cCB, cCC, cBR, cCD),
        cCF = window['SOUND'] = new(cBQ(0x4a))(cCC, cBR),
        cCG = new(cBQ(0x4b))(cCE, cBR),
        cCH = cBQ(0x84),
        cCI = new(cBQ(0x85))(cCE, cBR),
        cCJ = cBQ(0x86),
        cCK = cBQ(0x58),
        cCL = cBQ(0x5a)['obj'];
    cCL = new cCL(!0x1, 0x0, null, cCE, cCF, cCG);
    var cCM = new(cBQ(0x98))(cCE, cCB, cCH, cCC, cCL, cBR, cCK);
    cCL['controls'] = cCM;
    var cCN, cCO, cCP, cCQ, cCR, cCS, cCT = cBQ(0x27)['maps'],
        cCU = cBQ(0x27)['modes'],
        cCV = cBQ(0x5c),
        cCW = cBQ(0x47)['Player'],
        cCX = new(cBQ(0x9b))(),
        cCY = cBQ(0x23),
        cCZ = (new cCB['Vector3'](), !0x1),
        cD0 = null,
        cD1 = !0x1;
    window['locked'] = !0x1;
    var cD2 = [],
        cD3 = !0x0,
        cD4 = 0x0,
        cD5 = 0x0,
        cD6 = 0x1e,
        cD7 = 0x0,
        cD8 = 0x1,
        cD9 = 0x1,
        cDa = -0x1;
    window['idleTimer'] = 0x0;
    var cDb, cDc, cDd, cDe, cDf = !0x0,
        cDg = !0x0,
        cDh = !0x0,
        cDi = '',
        cDj = '',
        cDk = !0x1,
        cDl = !0x1,
        cDm = 0x0,
        cDn = 0x1,
        cDo = getSavedVal('krk_lastMod') || '';

    function cDp(cBO) {
        cDo = cBO, saveVal('krk_lastMod', cBO);
    }
    cDp(cDo);
    var cDr = 0x1,
        cDs = 0x1,
        cDt = 0x6a4,
        cDu = 0x384;

    function cDv() {
        var cBO = window['innerWidth'],
            cBP = window['innerHeight'],
            cBQ = cDt * cDs,
            cBR = cDu * cDs,
            cBS = cBO / cBQ,
            cBT = cBP / cBR;
        cBT < cBS ? (cDr = cBT, uiBase['style']['transform'] = 'scale(' + cBT['toFixed'](0x3) + ')', uiBase['style']['width'] = (cBO / cBT)['toFixed'](0x3) + 'px', uiBase['style']['height'] = cBR + 'px') : (cDr = cBS, uiBase['style']['transform'] = 'scale(' + cBS['toFixed'](0x3) + ')', uiBase['style']['width'] = cBQ + 'px', uiBase['style']['height'] = (cBP / cBS)['toFixed'](0x3) + 'px');
    }
    window['addEventListener']('resize', cDv), cDv(), window['checkTerms'] = function(cBO) {
        cBO ? (consentBlock['style']['display'] = 'none', saveVal('consent', 0x1)) : $('#consentShake')['effect']('shake');
    };
    var cDD = ['/img/button/button-normal.png', '/img/button/button-hover.png', '/img/button/button-pressed.png', '/img/social-buttons/discord-normal.png', '/img/social-buttons/discord-hover.png', '/img/social-buttons/discord-pressed.png', '/img/social-buttons/reddit-normal.png', '/img/social-buttons/reddit-hover.png', '/img/social-buttons/reddit-pressed.png', '/img/social-buttons/twitter-normal.png', '/img/social-buttons/twitter-hover.png', '/img/social-buttons/twitter-pressed.png', '/img/social-buttons/kr-normal.png', '/img/social-buttons/kr-hover.png', '/img/social-buttons/kr-pressed.png'],
        cDE = [];
    window['addEventListener']('load', function() {
        for (var cBO of cDD) {
            var cBP = new Image();
            cBP['src'] = cBO, cDE['push'](cBP);
        }
    });
    eval;
    Math['PI2'] = 0x2 * Math['PI'], Math['lerpAngle'] = function(cBO, cBP, cBQ) {
        Math['abs'](cBP - cBO) > Math['PI'] && (cBO > cBP ? cBP += Math['PI2'] : cBO += Math['PI2']);
        var cBR = cBP + (cBO - cBP) * cBQ;
        return 0x0 <= cBR && cBR <= Math['PI2'] ? cBR : cBR % Math['PI2'];
    }, console['warn'] = function() {}, console['info'] = function() {};
    var cDL = !0x1;
    window['toggleStrm'] = function(cBO, cBP = !0x1) {
        cDL = cBO, cBP || (cBO ? window['history']['pushState'](document['title'], document['title'], '/') : window['history']['pushState'](document['title'], document['title'], cC5['generateHref'](cC6))), cOV(cOT, cOU);
    };
    var cDO = !0x1;
    window['loading'] = !0x1;
    var cDP = !0x1;
    window['spectTarget'] = null, window['spectating'] = !0x1, window['toggleSpect'] = function(cBO) {
        cDP = cBO;
    };
    var cDR, cDS, cDT = !0x1;

    function cDU() {
        window['innerWidth'], cDR = window['innerHeight'], cDS = cDR / cDr / 0x2b5, cCE['resize']();
    }

    function cDV(cBO) {
        return cBR['apiURL'] + cBO;
    }
    window['toggleChal'] = function(cBO) {
        cDT = cBO;
    }, window['spectMode'] = function(cBO) {
        if (cCL && cCL['players']) {
            if (cBO) {
                for (var cBP = Math['max'](0x0, window['spectTarget'] ? cCL['players']['list']['indexOf'](window['spectTarget']) : 0x0), cBQ = null, cBR = 0x0; cBR < cCL['players']['list']['length']; ++cBR)
                    if ((cBP += cBO) >= cCL['players']['list']['length'] ? cBP = 0x0 : 0x0 > cBP && (cBP = cCL['players']['list']['length'] - 0x1), (cCP = cCL['players']['list'][cBP]) && cCP['active']) {
                        cBQ = cCP;
                        break;
                    }
                window['spectTarget'] = cBQ;
            } else window['spectTarget'] = null, cCM['setCamPosOff']();
            window['spectTarget'];
        }
    }, window['specStatUpdate'] = function(cBO) {
        if (cBO = window['spectTarget']) {
            specStats['style']['display'] = 'inline-block';
            for (var cBP = cBO['name'] + (cBO['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cBR['verClans']['indexOf'](cBO['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cBO['clan'] + ']</span>' : ''), cBQ = cCL['mode']['endStats'] || cBR['endStats'], cBS = 'font-size:11px;color:rgb(255,255,255,0.5)', cBT = 0x2; cBT < cBQ['length']; ++cBT) cBP += '<div\x20style=\x27' + cBS + '\x27>' + cCC['capFirst'](cBQ[cBT]) + '<span\x20style=\x27float:right;' + cBS + '\x27>' + (cBR['endForm'][cBQ[cBT]] ? cBR['endForm'][cBQ[cBT]](cBO[cBQ[cBT]], cCL, cBO[cK6]) : cBO[cBQ[cBT]]) + '</span></div>';
            specStats['innerHTML'] = cBP;
        } else specStats['style']['display'] = 'none', specStats['innerHTML'] = '';
    }, Object['defineProperty'](window, 'enterGame', {
        'writeable': !0x1,
        'value': function() {
            if (cCL['singlePlayer'] && !cDO) {
                cMf('0:00');
                var cBO = cCL['getSpawnPoint'](null, !0x0),
                    cBP = cCL['classes'][parseInt(cDm)];
                cNT([cCK['socketId'], 0x1, cBO['x'], cBO['y'], cBO['z'], 'TEST', cDm, cBP['health'], cBP['health'], null, 0x64, null, [null == cHg[cBP['loadout'][0x0]] ? -0x1 : cHg[cBP['loadout'][0x0]], null == cHg[cBP['loadout'][0x1]] ? -0x1 : cHg[cBP['loadout'][0x1]]], null, null, cBP['secondary'] ? parseInt(cHh) : null, !0x1, null, -((cBO['dir'] || 0x0) + 0x1) * Math['PI'] / 0x2]), cDO = !0x0, cOV([0x1, 'TEST', 0x0, 0x0, 0x0, 0x0]), cCH['toggleMenu'](!0x1);
            } else if (cCK['connected'] && (!cDO || window['spectating'] && !cDP)) {
                bloodDisplay['style']['display'] = 'none', cDO = !0x0, window['idleTimer'] = 0x0, cCH['toggleMenu'](!0x1), instructions['innerHTML'] = cBY['get']('generic.loading'), window['loading'] = !0x0;
                cBP = parseInt(cDm);
                var cBQ = cCL['classes'][cBP]['loadout'],
                    cBR = [null == cHg[cBQ[0x0]] ? -0x1 : cHg[cBQ[0x0]], null == cHg[cBQ[0x1]] ? -0x1 : cHg[cBQ[0x1]]];
                cCK['send']('etrg', [cBP, parseInt(cNF), cBR, parseInt(cHe), parseInt(cHd), parseInt(cHh), cDP ? 0x1 : 0x0, cDT ? 0x1 : 0x0, cHa, parseInt(cHc), parseInt(cHb), parseFloat(cD9)]);
            }
        }
    }), window['addEventListener']('resize', cDU), cDU(), window['toggleAd'] = function() {};
    var cEb = 0x0;

    function cEc(cBO) {
        cCO && (cCO['funds'] = cBO), cGs();
    }

    function cEe(cBO, cBP) {
        window['idleTimer'] = 0x0, cBO ? purchaseError() : (cCO && (cCO['funds'] = cBP), cGs(), updateWindow(null, !0x0), cCH['toggleMenuHider'](!0x0), purchaseLoad['style']['display'] = 'none');
    }
    window['cancelPurchase'] = function() {
        window['idleTimer'] = 0x0, purchaseResponse['style']['display'] = 'none', cEb = 0x0, purchaseLoad['style']['display'] = 'none';
    }, window['showPurchase'] = function(cBO) {
        window['idleTimer'] = 0x0, cEb = cBO, purchaseHolder['style']['display'] = 'block';
        var cBP = document['getElementById']('paypal-button'),
            cBQ = document['getElementById']('creatorCodeI') || {};
        cBP && (cBP['innerHTML'] = ''), cCO && paypal['Button']['render']({
            'style': {
                'size': 'large'
            },
            'env': 'production',
            'commit': !0x0,
            'payment': function(cBO, cBP) {
                return purchaseHolder['style']['display'] = 'none', cBP['request']['post'](cDV('/my-api/create-payment/'), {
                    'pIndex': cEb,
                    'acID': cCO['id'],
                    'creID': cBQ['value'] || null
                })['then'](function(cBO) {
                    return cBO['id'];
                });
            },
            'onAuthorize': function(cBO, cBP) {
                return cBP['request']['post'](cDV('/my-api/execute-payment/'), {
                    'pIndex': cEb,
                    'acID': cCO['id'],
                    'creID': cBQ['value'] || null,
                    'paymentID': cBO['paymentID'],
                    'payerID': cBO['payerID']
                })['then'](function(cBO) {
                    cBO && null != cBO['funds'] && null != cBO['funds'] ? (cCO && (cCO['funds'] = cBO['funds']), cGs(), updateWindow(null, !0x0), cCH['toggleMenuHider'](!0x0), purchaseLoad['style']['display'] = 'none') : purchaseError(cBO);
                });
            },
            'onError': function(cBO) {
                purchaseError(cBO);
            }
        }, '#paypal-button');
    }, purchaseHolder['onclick'] = function() {
        purchaseHolder['style']['display'] = 'none';
    }, window['purchaseError'] = function(cBO) {
        var cBP = 'Purchase\x20Error';
        cBO && cBO['err'] && (cBP = cBO['err']), purchaseResponse['style']['display'] = 'block', purchaseRespH['innerHTML'] = cBP + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27cancelPurchase()\x27>' + cBY['get']('purchase.error.click') + '</a>';
    }, purchaseResponse['onclick'] = function() {
        purchaseResponse['style']['display'] = 'none';
    };
    const cEt = new FileReader();
    var cEu, cEv, cEw = !0x1,
        cEx = 0x0,
        cEy = {};

    function cEz() {
        cDO = !0x1, window['idleTimer'] = 0x0, cCH['toggleMenu'](!0x0), cCM['toggle'](!0x1), cLp = {
            'states': []
        };
    }

    function cEA() {
        menuMiniProfilePic['src'] = hudClassImg['src'] = cDj['length'] ? cDj : '/textures/classes/icon_' + cDm + '.png';
    }
    window['voiceChat'] = function(cBO, cBP) {
        if (cEx) {
            cDL && cCX && (cBP = cCC['scrambleS'](cBP));
            try {
                var cBQ = new Howl({
                    'src': [cBO],
                    'volume': cEx
                });
                cBQ['on']('load', function() {
                    cBQ['duration']() <= cBR['voiceChatMaxLength'] && (cBQ['on']('end', function() {
                        if (cEy[cBP]--, 0x0 >= cEy[cBP]) {
                            var cBO = document['getElementById']('speaker' + cBP);
                            cBO && cBO['parentElement']['removeChild'](cBO), delete cEy[cBP];
                        }
                    }), !cEy[cBP] && (cEy[cBP] = 0x0, speakerDisplay['innerHTML'] += '<div\x20id=\x27speaker' + cBP + '\x27\x20class=\x27voiceSpeaker\x27>' + cBP + '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;vertical-align:middle\x27>volume_down</i></div>'), cEy[cBP]++, cBQ['play']());
                });
            } catch (cEF) {}
        }
    }, cEt['addEventListener']('loadend', function() {
        var cBO = cEt['result'];
        cCK['send']('vc', cBO);
    }), window['toggleRecord'] = function(cBO) {
        'INPUT' == document['activeElement']['tagName'] || (cCN || window['spectating']) && (cBO && !cEw ? (voiceDisplay['style']['opacity'] = 0.9, cEw = !0x0, navigator['mediaDevices']['getUserMedia']({
            'audio': !0x0,
            'video': !0x1
        })['then'](function(cBO) {
            (cEu = new MediaRecorder(cBO, {
                'mimetype': 'audio/ogg',
                'bitsPerSecond': 0x1770
            }))['start']();
            const cBP = [];
            cEu['addEventListener']('dataavailable', function(cBO) {
                cBP['push'](cBO['data']);
            }), cEu['addEventListener']('stop', function() {
                recTimer['style']['display'] = 'none', voiceDisplay['style']['opacity'] = 0.5;
                var cBO = new Blob(cBP, {
                    'type': 'audio/ogg;\x20codecs=opus'
                });
                cEt['readAsDataURL'](cBO);
            }), recTimer['style']['display'] = 'inline-block', recTimer['innerHTML'] = cBR['voiceChatMaxLength'];
            var cBQ = cBR['voiceChatMaxLength'];
            cEv = setInterval(function() {
                cBQ--, recTimer['innerHTML'] = cBQ, 0x0 >= cBQ && (cEw = !0x1, cEu['stop'](), clearInterval(cEv));
            }, 0x3e8);
        })['catch'](function() {
            cEw = !0x1, cEv && clearInterval(cEv), voiceDisplay['style']['opacity'] = 0.5;
        })) : !cBO && cEw && cEu && (cEw = !0x1, cEu['stop'](), clearInterval(cEv)));
    }, window['updateSliderLabel'] = function(cBO, cBP) {
        var cBQ = document['getElementById']('customSet' + cBO);
        cBQ && (cBQ['innerHTML'] = cBP);
    }, Object['defineProperty'](window, 'setSetting', {
        'writeable': !0x1,
        'value': function(cBO, cBP) {
            (cF9[cBO]['min'] || cF9[cBO]['max']) && (cBP = Math['min'](cF9[cBO]['max'], Math['max'](cF9[cBO]['min'], cBP))), document['getElementById']('slid_' + cBO) && (document['getElementById']('slid_' + cBO)['value'] = cBP), document['getElementById']('slid_input_' + cBO) && (document['getElementById']('slid_input_' + cBO)['value'] = cBP), cF9[cBO]['set'](cBP), cF9[cBO]['val'] = cBP, saveVal('kro_setngss_' + cBO, cBP);
        }
    }), window['resetSettings'] = function() {
        confirm(cBY['get']('settings.reset.confirm')) && (Object['keys'](localStorage)['filter'](cBO => cBO['includes']('kro_setngss_') || cBO['includes']('cont_'))['forEach'](cBO => localStorage['removeItem'](cBO)), location['reload']());
    }, window['exportSettings'] = function() {
        var cBO = {};
        for (var cBP in cF9) cBO[cBP] = cF9[cBP]['val'];
        downloadFile('settings.txt', cBO);
    }, window['importSettings'] = function() {
        var cBO = prompt('Copy\x20Paste\x20Settings\x20Text\x20Here');
        if (cBO && '' != cBO) try {
            let cBQ = JSON['parse'](cBO);
            for (var cBP in cBQ) setSetting(cBP, cBQ[cBP]);
            showWindow(0x1);
        } catch (cEZ) {
            console['log'](cEZ), alert('Failed\x20to\x20import\x20settings\x20with\x20error:\x0a' + cEZ['toString']());
        }
    };
    var cF0 = {};

    function cF1(cBO, cBP, cBQ, cBR) {
        return 'checkbox' == cBO ? '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22' + cBP + '\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cBQ['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>' : 'slider' == cBO ? '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_' + cBP + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20min=\x27' + cBQ['min'] + '\x27\x20max=\x27' + cBQ['max'] + '\x27\x20value=\x27' + cBQ['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22' + cBP + '\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_' + cBP + '\x27\x20min=\x27' + cBQ['min'] + '\x27\x20max=\x27' + cBQ['max'] + '\x27\x20step=\x27' + cBQ['step'] + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cBQ['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22' + cBP + '\x22,\x20this.value)\x27></div>' : '<input\x20type=\x27' + cBO + '\x27\x20name=\x27' + cBO + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + ('color' == cBO ? 'style=\x27float:right;margin-top:5px\x27' : 'class=\x27inputGrey2\x27\x20placeholder=\x27' + cBR + '\x27') + '\x0a\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cBQ['val'] + '\x27\x20oninput=\x27setSetting(\x22' + cBP + '\x22,\x20this.value)\x27/>';
    }
    window['delayExecute'] = function(cBO, cBP, cBQ = 0x258) {
        return clearTimeout(cF0[cBO]), cF0[cBO] = setTimeout(function() {
            setSetting(cBO, cBP['value']);
        }, cBQ), !0x0;
    };
    var cF9 = {
        'changeControls': {
            'noi18n': !0x0,
            'name': '<div\x20style=\x27width:100%\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(7);\x27\x20class=\x27menuLink\x27>' + cBY['get']('settings.controls.change') + '</a>\x20|\x20<a\x20onclick=\x27importSettings()\x27\x20class=\x27+\x27>' + cBY['get']('settings.import') + '</a>\x20|\x20<a\x20onclick=\x27exportSettings()\x27\x20class=\x27+\x27>' + cBY['get']('settings.export') + '</a>\x20|\x20<a\x20onclick=\x27resetSettings()\x27\x20class=\x27+\x27>' + cBY['get']('settings.reset') + '</a></div>',
            'html': function() {
                return '';
            }
        },
        'defaultRegion': {
            'name': 'settings.local.region',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.local.header') + '</div>',
            get 'val' () {
                return localStorage[cC4['PING_REGION_CACHE_KEY']];
            },
            set 'val' (cBO) {},
            'html': function() {
                var cBO = '<select\x20onchange=\x27setSetting(\x22defaultRegion\x22,\x20this.value)\x27\x20class=\x27inputGrey2\x27>';
                for (var cBP of cRc) cBO += '<option\x20value=\x27' + cBP + '\x27\x20' + (cBP == cF9['defaultRegion']['val'] ? 'selected' : '') + '>', cBO += cBR['regionNames'][cBP], cBO += '</option>';
                return cBO += '</select>';
            },
            'set': function(cBO) {
                cBO && cBR['isProd'] && localStorage['setItem'](cC4['PING_REGION_CACHE_KEY'], cBO);
            }
        },
        'lang': {
            'name': 'settings.local.lang',
            'val': 'en',
            'html': function() {
                var cBO = '<select\x20onchange=\x27setSetting(\x22lang\x22,\x20this.value)\x27\x20class=\x27inputGrey2\x27>';
                for (var cBP of cBY['supported']) cBO += '<option\x20value=\x27' + cBP + '\x27\x20' + (cBP == cBY['locale'] ? 'selected' : '') + '>', cBO += cBR['langNames'][cBP], cBO += '</option>';
                return cBO += '</select>';
            },
            'set': function(cBO) {
                cBO && (cBY['setLocale'](cBO), cBZ(), 'block' == windowHolder['style']['display'] && cCH['toggleWindow'](!0x1, cCM['gamepad']['connected']));
            }
        },
        'resolution': {
            'name': 'settings.quality.res',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.quality.header') + '</div>',
            'val': 0.6,
            'min': 0.1,
            'max': 0x2,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'resolution', this);
            },
            'set': function(cBO) {
                cCE['setResMlt'](cBO);
            }
        },
        'particles': {
            'name': 'settings.quality.part',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'particles', this);
            },
            'set': function(cBO) {
                cCG['active'] = cBO;
            }
        },
        'showTrails': {
            'name': 'settings.quality.trails',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showTrails', this);
            },
            'set': function(cBO) {
                cCG['showTrails'] = cBO;
            }
        },
        'muzzleFlash': {
            'name': 'settings.quality.mflash',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'muzzleFlash', this);
            },
            'set': function(cBO) {
                cCG['showMuzzle'] = cBO;
            }
        },
        'sniperFlap': {
            'name': 'settings.quality.flap',
            'val': !0x1,
            'html': function() {
                return cF1('checkbox', 'sniperFlap', this);
            },
            'set': function(cBO) {
                cCE['sniperFlap'] = cBO;
            }
        },
        'scaleUI': {
            'name': 'settings.interface.scale',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.interface.header') + '</div>',
            'val': 0x1,
            'min': 0.1,
            'max': 0x1,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'scaleUI', this);
            },
            'set': function(cBO) {
                cDs = 0x1 - cBO + 0x1, cDv();
            }
        },
        'showUI': {
            'name': 'settings.interface.ui',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showUI', this);
            },
            'set': function(cBO) {
                for (cCH['hideGameUI'] = !cBO, chatUI['style']['display'] = cBO ? 'block' : 'none'; 0xfa <= chatList['scrollHeight'];) chatList['removeChild'](chatList['childNodes'][0x0]);
            }
        },
        'dynamicHP': {
            'name': 'settings.interface.hp',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'dynamicHP', this);
            },
            'set': function(cBO) {
                cCD['dynamicHP'] = cBO;
            }
        },
        'showChat': {
            'name': 'settings.interface.chat',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showChat', this);
            },
            'set': function(cBO) {
                chatHolder['style']['display'] = cBO ? 'block' : 'none';
            }
        },
        'showKills': {
            'name': 'settings.interface.kills',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showKills', this);
            },
            'set': function(cBO) {
                cDf = cBO;
            }
        },
        'showMessages': {
            'name': 'settings.interface.messages',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showMessages', this);
            },
            'set': function(cBO) {
                cDg = cBO;
            }
        },
        'showUnboxings': {
            'name': 'settings.interface.unboxings',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showUnboxings', this);
            },
            'set': function(cBO) {
                cDh = cBO;
            }
        },
        'showPing': {
            'name': 'settings.interface.ping',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showPing', this);
            },
            'set': function(cBO) {
                pingDisplay['style']['display'] = cBO ? 'block' : 'none';
            }
        },
        'showFPS': {
            'name': 'settings.interface.fps',
            'val': !0x1,
            'html': function() {
                return cF1('checkbox', 'showFPS', this);
            },
            'set': function(cBO) {
                fpsDisplay['style']['display'] = menuFPSDisplay['style']['display'] = cBO ? 'block' : 'none';
            }
        },
        'showDeaths': {
            'name': 'settings.interface.deaths',
            'val': !0x1,
            'html': function() {
                return cF1('checkbox', 'showDeaths', this);
            },
            'set': function(cBO) {
                deathCount['style']['display'] = cBO ? 'inline-block' : 'none';
            }
        },
        'crosshairSho': {
            'name': 'settings.crosshair.type',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.crosshair.header') + '</div>',
            'val': 0x1,
            'html': function() {
                return '<select\x20class=\x27inputGrey2\x27\x20onchange=\x22setSetting(\x27crosshairSho\x27,\x20this.value)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x220\x22' + (0x0 == cF9['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cBY['get']('generic.off') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x221\x22' + (0x1 == cF9['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cBY['get']('generic.default') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x222\x22' + (0x2 == cF9['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.type.2') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x223\x22' + (0x3 == cF9['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.type.3') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x224\x22' + (0x4 == cF9['crosshairSho']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.type.4') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</select>';
            },
            'set': function(cBO) {
                cCD['crosshairType'] = cBO;
                let cBP = ['crosshairStyle', 'crosshairAlways', 'crosshairLen', 'crosshairThick'];
                for (let cBQ of cBP) {
                    cF9[cBQ]['hide'] = 'crosshairAlways' == cBQ ? 0x2 > cBO : 0x4 == cBO || 0x2 > cBO;
                    let cBP = document['getElementById'](cBQ + '_div');
                    cBP && (cBP['style']['display'] = cF9[cBQ]['hide'] ? 'none' : 'block');
                }
                cF9['crosshairImage']['hide'] = 0x4 != cBO;
                let cBQ = document['getElementById']('crosshairImage_div');
                cBQ && (cBQ['style']['display'] = 0x4 == cBO ? 'block' : 'none');
            }
        },
        'crosshairStyle': {
            'name': 'settings.crosshair.style',
            'val': 0x0,
            'hide': !0x0,
            'html': function() {
                return '<select\x20class=\x27inputGrey2\x27\x20onchange=\x22setSetting(\x27crosshairStyle\x27,\x20this.value)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x220\x22' + (0x0 == cF9['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.style.0') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x221\x22' + (0x1 == cF9['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.style.1') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x222\x22' + (0x2 == cF9['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.style.2') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x223\x22' + (0x3 == cF9['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.style.3') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x224\x22' + (0x4 == cF9['crosshairStyle']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.crosshair.style.4') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</select>';
            },
            'set': function(cBO) {
                cCD['crosshairStyle'] = cBO;
            }
        },
        'crosshairImage': {
            'name': 'settings.crosshair.image',
            'val': '',
            'hide': !0x0,
            'html': function() {
                return cF1('url', 'crosshairImage', this, cBY['get']('settings.crosshair.image.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', cCD['crosshairImage']['src'] != cBO && cBO['length'] && (cCD['crosshairImage']['src'] = cBO);
            }
        },
        'crosshairAlways': {
            'name': 'settings.crosshair.always',
            'val': !0x1,
            'hide': !0x0,
            'html': function() {
                return cF1('checkbox', 'crosshairAlways', this);
            },
            'set': function(cBO) {
                cCD['crosshairAlways'] = cBO;
            }
        },
        'crosshairColor': {
            'name': 'settings.crosshair.color',
            'val': '#ffffff',
            'html': function() {
                return cF1('color', 'crosshairColor', this);
            },
            'set': function(cBO) {
                cCD['crosshairColor'] = cBO;
            }
        },
        'crosshairShadow': {
            'name': 'settings.crosshair.shadow',
            'val': '#000000',
            'html': function() {
                return cF1('color', 'crosshairShadow', this);
            },
            'set': function(cBO) {
                cCD['crosshairShadow'] = cBO;
            }
        },
        'crosshairLen': {
            'name': 'settings.crosshair.size',
            'val': 0x10,
            'min': 0x2,
            'max': 0x32,
            'step': 0x1,
            'hide': !0x0,
            'html': function() {
                return cF1('slider', 'crosshairLen', this);
            },
            'set': function(cBO) {
                cCD['crosshairLen'] = cBO;
            }
        },
        'crosshairThick': {
            'name': 'settings.crosshair.thickness',
            'val': 0x2,
            'min': 0x2,
            'max': 0x14,
            'step': 0x1,
            'hide': !0x0,
            'html': function() {
                return cF1('slider', 'crosshairThick', this);
            },
            'set': function(cBO) {
                cCD['crosshairThick'] = cBO;
            }
        },
        'sensitivity': {
            'name': 'settings.gameplay.sensitivity',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.gameplay.header') + '</div>',
            'val': 0x1,
            'min': 0.1,
            'max': 0xf,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'sensitivity', this);
            },
            'set': function(cBO) {
                cCM['sensMlt'] = cBO;
            }
        },
        'aimSensitivity': {
            'name': 'settings.gameplay.aimsens',
            'val': 0x1,
            'min': 0.1,
            'max': 0xf,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'aimSensitivity', this);
            },
            'set': function(cBO) {
                cCM['sensAimMlt'] = cBO;
            }
        },
        'fov': {
            'name': 'settings.gameplay.fov',
            'val': cBR['fov'],
            'min': 0x3c,
            'max': 0x78,
            'step': 0x5,
            'html': function() {
                return cF1('slider', 'fov', this);
            },
            'set': function(cBO) {
                cCE['setFov'](cBO);
            }
        },
        'lagComp': {
            'name': 'settings.gameplay.lagComp',
            'val': 0x1,
            'min': 0x1,
            'max': 1.5,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'lagComp', this);
            },
            'set': function(cBO) {
                cD9 = cBO;
            }
        },
        'scrollDir': {
            'name': 'settings.gameplay.scrollDir',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'scrollDir', this);
            },
            'set': function(cBO) {
                cD8 = cBO ? 0x1 : -0x1;
            }
        },
        'streamMode': {
            'name': 'settings.gameplay.streamer',
            'val': !0x1,
            'dontInit': !0x0,
            'html': function() {
                return cF1('checkbox', 'streamMode', this);
            },
            'set': function(cBO) {
                toggleStrm(cBO);
            }
        },
        'challMode': {
            'name': 'settings.gameplay.challenge',
            'val': !0x1,
            'html': function() {
                return cF1('checkbox', 'challMode', this);
            },
            'set': function(cBO) {
                toggleChal(cBO);
            }
        },
        'invertY': {
            'name': 'settings.gameplay.invert',
            'val': !0x1,
            'html': function() {
                return cF1('checkbox', 'invertY', this);
            },
            'set': function(cBO) {
                cCM['invertY'] = cBO;
            }
        },
        'hideNames': {
            'name': 'settings.gameplay.hideNames',
            'val': 0x0,
            'html': function() {
                return '<select\x20class=\x27inputGrey2\x27\x20onchange=\x22setSetting(\x27hideNames\x27,\x20this.value)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x220\x22' + (0x0 == cF9['hideNames']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.gameplay.hideNames.all') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x221\x22' + (0x1 == cF9['hideNames']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.gameplay.hideNames.team') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x222\x22' + (0x2 == cF9['hideNames']['val'] ? '\x20selected' : '') + '>' + cBY['get']('settings.gameplay.hideNames.enemy') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<option\x20value=\x223\x22' + (0x3 == cF9['hideNames']['val'] ? '\x20selected' : '') + '>' + cBY['get']('generic.off') + '</option>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</select>';
            },
            'set': function() {}
        },
        'sound': {
            'name': 'settings.audio.sound',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.audio.header') + '</div>',
            'val': 0x1,
            'min': 0x0,
            'max': 0x1,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'sound', this);
            },
            'set': function(cBO) {
                cCF['setVolume'](cBO);
            }
        },
        'voiceVolume': {
            'name': 'settings.audio.voice',
            'val': 0x1,
            'min': 0x0,
            'max': 0x1,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'voiceVolume', this);
            },
            'set': function(cBO) {
                cEx = cBO;
            }
        },
        'fpsFOV': {
            'name': 'settings.viewmodel.fps',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.viewmodel.header') + '</div>',
            'val': cBR['fov'],
            'min': 0x3c,
            'max': 0x78,
            'step': 0x5,
            'html': function() {
                return cF1('slider', 'fpsFOV', this);
            },
            'set': function(cBO) {
                cCE['setFPSFov'](cBO);
            }
        },
        'weaponBob': {
            'name': 'settings.viewmodel.bobbing',
            'val': 0x1,
            'min': 0x0,
            'max': 0x3,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'weaponBob', this);
            },
            'set': function(cBO) {
                cCE['weaponBob'] = cBO;
            }
        },
        'weaponLean': {
            'name': 'settings.viewmodel.leaning',
            'val': 0x1,
            'min': 0x0,
            'max': 0x6,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'weaponLean', this);
            },
            'set': function(cBO) {
                cCE['weaponLean'] = cBO;
            }
        },
        'weaponOffX': {
            'name': 'settings.viewmodel.xOff',
            'val': 0x1,
            'min': 0x0,
            'max': 0x2,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'weaponOffX', this);
            },
            'set': function(cBO) {
                cCE['weaponOffX'] = cBO;
            }
        },
        'weaponOffY': {
            'name': 'settings.viewmodel.yOff',
            'val': 0x1,
            'min': 0x0,
            'max': 0x2,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'weaponOffY', this);
            },
            'set': function(cBO) {
                cCE['weaponOffY'] = cBO;
            }
        },
        'showWeapon': {
            'name': 'settings.viewmodel.show.primary',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showWeapon', this);
            },
            'set': function(cBO) {
                if (cCL['hideWeapon'][0x0] = !cBO, cCN)
                    for (var cBP, cBQ = 0x0; cBQ < cCN['loadout']['length']; cBQ++) !(cBP = cCL['weapons'][cCN['loadout'][cBQ]])['secondary'] && !cBP['melee'] && cCN['weaponMeshes'][cBQ] && cCN['weaponIndex'] == cBQ && (cCN['weaponMeshes'][cBQ]['visible'] = cBO);
            }
        },
        'showWeaponSec': {
            'name': 'settings.viewmodel.show.secondary',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showWeaponSec', this);
            },
            'set': function(cBO) {
                if (cCL['hideWeapon'][0x1] = !cBO, cCN)
                    for (var cBP = 0x0; cBP < cCN['loadout']['length']; cBP++) cCL['weapons'][cCN['loadout'][cBP]]['secondary'] && cCN['weaponMeshes'][cBP] && cCN['weaponIndex'] == cBP && (cCN['weaponMeshes'][cBP]['visible'] = cBO);
            }
        },
        'showWeaponMel': {
            'name': 'settings.viewmodel.show.melee',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'showWeaponMel', this);
            },
            'set': function(cBO) {
                if (cCL['hideWeapon'][0x2] = !cBO, cCN)
                    for (var cBP = 0x0; cBP < cCN['loadout']['length']; cBP++) cCL['weapons'][cCN['loadout'][cBP]]['melee'] && cCN['weaponMeshes'][cBP] && cCN['weaponIndex'] == cBP && (cCN['weaponMeshes'][cBP]['visible'] = cBO);
            }
        },
        'hudHealthHigh': {
            'name': 'settings.editing.health.high',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.editing.header') + '</div>',
            'val': '#9eeb56',
            'html': function() {
                return cF1('color', 'hudHealthHigh', this);
            },
            'set': function() {}
        },
        'hudHealthLow': {
            'name': 'settings.editing.health.low',
            'val': '#eb5656',
            'html': function() {
                return cF1('color', 'hudHealthLow', this);
            },
            'set': function() {}
        },
        'scoreColor': {
            'name': 'settings.editing.score.color',
            'val': '#ffea78',
            'html': function() {
                return cF1('color', 'scoreColor', this);
            },
            'set': function(cBO) {
                scoreText['style']['color'] = cBO;
            }
        },
        'scoreScale': {
            'name': 'settings.editing.score.scale',
            'val': 0x1,
            'min': 0.1,
            'max': 0x2,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'scoreScale', this);
            },
            'set': function(cBO) {
                cDn = cBO || 0x1;
            }
        },
        'saturation': {
            'name': 'settings.editing.saturation',
            'val': 0x1,
            'min': 0x0,
            'max': 0x3,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'saturation', this);
            },
            'set': function(cBO) {
                0x1 == cBO ? document['body']['style']['removeProperty']('filter') : document['body']['style']['filter'] = 'saturate(' + 0x64 * cBO + '%)';
            }
        },
        'vignette': {
            'name': 'settings.editing.vignette',
            'val': 0x0,
            'min': 0x0,
            'max': 0x1,
            'step': 0.1,
            'html': function() {
                return cF1('slider', 'vignette', this);
            },
            'set': function(cBO) {
                0x1 == cBO ? vignette['style']['removeProperty']('opacity') : vignette['style']['opacity'] = cBO;
            }
        },
        'depthMap': {
            'name': 'settings.editing.depth',
            'val': 0x0,
            'min': 0x0,
            'max': 0x1f4,
            'step': 0x5,
            'html': function() {
                return cF1('slider', 'depthMap', this);
            },
            'set': function(cBO) {
                cCE['toggleDepthMap'](cBO);
            }
        },
        'greenScreen': {
            'name': 'settings.editing.green',
            'val': !0x1,
            'html': function() {
                return cF1('checkbox', 'greenScreen', this);
            },
            'set': function(cBO) {
                cCE['toggleGreenscreen'](cBO);
            }
        },
        'ambientShading': {
            'name': 'settings.shaders.ambient',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.shaders.header') + '</div>',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'ambientShading', this);
            },
            'set': function(cBO) {
                cCE['toggleMeshGroup']('ambient_0', cBO), cCE['toggleMeshGroup']('ambient_1', cBO);
            }
        },
        'canLoadMods': {
            'name': 'settings.mods.load',
            'pre': '<div\x20class=\x27setHed\x27>' + cBY['get']('settings.mods.header') + '</div>',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'canLoadMods', this);
            },
            'set': function(cBO) {
                cD3 = cBO;
            }
        },
        'autoLoadLast': {
            'name': 'settings.mods.auto',
            'val': !0x1,
            'html': function() {
                return cF1('checkbox', 'autoLoadLast', this);
            },
            'set': function() {}
        },
        'scopeBorders': {
            'name': 'settings.mods.borders',
            'val': !0x0,
            'html': function() {
                return cF1('checkbox', 'scopeBorders', this);
            },
            'set': function(cBO) {
                Array['from'](document['querySelectorAll']('.black'))['forEach'](cBP => cBP['style']['display'] = cBO ? 'block' : 'none');
            }
        },
        'customScope': {
            'name': 'settings.mods.scope',
            'val': '',
            'html': function() {
                return cF1('url', 'customScope', this, cBY['get']('settings.mods.scope.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', recticleImg['src'] = 0x1 < cBO['length'] ? cBO : location['origin'] + '/textures/recticle.png';
            }
        },
        'customHitmarker': {
            'name': 'settings.mods.hitmarker',
            'val': '',
            'html': function() {
                return cF1('url', 'customHitmarker', this, cBY['get']('settings.mods.hitmarker.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', hitmarker['src'] = 0x1 < cBO['length'] ? cBO : location['origin'] + '/textures/hitmarker_3.png';
            }
        },
        'customADSDot': {
            'name': 'settings.mods.dot',
            'val': '',
            'html': function() {
                return cF1('url', 'customADSDot', this, cBY['get']('settings.mods.dot.paste'));
            },
            'set': function(cBO) {
                (cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '')['length'] && (cDi = cBO);
            }
        },
        'endMessage': {
            'name': 'settings.mods.endmessage',
            'val': '',
            'html': function() {
                return cF1('text', 'endMessage', this, cBY['get']('settings.mods.endmessage'));
            },
            'set': function() {}
        },
        'customProfile': {
            'name': 'settings.mods.profile',
            'val': '',
            'html': function() {
                return cF1('url', 'customProfile', this, cBY['get']('settings.mods.profile.paste'));
            },
            'set': function(cBO) {
                cDj = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', cEA();
            }
        },
        'customAmmo': {
            'name': 'settings.mods.ammo',
            'val': '',
            'html': function() {
                return cF1('url', 'customAmmo', this, cBY['get']('settings.mods.ammo.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', ammoIcon['src'] = 0x1 < cBO['length'] ? cBO : location['origin'] + '/textures/ammo_0.png';
            }
        },
        'customKills': {
            'name': 'settings.mods.kills',
            'val': '',
            'html': function() {
                return cF1('url', 'customKills', this, cBY['get']('settings.mods.kills.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', killsIcon['src'] = 0x1 < cBO['length'] ? cBO : location['origin'] + '/img/skull_0.png';
            }
        },
        'customDeaths': {
            'name': 'settings.mods.deaths',
            'val': '',
            'html': function() {
                return cF1('url', 'customDeaths', this, cBY['get']('settings.mods.deaths.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', deathsIcon['src'] = 0x1 < cBO['length'] ? cBO : location['origin'] + '/img/skull_1.png';
            }
        },
        'customDamage': {
            'name': 'settings.mods.damage',
            'val': '',
            'html': function() {
                return cF1('url', 'customDamage', this, cBY['get']('settings.mods.damage.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', bloodDisplay['src'] = 0x1 < cBO['length'] ? cBO : location['origin'] + '/img/blood.png';
            }
        },
        'customTimer': {
            'name': 'settings.mods.timer',
            'val': '',
            'html': function() {
                return cF1('url', 'customTimer', this, cBY['get']('settings.mods.timer.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', timerIcon['src'] = 0x1 < cBO['length'] ? cBO : location['origin'] + '/img/timer.png';
            }
        },
        'customGameOverlay': {
            'name': 'settings.mods.overlay',
            'val': '',
            'html': function() {
                return cF1('url', 'customGameOverlay', this, cBY['get']('settings.mods.overlay.paste'));
            },
            'set': function(cBO) {
                cBO = cCC['isURL'](cBO) && !/\.svg/ ['test'](cBO) ? cBO : '', overlay['style']['backgroundImage'] = 0x1 < cBO['length'] ? 'url(\x27' + cBO + '\x27)' : '';
            }
        }
    };
    for (var cGo in cF9)
        if (cF9[cGo]['set'] && !cF9[cGo]['dontInit']) {
            var cGp = getSavedVal('kro_setngss_' + cGo);
            cF9[cGo]['val'] = null === cGp ? cF9[cGo]['val'] : cGp, 'false' == cF9[cGo]['val'] && (cF9[cGo]['val'] = !0x1), (cF9[cGo]['min'] || cF9[cGo]['max']) && (cF9[cGo]['val'] = Math['min'](cF9[cGo]['max'], Math['max'](cF9[cGo]['min'], cF9[cGo]['val']))), cF9[cGo]['set'](cF9[cGo]['val'], !0x0);
        }
    function cGq(cBO) {
        cCO && cCO['setData'](cBO), updateWindow(0x5), cGs();
    }

    function cGs() {
        if (cCO) {
            signedOutHeaderBar['style']['display'] = 'none', signedInHeaderBar['style']['display'] = null, cCO['level'] >= cBR['rewardMinLvl'] ? (claimHolder['style']['display'] = 'block', merchHolder['style']['top'] = '205px', cH0()) : merchHolder['style']['top'] = '110px', menuAccountUsername['innerText'] = cCO['name'], menuKRCount['innerText'] = cCO['funds'], menuLevelText['innerText'] = 'LVL\x20' + cCO['level'], menuLevelBar['style']['width'] = cCO['levelProg'] + '%';
            var cBO = cCC['levelIconId'](cCO['level']);
            menuLevelIcon['style']['backgroundImage'] = 'url(\x27/img/levels/' + cBO + '.png\x27)';
        } else signedOutHeaderBar['style']['display'] = null, signedInHeaderBar['style']['display'] = 'none', claimHolder['style']['display'] = 'none', merchHolder['style']['top'] = '110px';
    }
    new MutationObserver(cBO => {
        0x1 < cDi['length'] && cDi != cBO[0x0]['target']['src'] && (cBO[0x0]['target']['src'] = cDi);
    })['observe'](aimDot, {
        'attributes': !0x0,
        'attributeFilter': ['src']
    }), window['changeCont'] = function(cBO, cBP) {
        cBP || showWindow(0x7, !0x0), 0x3 >= cBO ? cCM['inputChanger'] = cBO : 0x4 == cBO ? cCM['inputChanger'] = 'jumpKey' : 0x5 == cBO ? cCM['inputChanger'] = 'crouchKey' : 0x6 == cBO ? cCM['inputChanger'] = 'meleeKey' : 0x7 == cBO ? cCM['inputChanger'] = 'swapKey' : 0x8 == cBO ? cCM['inputChanger'] = 'reloadKey' : 0x9 == cBO ? cCM['inputChanger'] = 'sprayKey' : 0xa == cBO ? cCM['inputChanger'] = 'aimKey' : 0xb == cBO ? cCM['inputChanger'] = 'chatKey' : 0xc == cBO ? cCM['inputChanger'] = 'voiceKey' : 0xd == cBO ? cCM['inputChanger'] = 'primKey' : 0xe == cBO ? cCM['inputChanger'] = 'inspKey' : 0xf == cBO ? cCM['inputChanger'] = 'listKey' : 0x10 == cBO ? cCM['inputChanger'] = 'interactKey' : 0x11 == cBO && (cCM['inputChanger'] = 'dropKey'), document['getElementById']('cont' + cBO)['innerHTML'] = cBY['get']('settings.controls.press');
    };
    var cGx = 0x5,
        cGy = 0x0;

    function cGz(cBO, cBP) {
        if (cBO) {
            if (0x0 == cGy && ('CreatingGame' == cBO || 'Host' == cBO || 'Join' == cBO)) {
                cCK['send']('unqueue'), playTick(), cGy = cGx;
                var cBQ = setInterval(function() {
                    playTick(), cGy--, cGz('Countdown'), 0x1 >= cGy && clearInterval(cBQ);
                }, 0x3e8);
            }
            var cBR, cBS;
            queueStatus['style']['display'] = '', 0x0 < cGy ? (cBR = 'Joining\x20in\x20' + cGy + '...', cBS = !0x1) : 'Queuing' === cBO ? (cBR = cBY['get']('queue.status.queuing'), cBS = !0x1) : 'Queued' === cBO ? (cBR = cBY['get']('queue.status.queued', cBP['queueSize'] - cBP['queueIndex'], cBP['queueSize']), cBS = !0x0) : 'CreatingGame' === cBO ? (cBR = cBY['get']('queue.status.creating-game'), cBS = !0x1) : 'Host' === cBO ? (cBR = cBY['get']('queue.status.host'), cBS = !0x1) : 'Join' === cBO ? (cBR = cBY['get']('queue.status.join'), cBS = !0x1) : (console['warn']('Unknown\x20status', cBO), cBR = '?'), queueStatusText['innerText'] = cBR, queueStatusButton['style']['display'] = cBS ? '' : 'none', uiBase['classList']['toggle']('isQueued', !0x0);
        } else cGy = 0x0, queueStatus['style']['display'] = 'none', uiBase['classList']['toggle']('isQueued', !0x1);
    }
    const cGF = [];
    let cGG, cGH = 0x0;

    function cGI(cBO) {
        try {
            accResp['innerHTML'] = cBO || '', accResp['style']['display'] = cBO ? 'block' : 'none';
        } catch (cGK) {}
    }

    function cGL(cBO, cBP) {
        0x0 <= cBO && cGI(cBY['get']('generic.wait')), 0x0 == cBO || 0x1 == cBO && !cBP[0x2] ? grecaptcha['execute'](cBR['recaptchaKey'], {
            'action': 'login'
        })['then'](cBQ => {
            cDk = !0x0, cCK['send']('a', cBO, cBP, cBQ);
        }) : cCK['send']('a', cBO, cBP);
    }

    function cGP(cBO, cBP, cBQ, cBS, cBT) {
        cBO ? cGI(cBO) : (cCO = new cCV(cBP, cBQ, null, cBR), saveVal('krunker_id', cBP), saveVal('krunker_username', cBQ), cGq(cBS), cCO['hack'] && (window['activeHacker'] = !0x0), cBT && (saveVal('krunker_token', cBT), loginToken = cBT), updateWindow(null, !0x0), cC3 && (cC3 = !0x1, cCa()));
    }
    window['registerAcc'] = function() {
        cGL(0x0, [accName['value'], accPass['value']]);
    }, window['loginAcc'] = function() {
        cGL(0x1, [accName['value'], accPass['value'], null]);
    }, window['logoutAcc'] = function() {
        cGL(-0x1), cGI(), cBT('krunker_id'), cBT('krunker_username'), cBT('krunker_token'), cBT('skins'), cBT('hatIndex'), cBT('backIndex'), cBT('meleeIndex'), cBT('skinColIndex'), cHe = -0x1, cHd = -0x1, cHc = -0x1, cHb = -0x1, cHg = {}, selectSecondary(0x2), windows[0xc]['clanData'] = null, loginToken = null, cCO = null, cGq(), showWindow(0x5), cHy();
    };
    var cGV = !0x1;
    window['newTok'] = function(cBO) {
        cBO && (saveVal('krunker_token', cBO), loginToken = cBO);
    }, window['logoutSessions'] = function(cBO) {
        cBO && (cBO['style']['display'] = 'none'), cGV = !0x0, cCK['send']('las');
    };
    var cGY, cGZ = 0x0;

    function cH0() {
        if ('block' == claimHolder['style']['display']) {
            cGZ = cBR['rewardTime'] - ((cDb || Date['now']()) - cCO['lastReward']);
            var cBO = cCC['getTimeH'](Math['max'](0x0, cGZ));
            cGY != cBO && (cGY = cBO, claimTimer['innerHTML'] = '00:00:00' == cBO ? '' : cBO, merchHolder['style']['top'] = '00:00:00' == cBO ? '205px' : '237px');
            var cBP = 0x0 >= cGZ ? './img/claim_0.png' : './img/claim_1.png';
            claimImg['getAttribute']('src') != cBP && (claimImg['src'] = cBP);
        }
    }

    function cH3(cBO, cBP) {
        cEc(cBP), cCO && (cCO['lastReward'] = cBO), cH0();
    }
    window['claimReward'] = function() {
        0x0 < cGZ || function() {
            if (cRf) return void console['warn']('Attempting\x20to\x20show\x20pre\x20ad\x20when\x20already\x20showing');
            cRf = !0x0;
            var cBO = document['createElement']('script');
            cBO['src'] = '//cdn.playwire.com/bolt/js/zeus/embed.js', cBO['type'] = 'text/javascript', cBO['setAttribute']('charset', 'utf-8'), cBO['setAttribute']('data-config', '//config.playwire.com/1020124/v2/pre_content.json'), cBO['setAttribute']('data-width', '640px'), cBO['setAttribute']('data-height', '360px'), cBO['setAttribute']('data-id', 'pre-content-player'), cBO['setAttribute']('data-hidden-container', 'my-content'), cBO['setAttribute']('data-onready', 'window.boltEventHandlers');
            var cBP = document['getElementById']('pre-content-container');
            cBP['style']['display'] = 'block', cBP['appendChild'](cBO), cRd = setTimeout(function() {
                let cBO = 'none' != document['getElementById']('my-content')['style']['display'];
                cBO ? (console['log']('Ad\x20blocked'), cRg(!0x1)) : console['log']('Ad\x20not\x20blocked');
            }, 0x3a98), cRe = setTimeout(function() {
                console['log']('Ad\x20failed\x20to\x20load'), cRg(!0x1);
            }, 0xea60);
        }();
    }, Object['defineProperty'](window, 'setClassIndex', {
        'writeable': !0x1,
        'value': function(cBO) {
            cDm = cBO;
        }
    });
    var cHa = 0x1,
        cHb = getSavedVal('skinColIndex') || -0x1,
        cHc = getSavedVal('meleeIndex') || -0x1,
        cHd = getSavedVal('backIndex') || -0x1,
        cHe = getSavedVal('hatIndex') || -0x1,
        cHf = getSavedVal('skins'),
        cHg = cHf ? JSON['parse'](cHf) : {};
    setClassIndex(getSavedVal('classindex') || 0x0);
    var cHh = getSavedVal('secondaryInd') || 0x2,
        cHi = 0x0;
    Object['defineProperty'](window, 'selectHat', {
        'writeable': !0x1,
        'value': function(cBO) {
            saveVal('hatIndex', cBO), cHe = cBO, cHy(), showWindow(0x3);
        }
    }), Object['defineProperty'](window, 'selectBack', {
        'writeable': !0x1,
        'value': function(cBO) {
            saveVal('backIndex', cBO), cHd = cBO, cHy(), showWindow(0x3);
        }
    }), Object['defineProperty'](window, 'selectMelee', {
        'writeable': !0x1,
        'value': function(cBO) {
            saveVal('meleeIndex', cBO), cHc = cBO, cHy(), showWindow(0x3);
        }
    }), Object['defineProperty'](window, 'selectSecondary', {
        'writeable': !0x1,
        'value': function(cBO) {
            saveVal('secondaryInd', cBO), cHh = cBO, cHy(), showWindow(0x3);
        }
    }), Object['defineProperty'](window, 'selectSkinColor', {
        'writeable': !0x1,
        'value': function(cBO) {
            saveVal('skinColIndex', cBO), cHb = cBO, cHy(), updateWindow(0x3);
        }
    }), Object['defineProperty'](window, 'selectClass', {
        'writeable': !0x1,
        'value': function(cBO) {
            saveVal('classindex', cBO), cCL['classes'][cBO]['txts'] ? cQx(cCL['classes'][cBO]['txts'][cCC['randInt'](0x0, cCL['classes'][cBO]['txts']['length'] - 0x1)]) : !cCC['randInt'](0x0, 0x2) && cQx(['Let\x27s\x20Go!', 'Alright!', 'I\x27m\x20Ready!'][cCC['randInt'](0x0, 0x2)]), setClassIndex(cBO), cHy(), showWindow(0x3);
        }
    }), Object['defineProperty'](window, 'skinSelector', {
        'writeable': !0x1,
        'value': function(cBO) {
            cHi = cBO, cHy(), showWindow(0xf);
        }
    }), Object['defineProperty'](window, 'selectSkin', {
        'writeable': !0x1,
        'value': function(cBO, cBP) {
            cCP = cCL['store']['skins'][cBO], cHg[cBP] = cCP ? cBO : void 0x0, saveVal('skins', JSON['stringify'](cHg)), cHy(), showWindow(0x3);
        }
    });
    var cHs, cHt, cHu = 0x294,
        cHv = 0x15e,
        cHw = new cCB['PerspectiveCamera'](0xf, 0x1, 0.1, 0x64),
        cHx = new cCB['WebGLRenderer']({
            'canvas': classPreviewCanvas,
            'precision': 'mediump',
            'antialias': !0x1,
            'alpha': !0x0
        });

    function cHy() {
        function cBO(cBO, cBP = !0x0) {
            cBQ && (cBQ += '\x20-\x20');
            var cBR = 'inherit',
                cBS = cCL['weapons'][cBO]['name'];
            if (null != cHg[cBO]) {
                var cBT = cCL['store']['skins'][cHg[cBO]];
                cBT && (cBR = cCL['store']['rarities'][cBT['rarity']]['color'], cBS = cBT['name']);
            }
            cBQ += '<span\x20style=\x27color:' + (cBP ? cBR : 'inherit') + '\x27>' + cBS + '</span>';
        }
        var cBP = cCL['classes'][cDm];
        menuClassName['innerText'] = cBP['name'];
        var cBQ = '';
        for (var cBS of cBP['loadout']) cBO(cBS);
        menuClassSubtext['innerHTML'] = cBQ, (cHs = new cCB['Scene']())['add'](new cCB['AmbientLight'](0x97a0a8));
        var cBT = new cCB['DirectionalLight'](0xf2f8fc, 0.5);
        cBT['position']['set'](0xa, 0x11, -0xa), cHs['add'](cBT);
        var cBY = [null == cHg[cBP['loadout'][0x0]] ? -0x1 : cHg[cBP['loadout'][0x0]], null == cHg[cBP['loadout'][0x1]] ? -0x1 : cHg[cBP['loadout'][0x1]]];
        (cHt = new cCW(-0x1, this, cCC, cBR, cCL))['sid'] = -0x1, cHt['init'](0x0, 0x0, 0x0, 'preview', !0x1), cHt['skins'] = cBY, cHt['hatIndex'] = cHe, cHt['backIndex'] = cHd, cHt['meleeIndex'] = cHc, cHt['skinColIndex'] = cHb, cHt['secIndex'] = cHh, cHt['setClass'](cCL, cDm, cHh, !0x0), cCL['players']['swapWeapon'](cHt, 0x0, !0x0), cHs['add'](cCL['players']['generateMeshes'](cHt, !0x1)), cHt['swapTime'] = 0x0, cHt['weaponMeshes'][0x0]['visible'] = !0x0, cHw['lookAt'](new cCB['Vector3'](0x0, 0.8 * cBR['playerHeight'], 0x0));
    }
    cHw['position']['x'] = -0xa, cHw['position']['y'] = 0x11, cHw['position']['z'] = -0x1d, cHy();
    var cHK = !('true' != getSavedVal('krk_hideFull'));
    window['toggleHF'] = function(cBO) {
        cHK = cBO, saveVal('krk_hideFull', cBO);
    }, toggleHF(cHK), setInterval(() => {
        window['kiH'](cCK);
    }, 0x2ee0);

    function cHM(cBO, cBP) {
        for (var cBQ = '', cBR = 'map' == cBP ? 'selectHostMap' : 'loadUserMod', cBS = 0x0; cBS < cBO['length']; ++cBS) cBQ += '<div\x20class=\x27mapListItem\x27><img\x20class=\x27mapListThumb\x27\x20src=\x27' + (cBO[cBS][cBP + '_image'] ? cBO[cBS][cBP + '_image'] : './img/noimg.png') + '\x27\x20onclick=\x27' + cBR + '(&quot;' + cBO[cBS][cBP + '_name'] + '&quot;,&quot;' + cBO[cBS]['mod_url'] + '&quot;,&quot;' + cBO[cBS]['mod_id'] + '&quot;)\x27/><div\x20style=\x27margin-top:-3px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27' + cBR + '(&quot;' + cBO[cBS][cBP + '_name'] + '&quot;,&quot;' + cBO[cBS]['mod_url'] + '&quot;,&quot;' + cBO[cBS]['mod_id'] + '&quot;)\x27/>' + cBO[cBS][cBP + '_name'] + '</a></div><div\x20style=\x27display:\x20flex\x27><span\x20style=\x27color:rgba(0,0,0,0.2);font-size:15px\x27>\x20by\x20<a\x20target=\x27_blank\x27\x20class=\x27grey\x27\x20href=\x27/social.html?p=profile&q=' + cBO[cBS]['creatorname'] + '\x27>' + cBO[cBS]['creatorname'] + '</a></span><div\x20style=\x27font-size:15px;text-align:right;flex-grow:1\x27>' + cBO[cBS][cBP + '_votes'] + '</div></div></div>';
        return cBQ;
    }

    function cHS(cBO, cBP) {
        var cBQ = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + (0x3 == cBP ? 'Combat\x20Knife' : cBY['get']('generic.none')) + '<div\x20class=\x27itemOwn\x27>' + cBY['get']('generic.default') + '</div><img\x20class=\x27skinImgC\x27\x20src=\x27.' + cCC['versionifyUrl']('/textures/previews/cosmetics/' + cBP + '_default.png') + '\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20onclick=\x27' + cBO + '(-1)\x27>' + cBY['get']('generic.select') + '</div></div>';
        if (cCO || cCL['singlePlayer'])
            for (var cBR = (cCL['singlePlayer'] ? Object['keys'](cCL['store']['skins'])['map'](cBO => cBO = {
                    'ind': parseInt(cBO),
                    'cnt': 0x1
                }) : cCO['skins'])['slice']()['sort'](function(cBO, cBP) {
                    return (null != cBP['ind'] && cCL['store']['skins'][cBP['ind']] ? cCL['store']['skins'][cBP['ind']]['rarity'] : 0x0) - (null != cBO['ind'] && cCL['store']['skins'][cBO['ind']] ? cCL['store']['skins'][cBO['ind']]['rarity'] : 0x0);
                }), cBS = 0x0; cBS < cBR['length']; ++cBS)(cCP = cCL['store']['skins'][cBR[cBS]['ind']]) && cCP['type'] == cBP && (cBQ += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cCL['store']['rarities'][cCP['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cBR[cBS]['cnt'] + '\x27></div>' + cCP['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cCP['creator'] || 'Krunker.io') + '</div><img\x20class=\x27skinImg' + (cCP['type'] ? 'C' : '') + '\x27\x20src=\x27.' + cCC['getPreview'](cCP, cCL['store']) + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27' + cBO + '(' + cBR[cBS]['ind'] + ')\x27>' + cBY['get']('generic.select') + '</div></div>');
        return cBQ += '</div>';
    }
    window['windows'] = [{
        'header': cBY['get']('windows.settings.header'),
        'gen': function() {
            var cBO = '';
            for (var cBP in cF9) cF9[cBP]['pre'] && (cBO += cF9[cBP]['pre']), cBO += '<div\x20class=\x27settName\x27\x20' + (null == cF9[cBP]['hide'] ? '' : 'id=\x27' + cBP + '_div\x27\x20style=\x27display:' + (cF9[cBP]['hide'] ? 'none' : 'block') + '\x27') + '>' + (cF9[cBP]['noi18n'] ? cF9[cBP]['name'] : cBY['get'](cF9[cBP]['name'])) + '\x20' + cF9[cBP]['html']() + '</div>';
            return cBO;
        }
    }, {
        'header': cBY['get']('windows.servers.header'),
        'lastLoadTime': 0x0,
        'serverListData': [],
        'gen': function() {
            return Date['now']() - this['lastLoadTime'] < cBR['serverBrowserRate'] ? this['genList']() : (this['lastLoadTime'] = Date['now'](), this['loadData']());
        },
        'loadData': function() {
            return cC5['fetchGameList']()['then'](cBO => {
                this['serverListData'] = cBO;
                var cBP = !0x1;
                for (var cBQ of cBO)
                    if (cBQ['id'] === cC6) {
                        cBP = !0x0;
                        break;
                    }
                cBP ? window['showWindow'](0x2, !0x0) : cC5['fetchGameInfo'](cC6)['then'](cBO => {
                    this['privateServerData'] = cBO, window['showWindow'](0x2, !0x0);
                });
            }), cBY['get']('generic.loading');
        },
        'expandedRegion': -0x1,
        'totalPlayerCount': 0x0,
        'serverSearch': null,
        'searchList': function() {
            var cBO = document['getElementById']('serverSearch');
            this['serverSearch'] = cBO && '' != cBO['value'] ? cBO['value'] : null, (cBO = document['getElementById']('serverHolder')) && (cBO['innerHTML'] = this['getServers']());
        },
        'getServers': function() {
            var cBO = !!localStorage['debugServerList'],
                cBP = '';
            this['totalPlayerCount'] = 0x0;
            for (var cBQ, cBS = {
                    'custom': {
                        'order': 0x1,
                        'name': 'Custom\x20Games',
                        'players': 0x0,
                        'games': []
                    }
                }, cBT = cF9['defaultRegion']['val'], cBZ = !0x1, cC3 = 0x0; cC3 < this['serverListData']['length']; cC3++)
                if ((cBQ = this['serverListData'][cC3])['data']) {
                    cBS[cBQ['region']] || (cBS[cBQ['region']] = {
                        'name': cBR['regionNames'][cBQ['region']],
                        'players': 0x0,
                        'games': []
                    }, cBT == cBQ['region'] && (cBS[cBQ['region']]['order'] = 0x1));
                    var cC4 = cBQ['data']['cs'] ? 'custom' : cBQ['region'];
                    cBQ['clients'] = Math['min'](cBQ['clients'], cBQ['maxClients']), cC6 === cBQ['id'] && (cBZ = !0x0), (!this['serverSearch'] || this['searchMatches'](cBQ)) && (cBS[cC4]['players'] += cBQ['clients']), this['totalPlayerCount'] += cBQ['clients'], cBS[cC4]['games']['push'](cBQ);
                } else console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.');
            cBZ || (this['privateServerData'] ? this['privateServerData']['data'] ? cBS['custom']['games']['push'](this['privateServerData']) : console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.') : console['warn']('Missing\x20private\x20server\x20data.'));
            var cC5 = [];
            for (var cC7 in cBS) cBS['hasOwnProperty'](cC7) && cC5['push'](cBS[cC7]);
            for (var cC7 of cC5 = cC5['sort']((cBO, cBP) => (cBP['order'] || -0x1) - (cBO['order'] || -0x1))) cC7['games']['sort']((cBO, cBP) => cBP['clients'] - cBO['clients']);
            cCO && cCO['level'];
            for (var cC8 = 0x0; cC8 < cC5['length']; cC8++) {
                (cC7 = cC5[cC8])['games'] = cC7['games']['filter'](cBO => !cHK || cBO['clients'] != cBO['maxClients']);
                var cCa = cC7['name'] + '\x20-\x20' + cC7['players'] + '\x20online',
                    cCg = this['expandedRegion'] == cC8;
                if (cBP += '<div\x20class=\x27menuSelectorHeader\x27\x20onclick=\x27setExpandedRegion(' + (cCg ? -0x1 : cC8) + ')\x27\x20style=\x27cursor:\x20pointer;\x27>' + (cCg ? '&#x25BC;' : '&#x25B6;') + '\x20' + cCa + '</div>', cCg) {
                    cBP += '<div\x20class=\x27menuSelectorHolder\x27>';
                    for (var cCl = 0x0, cCB = 0x0; cCB < cC7['games']['length']; cCB++) {
                        var cCC = cC7['games'][cCB],
                            cCD = cC6 && cC6 == cCC['id'];
                        if (!this['serverSearch'] || this['searchMatches'](cCC)) {
                            cCl++;
                            var cCE = (cBO ? cCC['id'] : cCC['data']['i']) + (cCC['data']['earnKR'] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#2196F3;font-size:33px;vertical-align:bottom;\x27>check_circle</i>' : '') + '<div\x20class=\x27serverPCount\x27>' + cCC['clients'] + '/' + cCC['maxClients'] + '</div>' + (cCC['data']['cs'] ? '<div\x20class=\x27serverRegion\x27>' + cCC['id']['split'](':')[0x0] + '\x20-&nbsp;</div>' : '');
                            cBP += '<div\x20class=\x27' + ('menuSelector' + (cCD ? '\x20selectedMenuSelector' : '')) + '\x27\x20onclick=\x27' + ('checkedSwitchServer(\x22' + cCC['id'] + '\x22,\x20this.querySelector(\x22.serverPCount\x22))') + '\x27>' + cCE + '</div>';
                        }
                    }
                    cC7['games']['length'] && cCl || (cBP += '<div\x20style=\x27margin-left:30px;margin-top:5px\x27>' + cBY['get']('windows.servers.none') + '</div>'), cBP += '</div>';
                }
            }
            return cBP;
        },
        'genList': function() {
            var cBO = this;
            window['setExpandedRegion'] = function(cBP) {
                cBO['expandedRegion'] = cBP, cBO['lastLoadTime'] = Date['now'](), showWindow(0x2, !0x0);
            };
            var cBP = '<div\x20style=\x27font-size:20px\x27>';
            return cBP += '<a\x20class=\x27menuLink\x27\x20onclick=\x27openHostWindow()\x27>' + cBY['get']('windows.servers.host') + '</a><div\x20style=\x27float:right;display:inline-block\x27><input\x20id=\x27serverSearch\x27' + (this['serverSearch'] ? 'value=\x27' + this['serverSearch'] + '\x27' : '') + '\x20type=\x27text\x27\x20placeholder=\x27' + cBY['get']('generic.search') + '\x27\x20oninput=\x27windows[1].searchList()\x27></input></div></div><div\x20id=\x22serverFilters\x22><div\x20id=\x22hideFull\x22\x20style=\x22float:right;align-items:center;display:flex\x22><span\x20class=\x22grey\x22>' + cBY['get']('windows.servers.hide') + '</span><label\x20class=\x22switchsml\x22><input\x20type=\x22checkbox\x22\x20onclick=\x22toggleHF(this.checked);windows[1].searchList()\x22' + (cHK ? '\x20checked' : '') + '><span\x20class=\x22sliderSml\x22></span></label></div></div><div\x20style=\x27height:10px\x27></div>', cBP += '<div\x20style=\x27font-size:20px\x27>', cBP += '<div\x20id=\x27serverHolder\x27>' + this['getServers']() + '</div>', cBP += '<div\x20style=\x27height:10px\x27></div><b\x20style=\x27color:rgba(0,0,0,0.6)\x27>' + cBY['get']('windows.servers.online', this['totalPlayerCount']) + '</b>', cBP += '</div>';
        },
        'searchMatches' (cBO) {
            return !!cBO['data'] && 0x0 <= (cBO['data']['i'] || '')['toLowerCase']()['indexOf']((this['serverSearch'] || '')['toLowerCase']());
        }
    }, {
        'header': cBY['get']('windows.loadout.header'),
        'gen': function() {
            var cBO = cCL['classes'][cDm];
            0x0 > cCL['config']['classes']['indexOf'](parseInt(cDm)) && (cDm = cCL['config']['classes'][0x0], cBO = cCL['classes'][cDm]);
            var cBP = cCL['weapons'][cBO['loadout'][0x0]]['name'],
                cBQ = '#2196F3',
                cBS = cBO['secondary'] ? cCL['weapons'][cHh]['name'] : cBY['get']('generic.none'),
                cBT = cBO['secondary'] ? '#2196F3' : 'rgba(0,0,0,0.3)',
                cBZ = 'rgba(0,0,0,0.3)',
                cC3 = cBZ,
                cC4 = 'rgba(0,0,0,0.3)';
            cCO && (null != cHg[cBO['loadout'][0x0]] && ((cBP = cCL['store']['skins'][cHg[cBO['loadout'][0x0]]]) && (cBQ = cCL['store']['rarities'][cBP['rarity']]['color'], cBP = cBP['name'])), cBO['loadout'][0x1] && null != cHg[cBO['loadout'][0x1]] && ((cBS = cCL['store']['skins'][cHg[cBO['loadout'][0x1]]]) && (cBT = cCL['store']['rarities'][cBS['rarity']]['color'], cBS = cBS['name'])), 0x0 <= cHe && cCL['store']['skins'][cHe] && (cBZ = cCL['store']['rarities'][cCL['store']['skins'][cHe]['rarity']]['color']), 0x0 <= cHd && cCL['store']['skins'][cHd] && (cC3 = cCL['store']['rarities'][cCL['store']['skins'][cHd]['rarity']]['color']), 0x0 <= cHc && cCL['store']['skins'][cHc] && (cC4 = cCL['store']['rarities'][cCL['store']['skins'][cHc]['rarity']]['color']));
            for (var cC5 = cBY['get']('windows.loadout.color.skin'), cC6 = cBR['skinColors']['length'] - 0x1; 0x0 <= cC6; cC6--) cC5 += '<div\x20class=\x27skinColorItem' + (cHb == cC6 ? '\x20activeSkin' : '') + '\x27\x20style=\x27background-color:#' + cBR['skinColors'][cC6]['toString'](0x10) + '\x27\x20onclick=\x27selectSkinColor(' + cC6 + ')\x27></div>';
            return '<div\x20class=\x27settName\x27>' + cBY['get']('windows.loadout.class') + '<span\x20class=\x27settText\x20floatR\x27\x20onclick=\x27showWindow(6)\x27>' + cBO['name'] + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('windows.loadout.primary') + '<span\x20class=\x27settLabel\x20wepLink\x27\x20style=\x27color:' + cBQ + '\x27\x20onclick=\x27skinSelector(' + cBO['loadout'][0x0] + ')\x27>' + cBP + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('windows.loadout.secondary') + '<span\x20class=\x27settLabel' + (cBO['secondary'] ? '\x20wepLink' : '') + '\x27\x20' + (cBO['secondary'] ? 'onclick=\x27showWindow(20)\x27' : '') + '\x20style=\x27color:' + cBT + '\x27>' + cBS + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('windows.loadout.melee') + '<span\x20onclick=\x27showWindow(26)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cC4 + '\x27>' + (cCL['store']['skins'][cHc] ? cCL['store']['skins'][cHc]['name'] : 'Combat\x20Knife') + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('windows.loadout.hat') + '<span\x20onclick=\x27showWindow(16)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cBZ + '\x27>' + (cCL['store']['skins'][cHe] ? cCL['store']['skins'][cHe]['name'] : cBY['get']('generic.none')) + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('windows.loadout.body') + '<span\x20onclick=\x27showWindow(17)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cC3 + '\x27>' + (cCL['store']['skins'][cHd] ? cCL['store']['skins'][cHd]['name'] : cBY['get']('generic.none')) + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('windows.loadout.spray') + '<span\x20onclick=\x27showWindow(9)\x27\x20class=\x27settText\x20floatR\x27>' + cCL['sprays'][cNF]['name'] + '</span></div><div\x20class=\x27settName\x27>' + cC5 + '</div>';
        }
    }, {
        'header': cBY['get']('windows.mods.header'),
        'openList': function() {
            cD1 = !0x1, showWindow(0x12);
        },
        'gen': function() {
            return '<div\x20id=\x27modLinks\x27><a\x20href=\x27https://goo.gl/dPAxfr\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.mods.guide') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27windows[3].openList()\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.mods.list') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(19)\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.mods.publish') + '</a>\x20|\x20<a\x20href=\x27/viewer.html\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.mods.viewer') + '</a></div><form\x20id=\x27modDropper\x27><input\x20onchange=\x27loadMod()\x27\x20id=\x27modInput\x27type=\x27file\x27><p\x20id=\x27modLInfo\x27>' + cBY['get']('windows.mods.drop') + '</p></form><input\x20type=\x27text\x27\x20id=\x27modURL\x27\x20class=\x27accountInput\x27\x20style=\x27width:78%\x27\x20placeholder=\x27' + cBY['get']('windows.mods.paste') + '\x27><a\x20class=\x27menuLink\x27\x20style=\x27display:inline-block;margin-left:10px\x27\x20onclick=\x27loadModURL()\x27>' + cBY['get']('windows.mods.load') + '</a>';
        }
    }, {
        'header': cBY['get']('windows.account.header'),
        'getScore': function(cBO) {
            var cBP = 0x1 < cBO['level'] ? Math['pow'](cBO['level'] / cBR['rankVar'], 0x2) : 0x0;
            return parseInt(cBO['score'] - cBP) + '\x20/\x20' + parseInt(Math['pow']((cBO['level'] + 0x1) / cBR['rankVar'], 0x2) - cBP);
        },
        'gen': function() {
            return cCO ? '<div\x20style=\x27font-size:26px;margin-top:0px:font-weight:bold\x27>Profile</div><div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cBY['get']('generic.name') + '<a\x20href=\x27/social.html?p=profile&q=' + cCO['name'] + '\x27\x20class=\x27floatR\x27>' + cCO['name'] + '</a></div><div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cBY['get']('generic.clan') + '<a\x20class=\x27floatR\x27\x20class=\x27menuLink\x27\x20onclick=\x27showWindow(13)\x27>' + (cCO['clan'] ? '[' + cCO['clan'] + ']' : 'None') + '</a></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.level') + '<span\x20class=\x27floatR\x27>' + cCO['level'] + '</span></div><div\x20class=\x27xpBar\x27><div\x20class=\x27xpBarB\x27\x20style=\x27width:' + cCO['levelProg'] + '%\x27></div><span\x20class=\x27xpBarV\x27>' + this['getScore'](cCO) + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.score') + '<span\x20class=\x27floatR\x27>' + cCO['score'] + '</span></div><div\x20class=\x27settName\x27>World\x20Rank<span\x20class=\x27floatR\x27>??</span></div><div\x20class=\x27settName\x27>KR<span\x20class=\x27floatR\x27>' + cCO['funds'] + 'KR</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.kills') + '<span\x20class=\x27floatR\x27>' + cCO['kills'] + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.deaths') + '<span\x20class=\x27floatR\x27>' + cCO['deaths'] + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.kdr') + '<span\x20class=\x27floatR\x27>' + (cCO['kills'] / Math['max'](cCO['deaths'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>KPG<span\x20class=\x27floatR\x27>' + (cCO['kills'] / Math['max'](cCO['games'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>Nukes<span\x20class=\x27floatR\x27>' + (cCO['stats']['n'] || 0x0) + '</span></div><div\x20class=\x27settName\x27>Melee<span\x20class=\x27floatR\x27>' + (cCO['stats']['mk'] || 0x0) + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.games.played') + '<span\x20class=\x27floatR\x27>' + cCO['games'] + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.games.won') + '<span\x20class=\x27floatR\x27>' + cCO['wins'] + '</span></div><div\x20class=\x27settName\x27>W/L<span\x20class=\x27floatR\x27>' + (cCO['wins'] / Math['max'](cCO['games'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.timep') + '<span\x20class=\x27floatR\x27>' + cCC['getReadableTime'](cCO['timePlayed']) + '</span></div><div\x20style=\x27height:10px\x27></div>' + (cCO['ctrtApp'] ? '' : '<div\x20style=\x27font-size:26px;margin-top:25px;font-weight:bold\x27>Creator\x20Code\x20Application</div><div\x20style=\x27font-size:17px;color:rgba(0,0,0,0.4)\x27>By\x20submitting\x20an\x20Application\x20you\x20agree\x20to\x20the\x20<a\x20href=\x27./docs/partner.txt\x27>Partner\x20Terms</a></div><input\x20type=\x27text\x27\x20id=\x27crtrCode\x27\x20class=\x27smlInput\x27\x20style=\x27width:100%;margin-bottom:8px\x27\x20placeholder=\x27Creator\x20Code\x20Name\x27\x20/><input\x20type=\x27text\x27\x20id=\x27crtrEmail\x27\x20class=\x27smlInput\x27\x20style=\x27width:80%;margin-bottom:8px\x27\x20placeholder=\x27PayPal\x20Email\x20for\x20Payouts\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px;vertical-align:middle\x27\x20onclick=\x27submitCrtrCod()\x27>' + cBY['get']('generic.submit') + '</a><div\x20id=\x27ctrtRes\x27\x20style=\x27color:rgba(0,0,0,0.5)\x27></div>') + '<div\x20style=\x27height:25px\x27></div><a\x20class=\x27menuLink\x27\x20onclick=\x27logoutAcc()\x27>' + cBY['get']('generic.logout') + '</a>' + (cGV ? '' : '<a\x20style=\x27float:right\x27\x20class=\x27menuLink\x27\x20onclick=\x27logoutSessions(this)\x27>' + cBY['get']('generic.logout.sessions') + '</a>') : '<input\x20id=\x27accName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cBY['get']('generic.username') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27' + (getSavedVal('krunker_username') || '') + '\x27></input><input\x20id=\x27accPass\x27\x20type=\x27password\x27\x20placeholder=\x27' + cBY['get']('generic.password') + '\x27\x20class=\x27accountInput\x27></input><div\x20id=\x27accResp\x27\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.5);display:none\x27></div><div\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.3)\x27>' + cBY['get']('windows.account.recover') + '</div><div\x20class=\x27accountButton\x27\x20onclick=\x27registerAcc()\x27>' + cBY['get']('generic.register') + '</div><div\x20class=\x27accountButton\x27\x20onclick=\x27loginAcc()\x27\x20style=\x27margin-left:\x2020px\x27>' + cBY['get']('generic.login') + '</div><div\x20style=\x27margin-top:10px;font-size:11px\x27>This\x20site\x20is\x20protected\x20by\x20reCAPTCHA\x20and\x20the\x20Google\x20<a\x20href=\x27https://policies.google.com/privacy\x27>Privacy\x20Policy</a>\x20and\x20<a\x20href=\x27https://policies.google.com/terms\x27>Terms\x20of\x20Service</a>\x20apply.</div>';
        }
    }, {
        'header': cBY['get']('windows.class.header'),
        'gen': function() {
            for (var cBO = '<div\x20id=\x27skinList\x27>', cBP = 0x0; cBP < cCL['classes']['length']; ++cBP) 0x0 <= cCL['config']['classes']['indexOf'](cBP) && !cCL['classes'][cBP]['hide'] && (cBO += '<div\x20class=\x27skinCard\x27>' + cCL['classes'][cBP]['name'] + '<div\x20class=\x27itemOwn\x27>' + cCL['weapons'][cCL['classes'][cBP]['loadout'][0x0]]['name'] + '</div><img\x20style=\x27margin-top:6px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cCC['versionifyUrl']('/textures/classes/icon_' + cBP + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectClass(' + cBP + ')\x27>' + cBY['get']('generic.select') + '</div></div>');
            return cBO += '</div>';
        }
    }, {
        'header': cBY['get']('windows.controls.header'),
        'gen': function() {
            var cBO = '';
            return cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.forward') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont0\x27\x20onclick=\x27changeCont(0)\x27>' + cCC['getKeyName'](cCM['moveKeys'][0x0]) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.backward') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont1\x27\x20onclick=\x27changeCont(1)\x27>' + cCC['getKeyName'](cCM['moveKeys'][0x1]) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.left') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont2\x27\x20onclick=\x27changeCont(2)\x27>' + cCC['getKeyName'](cCM['moveKeys'][0x2]) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.right') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont3\x27\x20onclick=\x27changeCont(3)\x27>' + cCC['getKeyName'](cCM['moveKeys'][0x3]) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.reload') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont8\x27\x20onclick=\x27changeCont(8)\x27>' + cCC['getKeyName'](cCM['reloadKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.aim') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont10\x27\x20onclick=\x27changeCont(10)\x27>' + cCC['getKeyName'](cCM['aimKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.inspect') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont14\x27\x20onclick=\x27changeCont(14)\x27>' + cCC['getKeyName'](cCM['inspKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.spray') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont9\x27\x20onclick=\x27changeCont(9)\x27>' + cCC['getKeyName'](cCM['sprayKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.jump') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont4\x27\x20onclick=\x27changeCont(4)\x27>' + cCC['getKeyName'](cCM['jumpKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.crouch') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont5\x27\x20onclick=\x27changeCont(5)\x27>' + cCC['getKeyName'](cCM['crouchKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.prim') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont13\x27\x20onclick=\x27changeCont(13)\x27>' + cCC['getKeyName'](cCM['primKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.melee') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont6\x27\x20onclick=\x27changeCont(6)\x27>' + cCC['getKeyName'](cCM['meleeKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.swap') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont7\x27\x20onclick=\x27changeCont(7)\x27>' + cCC['getKeyName'](cCM['swapKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.chat') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont11\x27\x20onclick=\x27changeCont(11)\x27>' + cCC['getKeyName'](cCM['chatKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.voice') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont12\x27\x20onclick=\x27changeCont(12)\x27>' + cCC['getKeyName'](cCM['voiceKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.list') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont15\x27\x20onclick=\x27changeCont(15)\x27>' + cCC['getKeyName'](cCM['listKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.interact') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont16\x27\x20onclick=\x27changeCont(16)\x27>' + cCC['getKeyName'](cCM['interactKey']) + '</span></div>', cBO += '<div\x20class=\x27settName\x27>' + cBY['get']('windows.controls.drop') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont17\x27\x20onclick=\x27changeCont(17)\x27>' + cCC['getKeyName'](cCM['dropKey']) + '</span></div>';
        }
    }, {
        'header': cBY['get']('windows.host.header'),
        'presets': {},
        'presetLoaded': function(cBO, cBP) {
            try {
                windows[0x7]['presets'][cBO]['data'] = cBO && windows[0x7]['presets'][cBO] && cBP ? JSON['parse'](cBP) : 'DEFAULT';
            } catch (cIR) {
                windows[0x7]['presets'][cBO]['data'] = 'DEFAULT';
            }
            updateWindow(0x8);
        },
        'gen': function() {
            var cBO = '';
            if (cD1 = !0x0, cBO += '<div\x20class=\x27settName\x20b\x27>' + cBY['get']('windows.host.maps') + '</div>', cBO += '<div\x20style=\x27margin-top:5px\x27>', !cKr)
                for (var cBP = 0x0; cBP < cCT['length']; cBP++) {
                    var cBQ = cCT[cBP],
                        cBS = '<label\x20class=\x27switch\x27><input\x20id=\x27gameMap' + cBP + '\x27\x20type=\x27checkbox\x27\x20checked=\x27\x27><span\x20class=\x27slider\x27></span></label>';
                    cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cCC['capFirst'](cBQ['name']) + cBS + '</div>';
                }
            cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:10px\x27>' + cBY['get']('windows.host.cmaps') + '\x20<div\x20style=\x27float:right\x27>' + (cKr ? '<span><i\x20style=\x27color:#eb5656;font-size:30px;vertical-align:-3px;cursor:pointer\x27\x20onclick=\x27openHostWindow(true)\x27class=\x27material-icons\x27>delete</i>\x20</span>' : '') + '<a\x20id=\x27commMap\x27\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(10);\x27\x20class=\x27menuLink\x27\x20style=\x27font-size:18px\x27>' + (cKr || cBY['get']('generic.select')) + '</a></div></div><br/>', cKr || (cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:-24px;\x27>' + cBY['get']('windows.host.raw') + '<input\x20id=\x27rawMapData\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20' + (cKs ? 'value=\x27' + cKs + '\x27' : 'placeholder=\x27' + cBY['get']('windows.host.raw') + '\x27') + '\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div><br/>'), cBO += '</div>';
            var cBT = windows[0x7]['presets'][cKr],
                cBZ = !cKr || cBT && cBT['data'];
            if (cBZ) {
                cBT && (cBT = cBT['data']), 'DEFAULT' == cBT && (cBT = null), cBO += '<div\x20class=\x27settName\x20b\x27>' + cBY['get']('windows.host.modes') + '</div>', cBO += '<div\x20style=\x27margin-top:5px\x27>';
                for (cBP = 0x0; cBP < cCU['length']; cBP++) {
                    var cC3 = cCU[cBP];
                    cBS = '<label\x20class=\x27switch\x27><input\x20id=\x27gameMode' + cBP + '\x27\x20type=\x27checkbox\x27\x20' + ((cC6 = cBT ? cBT['modes'] && 0x0 <= cBT['modes']['indexOf'](cBP) : 0x0 == cBP) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
                    cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cCC['capFirst'](cC3['name']) + cBS + '</div>';
                }
                cBO += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:20px\x27>' + cBY['get']('windows.host.classes') + '</div>', cBO += '<div\x20style=\x27margin-top:5px\x27>';
                for (cBP = 0x0; cBP < cCL['classes']['length']; cBP++) {
                    var cC4 = cCL['classes'][cBP];
                    cBS = '<label\x20class=\x27switch\x27><input\x20id=\x27gameClass' + cBP + '\x27\x20type=\x27checkbox\x27\x20' + ((cC6 = !cBT || !cBT['classes'] || 0x0 <= cBT['classes']['indexOf'](cBP)) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
                    cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cC4['name'] + cBS + '</div>';
                }
                cBO += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cBY['get']('windows.host.settings') + '</div>';
                for (cBP = 0x0; cBP < cBR['serverConfig']['length']; cBP++) {
                    cCP = cBR['serverConfig'][cBP];
                    var cC5 = cBY['get']('server.config.' + cCP['varN']);
                    if (cCP['bool']) {
                        var cC6 = cCP['def'];
                        cBT && cBT['settings'] && null != cBT['settings'][cCP['varN']] && (cC6 = !!cBT['settings'][cCP['varN']]), cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cC5 + '\x20<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20id=\x27customS' + cCP['varN'] + '\x27\x20' + (cC6 ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label></div>';
                    } else if (cCP['input']) cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cC5 + '<input\x20id=\x27customS' + cCP['varN'] + '\x27\x20value=\x27' + cCP['def'] + '\x27\x20type=\x27text\x27style=\x27border-radius:12px;border:none;background:#eee;padding:6px;padding-bottom:6px;float:right;margin-top:5px;margin-bottom:5px;\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div>';
                    else {
                        var cC7 = cCP['def'],
                            cC8 = cCO && cCO['featured'] && cCP['maxF'] || cCP['max'];
                        cBT && cBT['settings'] && null != cBT['settings'][cCP['varN']] && ((cC7 = cBT['settings'][cCP['varN']]) > cC8 && (cC7 = cC8)), cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin-left:0\x27>' + cC5 + '<span\x20class=\x27sliderVal\x27\x20id=\x27customSet' + cBP + '\x27>' + cC7 + '</span><div\x20class=\x27slidecontainer\x27><input\x20type=\x27range\x27\x20min=\x27' + cCP['min'] + '\x27\x20max=\x27' + cC8 + '\x27\x20step=\x27' + cCP['step'] + '\x27\x20id=\x27customS' + cCP['varN'] + '\x27\x20value=\x27' + cC7 + '\x27\x20oninput=\x27updateSliderLabel(' + cBP + ',this.value)\x27\x20class=\x27sliderM\x27></div></div>';
                    }
                }
                cBO += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cBY['get']('server.config.private') + '\x20<label\x20class=\x27switch\x27><input\x20id=\x27makePrivate\x27\x20type=\x27checkbox\x27><span\x20class=\x27slider\x27></span></label></div>', cBO += '<div\x20id=\x27hostGamePreset\x27\x20style=\x27text-align:left;margin-top:30px\x27>' + windows[0x7]['genPresets'](!0x0) + '</div>';
            } else windows[0x7]['presets'][cKr] || (windows[0x7]['presets'][cKr] = {}, cCJ['getMapPreset'](cKr, this['presetLoaded'])), cBO += '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27>' + cBY['get']('windows.host.preset.load') + '</div>';
            return cBZ && (cBO += '<div\x20style=\x27text-align:left;margin-top:30px\x27>', cBO += '<div\x20style=\x27color:#919191;margin-bottom:5px\x27\x20id=\x27hostGameMsg\x27></div>', cBO += '<a\x20class=\x27menuLink\x27\x20onclick=\x27createPrivateRoom()\x27>' + cBY['get']('windows.host.start') + '</a>', cBO += '</div>'), cBO;
        },
        'presetAction': function(cBO) {
            if (0x0 == cBO && 'Select' == presetSelect['value']) return;
            if (0x2 == cBO && 'Select' == presetSelect['value']) return;
            let cBP = getSavedVal('krk_hostPresets');
            cBP = cBP ? JSON['parse'](cBP) : {};
            var cBQ = presetName['value']['length'] ? presetName['value'] : 'Select' == presetSelect['value'] ? 'Preset1' : presetSelect['value'];
            if (0x2 == cBO) cBP[presetSelect['value']] && delete cBP[presetSelect['value']], saveVal('krk_hostPresets', JSON['stringify'](cBP));
            else {
                let cBY = 0x1 == cBO ? {} : cBP[presetSelect['value']];
                for (var cBS, cBT = 0x0; cBT < cCT['length']; cBT++) cCT[cBT], cBS = document['getElementById']('gameMap' + cBT), 0x1 == cBO ? 0x1 != cBS['checked'] && (cBY['gameMap' + cBT] = cBS['checked']) : 'gameMap' + cBT in cBY && (cBS['checked'] = cBY['gameMap' + cBT]);
                for (cBT = 0x0; cBT < cCU['length']; cBT++) cBS = document['getElementById']('gameMode' + cBT), 0x1 == cBO ? cBS['checked'] != !cBT && (cBY['gameMode' + cBT] = cBS['checked']) : 'gameMode' + cBT in cBY && (cBS['checked'] = cBY['gameMode' + cBT]);
                for (cBT = 0x0; cBT < cCL['classes']['length']; cBT++) cCL['classes'][cBT], cBS = document['getElementById']('gameClass' + cBT), 0x1 == cBO ? 0x1 != cBS['checked'] && (cBY['gameClass' + cBT] = cBS['checked']) : 'gameClass' + cBT in cBY && (cBS['checked'] = cBY['gameClass' + cBT]);
                for (cBT = 0x0; cBT < cBR['serverConfig']['length']; cBT++) cCP = cBR['serverConfig'][cBT], cBS = document['getElementById']('customS' + cCP['varN']), 0x1 == cBO ? cBS[cCP['bool'] ? 'checked' : 'value'] != cCP['def'] && (cBY[cCP['varN']] = cBS[cCP['bool'] ? 'checked' : 'value']) : cCP['varN'] in cBY && (!cCP['bool'] && !cCP['input'] && (document['getElementById']('customSet' + cBT)['innerText'] = cBY[cCP['varN']]), cBS[cCP['bool'] ? 'checked' : 'value'] = cBY[cCP['varN']]);
                0x1 == cBO ? (cKr && (cBY['commMap'] = cKr), cKt && (cBY['hostModURL'] = cKt), '' != (cBS = document['getElementById']('rawMapData'))['value'] && (cBY['rawMapData'] = cBS['value']), 0x0 != (cBS = document['getElementById']('makePrivate'))['checked'] && (cBY['makePrivate'] = cBS['checked']), cBP[cBQ] = cBY, saveVal('krk_hostPresets', JSON['stringify'](cBP))) : ('commMap' in cBY && (document['getElementById']('commMap')['innerText'] = cKr = cBY['commMap']), 'rawMapData' in cBY && (document['getElementById']('rawMapData')['value'] = cBY['rawMapData']), 'makePrivate' in cBY && (document['getElementById']('makePrivate')['checked'] = cBY['makePrivate']));
            }
            windows[0x7]['genPresets']();
        },
        'genPresets': function(cBO = !0x1) {
            let cBP = getSavedVal('krk_hostPresets');
            cBP = cBP ? JSON['parse'](cBP) : {};
            var cBQ = '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cBY['get']('windows.host.preset') + '</div>';
            for (let cBO in cBQ += '<span\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27><input\x20id=\x27presetName\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20placeholder=\x27' + cBY['get']('windows.host.preset.name') + '\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27\x20style=\x27border:none;background:#eee;padding:6px;padding-bottom:6px;float:left;margin-top:5px;margin-bottom:5px;\x27><select\x20id=\x27presetSelect\x27\x20style=\x27border-radius:12px;margin-left:10px;border:none;background:#eee;padding:6px;padding-bottom:6px;margin-top:5px;margin-bottom:5px;\x27><option\x20selected>Select</option>', cBP) cBP[cBO], cBQ += '<option>' + cBO + '</option>';
            return cBQ += '</select>', cBQ += '<div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(2)\x27>' + cBY['get']('generic.delete') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(1)\x27>' + cBY['get']('generic.save') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(0)\x27>' + cBY['get']('generic.load') + '</div></span>', cBO ? cBQ : void(hostGamePreset['innerHTML'] = cBQ);
        }
    }, {
        'header': cBY['get']('windows.spray.header'),
        'gen': function() {
            for (var cBO = '<div\x20id=\x27skinList\x27>', cBP = 0x0; cBP < cCL['sprays']['length']; ++cBP) cBO += '<div\x20class=\x27skinCard\x27>' + cCL['sprays'][cBP]['name'] + '<div\x20class=\x27itemOwn\x27>' + cBY['get']('windows.spray.default') + '</div><img\x20style=\x27margin-top:10px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cCC['versionifyUrl']('/textures/sprays/' + cBP + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectSpray(' + cBP + ')\x27>' + cBY['get']('generic.select') + '</div></div>';
            return cBO += '</div>';
        }
    }, {
        'header': cBY['get']('windows.maps.header'),
        'searchMaps': function() {
            searchResults['innerHTML'] = cBY['get']('generic.loading'), cCJ['searchMap'](mpSrch['value'], cLc);
        },
        'searchResp': function(cBO) {
            var cBP = '';
            cBO['length'] ? (cBP += '<div\x20style=\x27height:10px\x27></div>', cBP += cHM(cBO, 'map')) : cBP = cBY['get']('windows.maps.none'), document['getElementById']('searchResults') && (document['getElementById']('searchResults')['innerHTML'] = cBP);
        },
        'mapsLoaded': function(cBO, cBP, cBQ) {
            mapList && (cBO && cBO['length'] ? cBQ ? (mapList['innerHTML'] = cBQ, this['listData'][cBP] = null) : (this['listData'][cBP]['dat'] = cHM(cBO, 'map'), updateWindow(0xa)) : (mapList['innerHTML'] = cBY['get']('windows.maps.none'), this['listData'][cBP] = null));
        },
        'tabIndex': 0x0,
        'listData': {},
        'switchTab': function(cBO) {
            this['tabIndex'] != cBO && (this['tabIndex'] = cBO, updateWindow(0xa));
        },
        'gen': function() {
            for (var cBO = cBR['mapTabs'][this['tabIndex']], cBP = '', cBQ = 0x0; cBQ < cBR['mapTabs']['length']; ++cBQ) cBP += '<div\x20class=\x27menuTab' + (this['tabIndex'] == cBQ ? '\x20tabA' : '') + '\x27\x20onclick=\x27windows[9].switchTab(' + cBQ + ')\x27>' + cBR['mapTabs'][cBQ]['n'] + '</div>';
            var cBS = '';
            return cBO['search'] ? cBS = '<input\x20style=\x27margin-top:10px\x27\x20type=\x27text\x27\x20id=\x27mpSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27' + cBY['get']('windows.maps.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[9].searchMaps()\x27>' + cBY['get']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:5px\x27\x20id=\x27searchResults\x27></div>' : this['listData'][this['tabIndex']] ? cBS = this['listData'][this['tabIndex']]['dat'] || cBY['get']('generic.loading') : (cBS = cBY['get']('generic.loading'), this['listData'][this['tabIndex']] = {}, cCJ['listMaps'](this['tabIndex'], cCO ? cCO['id'] : null, cL9)), '<a\x20href=\x27./editor.html\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.maps.editor') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(11)\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.maps.publish') + '</a><a\x20href=\x27https://discord.gg/Kfypyp5\x27\x20class=\x27menuLink\x27\x20style=\x27float:right\x27>' + cBY['get']('windows.maps.community') + '</a><br/><div\x20style=\x27margin-top:25px;margin-bottom:15px\x27>' + cBP + '</div><div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27mapList\x27>' + cBS + '</div>';
        }
    }, {
        'header': cBY['get']('windows.publish.map.header'),
        'gen': function() {
            return cCO ? '<div\x20style=\x27margin-top:-8px;margin-bottom:10px\x27\x20class=\x27setHed\x27>' + cBY['get']('windows.publish.map.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectMapThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27mapThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateMapThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27mapThumbName\x27>' + cBY['get']('windows.publish.map.thumbnail') + '</span></div><input\x20id=\x27mapDataNew\x27\x20type=\x27text\x27\x20placeholder=\x27' + cBY['get']('windows.publish.map.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27mapUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px;margin-bottom:5px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMap()\x27>' + cBY['get']('windows.publish.map.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);margin-top:20px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.publish.map.login') + '</div>';
        }
    }, {
        'header': cBY['get']('windows.theatre.header'),
        'gen': function() {
            return '';
        }
    }, {
        'header': cBY['get']('windows.clans.header'),
        'clanData': null,
        'kickReq': function(cBO) {
            if (cCK['send']('cln', 0x5, cBO), this['clanData'] && this['clanData']['members']) {
                for (var cBP = this['clanData']['members']['length'] - 0x1; 0x0 <= cBP; --cBP) this['clanData']['members'][cBP]['player_id'] == cBO && this['clanData']['members']['splice'](cBP, 0x1);
                updateWindow(0xd);
            }
        },
        'sendReq': function(cBO, cBP) {
            var cBQ = document['getElementById']('clanErr');
            cBQ && (cBQ['style']['color'] = 'rgba(0,0,0,0.6)', cBQ['innerHTML'] = cBY['get']('generic.loading'));
            var cBR = (cBQ = document['getElementById']('clanInp' + cBO)) ? cBQ['value'] : null;
            cCK['send']('cln', cBO, cBP || cBR || 0x1);
        },
        'updReq': function(cBO, cBP, cBQ) {
            cCK['send']('clnR', cBP, cBQ), this['clanData']['members'] && 0x1 == cBQ && this['clanData']['members']['push']({
                'player_name': this['clanData']['requests'][cBO]['player_name']
            }), this['clanData']['requests']['splice'](cBO, 0x1), updateWindow(0xd);
        },
        'delReq': function() {
            this['clanData'] = null, cCO && (cCO['clan'] = null), cCK['send']('cln', 0x4, 0x1), showWindow(0x5);
        },
        'resp': function(cBO, cBP, cBQ) {
            var cBR = document['getElementById']('clanErr');
            cBO && cBR ? (cBR['style']['color'] = cBQ ? 'rgba(0,0,0,0.6)' : 'rgba(255,0,0,0.6)', cBR['innerHTML'] = cBO) : cBP && (cCO && (cCO['clan'] = cBP['clan_name']), this['clanData'] = cBP, updateWindow(0xd));
        },
        'gen': function() {
            var cBO = '',
                cBP = '';
            if (this['clanData'] && this['clanData']['members']) {
                var cBQ = cCO && this['clanData']['clan_playerid'] == cCO['id'];
                cBO = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cBY['get']('windows.clans.members', this['clanData']['members']['length']) + '</div>';
                for (var cBS = 0x0; cBS < this['clanData']['members']['length']; ++cBS) cBO += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27href=\x27/social.html?p=profile&q=' + this['clanData']['members'][cBS]['player_name'] + '\x27>' + this['clanData']['members'][cBS]['player_name'] + '</a>' + (cBQ && this['clanData']['clan_playerid'] != this['clanData']['members'][cBS]['player_id'] ? '<i\x20style=\x27font-size:40px;float:right;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].kickReq(' + this['clanData']['members'][cBS]['player_id'] + ')\x27>clear</i>' : '') + '</div>';
            }
            if (this['clanData'] && this['clanData']['requests']) {
                cBP = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cBY['get']('windows.clans.requests') + '</div>';
                for (cBS = 0x0; cBS < this['clanData']['requests']['length']; ++cBS) cBP += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27\x20href=\x27/social.html?p=profile&q=' + this['clanData']['requests'][cBS]['player_name'] + '\x27>' + this['clanData']['requests'][cBS]['player_name'] + '</a><span\x20style=\x27float:right\x27><i\x20style=\x27font-size:40px;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cBS + ',' + this['clanData']['requests'][cBS]['cr_playerid'] + ',\x200)\x27>clear</i><i\x20style=\x27font-size:40px;color:rgba(0,255,0,0.6);margin-left:10px\x27\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cBS + ',' + this['clanData']['requests'][cBS]['cr_playerid'] + ',\x201)\x27>done</i></span></div>';
                this['clanData']['requests']['length'] || (cBP += '<div\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cBY['get']('windows.clans.requests.none') + '</div>');
            }
            var cBT = cCO ? cCO['clan'] ? '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0px\x27>' + cBY['get']('windows.clans.page', cCO['clan']) + '<a\x20style=\x27float:right\x27\x20href=\x27javascript:;\x27\x20onclick=\x27windows[12].delReq()\x27\x20class=\x27menuLink\x27>' + (this['clanData'] ? cCO && this['clanData']['clan_playerid'] == cCO['id'] ? cBY['get']('generic.delete') : cBY['get']('generic.leave') : '') + '</a></div><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:0px;color:rgba(0,0,0,0.5)\x27>' + (this['clanData'] ? '<div\x20class=\x27settName\x27>' + cBY['get']('generic.level') + '<span\x20class=\x27floatR\x27>' + Math['max'](0x1, Math['floor'](cBR['rankVar'] * Math['sqrt'](this['clanData']['clan_score'] || 0x0))) + '</span></div><div\x20class=\x27settName\x27>' + cBY['get']('generic.score') + '<span\x20class=\x27floatR\x27>' + (this['clanData']['clan_score'] || 0x0) + '</span></div>' + cBO + cBP : cBY['get']('generic.loading')) + '</div>' : '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:-5px\x27>' + cBY['get']('windows.clans.create') + '</div><input\x20id=\x27clanInp1\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x274\x27\x20placeholder=\x27' + cBY['get']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(1)\x27>' + cBY['get']('generic.create') + '</a><div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cBY['get']('windows.clans.join') + '\x20<a\x20href=\x27./social.html?q=clan\x27\x20class=\x27menuLink\x27\x20style=\x27margin-top:10px;display:inline-block\x27>' + cBY['get']('windows.clans.view') + '</a></div><input\x20id=\x27clanInp2\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x275\x27\x20placeholder=\x27' + cBY['get']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(2)\x27>' + cBY['get']('generic.submit') + '</a><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:10px\x27></div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);margin-top:20px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.clans.login') + '</div>';
            return cCO && cCO['clan'] && !this['clanData'] && this['sendReq'](0x3), cBT;
        }
    }, {
        'header': cBY['get']('windows.store.header'),
        'gen': function() {
            cCF['play']('store', 0.4);
            for (var cBO = '', cBP = 0x0; cBP < cCL['store']['wheels']['length']; ++cBP) cCP = cCL['store']['wheels'][cBP], (cCO && 0x0 == cCO['following'] && cCP['free'] && cCO['level'] >= cCP['minLvl'] || !cCP['free']) && (cBO += '<div><a\x20href=\x27javascript:;\x27\x20class=\x27menuLink\x27\x20onclick=\x27prizeWheel(' + cBP + ')\x27>' + cBY['get']('windows.store.spin', cCP['name']) + '</a>\x20' + (cCP['lab'] ? '<span\x20style=\x27color:#fff;margin-left:5px;background-color:' + cCP['lab']['col'] + ';font-size:15px;padding:3px;padding-left:8px;padding-right:8px\x27>\x20' + cCP['lab']['nm'] + '\x20</span>' : '') + '<span\x20style=\x27float:right;color:rgba(0,0,0,0.3)\x27>' + (cCP['priceT'] || cCP['price']) + '<span\x20style=\x27color:rgba(0,0,0,0.6)\x27>\x20' + (cCP['priceT'] ? '' : 'KR') + '</span></span></div>');
            var cBQ = '<div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:-3px\x27>' + cBY['get']('windows.store.agree', '<a\x20href=\x27./docs/terms.txt\x27>') + '</a>.\x20Support\x20your\x20favorite\x20Content\x20Creator\x20by\x20using\x20a\x20Creator\x20Code</div><input\x20type=\x27text\x27\x20id=\x27creatorCodeI\x27\x20class=\x27smlInput\x27\x20style=\x27width:100%;margin-bottom:8px\x27\x20placeholder=\x27Enter\x20Creator\x20Code\x27\x20/>';
            for (cBP = 0x0; cBP < cCL['store']['purchases']['length']; ++cBP) cBQ += '<div><a\x20href=\x27javascript:;\x27\x20class=\x27menuLink\x27\x20onclick=\x27showPurchase(' + cBP + ')\x27>' + (cCP = cCL['store']['purchases'][cBP])['val'] + '\x20KR\x20</a><span\x20style=\x27float:right;color:rgba(0,0,0,0.3)\x27>' + (cCP['tag'] ? '<span\x20style=\x27color:#fff;font-size:15px;padding:10px;padding-top:2px;vertical-align:middle;padding-bottom:2px;background-color:' + cCP['tagCol'] + '\x27>' + cCP['tag'] + '</span>\x20' : '') + cCP['price'] + '<span\x20style=\x27color:rgba(0,0,0,0.6)\x27>\x20USD</span></span></div>';
            var cBR = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cBY['get']('windows.store.purchase') + '</b>' + cBQ,
                cBS = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cBY['get']('windows.store.voucher') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:6px\x27>' + cBY['get']('windows.store.voucherinfo') + '</div><input\x20type=\x27text\x27\x20id=\x27redVouch\x27\x20class=\x27smlInput\x27\x20style=\x27width:80%\x27\x20placeholder=\x27Enter\x20KR\x20Code\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27redeemVoucher()\x27>Redeem</a><div\x20id=\x27vouchRes\x27></div>';
            return cCO ? '<b\x20style=\x27font-size:26px\x27>' + cBY['get']('windows.store.market') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cBY['get']('windows.store.buy') + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27window.open(`/social.html?p=market`)\x27>' + cBY['get']('windows.store.market2') + '</a></div><b\x20style=\x27font-size:26px\x27>' + cBY['get']('windows.store.wheels') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cBY['get']('windows.store.unlock') + '</div>' + cBO + cBR + cBS + '<div\x20style=\x27float:right;margin-top:20px\x27>' + cBY['get']('windows.store.amount', cCO['funds']) + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.store.login') + '</div>';
        }
    }, {
        'header': cBY['get']('windows.skin.header'),
        'gen': function() {
            var cBO = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + cBY['get']('generic.default') + '<div\x20class=\x27itemOwn\x27>by\x20Krunker.io</div><img\x20class=\x27skinImg\x27\x20src=\x27.' + cCC['versionifyUrl']('/textures/previews/weapons/' + cCL['weapons'][cHi]['src'] + '.png') + '\x27\x20style=\x27margin-top:-10px\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27margin-top:-40px\x27\x20onclick=\x27selectSkin(-1,' + cHi + ')\x27>' + cBY['get']('generic.select') + '</div></div>';
            if (cCO || cCL['singlePlayer'])
                for (var cBP = (cCL['singlePlayer'] ? Object['keys'](cCL['store']['skins'])['map'](cBO => cBO = {
                        'ind': parseInt(cBO),
                        'cnt': 0x1
                    }) : cCO['skins'])['slice']()['sort'](function(cBO, cBP) {
                        return (null != cBP['ind'] && cCL['store']['skins'][cBP['ind']] ? cCL['store']['skins'][cBP['ind']]['rarity'] : 0x0) - (null != cBO['ind'] && cCL['store']['skins'][cBO['ind']] ? cCL['store']['skins'][cBO['ind']]['rarity'] : 0x0);
                    }), cBQ = 0x0; cBQ < cBP['length']; ++cBQ)(cCP = cCL['store']['skins'][cBP[cBQ]['ind']]) && !cCP['type'] && cCP['weapon'] == cHi + 0x1 && (cBO += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cCL['store']['rarities'][cCP['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cBP[cBQ]['cnt'] + '\x27></div>' + cCP['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cCP['creator'] || 'Krunker.io') + '</div><img\x20style=\x27margin-top:-10px\x27\x20class=\x27skinImg' + (cCP['type'] ? 'C' : '') + '\x27\x20src=\x27.' + cCC['getPreview'](cCP, cCL['store']) + '\x27/><div\x20class=\x27selctBtn\x27\x20style=\x27margin-top:-40px\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectSkin(' + cBP[cBQ]['ind'] + ',' + (cCP['weapon'] - 0x1) + ')\x27>' + cBY['get']('generic.select') + '</div></div>');
            return cBO += '</div>';
        }
    }, {
        'header': cBY['get']('windows.hat.header'),
        'gen': function() {
            return cHS('selectHat', 0x1);
        }
    }, {
        'header': cBY['get']('windows.back.header'),
        'gen': function() {
            return cHS('selectBack', 0x2);
        }
    }, {
        'header': cBY['get']('windows.mods.community.header'),
        'modData': null,
        'searchMods': function() {
            searchResults['innerHTML'] = cBY['get']('generic.loading'), cCJ['searchMod'](moSrch['value'], cLc);
        },
        'searchResp': function(cBO) {
            var cBP = '';
            cBO['length'] ? (cBP += '<div\x20style=\x27height:10px\x27></div>', cBP += cHM(cBO, 'mod')) : cBP = cBY['get']('windows.mods.community.none'), document['getElementById']('searchResults') && (document['getElementById']('searchResults')['innerHTML'] = cBP);
        },
        'resp': function(cBO) {
            if (cBO && cBO['length']) this['modData'] = cBO, this['modData']['loaded'] = !0x0, updateWindow(0x12);
            else {
                this['modData'] = null;
                var cBP = document['getElementById']('modsList');
                cBP && (cBP['innerHTML'] = cBY['get']('windows.mods.community.none'));
            }
        },
        'gen': function() {
            var cBO = '';
            if (this['modData'] && this['modData']['loaded']) {
                cBO = '<div\x20style=\x27margin-bottom:-5px;margin-top:-5px;\x27>' + cBY['get']('generic.search') + '</div><input\x20type=\x27text\x27\x20id=\x27moSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27' + cBY['get']('windows.mods.community.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[17].searchMods()\x27>' + cBY['get']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:5px\x27\x20id=\x27searchResults\x27></div>';
                for (var cBP = ['<div\x20style=\x27margin-bottom:5px;margin-top:15px\x27>' + cBY['get']('windows.mods.community.hot') + '</div>', '<div\x20style=\x27margin-top:20px;margin-bottom:5px\x27>' + cBY['get']('windows.mods.community.new') + '</div>', '<div\x20style=\x27margin-top:20px;margin-bottom:5px\x27>' + cBY['get']('windows.mods.community.fav') + '</div>'], cBQ = 0x0; cBQ < this['modData']['length']; ++cBQ) this['modData'][cBQ] && (this['modData'][cBQ]['length'] && (cBO += cBP[cBQ]), cBO += cHM(this['modData'][cBQ], 'mod'));
            } else cBO = cBY['get']('generic.loading'), this['modData'] || (this['modData'] = {}, cCJ['listMods'](cCO ? cCO['id'] : null, cL6));
            return '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27modsList\x27>' + cBO + '</div>';
        }
    }, {
        'header': cBY['get']('windows.publish.mod.header'),
        'gen': function() {
            return cCO ? '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cBY['get']('windows.publish.mod.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectModThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27modThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateModThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27modThumbName\x27>' + cBY['get']('windows.publish.mod.thumbnail') + '</span></div><input\x20id=\x27pubModName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cBY['get']('windows.publish.mod.name') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><input\x20id=\x27pubModURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cBY['get']('windows.publish.mod.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27modUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMod()\x27>' + cBY['get']('windows.publish.mod.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5)\x27\x20class=\x27menuLink\x27>' + cBY['get']('windows.publish.mod.login') + '</div>';
        }
    }, {
        'header': cBY['get']('windows.secondary.header'),
        'gen': function() {
            for (var cBO = '<div\x20id=\x27skinList\x27>', cBP = 0x0; cBP < cCL['weapons']['length']; ++cBP)
                if ((cCP = cCL['weapons'][cBP]) && cCP['secondary']) {
                    var cBQ = !cCP['minRec'] || cCO && cCO['level'] >= cCP['minRec'] || cCL['singlePlayer'];
                    cBO += '<div\x20class=\x27skinCard\x27>' + cCP['name'] + '<div\x20class=\x27itemOwn\x27>' + (cCP['minRec'] ? cBY['get']('windows.secondary.' + (cBQ ? 'unlocked' : 'req'), cCP['minRec']) : cBY['get']('generic.default')) + '</div><img\x20style=\x27margin-top:10px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cCC['versionifyUrl']('/img/prev/' + cCP['src'] + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27' + (cBQ ? 'onclick=\x27selectSecondary(' + cBP + ')' : '') + '\x27>' + cBY['get']('generic.select') + '</div></div>';
                }
            return cBO += '</div>';
        }
    }, {
        'header': cBY['get']('windows.advertise.header'),
        'gen': function() {
            return '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0\x27>Advertise\x20in\x20Game</div><div\x20style=\x27color:rgba(0,0,0,0.4)\x27>On\x20krunker.io\x20you\x20have\x20the\x20ability\x20to\x20place\x20advertisements\x20in\x20game.<div\x20style=\x27height:10px\x27></div>\x20The\x20game\x20features\x20several\x20<b>3d\x20Billboards</b>\x20that\x20yield\x20a\x20very\x20high\x20impression\x20rate\x20&\x20that\x20are\x20<b>not\x20affected\x20by\x20ad\x20blockers</b>.</div><img\x20src=\x27./img/ad_1.png\x27\x20style=\x27width:100%;margin-top:10px\x27/><div\x20style=\x27color:rgba(0,0,0,0.4);margin-top:10px\x27><b>Daily\x20Users:</b>\x20~\x202,000,000<br/><b>Registered\x20Accounts:</b>\x20~\x205,000,000<br/><b>Daily\x20Impressions:</b>\x20~\x206,500,000<br/><b>Peak\x20CCU:</b>\x20~\x2028,000<br/><b>Session\x20Time\x20avg:</b>\x2014\x20minutes<br/><div\x20style=\x27height:5px\x27></div><i\x20style=\x27color:rgba(0,0,0,0.2)\x27>as\x20of\x2016/06/2019</i></div><div\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.4)\x27>For\x20inquiries\x20contact\x20<a>info@yendis.ch</a></div>';
        }
    }, {
        'header': 'Social',
        'gen': function() {
            return 'TODO';
        }
    }, {
        'header': cBY['get']('windows.players.header'),
        'gen': function() {
            var cBO = '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27><center>' + (cCL['players']['list']['length'] ? cBY['get']('windows.players.header') + '<hr>' : cBY['get']('windows.players.none')) + '</div>';
            cBO += '<div\x20style=\x27background-color:gainsboro;border-radius:\x2012px;\x27>', cCN && (cBO += '<div><span\x20class=\x27settNameSmall\x27>' + (cCZ ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + cCN['name'] + (cCN['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cBR['verClans']['indexOf'](cCN['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cCN['clan'] + ']</span>' : '') + '</span>' + (cCO && cCO['developer'] ? '<span\x20style=\x27float:right\x27><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cCN['id'] + '\x22,\x202)\x27>Kill</span><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpall\x27\x20onclick=\x27punishPlayer(null,\x205)\x27>TPAll</span></span>' : '') + '</div>');
            for (let cBP of cCL['players']['list']['filter'](cBO => !cBO['isYou'])) cBO += '<div><span\x20class=\x27settNameSmall\x27>' + (cD0 == cBP['id'] ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + '<a\x20target=\x27_blank\x27\x20class=\x27' + (cBP['isHacker'] ? 'red' : 'grey') + '\x27\x20href=\x27/social.html?p=profile&q=' + cBP['name'] + '\x27>' + cBP['name'] + (cBP['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cBR['verClans']['indexOf'](cBP['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cBP['clan'] + ']</span>' : '') + '</a></span>' + (cCZ || cCO && cCO['developer'] ? '<span\x20style=\x27float:right\x27><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kick\x27\x20onclick=\x27punishPlayer(\x22' + cBP['id'] + '\x22,\x200)\x27>Kick</span><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20ban\x27\x20onclick=\x27punishPlayer(\x22' + cBP['id'] + '\x22,\x201)\x27>Ban</span>' + (cCO && cCO['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cBP['id'] + '\x22,\x202)\x27>Kill</span>' : '') + (cCO && cCO['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tp2\x27\x20onclick=\x27punishPlayer(\x22' + cBP['id'] + '\x22,\x203)\x27>TP2</span>' : '') + (cCO && cCO['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpme\x27\x20onclick=\x27punishPlayer(\x22' + cBP['id'] + '\x22,\x204)\x27>TPME</span>' : '') + '</span>' : '') + '</div>';
            return cBO += '</div>';
        }
    }, {
        'header': cBY['get']('windows.join.header'),
        'gen': function() {
            return '<input\x20id=\x27gameURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cBY['get']('windows.join.code') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27\x27></input>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27accountButton\x27\x20onclick=\x27joinGame()\x27,\x20style=\x27width:100%\x27>' + cBY['get']('windows.join.header') + '</div>';
        }
    }, {
        'header': cBY['get']('windows.client.header'),
        'gen': function() {
            return '<div><ul\x20style=\x27padding:0;display:flex;list-style:none;text-align:center;margin:0;margin-top:-10px\x27><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;margin-right:10px\x27><a\x20href=\x27//client2.krunker.io/setup.exe\x27\x20style=\x27display:block;width:100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/windows.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cBY['get']('windows.client.windows') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client2.krunker.io/setup.dmg\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/mac.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cBY['get']('windows.client.mac') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client2.krunker.io/setup.AppImage\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/linux.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cBY['get']('windows.client.linux') + '</a></li></ul></div>';
        }
    }, {
        'header': cBY['get']('windows.melee.header'),
        'gen': function() {
            return cHS('selectMelee', 0x3);
        }
    }, {
        'header': cBY['get']('windows.ranked.header'),
        'gen': function() {
            return '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27>Coming\x20Soon</div>';
        }
    }];
    for (var cK6 = 0x0; cK6 < windows['length']; ++cK6) windows[cK6]['html'] = '';
    var cK7 = 0x0;

    function cK8(cBO, cBP) {
        null == cBO || null == cBO ? (tmpEl = document['getElementById']('vouchRes'), tmpEl && (tmpEl['innerHTML'] = cBP || 'Failed\x20to\x20Redeem')) : (cEc(cBO), updateWindow(null, !0x0));
    }
    Object['defineProperty'](window, 'updateWindow', {
        'writeable': !0x1,
        'value': function(cBO, cBP) {
            'block' == windowHolder['style']['display'] && (cK7 == cBO && null != cBO ? showWindow(cBO, !0x0) : cBP && showWindow(cK7, !0x0));
        }
    }), Object['defineProperty'](window, 'showWindow', {
        'writeable': !0x1,
        'value': function(cBO, cBP) {
            window['idleTimer'] = 0x0, windows['length'] > 0x1b && (windows['length'] = 0x1b), cBP || cBO && ('block' != windowHolder['style']['display'] || cBO != cK7) ? (cCH['toggleMenu'](!0x0), menuWindow['innerHTML'] = windows[cBO - 0x1]['gen'] ? windows[cBO - 0x1]['gen']() : windows[cBO - 0x1]['html'], cK7 = cBO, windowHeader['innerHTML'] = windows[cBO - 0x1]['header'], cCH['toggleWindow'](!0x0, cCM['gamepad']['connected'])) : (cCH['toggleWindow'](!0x1, cCM['gamepad']['connected']), cCM['inputChanger'] = null);
        }
    }), window['playTick'] = function() {
        cCF['play']('tick_0', 0.2);
    }, window['copyInviteLink'] = function() {
        cCC['copyToClipboard']('https://' + location['host'] + '/?game=' + cC6), inviteButton['innerText'] = cBY['get']('menu.btn.invite.clicked'), setTimeout(() => inviteButton['innerText'] = cBY['get']('menu.btn.invite'), 0x4e2);
    }, Object['defineProperty'](window, 'punishPlayer', {
        'writeable': !0x1,
        'value': function(cBO, cBP) {
            if (!(0x2 < cBP || 0x0 > cBP) || cCO && cCO['developer']) {
                let cBQ = cCL['players']['list']['find'](cBP => cBP['id'] == cBO);
                cBQ ? cCK['send']('pnh', cBP, cBQ['id']) : 0x4 < cBP && cCK['send']('pnh', cBP, null);
            }
        }
    }), window['submitCrtrCod'] = function() {
        var cBO = document['getElementById']('crtrEmail'),
            cBP = document['getElementById']('crtrCode');
        cBO['value'] && cBP['value'] && (tmpEl = document['getElementById']('ctrtRes'), tmpEl && (tmpEl['innerHTML'] = 'Loading...'), cCK['send']('crtC', cBP['value'], cBO['value']));
    }, window['crtrCodRes'] = function(cBO) {
        tmpEl = document['getElementById']('ctrtRes'), tmpEl && (tmpEl['innerHTML'] = cBO);
    }, window['redeemVoucher'] = function() {
        var cBO = document['getElementById']('redVouch');
        if (cBO && cBO['value']) {
            var cBP = cBO['value'];
            (cBO = document['getElementById']('vouchRes')) && (cBO['innerHTML'] = 'Loading...'), cCK['send']('vo', cBP);
        }
    };
    var cKo, cKp, cKq, cKr, cKs, cKt, cKu = spinWindow,
        cKv = cKu['getContext']('2d'),
        cKw = 0.95,
        cKx = 0.6,
        cKy = null,
        cKz = !0x1,
        cKA = 0x0,
        cKB = 0x0,
        cKC = 0x0,
        cKD = 0x0,
        cKE = 0x0,
        cKF = 0x1e,
        cKG = 0x12c,
        cKH = !0x0,
        cKI = !0x1,
        cKJ = 0x0,
        cKK = 0x0,
        cKL = new cCB['PerspectiveCamera'](0x2d, 0x1, 0.1, 0x64),
        cKM = new cCB['WebGLRenderer']({
            'precision': 'mediump',
            'antialias': !0x1,
            'alpha': !0x0
        });

    function cKN(cBO, cBP) {
        if (cDh) {
            var cBQ = cCL['store']['skins'][cBP];
            cBQ && cQc(null, '<span\x20style=\x27color:#fff\x27>' + cBY['get']('windows.store.unboxed', cBO, '</span>') + '\x20<span\x20style=\x27color:' + cCL['store']['rarities'][cBQ['rarity']]['color'] + '\x27>' + cBQ['name'] + '</span>', !0x0);
        }
    }

    function cKR(cBO, cBP, cBQ, cBR, cBS) {
        if (cKz = !0x1, cBR);
        else {
            if (cKy = cCL['store']['skins'][cBP], spinItemName['innerHTML'] = cKy['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.5)\x27>by\x20' + (cKy['creator'] || 'Krunker.io') + '</div>', cKB = 0x2 * Math['PI'] * (cBO / 0x64 + 0xd) + Math['PI'] / 0x2, cCO)
                if (cBS && (cCO['following'] = cBS), cCO['funds'] = cBQ, cGs(), spinKR['innerHTML'] = cCO['funds'] + '\x20KR', cCO['skins']['some'](cBO => cBO['ind'] === cBP)) {
                    var cBT = cCO['skins']['find'](cBO => cBO['ind'] === cBP);
                    cBT && cBT['cnt']++;
                } else cCO['skins']['push']({
                    'ind': cBP,
                    'cnt': 0x1
                });
            spinRotation = 0x0, cKJ = 0x0, spinCost['innerHTML'] = '', (cKo = new cCB['Scene']())['add'](new cCB['AmbientLight'](0x4f4f4f));
            var cBY = new cCB['DirectionalLight'](0xffffff, 0.5);
            cBY['position']['set'](0x3, 0x1, 0x0), cKo['add'](cBY);
            var cBZ = cKy['type'] ? cKy : cCL['store']['previews'][cKy['weapon']] || {};
            (cKp = cCE['genObj3D'](0x0, 0x1 + (cBZ['yOff'] || 0x0), cBZ['xOff'] || 0x0))['rotateX'](-Math['PI'] / 0x7), cKp['rotateY'](Math['PI'] + 0.5 + (cBZ['zRota'] || 0x0)), cKp['rotateZ'](-0.5), cKp['orgXR'] = cKp['rotation']['x'], cKp['orgYP'] = cKp['position']['y'], cCE['loadMesh']({
                'src': cCL['store']['types'][cKy['type'] || 0x0] + (cKy['type'] ? cKy['id'] : cKy['weapon']) + (null == cKy['mid'] ? '' : '_' + cKy['mid']),
                'texSrc': null == cKy['mid'] ? cKy['type'] && 0x3 == cKy['type'] ? 'melee/melee_' + (cKy['id'] || 0x0) + (cKy['tex'] ? '_' + cKy['tex'] : '') : cKy['type'] ? cKy['tex'] ? (0x1 == cKy['type'] ? 'hats/hat_' : 'body/body_') + cKy['id'] + '_' + cKy['tex'] : null : cKy['tex'] ? cKy['tex'] : 'weapons/skins/weapon_' + cKy['weapon'] + '_' + cKy['id'] : null,
                'movT': cKy['movT'],
                'sameGlow': cKy['sameGlow'],
                'glowText': cKy['glow'] || cKy['sameGlow'],
                'emissive': cKy['glow'] || cKy['sameGlow'] ? 0xffffff : null,
                'noGreen': !0x0,
                'uv2': !0x0,
                'fillScale': 0x3c,
                'centerZ': !0x0
            }, 0x0, 0x0, 0x0, (cKy['type'] && 0x3 != cKy['type'] ? Math['PI'] : Math['PI'] / 0x2) + (cBZ['xRot'] || 0x0), 2.2 * (cBZ['scl'] || 0x1), cKp), cKo['add'](cKp), cKL['lookAt'](cKo['position']);
        }
    }

    function cL2(cBO, cBP, cBQ) {
        windows[0xc]['resp'](cBO, cBP, cBQ);
    }

    function cL6(cBO, cBP) {
        cBP && windows[0x11]['resp'](cBP['data'], cBP['error']);
    }

    function cL9(cBO, cBP) {
        cBP && windows[0x9]['mapsLoaded'](cBP['data'], cBP['index'], cBP['error']);
    }

    function cLc(cBO, cBP) {
        cBP && windows[cBP['index']]['searchResp'](cBP['data']);
    }
    cKM['setPixelRatio'](0.6 * window['devicePixelRatio']), cKL['position']['y'] = 0xa, spinItemCanvas['appendChild'](cKM['domElement']), Object['defineProperty'](window, 'prizeWheel', {
        'writeable': !0x1,
        'value': function(cBO, cBP) {
            (cKq = cCL['store']['wheels'][cBO])['openURL'] && window['openURL'](cBR['followURLS'][cCC['randInt'](0x0, cBR['followURLS']['length'] - 0x1)]), cKC = cBO, showWindow(0x0), cKA = 0x0, cKH = !cKz, cKI = !0x1, cKB = 0x0, cKK = 0x0, spinRotation = 0x0, cKD = cKE = 0x0, cCH['toggleMenuHider'](!0x1), spinItem['style']['display'] = 'none', spinItemName['style']['display'] = 'none', spinRespin['style']['display'] = 'none', spinUI['style']['display'] = 'block', cKL['position']['x'] = cKG, spinButton['style']['opacity'] = 0x1, spinText['style']['display'] = 'table-cell', spinHeader['innerHTML'] = 'SPIN', spinCost['innerHTML'] = '-' + cKq['price'] + 'KR', spinRespin['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27margin-left:-10px;text-shadow:none;vertical-align:sub;font-size:35px;\x27>refresh</i>\x20' + cKq['price'] + '\x20KR';
            for (var cBQ = '<div\x20style=\x27font-size:50px;color:#fff\x27>' + cKq['name']['toUpperCase']() + '</div>', cBS = 0x0; cBS < cCL['store']['rarities']['length']; ++cBS)(cCP = cCL['store']['rarities'][cBS])['noSpin'] || (cBQ += '<div\x20style=\x27margin-top:5px;color:#fff\x27>' + cCP['name'] + '<span\x20style=\x27color:rgba(255,255,255,0.5)\x27>&emsp;' + cKq['rarities'][cBS] + '%</span><div\x20class=\x27colCub\x27\x20style=\x27background-color:' + cCP['color'] + '\x27></div></div>');
            spinInfo['innerHTML'] = cBQ, cCO && (spinKR['innerHTML'] = cCO['funds'] + '\x20KR'), cBP && spinButton['click']();
        }
    }), spinRespin['onclick'] = function() {
        cKI && prizeWheel(cKC, !0x0);
    }, spinButton['onclick'] = function(cBO) {
        cBO['stopPropagation'](), cBO['preventDefault'](), window['idleTimer'] = 0x0, cCK && !cKz && cKH && cCO && cCO['funds'] >= cKq['price'] ? (cKz = !0x0, cKH = !0x1, cCK['send']('spin', cKC), spinHeader['innerHTML'] = '', spinCost['innerHTML'] = cBY['get']('windows.store.purchasing'), cCF['play']('buy_1', 0.1)) : cKI && cBO['shiftKey'] && prizeWheel(cKC, !0x0);
    }, spinUI['onclick'] = function(cBO) {
        showWindow(0xe), cCH['toggleMenuHider'](!0x0), spinUI['style']['display'] = 'none', cCK && cCK['send']('unbx'), cKI && cBO['shiftKey'] && prizeWheel(cKC, !0x0);
    }, Object['defineProperty'](window, 'selectHostMap', {
        'writeable': !0x1,
        'value': function(cBO, cBP = null) {
            cKr = cBO, cKs = 'undefined' == cBP ? null : cBP, showWindow(0x8);
        }
    }), Object['defineProperty'](window, 'selectHostMod', {
        'writeable': !0x1,
        'value': function(cBO) {
            cKt = cBO, showWindow(0x8);
        }
    }), Object['defineProperty'](window, 'openHostWindow', {
        'writeable': !0x1,
        'value': function(cBO) {
            cKr = null, cKt = null, cKs = null, showWindow(0x8, cBO);
        }
    });
    var cLp, cLq = !('true' != getSavedVal('krk_record'));

    function cLr(cBO, cBP) {
        try {
            mapUpResp && !cBP && (mapUpResp['innerHTML'] = cBO);
        } catch (cLu) {}
        try {
            modUpResp && cBP && (modUpResp['innerHTML'] = cBO);
        } catch (cLv) {}
    }
    window['enableRecord'] = function(cBO) {
        cLq = cBO, saveVal('krk_record', cBO);
    }, enableRecord(cLq), window['createClip'] = function() {
        if (cLq && cCN && cCN['active'] && cLp['states']['length']) {
            for (var cBO = Object['assign']({}, cCL['map']['maps'][cCL['mapIndex']]), cBP = 0x0; cBP < cBO['objects']['length']; ++cBP) cBO['objects'][cBP]['i'] = cBR['prefabIDS']['indexOf'](cBO['objects'][cBP]['i']), cBO['objects'][cBP]['t'] = cBR['textureIDS']['indexOf'](cBO['objects'][cBP]['t']);
            var cBQ = {
                'id': 'clip_' + Date['now'](),
                'mode': cCL['modeIndex'],
                'map': cBO,
                'states': []
            };
            for (cBP = 0x0; cBP < cLp['states']['length']; ++cBP)
                if (cBP) {
                    var cBS = [];
                    cBS['push'](cLp['states'][cBP]['input']['data']), cLp['states'][cBP]['players']['length'] && cBS['push'](cLp['states'][cBP]['players']), cBQ['states']['push'](cBS);
                } else cBQ['states']['push'](cLp['states'][cBP]);
            downloadFile(cBQ['id'] + '.txt', cBQ);
        }
    }, window['downloadFile'] = function(cBO, cBP) {
        var cBQ = document['createElement']('a');
        cBQ['setAttribute']('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON['stringify'](cBP))), cBQ['setAttribute']('download', cBO), cBQ['style']['display'] = 'none', document['body']['appendChild'](cBQ), cBQ['click'](), document['body']['removeChild'](cBQ);
    }, window['updateMapThumb'] = function() {
        var cBO = null;
        try {
            cBO = document['getElementById']('mapThumb')['files'][0x0];
        } catch (cLF) {}
        document['getElementById']('mapThumbName')['innerHTML'] = cBO ? cBO['name'] : cBY['get']('generic.failed');
    }, window['selectMapThumb'] = function() {
        document['getElementById']('mapThumb')['click']();
    }, window['uploadCustomMap'] = function() {
        mapUpResp && (mapUpResp['innerHTML'] = cBY['get']('generic.loading'));
        var cBO = null;
        try {
            cBO = document['getElementById']('mapThumb')['files'][0x0];
        } catch (cLH) {}
        if (cBO) {
            var cBP = new FileReader();
            cBP['readAsDataURL'](cBO), cBP['onload'] = function() {
                return 0x28 < cCC['thumbnailSize'](cBP['result']) ? void cLr(cBY['get']('thumbnail.upload.limit')) : void cCK['send']('uploadM', mapDataNew['value'], cBP['result']);
            }, cBP['onerror'] = function() {
                mapUpResp['innerHTML'] = cBY['get']('thumbnail.upload.error');
            };
        } else cCK['send']('uploadM', mapDataNew['value']);
    }, window['updateModThumb'] = function() {
        var cBO = null;
        try {
            cBO = document['getElementById']('modThumb')['files'][0x0];
        } catch (cLK) {}
        document['getElementById']('modThumbName')['innerHTML'] = cBO ? cBO['name'] : cBY['get']('generic.failed');
    }, window['selectModThumb'] = function() {
        document['getElementById']('modThumb')['click']();
    }, window['uploadCustomMod'] = function() {
        modUpResp && (modUpResp['innerHTML'] = cBY['get']('generic.loading'));
        var cBO = null;
        try {
            cBO = document['getElementById']('modThumb')['files'][0x0];
        } catch (cLM) {}
        if (cBO) {
            var cBP = new FileReader();
            cBP['readAsDataURL'](cBO), cBP['onload'] = function() {
                return 0x28 < cCC['thumbnailSize'](cBP['result']) ? void cLr(cBY['get']('thumbnail.upload.limit'), 0x1) : void cCK['send']('uploadMo', pubModName['value'], pubModURL['value'], cBP['result']);
            }, cBP['onerror'] = function() {
                modUpResp['innerHTML'] = cBY['get']('thumbnail.upload.error');
            };
        } else cCK['send']('uploadMo', pubModName['value'], pubModURL['value']);
    }, zip['workerScriptsPath'] = './libs/';
    var cLO = new FileReader();

    function cLP(cBO) {
        this['imgAsDataURL'] = '', this['process'] = function(cBP) {
            if (this['imgAsDataURL'] = URL['createObjectURL'](cBP), this['imgAsDataURL'] && cBO) {
                try {
                    var cBQ = new Image();
                    cBQ['onload'] = function() {
                        cCE['updateTexture'](cBO['replace']('textures/', '')['replace']('.png', ''), this);
                    }, cBQ['src'] = this['imgAsDataURL'];
                } catch (cLT) {}
                cMc['close']();
            }
        };
    }

    function cLU(cBO) {
        this['filename'] = cBO;
        var cBP = this;
        this['process'] = function(cBO) {
            var cBQ = URL['createObjectURL'](cBO);
            if (cBQ) {
                try {
                    var cBR = cBP['filename']['split']('/')[0x1];
                    if (0x0 <= cBR['indexOf']('ambient'))
                        for (var cBS = 0x1; 0x4 > cBS; ++cBS) cCF['stop']('ambient_' + cBS);
                    cCF['sounds'][cBR] = new Howl({
                        'src': [cBQ],
                        'format': 'mp3'
                    }), cCF['sounds'][cBR + '3d'] = new Howl({
                        'src': [cBQ],
                        'format': 'mp3'
                    }), 'ambient_1' == cBR && cCF['play']('ambient_1', 0.12, !0x0, 0x1);
                } catch (cM1) {}
                cMc['close']();
            }
        };
    }

    function cM2(cBO) {
        this['process'] = function(cBP) {
            if (cBO) {
                try {
                    const cBQ = new FileReader();
                    cBQ['addEventListener']('loadend', cBP => {
                        const cBQ = cBP['srcElement']['result'];
                        cCE['updateMesh'](cBO['replace']('models/', '')['replace']('.obj', ''), cBQ);
                    }), cBQ['readAsText'](cBP);
                } catch (cM8) {}
                cMc['close']();
            }
        };
    }
    cLO['onload'] = function(cBO) {
        var cBP = cBO['target']['result'];
        loadModPack(cBP);
    };
    var cMb, cMc = new function() {
        this['init'] = function(cBO, cBP) {
            this['numFiles'] = cBP, this['progress'] = 0x0, this['reader'] = cBO;
        }, this['close'] = function() {
            this['reader'] && (this['progress']++, document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('mod.extracting', this['progress'], this['numFiles'])), this['numFiles'] === this['progress'] && (spriteIndex = 0x0, document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('generic.success')), this['reader']['close'](), this['reader'] = void 0x0));
        };
    }();

    function cMf(cBO, cBP, cBQ, cBR) {
        cD7 = cBP, window['spectating'] = cBQ, !cD7 && cBQ && (cD7 = 0x1), cNQ(cBO), cCH['toggleMenu'](!0x1), cPE['length'] = 0x0, cQa['length'] = 0x0, cCH['toggleGameUI'](!0x0), cCI['reset'](), cCM['reset'](), cMA(!0x1), cCL['players']['forcePos'](), cCL['players']['resetAim'](), cD2['length'] = 0x0, cD6 = 0x1e, window['loading'] = !0x1, window['idleTimer'] = 0x0, teamName['innerHTML'] = '', instructions['innerHTML'] = cCM['gamepad']['connected'] ? cBY['get']('app.play.controller') : cBY['get']('app.play'), cCS = null, cCH['toggleControlUI'](cCM['enabled']), cCL['updateUI'](), challIcon['src'] = cBR ? './img/skull_0.png' : './img/hp_0.png';
    }

    function cMk(cBO, cBP, cBQ, cBR, cBS, cBT, cBZ, cC3, cC4, cC5) {
        if (cBT['isFromQueue'] && window['history']['replaceState']({}, 'Krunker', '/'), navigator['webdriver'] && cQD(), cDl = !0x1, cC3 ? cC3['data'] && cCL['customMap'](cC3['data'], cC3['id'], cC3['creator'], null, !0x0) : cCL['map']['setMaps'](), cD0 = cBS, cCZ = cBS && cBS == cCK['socketId'], mapVote['innerHTML'] = '', mapVoteVal = 0x0, cBS && cC3 && null != cC3['id'] && (mapVote['innerHTML'] = '<i\x20id=\x27mapVoteD\x27\x20onclick=\x27voteMap(' + cC3['id'] + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27mapVoteU\x27\x20onclick=\x27voteMap(' + cC3['id'] + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i>'), cCL['applyConfig'](cBT, cC3 && cC3['featured']), cCL['init'](cBO, cBP, cC5), cCL['setObjective'](cBR), (cC4 = cC4 || {})['dest'])
            for (var cC6 = 0x0; cC6 < cC4['dest']['length']; ++cC6) cCL['destroyObj'](cC4['dest'][cC6]);
        if (cC4['flg'])
            for (cC6 = 0x0; cC6 < cC4['flg']['length']; ++cC6) cCL['updateFlag'](...cC4['flg'][cC6]);
        if (cC4['pkups'])
            for (cC6 = 0x0; cC6 < cC4['pkups']['length']; ++cC6) cCL['updatePickup'](...cC4['pkups'][cC6]);
        if (cC4['gates'])
            for (cC6 = 0x0; cC6 < cC4['gates']['length']; ++cC6) cCL['updateGate'](...cC4['gates'][cC6]);
        if (cC4['zone'] && cCL['updateZone'](cC4['zone']), specNameTm0['innerHTML'] = teamNm1['innerHTML'] = 0x0 < cCL['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cCL['config']['nameTeam1'] : 'Team\x201', specNameTm1['innerHTML'] = teamNm2['innerHTML'] = 0x0 < cCL['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cCL['config']['nameTeam2'] : 'Team\x202', teamScores['style']['display'] = 'none', spec0['style']['display'] = 'none', spec1['style']['display'] = 'none', cCL['mode']['teams'] && cBQ) {
            teamScores['style']['display'] = 'inline-block', spec0['style']['display'] = 'inline-block', spec1['style']['display'] = 'inline-block';
            var cC7 = '';
            for (cC6 = 0x0; cC6 < cBQ['length']; ++cC6) cC7 += '<div\x20class=\x27tScore\x27><div\x20id=\x27tScoreC' + cBQ[cC6][0x0] + '\x27\x20class=\x27tScoreC\x27></div><span\x20class=\x27tScoreT\x27\x20id=\x27tScoreV' + cBQ[cC6][0x0] + '\x27>' + cBQ[cC6][0x1] + '</span></div>', document['getElementById']('specScoreTm' + (cBQ[cC6][0x0] - 0x1))['innerHTML'] = cBQ[cC6][0x1];
            teamScores['innerHTML'] = cC7;
        }
        cBZ && '' != cBZ && loadModPack(cBZ, !0x0);
        var cC8 = 0x0,
            cCa = 0x0;
        for (cC6 = 0x0; cC6 < cCL['map']['manager']['objects']['length']; ++cC6) cCL['map']['manager']['objects'][cC6]['score'] && (cC8++, cCa += cCL['map']['manager']['objects'][cC6]['scoreP']);
        cC8 ? (scoreZoneCount['style']['display'] = 'inline-block', scoreZoneCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>flag</i>\x20' + cCa) : scoreZoneCount['style']['display'] = 'none', cCL['config']['lives'] || cCL['mode']['lives'] ? (livesCount['style']['display'] = 'inline-block', livesCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>favorite</i>\x20<span\x20id=\x27livesDisp\x27\x20style=\x27color:rgba(255,255,255,0.6)\x27>' + (cCL['config']['lives'] || cCL['mode']['lives'] || 0x0) + '</span>') : livesCount['style']['display'] = 'none', cCH['setShowSpect'](cCL['config']['allowSpect']), cCH['setShowSelTeam'](cCL['config']['selTeam']), cDe = null, cCM['reset']();
        var cCg = cCL['map']['maps'][cBO];
        cCM['cWSdygvGQj'](cCg['camPos'][0x0], cCg['camPos'][0x1], cCg['camPos'][0x2]), cCM['gQpYg'](0x0, 0x0, 0x0), cCE['clearSprays'](), cCE['scene']['add'](cCM['object']), cCN = null, cCD['showObjective'] = !!cCL['mode']['objective'] && 0x0 < cCL['map']['manager']['objectives']['length'], killStreakHolder['innerHTML'] = '', bloodDisplay['style']['display'] = 'none', killsVal['innerHTML'] = 0x0, deathsVal['innerHTML'] = 0x0, cD5 = 0x0, cEz(), cCM['masterLock'] = !0x1, instructions['innerHTML'] = cCM['gamepad']['connected'] ? cBY['get']('app.play.controller') : cBY['get']('app.play');
    }

    function cMA(cBO) {
        window['locked'] = cBO, blocker['style']['display'] = cBO ? 'block' : 'none';
    }

    function cMC(cBO, cBP, cBQ) {
        instructions['innerHTML'] = cCM['gamepad']['connected'] ? cBY['get']('app.play.controller') : cBY['get']('app.play'), victoryText['innerHTML'] = cBY['get']('generic.' + (cBP ? 'victory' : 'defeat')), victorySub['src'] = './img/' + (cBP ? 'sub' : 'defeat') + '.png', cCH['toggleWindow'](!0x1, cCM['gamepad']['connected']), cF9['endMessage']['val']['length'] && !cDl && (cCK['send']('c', cF9['endMessage']['val']), cDl = !0x0), cCN && cCN['active'] || window['spectating'] ? (cCH['showEndScreen'](), cDe = cBR['endAnim'], setTimeout(function() {
            cCK['connected'] && (cCM['disable'](), cMG(cBQ));
        }, cBR['endAnim'])) : cBO && (cCM['disable'](), cCH['showEndScreen'](), cMG(cBQ));
    }

    function cMG(cBO) {
        if (cBO && cBO['ed']['length']) {
            var cBP = '',
                cBQ = cBO['mts'],
                cBS = cBO['tms'];
            if (endTable['style']['top'] = cBS ? '350px' : '310px', teamTotals['style']['top'] = '322px', matchVoteHolder['style']['display'] = 'inline-block', cCL['mode']['isRanked']) matchVoteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x20buttonR\x27\x20style=\x27margin-right:10px\x27\x20onclick=\x27location.reload()\x27>Leave\x20Game</div>', matchVoteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x27\x20onclick=\x27location\x20=\x20\x22/?autoQueue=true\x22\x27>Requeue</div>';
            else if (0x1 < cBQ['length']) {
                for (var cBT = 0x0; cBT < cBQ['length']; ++cBT) {
                    var cBY = cBQ[cBT]['split'](','),
                        cBZ = cCL['map']['modes'][parseInt(cBY[0x0])],
                        cC3 = cCL['map']['maps'][parseInt(cBY[0x1])];
                    cBZ && cC3 && (cBP += '<div\x20class=\x22matchVote\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (0x0 == cBT ? '\x20style=\x22padding-left:\x2010px;\x22\x20' : '') + '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20onclick=\x22voteOnMatch(\x27' + cBQ[cBT] + '\x27)\x22>' + '<img\x20src=\x27./img/' + (0x0 == parseInt(cBY[0x1]) && 'Burg' != cC3['name'] ? 'noimg' : 'maps/map_' + parseInt(cBY[0x1])) + '.png\x27\x20class=\x27matchVoteThumb\x27><div\x20class=\x27matchVoteMap\x27>' + cC3['name'] + '</div><div\x20class=\x27matchVoteMode\x27>' + cBZ['id']['toUpperCase']() + '</div><div\x20class=\x27matchVoteTotal\x27\x20id=\x27voteT' + cBQ[cBT] + '\x27>0</div></div>');
                }
                matchVoteHolder['innerHTML'] = cBP, cBP['length'] && (endTable['style']['maxHeight'] = 'calc(100%\x20-\x20' + (cBS ? '530' : '490') + 'px)'), cBO['vo'] && updMatchVote(cBO['vo'], cBO['mts']);
            } else matchVoteHolder['style']['display'] = 'none', teamTotals['style']['top'] = '215px', endTable['style']['maxHeight'] = 'calc(100%\x20-\x20' + (cBS ? '420' : '490') + 'px)', endTable['style']['top'] = cBS ? '245px' : '205px';
            cBS ? (cBP = '<span\x20class=\x22blackShad\x22\x20style=\x22color:#fbc02d;font-size:22px;padding-left:10px;\x22>' + (cBS[0x0][0x1] || 0x0) + '</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20style=\x22color:#5699EB;font-size:17px;padding-left:10px;padding-right:10px;\x22>' + teamNm1['innerHTML'] + '</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22blackShad\x22\x20style=\x22font-size:\x2022px;color:#fff;\x22>VS</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20style=\x22color:#eb5656;font-size:17px;padding-left:10px;padding-right:10px;\x22>' + teamNm2['innerHTML'] + '</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22blackShad\x22\x20style=\x22color:#fbc02d;font-size:22px;padding-right:10px;\x22>' + (cBS[0x1][0x1] || 0x0) + '</span>', teamTotals['innerHTML'] = cBP, teamTotals['style']['display'] = 'flex') : teamTotals['style']['display'] = 'none', endTable['style']['display'] = 'inline-block', cBP = '<tr><th>Rank</th>';
            var cC4 = cCL['mode']['endStats'] || cBR['endStats'],
                cC5 = cC4['length'];
            for (cBT = 0x1; cBT < cC5; ++cBT) cBP += '<th>' + cCC['capFirst'](cC4[cBT]) + '</th>';
            cBP += '<th></th></tr>';
            var cC6 = 0x1;
            for (cBT = 0x0; cBT < cBO['ed']['length'];) {
                cCP = cCL['players']['findBySid'](cBO['ed'][cBT]), cBP += '<tr\x20style=\x27' + (cBT + cC5 >= cBO['ed']['length'] ? 'border-bottom:none' : '') + '\x27><td\x20style=\x27color:#fff\x27>' + cC6 + '.</td>';
                for (var cC7 = 0x1; cC7 < cC5; ++cC7) cBP += '<td\x20' + (0x1 == cC7 ? 'style=\x27color:' + (cCN && cCP && cCN['sid'] == cCP['sid'] ? '#fff\x27' : cCN && cCP && cCN['team'] && cCN['team'] == cCP['team'] ? 'rgba(255,255,255,0.6)\x27' : '#eb5656\x27') : '') + '>' + (cDL && 0x1 == cC7 && cCX ? cCC['scrambleS'](cBO['ed'][cBT + cC7] || 0x0) : cBO['ed'][cBT + cC7] || 0x0) + (0x1 == cC7 && cCP && cCP['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cBR['verClans']['indexOf'](cCP['clan']) ? '#fbc02d' : '#fff') + '\x27>\x20[' + cCP['clan'] + ']<span>' : '') + '</td>';
                cC6++, cBT += cC5;
            }
            endTable['innerHTML'] = cBP;
        } else endTable['style']['display'] = 'none';
    }

    function cMT(cBO, cBP, cBQ) {
        cCL['playerSound'](cBO, cBP, cBQ);
    }

    function cMX(cBO, cBP, cBQ, cBR, cBS, cBT = !0x0, cBY) {
        (cCP = cCL['players']['findBySid'](cBO)) && (cCP == cCN && cCF['play']('pick_0', 0.2), cCP['updateLoadout'](cCL, cBQ, !0x0, ...cBP)), cBT && cCL['updatePickup'](cBR, cBS, null, cBY);
    }
    window['loadUserMod'] = function(cBO, cBP, cBQ) {
        cD1 ? (cD1 = !0x1, selectHostMod(cBP)) : (showWindow(0x4), document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('generic.loading')), loadModPack(cBP, !0x0, cBO, cBQ));
    }, window['loadModURL'] = function() {
        modURL['value'] && loadModPack(modURL['value'], !0x0);
    }, window['loadModPack'] = function(cBO, cBP, cBQ, cBR) {
        if (cCC['isDropbox'](cBO) && !(-0x1 < cBO['indexOf']('&')) || !cBP) {
            if (!cD3) return void(document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('mod.disabled')));
            modVote['innerHTML'] = '', cBP && cDp(cBO), null != cBQ && null != cBR && (cMb = 0x0, modVote['innerHTML'] = '<i\x20id=\x27modVoteD\x27\x20onclick=\x27voteMod(' + cBR + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27modVoteU\x27\x20onclick=\x27voteMod(' + cBR + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i></br>' + cBQ + '\x20Mod');
            try {
                cBO = cBO['replace']('dropbox.com', 'dl.dropboxusercontent.com')['replace'](/&/g, 'nope');
                var cBS = '',
                    cBT = cBP ? new zip['HttpReader'](cBO) : new zip['Data64URIReader'](cBO);
                zip['createReader'](cBT, function(cBO) {
                    cBO['getEntries'](function(cBP) {
                        if (cBP['length']) {
                            cMc['init'](cBO, cBP['length']);
                            for (var cBQ, cBR = 0x0; cBR < cBP['length']; cBR++)(cBQ = cBP[cBR])['directory'] ? cMc['close']() : 'textures' == (cBS = cBQ['filename']['split']('/')[0x0]) ? cBQ['getData'](new zip['BlobWriter']('image/png'), new cLP(cBQ['filename'])['process'], function() {}) : 'sound' == cBS ? cBQ['getData'](new zip['BlobWriter']('audio/mp3'), new cLU(cBQ['filename']['replace']('.mp3', ''))['process'], function() {}) : 'models' == cBS && cBQ['getData'](new zip['BlobWriter']('application/x-tgif'), new cM2(cBQ['filename'])['process'], function() {});
                        }
                    });
                }, function() {
                    document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('mod.error'));
                });
            } catch (cNi) {
                document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('mod.error'));
            }
        }
    }, cF9['autoLoadLast']['val'] && cDo['length'] && loadModPack(cDo, !0x0), window['loadMod'] = function() {
        if (modInput['files'] && modInput['files'][0x0]) {
            var cBO = modInput['files'][0x0];
            'zip' == cBO['name']['split']('.')['pop']()['toLowerCase']() ? (document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('mod.loading')), cLO['readAsDataURL'](cBO)) : document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cBY['get']('mod.invalid'));
        }
    }, window['joinGame'] = function() {
        let cBO = gameURL['value'] || '';
        cBO['match'](/^(https?:\/\/)?(www\.)?(.+)krunker\.io(|\/|\/\?game=.+)$/) ? location = cBO : cBO['match'](/^([A-Z]+):(\w+)$/) && window['switchServer'](cBO);
    }, window['toggleTeam'] = function(cBO) {
        cHa = cBO ? 0x2 : 0x1, teamNm1['style']['color'] = cBO ? 'rgba(255,255,255,0.5)' : '#fff', teamNm2['style']['color'] = cBO ? '#fff' : 'rgba(255,255,255,0.5)';
    }, window['updMatchVote'] = function(cBO, cBP) {
        for (var cBQ = 0x0; cBQ < cBP['length']; ++cBQ)
            if (cCP = document['getElementById']('voteT' + cBP[cBQ])) {
                var cBR = 0x0;
                if (cBO)
                    for (var cBS in cBO) cBO['hasOwnProperty'](cBS) && cBP[cBQ] == cBO[cBS] && cBR++;
                cCP['innerHTML'] = cBR;
            }
    }, window['voteOnMatch'] = function(cBO) {
        document['querySelectorAll']('div[id^=\x22voteT\x22')['forEach'](cBP => {
            cBP['style']['color'] = cBP['id'] == 'voteT' + cBO ? 'rgba(251,\x20192,\x2045,\x201)' == cBP['style']['color'] ? 'rgba(255,\x20255,\x20255,\x200.7)' : 'rgba(251,\x20192,\x2045,\x201)' : 'rgba(255,\x20255,\x20255,\x200.7)';
        }), cCK['send']('maVote', cBO);
    }, window['voteMod'] = function(cBO, cBP) {
        if (cCO) {
            var cBQ = document['getElementById']('modVoteU'),
                cBR = document['getElementById']('modVoteD'),
                cBS = 0x0;
            0x1 == cBP ? (cBS = 0x1, 0x1 == cMb && (cBS = 0x0)) : -0x1 == cBP && (cBS = -0x1, -0x1 == cMb && (cBS = 0x0)), cMb = cBS, cBQ['className'] = 0x1 == cMb ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote', cBR['className'] = -0x1 == cMb ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote', cCK['send']('vote', cCO['id'], loginToken, cBO, cBS, 0x1);
        }
    }, window['voteMap'] = function(cBO, cBP) {
        if (cCO) {
            var cBQ = document['getElementById']('mapVoteU'),
                cBR = document['getElementById']('mapVoteD'),
                cBS = 0x0;
            0x1 == cBP ? (cBS = 0x1, 0x1 == mapVoteVal && (cBS = 0x0)) : -0x1 == cBP && (cBS = -0x1, -0x1 == mapVoteVal && (cBS = 0x0)), mapVoteVal = cBS, cBQ['className'] = 0x1 == mapVoteVal ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote', cBR['className'] = -0x1 == mapVoteVal ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote', cCK['send']('vote', cCO['id'], loginToken, cBO, cBS);
        }
    }, window['followPlayer'] = function(cBO, cBP) {
        cBP && (cBP['style']['visibility'] = 'hidden'), cCK['send']('fo', cBO);
    };
    var cNF = getSavedVal('sprayindex') || 0x0;

    function cNG(cBO, cBP, cBQ, cBR, cBS, cBT, cBY) {
        cCE['addSpray'](cBO, cBP, cBQ, cBR, cBS, cBT, cBY, cCL['sprays'][cBP]['opacity']);
    }

    function cNO(cBO) {
        0x0 == cBO ? cCF['play']('siren_0') : 0x1 == cBO && (cCF['play']('nuke_0'), nukeFlash['style']['display'] = 'block', nukeFlash['style']['opacity'] = 0x1, cCE['shake'](0x1));
    }

    function cNQ(cBO, cBP) {
        0x1 == cBP ? endTimer['innerHTML'] = cBY['get']('timer.end', cBO) : 0x2 == cBP ? endTimer['innerHTML'] = cBY['get']('generic.matchover') : (timerVal['innerHTML'] = cBO, specTimer['innerHTML'] = cBO, timerDisplay['style']['display'] = '0:00' == cBO ? 'none' : 'inline-block');
    }

    function cNT(cBO) {
        for (var cBP, cBQ = 0x0; cBQ < cBO['length'];) {
            if (cBP = cBO[cBQ] == cCK['socketId'], (cCP = cCL['players']['add'](cBO[cBQ], cBO[cBQ + 0x1], cBO[cBQ + 0x2], cBO[cBQ + 0x3], cBO[cBQ + 0x4], cBO[cBQ + 0x5], cBO[cBQ + 0x6], cBO[cBQ + 0xc], cBO[cBQ + 0xd], cBO[cBQ + 0xe], cBO[cBQ + 0x13], cBO[cBQ + 0x14], cBO[cBQ + 0xf], cBO[cBQ + 0x15], cBO[cBQ + 0x9], cBP, cBO[cBQ + 0x10], cBO[cBQ + 0x11]))['health'] = null == cBO[cBQ + 0x7] ? cCP['maxHealth'] : cBO[cBQ + 0x7], cCP['maxHealth'] = cBO[cBQ + 0x8], cCP['hpChase'] = cCP['health'], cCP['team'] = cBO[cBQ + 0x9], cCP['level'] = cBO[cBQ + 0xa], cCP['clan'] = cBO[cBQ + 0xb], cCP['xDire'] = cBO[cBQ + 0x12], cBP) {
                if (cCN = cCP, cCL['mode']['showTeam'] && (teamName['innerHTML'] = cCN['team']), cCN['team']) {
                    var cBR = document['getElementById']('tScoreC' + cCN['team']);
                    cBR && (cBR['className'] = 'tScoreC\x20you');
                }
                cEA(), botRightHider['style']['display'] = 'prop' == cCN['team'] ? 'none' : 'block', propInstruct['style']['display'] = 'prop' == cCN['team'] ? 'block' : 'none', cCM['object']['rotation']['y'] = cCN['xDire'], cCM['xDr'] = cCM['object']['rotation']['y'] % Math['PI2'];
            }
            cPT(cCP['health'], cCP['sid'], null, null), cBQ += 0x16;
        }
    }

    function cNY(cBO) {
        if (cCK['send']('p'), cCN) {
            if (cCN['x'] = cBO[0x1], cCN['y'] = cBO[0x2], cCN['z'] = cBO[0x3], cCN['xVel'] = cBO[0x4], cCN['yVel'] = cBO[0x5], cCN['zVel'] = cBO[0x6], cCN['onGround'] = cBO[0x7], cCN['didJump'] = cBO[0x8], cCN['onLadder'] = cBO[0x9], cCN['aimVal'] = cBO[0xa], cCN['crouchVal'] = cBO[0xb], cCL['players']['swapWeapon'](cCN, 0x0, !0x1, cBO[0xc], void 0x0, !0x0), cCN['slideTimer'] = cBO[0xd], cCN['canSlide'] = cBO[0xe], cCN['onTerrain'] = cBO[0xf], cBO[0x10]) {
                var cBP = cDa != cBO[0x10];
                cDa = cBO[0x10], cBP && function() {
                    var cBO = '#9eeb56';
                    0x96 <= cDa ? cBO = '#ff4b42' : 0x32 <= cDa && (cBO = '#ffd542');
                    var cBP = -0x1 == cDa ? '-' : cDa;
                    pingDisplay['innerHTML'] = cBP + '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cBO + '\x27>signal_cellular_alt</i>', menuPingDisplay['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cBO + '\x27>signal_cellular_alt</i>\x20' + cBP;
                }();
            }
            for (var cBQ = 0x0; cBQ < cCM['tmpInputs']['length'];) cCM['tmpInputs'][cBQ][0x0] <= cBO[0x0] ? cCM['tmpInputs']['splice'](cBQ, 0x1) : (cCN['procInputs'](cCM['tmpInputs'][cBQ], cCL, !0x0), cBQ++);
        }
    }

    function cO4() {
        cCK['send']('po');
    }

    function cO5(cBO) {
        cBO;
    }

    function cO7() {
        if (!cCL['singlePlayer'] && (cCN && cCN['active'] || spectating))
            for (var cBO = 0x0; cBO < cCL['players']['list']['length']; ++cBO)(cCP = cCL['players']['list'][cBO])['active'] && cCP['objInstances'] && cCP != cCN && (cCP['inView'] = !0x0, !spectating && !(cD7 && cD7 == cCP['team']) && !(cD7 && cD7 != cCP['team'] && cCL['mode']['teamSee'] && cCL['mode']['teamSee'][0x0] == cD7 && cCL['mode']['teamSee'][0x1] == cCP['team']) && (cCL['config']['nameTags'] || cCL['mode']['hideNames'] || null != cCL['canSee'](cCN, cCP['x'], cCP['y'], cCP['z'])) && (cCP['inView'] = !0x1), (0x1 == cF9['hideNames']['val'] && cD7 && cD7 != cCP['team'] || 0x2 == cF9['hideNames']['val'] && cD7 && cD7 == cCP['team'] || 0x3 == cF9['hideNames']['val']) && (cCP['inView'] = !0x1), cCL['players']['toggleLOD'](cCP, null == cCL['canSee'](cCE['camera']['getWorldPosition'](), cCP['x'], cCP['y'], cCP['z'], 0xa)));
    }

    function cO9(cBO) {
        'wt' == cBO && (cBO = cBY['get']('player.waiting')), gameMessage['innerHTML'] = cBO || '', specGameMessage['innerHTML'] = cBO || '';
    }

    function cOb(cBO, cBP) {
        (cCP = cCL['players']['findBySid'](cBO)) && (cCP['team'] = cBP, cCP == cCN && (cD7 = cBP, cCL['mode']['showTeam'] && (teamName['innerHTML'] = cD7)));
    }

    function cOe(cBO) {
        cCL['players']['hideAll']();
        for (var cBP = 0x0; cBP < cBO['length'];)(cCP = cCL['players']['findBySid'](cBO[cBP])) && cCP != cCN && (cCP['objInstances']['visible'] = !cCP['lodActive'], cCP['latestData'] = !0x0, cCP['forcePos'] ? (cCP['x'] = cBO[cBP + 0x1], cCP['y'] = cBO[cBP + 0x2], cCP['z'] = cBO[cBP + 0x3], cCP['xDire'] = cBO[cBP + 0x4], cCP['yDire'] = cBO[cBP + 0x5], cCP['interpolate'] = !0x1, cCP['forcePos'] = !0x1) : (cCP['dt'] = 0x0, cCP['x1'] = cCP['x'], cCP['x2'] = cBO[cBP + 0x1], cCP['y1'] = cCP['y'], cCP['y2'] = cBO[cBP + 0x2], cCP['z1'] = cCP['z'], cCP['z2'] = cBO[cBP + 0x3], cCP['xDir1'] = cCP['xDire'], cCP['xDir2'] = cBO[cBP + 0x4], cCP['yDir1'] = cCP['yDire'], cCP['yDir2'] = cBO[cBP + 0x5], cCP['interpolate'] = !0x0), cCP['onGround'] = cBO[cBP + 0x6], cCP['crouchVal'] = cBO[cBP + 0x7], cCL['players']['swapWeapon'](cCP, 0x0, !0x1, cBO[cBP + 0x8])), cBP += 0x9;
    }

    function cOh(cBO) {
        cCL['players']['remove'](cBO);
    }

    function cOj(cBO, cBP, cBQ, cBS, cBT, cBZ) {
        if (cCP = cCL['players']['findBySid'](cBO), cCQ = cCL['players']['findBySid'](cBQ), cCP) {
            if (cCL['players']['kill'](cCP), cCP['isYou']) {
                deathsVal['innerHTML'] = cBP || 0x0;
                var cC3 = '';
                if (cCQ) {
                    cCP != cCQ && (utilities.camLookAt(cCQ.x, cCQ.y + cCQ.height - cBR.cameraHeight, cCQ.z), cCQ['interpolate'] = !0x1, cCQ['inView'] = !0x0), cC3 = '<img\x20id=\x27kCProfile\x27\x20src=\x27./textures/classes/icon_' + cCQ['classIndex'] + '.png\x27\x20/>', cC3 += '<div\x20id=\x27kCName\x27>' + (cCQ ? cDL && cCX ? cCC['scrambleS'](cCQ['name']) : cCQ['name'] : 'You') + (cCQ['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cBR['verClans']['indexOf'](cCQ['clan']) ? '#fbc02d' : 'rgba(255,255,255,0.3)') + '\x27>\x20[' + cCQ['clan'] + ']</span>' : '') + '</div>';
                    var cC4 = cCQ['loadout']['indexOf'](cBS[0x0]),
                        cC5 = null == cCQ['skins'][cC4] ? null : cCQ['skins'][cC4];
                    null != cC5 && (cC5 = cCL['store']['skins'][cC5]);
                    var cC6 = cC5 ? cCL['store']['rarities'][cC5['rarity']]['color'] : 'rgba(255,255,255,0.7)',
                        cC7 = cC5 ? cC5['name'] : cCL['weapons'][cBS[0x0]]['name'];
                    'Combat\x20Knife' == cC7 && 0x0 <= cCQ['meleeIndex'] && cCL['store']['skins'][cCQ['meleeIndex']] && (cC7 = cCL['store']['skins'][cCQ['meleeIndex']]['name'], cC6 = cCL['store']['rarities'][cCL['store']['skins'][cCQ['meleeIndex']]['rarity']]['color']), cC3 += '<br/><div\x20id=\x27kCInfo\x27\x20style=\x27color:' + cC6 + '\x27>[' + cC7 + ']\x20' + (cBS[0x1] ? '<span\x20id=\x27kCInfoS\x27>+' + cBS[0x1] + '</span>' : '') + '</div>';
                }
                killCardHolder['firstChild']['data'] = cCQ ? cBY['get']('player.killed') : cBY['get']('player.died'), killCard['style']['display'] = cCQ ? 'inline-block' : 'none', killCard['innerHTML'] = cC3, cCH['toggleGameUI'](!0x1), setTimeout(function() {
                    cEz();
                }, cBR['deathDelay']);
            }
            if (!cBZ && cDf) {
                var cC8 = cCP == cCN ? '<span\x20style=\x27color:#fff\x27>You</span>' : '<span\x20style=\x27color:' + (cD7 && cD7 == cCP['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + (cDL && cCX ? cCC['scrambleS'](cCP['name']) : cCP['name']) + '</span>',
                    cCa = cCQ == cCN ? '<span\x20style=\x27color:#fff\x27>You</span>' : cCQ ? '<span\x20style=\x27color:' + (cD7 && cD7 == cCQ['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + (cDL && cCX ? cCC['scrambleS'](cCQ['name']) : cCQ['name']) + '</span>' : '';
                cCQ ? function(cBO, cBP, cBQ, cBR) {
                    cDL && cCX && (cBR = cCX['clean'](cBR), cBQ = cCC['scrambleS'](cBQ));
                    var cBS = cCL['weapons'][null == cBP['weaponId'] ? cBO['loadout'][cBO['weaponIndex']] : cBP['weaponId']];
                    for (chatList['innerHTML'] += '<div\x20class=\x27chatItem\x27\x20style=\x27word-break:break-all;overflow-wrap:break-word;\x27><span\x20class=\x27chatMsg\x27>' + cBQ + (null == cBP['streak'] ? '<img\x20style=\x27opacity:0.7;margin-right:' + (cBS['melee'] && 0x0 == (cCL['store']['skins'][cBO['meleeIndex']] && cCL['store']['skins'][cBO['meleeIndex']]['id'] || 0x0) ? '5' : cBS['icnPad'] || 0x0) + 'px;' + (cBS['melee'] ? 'margin-bottom:-12px' : '') + '\x27\x20class=\x27weaponChatIcon\x27\x20src=\x27' + (cBS['melee'] ? './textures/melee/icon_' + (cCL['store']['skins'][cBO['meleeIndex']] && cCL['store']['skins'][cBO['meleeIndex']]['id'] || 0x0) : './textures/weapons/' + cBS['icon']) : '<img\x20class=\x27streakChatIcon\x27\x20src=\x27./img/streaks/' + cBP['streak']) + '.png\x27\x20/>' + cBR + '</span></div><br/>'; 0xfa <= chatList['scrollHeight'];) chatList['removeChild'](chatList['childNodes'][0x0]);
                }(cCQ, cBT, cCa, cC8) : cQc(null, cC8 + '\x20committed\x20' + cBR['suicides'][cCC['randInt'](0x0, cBR['suicides']['length'] - 0x1)], !0x0);
            }
        }
    }

    function cOC(cBO, cBP) {
        if (cCN) {
            cBP ? 0x1 < cCN['streaks'][cBO]['cnt'] ? cCN['streaks'][cBO]['cnt']-- : cCN['streaks'][cBO] = null : cCN['streaks'][cBO] ? cCN['streaks'][cBO]['cnt']++ : cCN['streaks'][cBO] = {
                'cnt': 0x1,
                'streak': cCL['streaks'][cBO]
            };
            for (var cBQ = '', cBR = 0x0; cBR < cCL['streaks']['length']; ++cBR) cCN['streaks'][cBO] && (cBQ += '<div\x20class=\x27killStreakItem\x27\x20style=\x27background-image:\x20url(&quot;./img/streaks/' + cBR + '.png&quot;)\x27><span>[' + (cBR + 0x1) + ']</span><div\x20class=\x27killStreakCnt\x27>x' + cCN['streaks'][cBO]['cnt'] + '</div></div>');
            killStreakHolder['innerHTML'] = cBQ;
        }
    }

    function cOH(cBO, cBP) {
        if (cCP = cCL['players']['findBySid'](cBO)) {
            var cBQ = cCP == cCN ? '<span\x20style=\x27color:#fff\x27>You\x27re</span>' : '<span\x20style=\x27color:' + (cD7 && cD7 == cCP['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cCP['name'] + '</span>\x20is';
            cQc(null, cBY['get']('player.killstreak', cBQ, cBP), !0x0);
        }
    }

    function cOL(cBO, cBP, cBQ) {
        (cCP = cCL['players']['findBySid'](cBO), cCQ = cCL['players']['findBySid'](cBP), cCP) && cQc(null, (cCP == cCN ? '<span\x20style=\x27color:#fff\x27>You</span>' : '<span\x20style=\x27color:' + (cD7 && cD7 == cCP['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cCP['name'] + '</span>') + '\x20' + cBQ + '\x20' + (cCQ == cCN ? '<span\x20style=\x27color:#fff\x27>You</span>' : cCQ ? '<span\x20style=\x27color:' + (cD7 && cD7 == cCQ['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cCQ['name'] + '</span>' : ''), !0x0);
    }

    function cOP(cBO) {
        cCK['send'](window[[0x6a, 0x7b, 0x66, 0x71]['map'](cBO => String['fromCharCode'](cBO - 0x5))['join']('')](cBO));
    }
    Object['defineProperty'](window, 'selectSpray', {
        'writeable': !0x1,
        'value': function(cBO) {
            saveVal('sprayindex', cBO), cNF = cBO, showWindow(0x3);
        }
    });
    var cOT = null,
        cOU = 0x0;

    function cOV(cBO, cBP) {
        if (cOT = cBO, cOU = cBP, cBO) {
            for (var cBQ = 0x1, cBS = '', cBT = 0x0; cBT < cBO['length']; cBT += 0x6) cBS += '<div\x20class=\x27leaderItem\x27>', cBS += '<div\x20class=\x27leaderCounter\x27>' + cBQ + '.</div>', cBS += cBO[cBT + 0x5] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#40C4FF;margin-top:4px;font-size:25px\x27>check_circle</i>' : '', cBS += '<div\x20class=\x27leaderName' + (cCN && cBO[cBT] == cCN['sid'] ? 'M' : cD7 && cD7 == cBO[cBT + 0x2] ? 'F' : '') + '\x27>' + (cDL ? cCC['scrambleS'](cBO[cBT + 0x1]) : cBO[cBT + 0x1]) + (cBO[cBT + 0x4] ? '<span\x20style=\x27color:' + (0x0 <= cBR['verClans']['indexOf'](cBO[cBT + 0x4]) ? '#fbc02d' : '#fff') + '\x27>\x20[' + cBO[cBT + 0x4] + ']</span>' : '') + '</div>', cBS += '<div\x20class=\x27leaderScore\x27>' + cCC['formatNum'](cBO[cBT + 0x3]) + '</div>', cBS += '</div>', cBQ++;
            leaderContainer && (leaderContainer['innerHTML'] = cBS), 0x1 >= cBQ && (leaderContainer['innerHTML'] = cBY['get']('leaderboard.empty')), spectCount['style']['display'] = cBP ? 'inline-block' : 'none', spectCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;margin-right:8px\x27>visibility</i>' + cBP;
        }
    }

    function cP1(cBO, cBP, cBQ, cBS, cBT, cBY, cBZ) {
        if (cCN && cCN['active'] || window['spectating']) {
            if (cCP = cCL['players']['findBySid'](cBO)) {
                var cC3 = cCP['y'] + cCP['height'] - cBR['cameraHeight'] - cCP['crouchVal'] * cBR['crouchDst'],
                    cC4 = cCC['getDistance3D'](cCP['x'], cC3, cCP['z'], cBP, cBQ, cBS),
                    cC5 = cCC['getDirection'](cCP['z'], cCP['x'], cBS, cBP),
                    cC6 = cCC['getDirection'](cCC['getDistance'](cCP['x'], cCP['z'], cBP, cBS), cBQ, 0x0, cC3);
                cCG['physObj'](cCP['x'], cC3, cCP['z'], cC5, cC6, cC4, cBZ, 0x0);
            }
            null != cBT && null == cCL['canSee'](cCN, cBP, cBQ, cBS) && (cCG['effect'](cBP, cBQ, cBS, cBT, cBY, 0x0), cCN && cCF['play3Dv']('rico_' + cCC['randInt'](0x1, 0x2), cBP, cBQ, cBS, 0x37, 0.55, cCC['randFloat'](0.7, 1.1), cCN));
        }
    }

    function cPd(cBO, cBP, cBQ, cBR, cBS, cBT, cBY) {
        var cBZ = cCL['projectiles']['types'][cBT];
        cCG['physObj'](cBO, cBP, cBQ, cBR, cBS, cCL['projectiles']['types'][cBT]['range'], !0x1, null, null, cBZ, cBY);
    }

    function cPm(cBO) {
        cCG['disablePhys'](cBO);
    }

    function cPo(cBO, cBP, cBQ, cBS) {
        if (cCN || window['spectating']) {
            cCP = cCE['camera']['getWorldPosition']();
            var cBT = 0x1 - cCC['getDistance3D'](cBO, cBP, cBQ, cCP['x'], cCP['y'], cCP['z']) / cBR['explosionRange'];
            0x0 < cBT && cCE['shake'](0.14 * cBT), cCF['play3D']('explosion', cBO, cBP, cBQ, 0x1, cCC['randFloat'](0.9, 1.1)), cCG['ExplosionManager']['explodeAt'](cBO, cBP, cBQ, 0.08 * cBS);
        }
    }

    function cPu(cBO, cBP) {
        var cBQ = document['getElementById']('tScoreV' + cBO);
        cBQ && (cBQ['innerHTML'] = cBP);
        var cBR = document['getElementById']('specScoreTm' + (cBO - 0x1));
        cBR && (cBR['innerHTML'] = cBP);
    }

    function cPz(cBO) {
        cBO && (cD5 += cBO, cCI['animateText'](scoreText, (0x0 < cD5 ? '+' : '') + cD5, 0x64 * cDn, 0.38, 0x44c, 0x64, 0x0, function() {
            cD5 = 0x0;
        }), cCN['score'] += cBO);
    }

    function cPB() {
        cCI['animateText'](checkText, cBY['get']('popup.checkpoint'), 0x4b, 0.38, 0x44c, 0x64, 0x0, null);
    }

    function cPC(cBO) {
        (cCP = document['getElementById']('livesDisp')) && (cCP['innerHTML'] = cBO);
    }
    var cPE = [];

    function cPF(cBO, cBP, cBQ) {
        cPK(cBO), cBP && cCF['play']('headshot_0'), killsVal['innerHTML'] = cBQ;
    }

    function cPJ() {
        cPK(['Assist', cBR['assistScore']]);
    }

    function cPK(cBO) {
        if (cBO) {
            for (var cBP = 0x0 == cPE['length'], cBQ = 0x0; cBQ < cBO['length']; ++cBQ) '' == cBO[cBQ] ? cBQ++ : cPE['push'](cBO[cBQ]);
            cBP && function cBO(cBP) {
                0x0 < cPE['length'] && cCI['animateText'](chalName, '<span\x20class=\x27cTxt\x27>' + cPE[0x0] + '</span>' + (cPE[0x1] ? '<div\x20id=\x27chalScore\x27>+' + cPE[0x1] + '</div>' : ''), 0x82, 0.4, cBR['medalAnim'], 0x64, cBP, function() {
                    cPE['splice'](0x0, 0x2), cBO(0x0);
                });
            }(cBR['medalDelay']);
        }
    }

    function cPP(cBO, cBP) {
        (cCP = cCL['players']['findBySid'](cBO)) && cCL['players']['updateProp'](cCP, cBP, !0x0);
    }
    var cPS = 0x0;

    function cPT(cBO, cBP, cBQ, cBS) {
        if ((cCN || spectating) && (cCP = null == cBP || null == cBP ? cCN : cCL['players']['findBySid'](cBP))) {
            cCP['health'] = cBO, cCP['health'] > cCP['maxHealth'] && (cCP['maxHealth'] = cCP['health']);
            var cBT = cBO / cCP['maxHealth'];
            if (cCP == cCN && cCN) {
                healthValue['innerHTML'] = cBO + '\x20<span\x20id=\x27maxHP\x27>|\x20' + cCP['maxHealth'] + '</span>';
                for (var cBY = '', cBZ = cCL['classes'][cCN['classIndex']]['segs'], cC3 = cBZ * cBT, cC4 = cC3, cC5 = 0x0; cC5 < cBZ; ++cC5) cBY += '<div\x20class=\x27healthBarSeg\x27><div\x20class=\x27hpBSeg\x27\x20style=\x27width:' + 0x64 * Math['max'](0x0, Math['min'](0x1, cC4)) + '%;background-color:' + (0x3 >= cC3 ? cF9['hudHealthLow']['val'] : cF9['hudHealthHigh']['val']) + '\x27></div></div>', cC4 -= 0x1;
                healthBar['innerHTML'] = cBY, bloodDisplay['style']['display'] = 0.9 >= cBT ? 'block' : 'none', bloodDisplay['style']['opacity'] = 0x1 - cBT / 0.9, cBO < cPS && (null != cBQ && null != cBQ && function(cBO, cBP) {
                    for (var cBQ = null, cBS = 0x0; cBS < cQa['length']; ++cBS)
                        if (!cQa[cBS]['life']) {
                            cBQ = cQa[cBS];
                            break;
                        }
                    cBQ || (cBQ = {}, cQa['push'](cBQ)), cBQ['life'] = cBR['hitLife'], cBQ['x'] = cBO, cBQ['z'] = cBP;
                }(cBQ, cBS), cCF['play']('impact_0', 0.8)), cPS = cBO;
            }
        }
    }
    var cQ8, cQ9, cQa = [];

    function cQb() {
        cCF['play']('hit_0', 3.1), cCI['animateDiv'](hitmarker, 0x15e, 0x64, 0x69);
    }

    function cQc(cBO, cBP, cBQ) {
        if (cBQ || cDg)
            for (cDL && cCX && (cBP = cCX['clean'](cBP), cBO = cCC['scrambleS'](cBO)), chatList['innerHTML'] += cBQ ? '<div\x20class=\x27chatItem\x27><span\x20class=\x27chatMsg\x27>' + cBP + '</span></div><br/>' : '<div\x20class=\x27chatItem\x27>' + (cBO || 'unknown') + ':\x20<span\x20class=\x27chatMsg\x27>' + cBP + '</span></div><br/>'; 0xfa <= chatList['scrollHeight'];) chatList['removeChild'](chatList['childNodes'][0x0]);
    }

    function cQg() {
        cDb = Date['now'](), cDc = cDb - cDd, cDc = Math['min'](cDc, cBR['dltMx']), cDd = cDb,
            function() {
                if (cF9['showFPS']['val']) {
                    for (; 0x0 < cGF['length'] && cGF[0x0] <= cDb - 0x3e8;) cGF['shift']();
                    cGF['push'](cDb), cGG = cGF['length'], 0x64 <= cDb - cGH && (cGH = cDb, ingameFPS['textContent'] = cGG, menuFPS['textContent'] = cGG);
                }
            }(), TWEEN['update'](), 0x0 < cDe && (0x0 >= (cDe -= cDc) && (cDe = 0x0)), cCF['rate'] = cCL['config']['deltaMlt'], null != cDe && (cDc *= cDe / cBR['endAnim'], cCF['rate'] = cCL['config']['deltaMlt'] * (cDe / cBR['endAnim'])), cCN || window['spectating'] || (cD4 += 0.0001 * cDc, cD4 %= 0x2 * Math['PI'], cCM['gQpYg'](cD4, 0x0, 0x0)), cHs && 0x0 < classPreviewCanvas['offsetWidth'] && 0x0 < classPreviewCanvas['offsetHeight'] && (cCL['players']['playerStep'](cHt, 0.015 * cDc, !0x0), cHt['idleAnim'] += cBR['idleAnimS'] * cDc, cCL['players']['updateMesh'](cHt, !0x0), cHw['aspect'] = cHu / cHv, cHw['updateProjectionMatrix'](), cHx['setSize'](cHu, cHv), cHx['setPixelRatio'](window['devicePixelRatio'] * cF9['resolution']['val']), cHx['render'](cHs, cHw)),
            function(cBO) {
                if ('block' == spinUI['style']['display'] && (cKu['width'] = cKu['clientWidth'], cKu['height'] = cKu['clientHeight'], spinItemCanvas['style']['width'] = 2.1 * cKu['clientWidth'] + 'px', spinItemCanvas['style']['height'] = 2.1 * cKu['clientWidth'] + 'px', cKM['setSize'](2.1 * cKu['clientWidth'], 2.1 * cKu['clientWidth']), 0x0 < cKu['width'])) {
                    0x1 > cKA && 0x1 <= (cKA += 0.008 * cBO) && (cKA = 0x1), cKD < cKE && ((cKD += 0.4 * cBO) >= cKE && (cKD = cKE), cKI = !0x0, spinItem['style']['display'] = 'block', spinItemName['style']['display'] = 'inline-block', spinRespin['style']['display'] = 'inline-block'), spinRotation != cKB && (spinRotation += 0.024 * (cKB - spinRotation), 0x0 >= (cKK -= 0.024 * (cKB - spinRotation)) && (cKK += Math['PI'] / 1.5, cCF['play']('tick_0', 0.2)), 0.002 >= cKB - spinRotation && (spinRotation = cKB, cKE = 0x64 - cKq['rarities'][cKy['rarity']], cCF['play']('reward', 0.3), cCK && cCK['send']('unbx'), 0x1 <= cKy['rarity'] && cCF['play']('cheer_0', 0.1)));
                    var cBP = 0x1 - (cKE ? cKD / cKE : 0x0);
                    cKv['translate'](0x2, 0x2);
                    var cBQ = cKu['width'] / 0x2 * cKw * cKA;
                    spinButton['style']['opacity'] = cBP;
                    var cBR = 0.3 * cBQ * (0x1 - cBP);
                    spinButton['style']['width'] = 0x2 * cBQ * cKx * 0.8 + cBR + 'px', spinButton['style']['height'] = 0x2 * cBQ * cKx * 0.8 + cBR + 'px', spinText['style']['fontSize'] = 0x2 * cBQ * cKx * 0.15 + cBR + 'px', spinCost['style']['fontSize'] = 0x2 * cBQ * cKx * 0.08 + cBR + 'px', cKv['fillStyle'] = '#fff', cKv['beginPath'](), cKv['arc'](cKu['width'] / 0x2, cKu['height'] / 0x2, cBQ, 0x0, 0x2 * Math['PI']), cKv['closePath'](), cKv['fill']();
                    var cBS = 0x0;
                    if (cKv['save'](), cKv['translate'](cKu['width'] / 0x2, cKu['height'] / 0x2), cKE) {
                        for (var cBT = 0x0, cBY = 0x0; cBY < cCL['store']['rarities']['length']; cBY++) {
                            if (cKy['rarity'] == cBY) {
                                cBT += cKq['rarities'][cBY] / 0x2;
                                break;
                            }
                            cBT += cKq['rarities'][cBY];
                        }
                        cBT /= 0x64, cBT = 0x2 * Math['PI'] * cBT * (cKD / cKE) % (0x2 * Math['PI']), cKv['rotate'](cBT - Math['PI'] * (cKD / cKE));
                    }
                    for (cBY = 0x0; cBY < cCL['store']['rarities']['length']; cBY++) {
                        cCP = cCL['store']['rarities'][cBY], cKv['fillStyle'] = cCP['color'], cKv['beginPath']();
                        var cBZ = cKq['rarities'][cBY];
                        cKE && (cKy['rarity'] == cBY ? cBZ += cKD : cBZ -= cKD * (cKq['rarities'][cBY] / cKE)), 0x0 < cBZ && (cKv['moveTo'](0x0, 0x0), cKv['arc'](0x0, 0x0, 0.95 * cBQ, cBS, cBS + 0x2 * Math['PI'] * (cBZ / 0x64), !0x1), cKv['lineTo'](0x0, 0x0), cKv['fill']()), cBS += 0x2 * Math['PI'] * (cBZ / 0x64);
                    }
                    cKv['restore'](), cKv['fillStyle'] = '#F44336', cKv['save'](), cKv['translate'](cKu['width'] / 0x2, cKu['height'] / 0x2), cKv['rotate'](spinRotation), cKv['beginPath']();
                    var cC3 = (spinButton['getBoundingClientRect']()['width'] / spinButton['offsetWidth'] - 0x1) * (cBQ * cKx) * 0.3;
                    if (cKv['moveTo'](0x0, (cBQ * cKx * -1.2 - cC3) * cBP), cKv['lineTo'](cBQ * cKx * cBP, 0x0), cKv['lineTo'](-cBQ * cKx * cBP, 0x0), cKv['closePath'](), cKv['fill'](), cKv['restore'](), cKv['fillStyle'] = '#fff', cKv['beginPath'](), cKv['arc'](cKu['width'] / 0x2, cKu['height'] / 0x2, cBQ * cKx, 0x0, 0x2 * Math['PI']), cKv['closePath'](), cKv['fill'](), 'block' == spinItem['style']['display'] && cKo) {
                        var cC4 = 0x1 - Math['abs'](cKL['position']['x'] - cKF) / (cKG - cKF);
                        spinItemName['style']['opacity'] = cC4, spinItemName['style']['marginTop'] = 0.6 * cBQ + 'px', spinItemName['style']['fontSize'] = cBQ / 6.5 * cC4 + 'px', spinItemName['children'][0x0]['style']['fontSize'] = cBQ / 0xc * cC4 + 'px', spinItemName['style']['padding'] = cBQ / 0x14 * cC4 + 'px', spinItemName['style']['paddingLeft'] = cBQ / 0x2 * cC4 + 'px', spinItemName['style']['paddingRight'] = cBQ / 0x2 * cC4 + 'px', cKL['position']['x'] != cKF && (cKL['position']['x'] -= 0.2 * (cKL['position']['x'] - cKF), 0.05 >= Math['abs'](cKF - cKL['position']['x']) && (cKL['position']['x'] = cKF), cKL['lookAt'](cKo['position'])), cKJ += 0.0018 * cBO, cKp['position']['y'] = cKp['orgYP'] + 0.55 * Math['sin'](cKJ), cKp['rotation']['x'] = cKp['orgXR'] + -0.042 * Math['sin'](0.9 * cKJ), cKM['render'](cKo, cKL);
                    }
                }
            }(cDc), cH0(), cCM['update'](cDc * cCL['config']['deltaMlt']), cCN && cCN['active'] && !window['locked'] ? (cCL['config']['thirdPerson'] ? cCE['camera']['position']['set'](cBR['thirdPX'], 0x2, cBR['thirdPZ']) : 'prop' == cCN['team'] ? (cD6 += 0x5 * cCM['scrollDelta'], cD6 = Math['min'](Math['max'](0xa, cD6), 0x64), cCE['camera']['position']['set'](0x0, 0x0, cD6)) : cCE['camera']['position']['set'](0x0, 0x0, 0x0), cCM['skipScroll'] = !0x1, cCR = [cCM['getISN'](), Math['round'](cDc * cCL['config']['deltaMlt']), cCM['xDr']['round'](0x3), cCM['yDr']['round'](0x3), cBR['movDirs']['indexOf'](cCM['moveDir']), cCM['mouseDownL'], cCM['mouseDownR'] || cCM['keys'][cCM['aimKey']] ? 0x1 : 0x0, cCM['keys'][cCM['jumpKey']] ? 0x1 : 0x0, cCM['keys'][cCM['crouchKey']] ? 0x1 : 0x0, cCM['keys'][cCM['reloadKey']] ? 0x1 : 0x0, cCM['scrollDelta'] * cD8, cCM['wSwap']], cCM['scrollDelta'] && (cCM['skipScroll'] = !0x0), cCM['scrollDelta'] = 0x0, cCM['wSwap'] = 0x0, cCM['tmpInputs']['push'](cCR), cCN['procInputs'](cCR, cCL), cCM['cWSdygvGQj'](cCN['x'], cCN['y'] + cCN['height'] - cBR['cameraHeight'], cCN['z']), cCM['gQpYg'](cCE['shakeX'], cCE['shakeY'] + cCN['recoilAnimY'] * cBR['recoilMlt'] + 0.1 * cCN['landBobY'], 0x0), cCH['gyztkSjab'](Math['max'](0x3a, cCN['spread'] * cDS), cCL['config']['thirdPerson'] && !cCN['weapon']['scope'] ? 0x1 : cCN['aimVal'] * (cCN['inspecting'] ? 0x0 : 0x1) * ('prop' == cCN['team'] ? 0x0 : 0x1) * (0x0 < cCN['reloadTimer'] ? 0x0 : 0x1)), !cCL['singlePlayer'] && function(cBO) {
                for (var cBP = cD2['length'] ? 0x1 : 0x0; cBP < cBO['length'];)
                    if (0x2 == cBP && cCS && cCS[0x2] == cBO[0x2] && cCS[0x3] == cBO[0x3]) cD2['push']('i'), cBP += 0x2;
                    else {
                        if (0x5 == cBP && cCS && cCS[0x5] == cBO[0x5] && cCS[0x6] == cBO[0x6] && cCS[0x7] == cBO[0x7] && cCS[0x8] == cBO[0x8] && cCS[0x9] == cBO[0x9] && cCS[0xa] == cBO[0xa] && cCS[0xb] == cBO[0xb]) {
                            cD2['push']('i');
                            break;
                        }
                        cD2['push'](cBO[cBP]), cBP++;
                    }
                cCS = cBO;
            }(cCR), Howler['pos'](cCN['x'], cCN['y'] + cCN['height'] - cBR['cameraHeight'], cCN['z']), Howler['orientation'](Math['sin'](cCM['xDr'] + Math['PI']), cCM['yDr'], Math['cos'](cCM['xDr'] + Math['PI'])), cCL['singlePlayer'] && cCN['y'] <= cCL['map']['deathY'] && cOj(cCN['sid'], cCN['deaths'])) : window['spectating'] && (window['spectTarget'] && (window['spectTarget']['active'] ? cCM['followCam'](window['spectTarget'], cDc) : spectMode()), !window['spectTarget'] && cCM['freeCam'](cDc), Howler['pos'](cCM['object']['position']['x'], cCM['object']['position']['y'], cCM['object']['position']['z']), Howler['orientation'](Math['sin'](cCM['xDr'] + Math['PI']), cCM['yDr'], Math['cos'](cCM['xDr'] + Math['PI']))), cCL['update'](cDc, cDb, cCN), cCL['updateFlags'](cCN, cDc),
            function(cBO) {
                var cBP = '';
                if (cCN && cCN['active'])
                    for (var cBQ = 0x0; cBQ < cQa['length']; ++cBQ) cQa[cBQ]['life'] && (cQa[cBQ]['life'] -= cBO, 0x0 >= cQa[cBQ]['life'] && (cQa[cBQ]['life'] = 0x0), cBP += '<div\x20class=\x27hitInd\x27\x20style=\x27transform:\x20translate(0,\x20-50%)\x20rotate(' + (cCM['xDr'] + cCC['getDirection'](cQa[cBQ]['x'], cQa[cBQ]['z'], cCN['x'], cCN['z'])) + 'rad);opacity:' + cQa[cBQ]['life'] / cBR['hitLife'] + '\x27></div>');
                hitHolder['innerHTML'] = cBP;
            }(cDc), cCI['update'](cDc), 'block' == nukeFlash['style']['display'] && (nukeFlash['style']['opacity'] -= 0.002 * cDc, 0x0 >= nukeFlash['style']['opacity'] && (nukeFlash['style']['opacity'] = 0x0, nukeFlash['style']['display'] = 'none')), cCD['render'](cDr, cCL, cCE, cCN), window['spectating'] || 'block' != menuHolder['style']['display'] || !cBR['isProd'] || cCZ || cCO && cCO['developer'] || (window['idleTimer'] += cDc, window['idleTimer'] >= cBR['kickTimer'] && cQD(cBY['get']('player.inactive'))), requestAnimFrame(cQg);
    }

    function cQw() {
        !cCL['singlePlayer'] && cCN && cCN['active'] && (cCK['send']('i', cD2), cD2['length'] = 0x0);
    }

    function cQx(cBO) {
        cBO && (txtBubble['innerHTML'] = cBO, bubbleContainer['style']['transform'] = 'scale(1.0)', cQ8 && clearTimeout(cQ8), cQ8 = setTimeout(function() {
            bubbleContainer['style']['transform'] = 'scale(0.0)';
        }, 0x834));
    }

    function cQz(cBO) {
        console['trace']('Error\x20message', cBO), instructionHolder['style']['display'] = 'block', instructions['innerHTML'] = '<span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cBO + '</span><br/><span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cBY['get']('error.seek') + '\x20<a\x20href=\x27/\x27>here</a>.</span><div\x20style=\x27margin-top:10px;font-size:20px;color:rgba(255,255,255,0.4)\x27>' + cBY['get']('error.extentions') + '</div>', instructionHolder['style']['pointerEvents'] = 'all';
    }

    function cQB(cBO) {
        cQ9 = cBO, cCK['connected'] = !0x1, showWindow(0x0), cCM['disable'](), cCH['hideUI'](), cCH['hideDiscon'](), cQz(cBO), cCK['DfxcJC'] && (cCK['DfxcJC']['onclose'] = function() {}), cQD = function() {};
    }

    function cQD(cBO, cBP) {
        cQ9 || cCL['singlePlayer'] || (cCK['DfxcJC']['onclose'] = function() {}, cCK && cCK['DfxcJC'] && cCK['DfxcJC']['close'](), !cBP && (showWindow(0x0), cCM['disable'](), cCH['hideUI'](), cCH['hideDiscon'](), cQz(cBO || cBY['get']('player.disconnect'))));
    }

    function cQG(cBO) {
        var cBP = '';
        if (cBO) {
            0x3 < cBO['length'] && (cBO['length'] = 0x3);
            for (var cBQ = 0x0; cBQ < cBO['length']; ++cBQ) cBP += '<div\x20class=\x27streamItem\x27\x20onclick=\x27openTab(&quot;https://twitch.tv/' + cBO[cBQ]['name'] + '&quot;)\x27><div\x20class=\x27streamName\x27><div\x20class=\x27strmLink\x20blackShad\x27>' + cBO[cBQ]['name'] + '</div><div\x20class=\x27strmViews\x27>' + cBY['get']('streamers.views', cBO[cBQ]['view']) + '</div></div><img\x20class=\x27strmIcn\x27\x20src=\x27' + cBO[cBQ]['logo'] + '\x27/></div>';
        } else cBP = '<span\x20style=\x27color:rgba(244,60,60,0.5)\x27>' + cBY['get']('streamers.none') + '</span>';
        streamContainer['innerHTML'] = cBP;
    }

    function cQK(cBO) {
        cCL['singlePlayer'] = !0x0, cCK && cCK['DfxcJC'] && cCK['DfxcJC']['close'](), cCK['send'] = function() {};
        try {
            cMk(0x0, null, null, null, null, {
                'maps': [0x0]
            }, 0x0, {
                'data': cBO
            }, null, !0x0);
        } catch (cQM) {}
        cBT('custMap'), cEz(), window['history']['replaceState']({}, 'Krunker\x20Offline', 'offline');
    }

    function cQN(cBO, cBP) {
        cBP && !cDk ? grecaptcha['execute'](cBR['recaptchaKey'], {
            'action': 'homepage'
        })['then'](cBO => {
            cDk = !0x0, cCK['send']('load', 0x0, cBO);
        }) : cCK['send']('load', 0x0);
    }

    function cQR() {
        cCK['send']('strm'),
            function() {
                loginToken = getSavedVal('krunker_token');
                var cBO = getSavedVal('krunker_username');
                loginToken && cBO && cGL(0x1, [cBO, null, loginToken]);
                var cBP = getSavedVal('krunker_last'),
                    cBQ = Date['now']();
                saveVal('krunker_last', cBQ), (!cBP || 0x927c0 <= cBQ - cBP) && cCK['send']('sb', 'welc', cBO);
            }();
    }
    window['pressButton'] = function(cBO) {
        if (window['spectating'] && 0x46 == cBO && spectMode(), cBO == cCM['chatKey'] && (document['activeElement'] == chatInput ? ('' != chatInput['value'] && (cCK['send']('c', chatInput['value']), chatInput['value'] = ''), chatInput['blur']()) : chatInput['focus']()), cBO == cCM['listKey']) {
            if ('INPUT' == document['activeElement']['tagName']) return;
            if (null == endUI['style']['display']) return;
            cCM['keys'][cBO] = 0x0, cCM['hasPointerlock'] && cCM['toggle'](!0x1), showWindow(0x17);
        }
        cCN && cCN['active'] && (cBO == cCM['sprayKey'] && cCK['send']('int', 0x0), cBO == cCM['interactKey'] && cCK['send']('int', 0x1), cBO == cCM['dropKey'] && cCK['send']('int', 0x2), cBO == cCM['inspKey'] && cCL['players']['wInspect'](cCN), 0x31 <= cBO && 0x39 >= cBO && cCK['send']('k', cBO - 0x31));
    }, window['openTab'] = function(cBO) {
        window['open'](cBO, '_blank');
    }, getSavedVal('consent') || (consentBlock['style']['display'] = 'block');
    var cQX = !0x1;

    function cQY() {
        if (!cQX) {
            cQX = !0x0;
            var cBO = getSavedVal('custMap');
            cBT('custMap'), cBO ? cQK(cBO) : function cBO(cBP = null) {
                cC5['seek']({
                    'autoChangeGame': !0x1,
                    'dataQuery': {
                        'version': cBR['useLooseClient'] ? void 0x0 : cCY
                    },
                    'skipReplaceState': cDL,
                    'captchaToken': cBP
                })['then'](cBO => {
                    cC6 = cBO['gameId'], cBO['host'], cC7 = cBO['port'];
                    var cBP = '//' + cBO['host'] + ':' + cC7 + '/ws?gameId=' + cBO['gameId'] + '&clientKey=' + cBO['clientId'];
                    cCK['connect'](cBP, function(cBO) {
                        if (cBO) {
                            if (console['warn']('IO\x20connect\x20error', cBO), null != cQ9) return;
                            cQD();
                        } else {
                            cEz(), aHolder['style']['display'] = null;
                            var cBP = getSavedVal('mapToLoad');
                            cBT('mapToLoad'), cBP && selectHostMap(cBP);
                            var cBQ = getSavedVal('custToLoad');
                            cBT('custToLoad'), cBQ && selectHostMap(!0x1, cBQ);
                        }
                    }, {
                        'init': cMk,
                        'load': cQN,
                        'ready': cQR,
                        'start': cMf,
                        'cust': cCg,
                        'iq': cCl,
                        'pur': cEe,
                        'uf': cEc,
                        'clm': cH3,
                        'gmsg': cO9,
                        'pc': cQK,
                        'cln': cL2,
                        'upMp': cLr,
                        'lock': cMA,
                        'spin': cKR,
                        'unb': cKN,
                        'end': cMC,
                        'pErr': purchaseError,
                        'error': cQB,
                        'strm': cQG,
                        'dc': cQD,
                        'ts': cPu,
                        't': cNQ,
                        'n': cNO,
                        '-1': cOP,
                        0: cNT,
                        1: cOe,
                        8: cNY,
                        2: cOh,
                        3: cOj,
                        'kst': cOH,
                        'am': cPK,
                        'ac': cOL,
                        4: cQb,
                        5: cPz,
                        6: cPF,
                        'lv': cPC,
                        'up': cPP,
                        7: cOV,
                        9: cP1,
                        10: cPJ,
                        'h': cPT,
                        's': cMT,
                        'sp': cNG,
                        'ch': cQc,
                        'vc': voiceChat,
                        'a': cGP,
                        'ua': cGq,
                        'ex': cPo,
                        'st': cOC,
                        'pr': cPd,
                        'tm': cOb,
                        'pre': cPm,
                        'obj': cCL['setObjective'],
                        'do': cCL['destroyObj'],
                        'ufl': cCL['updateFlag'],
                        'gte': cCL['updateGate'],
                        'pi': cO4,
                        'pir': cO5,
                        'chp': cPB,
                        'mv': updMatchVote,
                        'nwT': newTok,
                        'inat': cMX,
                        'sb': cQx,
                        'zn': cCL['updateZone'],
                        'vr': cK8,
                        'ctrR': crtrCodRes
                    }), cC5['fetchGameInfo'](cBO['gameId'])['then'](cBO => {
                        cBO['region'], menuRegionLabel['innerText'] = cBR['regionNames'][cBO['region']], mainLogo['src'] = '/img/logo_1.png';
                    })['catch'](cBO => console['error']('Failed\x20to\x20fetch\x20game\x20info', cBO));
                })['catch'](cBP => {
                    console['warn']('Matchmaker\x20error:', cBP, cBP['message'], cBP['response']);
                    let cBQ = cBP['message'];
                    if (cBP['response']) {
                        if ('TooManyIPs' == (cBQ = cBP['response']['data'] && cBP['response']['data']['error'] ? cBP['response']['data']['error'] : 'GameFull')) return void grecaptcha['execute'](cBR['recaptchaKey'], {
                            'action': 'seek_server'
                        })['then'](cBP => cBO(cBP));
                        'InvalidGameId' == cBQ ? cBQ = cBY['get']('matchmaker.none') : 'GameFull' == cBQ ? cBQ = cBY['get']('matchmaker.full2') : console['warn']('Unhandled\x20error\x20message', cBQ);
                    } else console['warn']('No\x20error\x20response', cBP['response']);
                    cQB(cBQ);
                });
            }(), window['requestAnimFrame'] = window['requestAnimationFrame'] || window['webkitRequestAnimationFrame'] || window['mozRequestAnimationFrame'] || function(cBO) {
                window['setTimeout'](cBO, 0x3e8 / 0x3c);
            }, setInterval(() => {
                window['chH'](cCK);
            }, 0x2710), setInterval(cQw, cBR['clientSendRate']), setInterval(cO7, cBR['nameVisRate']), cDd = Date['now'](), cQg();
        }
    }
    var cRc = cBR['isProd'] ? ['de-fra', 'us-ca-sv', 'au-syd', 'jb-hnd', 'us-fl', 'sgp', 'us-nj'] : ['local'];
    var cRd, cRe, cRf = !0x1;

    function cRg(cBO) {
        return clearTimeout(cRd), clearTimeout(cRe), cRf ? (cRf = !0x1, document['getElementById']('pre-content-container')['style']['display'] = 'none', document['getElementById']('my-content')['style']['display'] = 'none', void(cBO ? cCK['send']('rew') : alert(cBY['get']('adblocker')))) : void console['warn']('Attempting\x20to\x20finish\x20when\x20pre\x20ad\x20not\x20showing');
    }
    window['boltEventHandlers'] = function() {
        Bolt['on']('pre-content-player', 'showHiddenContainer', function() {
            console['log']('Ad\x20finished\x20successfully'), cRg(!0x0);
        });
    }, window['captchaCallback'] = function() {
        instructions['innerHTML'] = cBY['get']('generic.connecting'), cQY();
    }, window['debugMatchmaker'] = function(cBO, cBP) {
        return cBP || (cBP = cC6), Promise['all']([cC5['fetchGameInfo'](cBP), cC5['fetchGameDebugInfo'](cBO, cBP), cC5['fetchAllDebugInfo'](cBO)])['then'](([cBO, cBP, cBQ]) => ({
            'gameInfo': cBO,
            'gameDebugInfo': cBP,
            'allDebugInfo': cBQ
        }));
    }, window['getGameActivity'] = function() {
        return {
            'id': cC6,
            'time': timerVal['innerHTML'] ? timerVal['innerHTML']['split'](':')['reverse']()['reduce']((cBO, cBP, cBQ) => cBO + cBP * Math['pow'](0x3c, cBQ), 0x0) : null,
            'user': cCO ? cCO['name'] : 'Guest' + (cCN ? '_' + cCN['sid'] : ''),
            'class': {
                'name': cCL['classes'][cDm]['name'] || null,
                'index': cCN ? cCN['classIndex'] : cDm
            },
            'mode': cCL['mode'] ? cCL['mode']['name'] : null,
            'map': cCL['map']['maps'][cCL['map']['lastGen']]['name'],
            'custom': cCL['isCustom']
        };
    };
}, function(cRq, cRr, cRs) {
    var cRt = this && this['__awaiter'] || function(cRq, cRr, cRs, cRt) {
        function cRy(cRq) {
            return cRq instanceof cRs ? cRq : new cRs(function(cRr) {
                cRr(cRq);
            });
        }
        return new(cRs || (cRs = Promise))(function(cRs, cRC) {
            function cRD(cRq) {
                try {
                    cRJ(cRt['next'](cRq));
                } catch (cRF) {
                    cRC(cRF);
                }
            }

            function cRG(cRq) {
                try {
                    cRJ(cRt['throw'](cRq));
                } catch (cRI) {
                    cRC(cRI);
                }
            }

            function cRJ(cRq) {
                cRq['done'] ? cRs(cRq['value']) : cRy(cRq['value'])['then'](cRD, cRG);
            }
            cRJ((cRt = cRt['apply'](cRq, cRr || []))['next']());
        });
    };
    Object['defineProperty'](cRr, '__esModule', {
        'value': !0x0
    });
    const cRL = cRs(0x6e),
        cRM = cRs(0x71);
    class cRN {
        constructor(cRq, cRr, cRs, cRt) {
            this['manager'] = cRq, this['queueClientId'] = cRr, this['statusCallback'] = cRs, this['hostCallback'] = cRt, this['status'] = 'Queuing', this['queueSize'] = 0x0;
        }
        get['isQueued']() {
            return 'Host' != this['status'] && 'Join' != this['status'];
        }
        get['isActive']() {
            return this['manager']['queueManager'] === this;
        }['_start']() {
            return cRt(this, void 0x0, void 0x0, function*() {
                this['_poll']();
            });
        }['_poll']() {
            return cRt(this, void 0x0, void 0x0, function*() {
                let cRq = yield this['manager']['matchmakerRequest']('/queue/poll', {
                    'clientId': this['queueClientId']
                });
                this['_handleNewStatus'](cRq['status']);
            });
        }['_handleNewStatus'](cRq) {
            this['status'] = cRq['t'];
            let cRr = !0x1;
            switch (cRq['t']) {
                case 'Queued':
                    this['queueSize'] = cRq['c']['queueSize'];
                    break;
                case 'CreatingGame':
                    break;
                case 'Host':
                    cRr = !0x0;
                    let cRs = cRq['c']['pendingGameId'];
                    this['hostCallback'](cRs);
                    break;
                case 'Join':
                    cRr = !0x0;
                    let cRt = cRq['c']['gameId'];
                    this['manager']['switchGame'](cRt);
                    break;
                default:
                    return void console['error']('Unknown\x20status', cRq);
            }
            cRr ? this['manager']['unqueue']() : setTimeout(() => {
                this['isActive'] && this['_poll']();
            }, 0x3e8), this['statusCallback'](cRq['t'], cRq['c']);
        }['_stop']() {
            return cRt(this, void 0x0, void 0x0, function*() {
                this['isQueued'] && (yield this['manager']['matchmakerRequest']('/queue/unqueue', {
                    'clientId': this['queueClientId']
                }));
            });
        }
    }
    cRr['QueueManager'] = cRN;
    class cRX {
        constructor(cRq) {
            this['matchmakerAddress'] = cRq, this['cachePingRegion'] = !0x0, this['enableLogging'] = !!localStorage['getItem']('CLIENT_MANAGER_LOGGING');
        }
        get['hostname']() {
            return location['hostname'];
        }['seek'](cRq = {
            'autoChangeGame': !0x0
        }) {
            return cRt(this, void 0x0, void 0x0, function*() {
                this['log']('Seeking\x20games...');
                let cRr = cRq['regionId'] || (yield this['getRegion']()),
                    cRs = cRq['gameId'] || this['parseQuery'](),
                    cRt = yield this['matchmakerSeek'](cRr, cRs, cRq['dataQuery'] || null, cRq['autoChangeGame'], cRq['captchaToken']);
                return cRq['skipReplaceState'] || window['history']['replaceState'](document['title'], document['title'], this['generateHref'](cRt['gameId'])), cRt;
            });
        }['getRegion']() {
            return cRt(this, void 0x0, void 0x0, function*() {
                return new Promise((cRq, cRr) => cRt(this, void 0x0, void 0x0, function*() {
                    let cRs = localStorage['getItem'](cRX['PING_REGION_CACHE_KEY']);
                    if (cRs) return void cRq(cRs);
                    let cRt = yield this['fetchPingList'](), cRL = 0x0, cRN = !0x1;
                    for (let cRs in cRt) {
                        let cSa = cRt[cRs],
                            cSb = cSa['endsWith'](':443') ? 'https:' : 'http:';
                        cRM['default']['get'](cSb + '//' + cSa + '/ping')['then'](() => {
                            cRN || cRX['setDefaultRegion'](cRs), cRN = !0x0, cRq(cRs);
                        })['catch'](() => {
                            ++cRL >= Object['keys'](cRt)['length'] && cRr('All\x20pings\x20failed.');
                        });
                    }
                }));
            });
        }['switchGame'](cRq) {
            window['location']['href'] = this['generateHref'](cRq);
        }
        static['setDefaultRegion'](cRq) {
            localStorage['setItem'](cRX['PING_REGION_CACHE_KEY'], cRq);
        }['parseQuery']() {
            this['log']('Parsing\x20query...');
            var cRq = cRL(location['href'], !0x0)['query']['game'];
            return 'string' == typeof cRq ? cRq : null;
        }['fetchPingList']() {
            return cRt(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20list\x20of\x20servrs\x20to\x20ping...'), yield this['matchmakerRequest']('/ping-list', {
                    'hostname': this['hostname']
                });
            });
        }['fetchGameList']() {
            return cRt(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20game\x20list...'), yield this['matchmakerRequest']('/game-list', {
                    'hostname': this['hostname']
                });
            });
        }['fetchGameInfo'](cRq) {
            return cRt(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20game\x20info\x20for\x20' + cRq + '...'), yield this['matchmakerRequest']('/game-info', {
                    'game': cRq
                });
            });
        }['matchmakerSeek'](cRq, cRr = null, cRs, cRL = !0x0, cRM = null) {
            return cRt(this, void 0x0, void 0x0, function*() {
                this['log']('Seeking\x20matchmaker\x20with\x20region\x20' + cRq + '...');
                let cRt = {
                    'hostname': this['hostname'],
                    'region': cRq,
                    'autoChangeGame': cRL
                };
                return cRr && (cRt['game'] = cRr), cRs && (cRt['dataQuery'] = JSON['stringify'](cRs)), cRM && (cRt['captchaToken'] = cRM), yield this['matchmakerRequest']('/seek-game', cRt);
            });
        }['fetchAllDebugInfo'](cRq) {
            return cRt(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20all\x20debug\x20info...'), yield this['matchmakerRequest']('/internal/all-debug-info', {
                    'key': cRq
                });
            });
        }['fetchGameDebugInfo'](cRq, cRr) {
            return cRt(this, void 0x0, void 0x0, function*() {
                return this['log']('Fetching\x20game\x20debug\x20info\x20for\x20' + cRr + '...'), yield this['matchmakerRequest']('/internal/game-debug-info', {
                    'key': cRq,
                    'gameId': cRr
                });
            });
        }['queue'](cRq) {
            return cRt(this, void 0x0, void 0x0, function*() {
                this['queueManager'] && this['unqueue']();
                let cRr = new cRN(this, cRq['clientId'], cRq['statusCallback'], cRq['hostCallback']);
                return this['queueManager'] = cRr, yield cRr['_start']();
            });
        }['unqueue']() {
            return cRt(this, void 0x0, void 0x0, function*() {
                let cRq = this['queueManager'];
                this['queueManager'] = void 0x0, cRq && (yield cRq['_stop']());
            });
        }['generateHref'](cRq) {
            return '/?game=' + cRq;
        }['matchmakerRequest'](cRq, cRr = {}) {
            return cRt(this, void 0x0, void 0x0, function*() {
                return this['log']('Executing\x20matchmaker\x20request\x20' + cRq + '\x20with\x20params\x20' + JSON['stringify'](cRr) + '...'), (yield cRM['default']['get']('' + this['matchmakerAddress'] + cRq, {
                    'params': cRr,
                    'responseType': 'json'
                }))['data'];
            });
        }['log'](...cRq) {
            return this['enableLogging'] ? (console['debug'] || console['info'] || console['log'])(...cRq) : void 0x0;
        }
    }
    cRr['default'] = cRX, cRX['PING_REGION_CACHE_KEY'] = 'sid-utils:ping-region';
}, function(cSw, cSx, cSy) {
    (function(cSx) {
        var cSA = cSy(0x6f),
            cSB = cSy(0x70),
            cSC = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i,
            cSD = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
            cSE = [
                ['#', 'hash'],
                ['?', 'query'],
                function(cSw) {
                    return cSw['replace']('\x5c', '/');
                },
                ['/', 'pathname'],
                ['@', 'auth', 0x1],
                [NaN, 'host', void 0x0, 0x1, 0x1],
                [/:(\d+)$/, 'port', void 0x0, 0x1],
                [NaN, 'hostname', void 0x0, 0x1, 0x1]
            ],
            cSF = {
                'hash': 0x1,
                'query': 0x1
            };

        function cSH(cSw) {
            var cSy, cSA = ('undefined' == typeof window ? void 0x0 === cSx ? 'undefined' == typeof self ? {} : self : cSx : window)['location'] || {},
                cSB = {},
                cSC = typeof(cSw = cSw || cSA);
            if ('blob:' === cSw['protocol']) cSB = new cSQ(unescape(cSw['pathname']), {});
            else if ('string' == cSC)
                for (cSy in cSB = new cSQ(cSw, {}), cSF) delete cSB[cSy];
            else if ('object' == cSC) {
                for (cSy in cSw) cSy in cSF || (cSB[cSy] = cSw[cSy]);
                void 0x0 === cSB['slashes'] && (cSB['slashes'] = cSD['test'](cSw['href']));
            }
            return cSB;
        }

        function cSN(cSw) {
            var cSx = cSC['exec'](cSw);
            return {
                'protocol': cSx[0x1] ? cSx[0x1]['toLowerCase']() : '',
                'slashes': !!cSx[0x2],
                'rest': cSx[0x3]
            };
        }

        function cSQ(cSw, cSx, cSy) {
            if (!(this instanceof cSQ)) return new cSQ(cSw, cSx, cSy);
            var cSC, cSD, cSF, cSX, cSY, cSZ, cT0 = cSE['slice'](),
                cT1 = typeof cSx,
                cT2 = this,
                cT3 = 0x0;
            for ('object' != cT1 && 'string' != cT1 && (cSy = cSx, cSx = null), cSy && 'function' != typeof cSy && (cSy = cSB['parse']), cSx = cSH(cSx), cSC = !(cSD = cSN(cSw || ''))['protocol'] && !cSD['slashes'], cT2['slashes'] = cSD['slashes'] || cSC && cSx['slashes'], cT2['protocol'] = cSD['protocol'] || cSx['protocol'] || '', cSw = cSD['rest'], cSD['slashes'] || (cT0[0x3] = [/(.*)/, 'pathname']); cT3 < cT0['length']; cT3++) 'function' != typeof(cSX = cT0[cT3]) ? (cSF = cSX[0x0], cSZ = cSX[0x1], cSF == cSF ? 'string' == typeof cSF ? ~(cSY = cSw['indexOf'](cSF)) && ('number' == typeof cSX[0x2] ? (cT2[cSZ] = cSw['slice'](0x0, cSY), cSw = cSw['slice'](cSY + cSX[0x2])) : (cT2[cSZ] = cSw['slice'](cSY), cSw = cSw['slice'](0x0, cSY))) : (cSY = cSF['exec'](cSw)) && (cT2[cSZ] = cSY[0x1], cSw = cSw['slice'](0x0, cSY['index'])) : cT2[cSZ] = cSw, cT2[cSZ] = cT2[cSZ] || cSC && cSX[0x3] && cSx[cSZ] || '', cSX[0x4] && (cT2[cSZ] = cT2[cSZ]['toLowerCase']())) : cSw = cSX(cSw);
            cSy && (cT2['query'] = cSy(cT2['query'])), cSC && cSx['slashes'] && '/' !== cT2['pathname']['charAt'](0x0) && ('' !== cT2['pathname'] || '' !== cSx['pathname']) && (cT2['pathname'] = function(cSw, cSx) {
                for (var cSy = (cSx || '/')['split']('/')['slice'](0x0, -0x1)['concat'](cSw['split']('/')), cSA = cSy['length'], cSB = cSy[cSA - 0x1], cSC = !0x1, cSD = 0x0; cSA--;) '.' === cSy[cSA] ? cSy['splice'](cSA, 0x1) : '..' === cSy[cSA] ? (cSy['splice'](cSA, 0x1), cSD++) : cSD && (0x0 === cSA && (cSC = !0x0), cSy['splice'](cSA, 0x1), cSD--);
                return cSC && cSy['unshift'](''), ('.' === cSB || '..' === cSB) && cSy['push'](''), cSy['join']('/');
            }(cT2['pathname'], cSx['pathname'])), cSA(cT2['port'], cT2['protocol']) || (cT2['host'] = cT2['hostname'], cT2['port'] = ''), cT2['username'] = cT2['password'] = '', cT2['auth'] && (cSX = cT2['auth']['split'](':'), cT2['username'] = cSX[0x0] || '', cT2['password'] = cSX[0x1] || ''), cT2['origin'] = cT2['protocol'] && cT2['host'] && 'file:' !== cT2['protocol'] ? cT2['protocol'] + '//' + cT2['host'] : 'null', cT2['href'] = cT2['toString']();
        }
        cSQ['prototype'] = {
            'set': function(cSw, cSx, cSy) {
                var cSC = this;
                switch (cSw) {
                    case 'query':
                        'string' == typeof cSx && cSx['length'] && (cSx = (cSy || cSB['parse'])(cSx)), cSC[cSw] = cSx;
                        break;
                    case 'port':
                        cSC[cSw] = cSx, cSA(cSx, cSC['protocol']) ? cSx && (cSC['host'] = cSC['hostname'] + ':' + cSx) : (cSC['host'] = cSC['hostname'], cSC[cSw] = '');
                        break;
                    case 'hostname':
                        cSC[cSw] = cSx, cSC['port'] && (cSx += ':' + cSC['port']), cSC['host'] = cSx;
                        break;
                    case 'host':
                        cSC[cSw] = cSx, /:\d+$/ ['test'](cSx) ? (cSx = cSx['split'](':'), cSC['port'] = cSx['pop'](), cSC['hostname'] = cSx['join'](':')) : (cSC['hostname'] = cSx, cSC['port'] = '');
                        break;
                    case 'protocol':
                        cSC['protocol'] = cSx['toLowerCase'](), cSC['slashes'] = !cSy;
                        break;
                    case 'pathname':
                    case 'hash':
                        if (cSx) {
                            var cSD = 'pathname' === cSw ? '/' : '#';
                            cSC[cSw] = cSx['charAt'](0x0) === cSD ? cSx : cSD + cSx;
                        } else cSC[cSw] = cSx;
                        break;
                    default:
                        cSC[cSw] = cSx;
                }
                for (var cSF, cSH = 0x0; cSH < cSE['length']; cSH++)(cSF = cSE[cSH])[0x4] && (cSC[cSF[0x1]] = cSC[cSF[0x1]]['toLowerCase']());
                return cSC['origin'] = cSC['protocol'] && cSC['host'] && 'file:' !== cSC['protocol'] ? cSC['protocol'] + '//' + cSC['host'] : 'null', cSC['href'] = cSC['toString'](), cSC;
            },
            'toString': function(cSw) {
                cSw && 'function' == typeof cSw || (cSw = cSB['stringify']);
                var cSx, cSy = this,
                    cSA = cSy['protocol'];
                cSA && ':' !== cSA['charAt'](cSA['length'] - 0x1) && (cSA += ':');
                var cSC = cSA + (cSy['slashes'] ? '//' : '');
                return cSy['username'] && (cSC += cSy['username'], cSy['password'] && (cSC += ':' + cSy['password']), cSC += '@'), cSC += cSy['host'] + cSy['pathname'], (cSx = 'object' == typeof cSy['query'] ? cSw(cSy['query']) : cSy['query']) && (cSC += '?' === cSx['charAt'](0x0) ? cSx : '?' + cSx), cSy['hash'] && (cSC += cSy['hash']), cSC;
            }
        }, cSQ['extractProtocol'] = cSN, cSQ['location'] = cSH, cSQ['qs'] = cSB, cSw['exports'] = cSQ;
    }['call'](this, cSy(0x15)));
}, function(cTn, cTo, cTp) {
    cTn['exports'] = function(cTn, cTo) {
        return cTo = cTo['split'](':')[0x0], !!(cTn = +cTn) && ('http' === cTo || 'ws' === cTo ? 0x50 !== cTn : 'https' === cTo || 'wss' === cTo ? 0x1bb !== cTn : 'ftp' === cTo ? 0x15 !== cTn : 'gopher' === cTo ? 0x46 !== cTn : 'file' !== cTo && 0x0 !== cTn);
    };
}, function(cTs, cTt, cTu) {
    var cTv, cTw = Object['prototype']['hasOwnProperty'];

    function cTx(cTs) {
        return decodeURIComponent(cTs['replace'](/\+/g, '\x20'));
    }
    cTt['stringify'] = function(cTs, cTt) {
        cTt = cTt || '';
        var cTu, cTx, cTD = [];
        for (cTx in 'string' != typeof cTt && (cTt = '?'), cTs) cTw['call'](cTs, cTx) && (!(cTu = cTs[cTx]) && (null === cTu || cTu === cTv || isNaN(cTu)) && (cTu = ''), cTD['push'](encodeURIComponent(cTx) + '=' + encodeURIComponent(cTu)));
        return cTD['length'] ? cTt + cTD['join']('&') : '';
    }, cTt['parse'] = function(cTs) {
        for (var cTt, cTu = /([^=?&]+)=?([^&]*)/g, cTv = {}; cTt = cTu['exec'](cTs);) {
            var cTw = cTx(cTt[0x1]),
                cTJ = cTx(cTt[0x2]);
            cTw in cTv || (cTv[cTw] = cTJ);
        }
        return cTv;
    };
}, function(cTK, cTL, cTM) {
    cTK['exports'] = cTM(0x72);
}, function(cTN, cTO, cTP) {
    var cTQ = cTP(0x24),
        cTR = cTP(0x5e),
        cTS = cTP(0x74),
        cTT = cTP(0x57);

    function cTU(cTN) {
        var cTO = new cTS(cTN),
            cTP = cTR(cTS['prototype']['request'], cTO);
        return cTQ['extend'](cTP, cTS['prototype'], cTO), cTQ['extend'](cTP, cTO), cTP;
    }
    var cTY = cTU(cTT);
    cTY['Axios'] = cTS, cTY['create'] = function(cTN) {
        return cTU(cTQ['merge'](cTT, cTN));
    }, cTY['Cancel'] = cTP(0x62), cTY['CancelToken'] = cTP(0x82), cTY['isCancel'] = cTP(0x61), cTY['all'] = function(cTN) {
        return Promise['all'](cTN);
    }, cTY['spread'] = cTP(0x83), cTN['exports'] = cTY, cTN['exports']['default'] = cTY;
}, function(cU1, cU2) {
    function cU3(cU1) {
        return !!cU1['constructor'] && 'function' == typeof cU1['constructor']['isBuffer'] && cU1['constructor']['isBuffer'](cU1);
    }
    cU1['exports'] = function(cU1) {
        return null != cU1 && (cU3(cU1) || function(cU1) {
            return 'function' == typeof cU1['readFloatLE'] && 'function' == typeof cU1['slice'] && cU3(cU1['slice'](0x0, 0x0));
        }(cU1) || !!cU1['_isBuffer']);
    };
}, function(cU7, cU8, cU9) {
    var cUa = cU9(0x57),
        cUb = cU9(0x24),
        cUc = cU9(0x7d),
        cUd = cU9(0x7e);

    function cUe(cU7) {
        this['defaults'] = cU7, this['interceptors'] = {
            'request': new cUc(),
            'response': new cUc()
        };
    }
    cUe['prototype']['request'] = function(cU7) {
        'string' == typeof cU7 && (cU7 = cUb['merge']({
            'url': arguments[0x0]
        }, arguments[0x1])), (cU7 = cUb['merge'](cUa, {
            'method': 'get'
        }, this['defaults'], cU7))['method'] = cU7['method']['toLowerCase']();
        var cU8 = [cUd, void 0x0],
            cU9 = Promise['resolve'](cU7);
        for (this['interceptors']['request']['forEach'](function(cU7) {
                cU8['unshift'](cU7['fulfilled'], cU7['rejected']);
            }), this['interceptors']['response']['forEach'](function(cU7) {
                cU8['push'](cU7['fulfilled'], cU7['rejected']);
            }); cU8['length'];) cU9 = cU9['then'](cU8['shift'](), cU8['shift']());
        return cU9;
    }, cUb['forEach'](['delete', 'get', 'head', 'options'], function(cU7) {
        cUe['prototype'][cU7] = function(cU8, cU9) {
            return this['request'](cUb['merge'](cU9 || {}, {
                'method': cU7,
                'url': cU8
            }));
        };
    }), cUb['forEach'](['post', 'put', 'patch'], function(cU7) {
        cUe['prototype'][cU7] = function(cU8, cU9, cUa) {
            return this['request'](cUb['merge'](cUa || {}, {
                'method': cU7,
                'url': cU8,
                'data': cU9
            }));
        };
    }), cU7['exports'] = cUe;
}, function(cUs, cUt, cUu) {
    var cUv = cUu(0x24);
    cUs['exports'] = function(cUs, cUt) {
        cUv['forEach'](cUs, function(cUu, cUv) {
            cUv !== cUt && cUv['toUpperCase']() === cUt['toUpperCase']() && (cUs[cUt] = cUu, delete cUs[cUv]);
        });
    };
}, function(cUA, cUB, cUC) {
    var cUD = cUC(0x60);
    cUA['exports'] = function(cUA, cUB, cUC) {
        var cUH = cUC['config']['validateStatus'];
        cUC['status'] && cUH && !cUH(cUC['status']) ? cUB(cUD('Request\x20failed\x20with\x20status\x20code\x20' + cUC['status'], cUC['config'], null, cUC['request'], cUC)) : cUA(cUC);
    };
}, function(cUI, cUJ, cUK) {
    cUI['exports'] = function(cUI, cUJ, cUK, cUO, cUP) {
        return cUI['config'] = cUJ, cUK && (cUI['code'] = cUK), cUI['request'] = cUO, cUI['response'] = cUP, cUI;
    };
}, function(cUQ, cUR, cUS) {
    var cUT = cUS(0x24);

    function cUU(cUQ) {
        return encodeURIComponent(cUQ)['replace'](/%40/gi, '@')['replace'](/%3A/gi, ':')['replace'](/%24/g, '$')['replace'](/%2C/gi, ',')['replace'](/%20/g, '+')['replace'](/%5B/gi, '[')['replace'](/%5D/gi, ']');
    }
    cUQ['exports'] = function(cUQ, cUR, cUS) {
        if (!cUR) return cUQ;
        var cUZ;
        if (cUS) cUZ = cUS(cUR);
        else if (cUT['isURLSearchParams'](cUR)) cUZ = cUR['toString']();
        else {
            var cV0 = [];
            cUT['forEach'](cUR, function(cUQ, cUR) {
                null == cUQ || (cUT['isArray'](cUQ) ? cUR += '[]' : cUQ = [cUQ], cUT['forEach'](cUQ, function(cUQ) {
                    cUT['isDate'](cUQ) ? cUQ = cUQ['toISOString']() : cUT['isObject'](cUQ) && (cUQ = JSON['stringify'](cUQ)), cV0['push'](cUU(cUR) + '=' + cUU(cUQ));
                }));
            }), cUZ = cV0['join']('&');
        }
        return cUZ && (cUQ += (-0x1 === cUQ['indexOf']('?') ? '?' : '&') + cUZ), cUQ;
    };
}, function(cV4, cV5, cV6) {
    var cV7 = cV6(0x24),
        cV8 = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
    cV4['exports'] = function(cV4) {
        var cV5, cV6, cVc, cVd = {};
        return cV4 ? (cV7['forEach'](cV4['split']('\x0a'), function(cV4) {
            if (cVc = cV4['indexOf'](':'), cV5 = cV7['trim'](cV4['substr'](0x0, cVc))['toLowerCase'](), cV6 = cV7['trim'](cV4['substr'](cVc + 0x1)), cV5) {
                if (cVd[cV5] && 0x0 <= cV8['indexOf'](cV5)) return;
                cVd[cV5] = 'set-cookie' === cV5 ? (cVd[cV5] ? cVd[cV5] : [])['concat']([cV6]) : cVd[cV5] ? cVd[cV5] + ',\x20' + cV6 : cV6;
            }
        }), cVd) : cVd;
    };
}, function(cVf, cVg, cVh) {
    var cVi = cVh(0x24);
    cVf['exports'] = cVi['isStandardBrowserEnv']() ? function() {
        function cVf(cVf) {
            var cVg = cVf;
            return cVh && (cVo['setAttribute']('href', cVg), cVg = cVo['href']), cVo['setAttribute']('href', cVg), {
                'href': cVo['href'],
                'protocol': cVo['protocol'] ? cVo['protocol']['replace'](/:$/, '') : '',
                'host': cVo['host'],
                'search': cVo['search'] ? cVo['search']['replace'](/^\?/, '') : '',
                'hash': cVo['hash'] ? cVo['hash']['replace'](/^#/, '') : '',
                'hostname': cVo['hostname'],
                'port': cVo['port'],
                'pathname': '/' === cVo['pathname']['charAt'](0x0) ? cVo['pathname'] : '/' + cVo['pathname']
            };
        }
        var cVg, cVh = /(msie|trident)/i ['test'](navigator['userAgent']),
            cVo = document['createElement']('a');
        return cVg = cVf(window['location']['href']),
            function(cVh) {
                var cVo = cVi['isString'](cVh) ? cVf(cVh) : cVh;
                return cVo['protocol'] === cVg['protocol'] && cVo['host'] === cVg['host'];
            };
    }() : function() {
        return !0x0;
    };
}, function(cVr, cVs, cVt) {
    var cVu = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

    function cVv() {
        this['message'] = 'String\x20contains\x20an\x20invalid\x20character';
    }
    cVv['prototype'] = new Error(), cVv['prototype']['code'] = 0x5, cVv['prototype']['name'] = 'InvalidCharacterError', cVr['exports'] = function(cVr) {
        for (var cVs, cVt, cVz = cVr + '', cVA = '', cVB = 0x0, cVC = cVu; cVz['charAt'](0x0 | cVB) || (cVC = '=', cVB % 0x1); cVA += cVC['charAt'](0x3f & cVs >> 0x8 - cVB % 0x1 * 0x8)) {
            if (0xff < (cVt = cVz['charCodeAt'](cVB += 0.75))) throw new cVv();
            cVs = cVs << 0x8 | cVt;
        }
        return cVA;
    };
}, function(cVD, cVE, cVF) {
    var cVG = cVF(0x24);
    cVD['exports'] = cVG['isStandardBrowserEnv']() ? {
        'write': function(cVD, cVE, cVF, cVK, cVL, cVM) {
            var cVN = [];
            cVN['push'](cVD + '=' + encodeURIComponent(cVE)), cVG['isNumber'](cVF) && cVN['push']('expires=' + new Date(cVF)['toGMTString']()), cVG['isString'](cVK) && cVN['push']('path=' + cVK), cVG['isString'](cVL) && cVN['push']('domain=' + cVL), !0x0 === cVM && cVN['push']('secure'), document['cookie'] = cVN['join'](';\x20');
        },
        'read': function(cVD) {
            var cVE = document['cookie']['match'](new RegExp('(^|;\x5cs*)(' + cVD + ')=([^;]*)'));
            return cVE ? decodeURIComponent(cVE[0x3]) : null;
        },
        'remove': function(cVD) {
            this['write'](cVD, '', Date['now']() - 0x5265c00);
        }
    } : {
        'write': function() {},
        'read': function() {
            return null;
        },
        'remove': function() {}
    };
}, function(cVR, cVS, cVT) {
    var cVU = cVT(0x24);

    function cVV() {
        this['handlers'] = [];
    }
    cVV['prototype']['use'] = function(cVR, cVS) {
        return this['handlers']['push']({
            'fulfilled': cVR,
            'rejected': cVS
        }), this['handlers']['length'] - 0x1;
    }, cVV['prototype']['eject'] = function(cVR) {
        this['handlers'][cVR] && (this['handlers'][cVR] = null);
    }, cVV['prototype']['forEach'] = function(cVR) {
        cVU['forEach'](this['handlers'], function(cVS) {
            null !== cVS && cVR(cVS);
        });
    }, cVR['exports'] = cVV;
}, function(cW1, cW2, cW3) {
    var cW4 = cW3(0x24),
        cW5 = cW3(0x7f),
        cW6 = cW3(0x61),
        cW7 = cW3(0x57),
        cW8 = cW3(0x80),
        cW9 = cW3(0x81);

    function cWa(cW1) {
        cW1['cancelToken'] && cW1['cancelToken']['throwIfRequested']();
    }
    cW1['exports'] = function(cW1) {
        return cWa(cW1), cW1['baseURL'] && !cW8(cW1['url']) && (cW1['url'] = cW9(cW1['baseURL'], cW1['url'])), cW1['headers'] = cW1['headers'] || {}, cW1['data'] = cW5(cW1['data'], cW1['headers'], cW1['transformRequest']), cW1['headers'] = cW4['merge'](cW1['headers']['common'] || {}, cW1['headers'][cW1['method']] || {}, cW1['headers'] || {}), cW4['forEach'](['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function(cW2) {
            delete cW1['headers'][cW2];
        }), (cW1['adapter'] || cW7['adapter'])(cW1)['then'](function(cW2) {
            return cWa(cW1), cW2['data'] = cW5(cW2['data'], cW2['headers'], cW1['transformResponse']), cW2;
        }, function(cW2) {
            return cW6(cW2) || (cWa(cW1), cW2 && cW2['response'] && (cW2['response']['data'] = cW5(cW2['response']['data'], cW2['response']['headers'], cW1['transformResponse']))), Promise['reject'](cW2);
        });
    };
}, function(cWg, cWh, cWi) {
    var cWj = cWi(0x24);
    cWg['exports'] = function(cWg, cWh, cWi) {
        return cWj['forEach'](cWi, function(cWi) {
            cWg = cWi(cWg, cWh);
        }), cWg;
    };
}, function(cWo, cWp, cWq) {
    cWo['exports'] = function(cWo) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i ['test'](cWo);
    };
}, function(cWs, cWt, cWu) {
    cWs['exports'] = function(cWs, cWt) {
        return cWt ? cWs['replace'](/\/+$/, '') + '/' + cWt['replace'](/^\/+/, '') : cWs;
    };
}, function(cWx, cWy, cWz) {
    var cWA = cWz(0x62);

    function cWB(cWx) {
        if ('function' != typeof cWx) throw new TypeError('executor\x20must\x20be\x20a\x20function.');
        var cWy;
        this['promise'] = new Promise(function(cWx) {
            cWy = cWx;
        });
        var cWz = this;
        cWx(function(cWx) {
            cWz['reason'] || (cWz['reason'] = new cWA(cWx), cWy(cWz['reason']));
        });
    }
    cWB['prototype']['throwIfRequested'] = function() {
        if (this['reason']) throw this['reason'];
    }, cWB['source'] = function() {
        var cWx;
        return {
            'token': new cWB(function(cWy) {
                cWx = cWy;
            }),
            'cancel': cWx
        };
    }, cWx['exports'] = cWB;
}, function(cWJ, cWK, cWL) {
    cWJ['exports'] = function(cWJ) {
        return function(cWK) {
            return cWJ['apply'](null, cWK);
        };
    };
}, function(cWO, cWP, cWQ) {
    var cWR = cWQ(0x63),
        cWS = cWO['exports'];
    cWS['active'] = !0x0, cWS['menu2'] = 'rcY';
    var cWT = !0x0;
    cWS['toggleMenu'] = function(cWO) {
        menuHolder['style']['display'] = cWO ? 'block' : 'none', speakerDisplay['style']['display'] = cWO ? 'none' : 'block', chatHolder['style']['bottom'] = (cWO ? 0x14 : 0x8c) + 'px', voiceDisplay['style']['bottom'] = (cWO ? 0x12 : 0x87) + 'px', cWS['toggleMenuHider'](cWO), cWO && (endUI['style']['display'] = 'none', instructionHolder['style']['display'] = 'block', 'block' != windowHolder['style']['display'] && (baseLinks['style']['display'] = 'block')), cWS['active'] = !0x0;
    }, cWS['hideUI'] = function() {
        cWS['toggleMenu'](!0x1), inGameUI['style']['display'] = 'none', overlay['style']['display'] = 'none', vignette['style']['display'] = 'none', spectateUI['style']['display'] = 'none', aimRecticle['style']['display'] = 'none', instructionHolder['style']['display'] = 'none', baseLinks['style']['display'] = 'none', chatHolder['style']['bottom'] = '20px', voiceDisplay['style']['bottom'] = '18px', speakerDisplay['style']['right'] = '20px', purchaseHolder['style']['display'] = 'none', consentBlock['style']['display'] = 'none', cWS['active'] = !0x1;
    }, cWS['hideDiscon'] = function() {
        chatHolder['style']['display'] = 'none', voiceDisplay['style']['display'] = 'none', speakerDisplay['style']['display'] = 'none', purchaseHolder['style']['display'] = 'none';
    }, cWS['showEndScreen'] = function() {
        endTable['style']['display'] = 'none', matchVoteHolder['style']['display'] = 'none', teamTotals['style']['display'] = 'none', endUI['style']['display'] = null, cWS['hideUI']();
    }, cWS['toggleWindow'] = function(cWO, cWP) {
        windowHolder['style']['display'] = cWO ? 'block' : 'none', baseLinks['style']['display'] = cWO ? 'none' : 'block', instructions['innerHTML'] = cWO ? '' : cWP ? 'PRESS\x20START' : 'CLICK\x20TO\x20PLAY';
    }, cWS['toggleMenuHider'] = function(cWO) {
        menuHider['style']['display'] = cWO ? 'block' : 'none', uiBase['classList']['toggle']('onMenu', cWO), gameNameHolder['style']['display'] = cWO ? null : 'none', spectButton['style']['display'] = cWT && cWO ? null : 'none', cWO && (spinUI['style']['display'] = 'none'), spinRespin['style']['display'] = 'none';
    }, cWS['setShowSpect'] = function(cWO) {
        cWT = cWO, spectButton['style']['display'] = cWO ? null : 'none';
    }, cWS['setShowSelTeam'] = function(cWO) {
        teamSelector['style']['display'] = cWO ? 'block' : 'none';
    }, cWS['showError'] = function(cWO) {
        cWS['toggleMenu'](!0x0), instructions['innerHTML'] = cWO;
    }, cWS['toggleGameUI'] = function(cWO) {
        var cWP = cWO && !window['spectating'];
        spectateUI['style']['display'] = window['spectating'] && cWO ? 'block' : 'none', window['spectating'] && (propInstruct['style']['display'] = 'none'), gameMessage['style']['display'] = cWP ? 'block' : 'none', topLeftHolder['style']['display'] = cWP ? 'block' : 'none', topRight['style']['display'] = cWO ? 'block' : 'none', reloadMsg['style']['display'] = cWP ? 'block' : 'none', bottomLeftHolder['style']['display'] = cWP ? 'block' : 'none', weaponDisplay['style']['display'] = cWP ? 'block' : 'none', bottomRight['style']['display'] = cWP ? 'block' : 'none', killCardHolder['style']['display'] = cWO ? 'none' : 'block', speakerDisplay['style']['right'] = (cWO ? 0x17c : 0x14) + 'px', chatHolder['style']['bottom'] = (cWP ? 0x8c : 0x14) + 'px', voiceDisplay['style']['bottom'] = (cWP ? 0x87 : 0x12) + 'px', overlay['style']['display'] = cWP ? 'block' : 'none', vignette['style']['display'] = cWP ? 'block' : 'none';
    }, cWS['toggleControlUI'] = function(cWO) {
        window['loading'] && (cWO = !0x1), spectateUI['style']['display'] = window['spectating'] && cWO && !cWS['hideGameUI'] ? 'block' : 'none', inGameUI['style']['display'] = cWO && cWS['active'] && !cWS['hideGameUI'] ? 'block' : 'none', overlay['style']['display'] = cWO && cWS['active'] && !cWS['hideGameUI'] ? 'block' : 'none', vignette['style']['display'] = cWO && cWS['active'] && !cWS['hideGameUI'] ? 'block' : 'none', aimRecticle['style']['display'] = cWO && cWS['active'] ? 'block' : 'none', instructionHolder['style']['display'] = !cWO && cWS['active'] ? 'block' : 'none', aHolder['style']['display'] = cWO ? 'none' : 'block', toggleAd(!cWO), infoHolder['style']['display'] = cWO ? 'none' : null, chatHolder['style']['bottom'] = (cWO && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x8c : 0x14) + 'px', voiceDisplay['style']['bottom'] = (cWO && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x87 : 0x12) + 'px', speakerDisplay['style']['display'] = cWO && cWS['active'] ? 'block' : 'none', endUI['style']['display'] && (menuHolder['style']['display'] = cWO ? 'none' : 'block', cWS['toggleMenuHider'](!cWO));
    };
    cWS['gyztkSjab'] = function(cWO, cWP) {
        cWR['crosshairOpacity'] = cWP, cWR['crosshairScale'] = cWO;
    };
}, function(cX6, cX7) {
    cX6['exports'] = function() {
        var cX6;
        this['divs'] = [], this['update'] = function(cX7) {
            for (var cXa = this['divs']['length'] - 0x1; 0x0 <= cXa; --cXa)
                if (0x0 < (cX6 = this['divs'][cXa])['delay']) cX6['delay'] -= cX7, 0x0 >= cX6['delay'] && (cX6['style']['display'] = 'inline-block');
                else {
                    if (cX6['scale'] > cX6['minScale'] && (cX6['scale'] -= cX6['scaleSpeed'] * cX7, cX6['scale'] <= cX6['minScale'] && (cX6['scale'] = cX6['minScale']), cX6['style']['fontSize'] = cX6['scale'] + 'px'), cX6['scaleSpd'] && (cX6['startS'] += cX6['scaleSpd'] * cX7, cX6['style']['width'] = cX6['startS'] + 'px', cX6['style']['height'] = cX6['startS'] + 'px'), cX6['life'] -= cX7, 0x0 >= cX6['life']) {
                        cX6['style']['display'] = 'none';
                        var cXb = cX6['callback'];
                        this['divs']['splice'](cXa, 0x1), cXb && cXb();
                    }
                    if (cX6['fade'] && cX6['life'] <= cX6['fade'] && (cX6['style']['opacity'] = cX6['life'] / cX6['fade']), cX6['srcA'] && cX6['srcA']['cnt'] && cX6['maxLife'] - cX6['life'] <= cX6['srcA']['tim']) {
                        var cXc = Math['floor'](cX6['srcA']['cnt'] * ((cX6['maxLife'] - cX6['life']) / cX6['srcA']['tim']));
                        cX6['src'] = './textures/' + cX6['srcA']['src'] + '_' + cXc + '.png';
                    }
                }
        }, this['animateText'] = function(cX6, cX7, cXf, cXg, cXh, cXi, cXj, cXk) {
            0x0 > this['divs']['indexOf'](cX6) && this['divs']['push'](cX6), cX6['delay'] = cXj, cXj || (cX6['style']['display'] = 'inline-block'), cX6['style']['fontSize'] = cXf + 'px', cX6['scale'] = cXf, cX6['minScale'] = cXg ? 0.4 * cXf : cXf, cX6['innerHTML'] = cX7, cX6['scaleSpeed'] = cXg, cX6['life'] = cXh, cX6['fade'] = cXi, cX6['style']['opacity'] = 0x1, cX6['callback'] = cXk;
        }, this['animateDiv'] = function(cX6, cX7, cXn, cXo, cXp, cXq) {
            0x0 > this['divs']['indexOf'](cX6) && this['divs']['push'](cX6), cX6['style']['display'] = 'block', cX6['life'] = cX7, cX6['maxLife'] = cX7, cX6['srcA'] = cXq, cXq && (cX6['src'] = './textures/' + cXq['src'] + '_0.png'), cX6['style']['opacity'] = 0x1, cX6['fade'] = cXn, cXo && (cX6['style']['width'] = cXo + 'px', cX6['style']['height'] = cXo + 'px', cX6['startS'] = cXo, cX6['scaleSpd'] = cXp);
        }, this['reset'] = function() {
            for (var cX6 = 0x0; cX6 < this['divs']['length']; ++cX6) this['divs'][cX6]['style']['display'] = 'none';
            this['divs']['length'] = 0x0;
        };
    };
}, function(cXs, cXt, cXu) {
    const cXv = cXu(0x87),
        cXw = cXu(0x7)['apiURL'],
        cXx = {
            'listMaps' (cXs, cXt, cXu) {
                cXv['get'](cXw + '/maps', {
                    'params': {
                        'index': cXs,
                        'accountId': cXt
                    }
                })['then'](cXs => {
                    cXu(null, cXs['data']);
                })['catch'](cXs => {
                    cXu(cXs, cXs['response'] && cXs['response']['data']);
                });
            },
            'listMods' (cXs, cXt) {
                cXv['get'](cXw + '/mods', {
                    'params': {
                        'accountId': cXs
                    }
                })['then'](cXs => {
                    cXt(null, cXs['data']);
                })['catch'](cXs => {
                    cXt(cXs, cXs['response'] && cXs['response']['data']);
                });
            },
            'searchMap' (cXs, cXt) {
                cXv['get'](cXw + '/search', {
                    'params': {
                        'type': 'map',
                        'val': cXs
                    }
                })['then'](cXs => {
                    cXt(null, cXs['data']);
                })['catch'](cXs => {
                    cXt(cXs, cXs['response'] && cXs['response']['data']);
                });
            },
            'getMapPreset' (cXs, cXt) {
                cXv['get'](cXw + '/config', {
                    'params': {
                        'mn': cXs
                    }
                })['then'](cXu => {
                    var cXv = cXu['data'] || {};
                    cXt(cXs, cXv['da']);
                })['catch'](() => {
                    cXt(cXs, null);
                });
            },
            'searchMod' (cXs, cXt) {
                cXv['get'](cXw + '/search', {
                    'params': {
                        'type': 'mod',
                        'val': cXs
                    }
                })['then'](cXs => {
                    cXt(null, cXs['data']);
                })['catch'](cXs => {
                    cXt(cXs, cXs['response'] && cXs['response']['data']);
                });
            }
        };
    cXs['exports'] = cXx;
}, function(cXT, cXU, cXV) {
    cXT['exports'] = cXV(0x88);
}, function(cXW, cXX, cXY) {
    var cXZ = cXY(0x22),
        cY0 = cXY(0x64),
        cY1 = cXY(0x8a),
        cY2 = cXY(0x6a);

    function cY3(cXW) {
        var cXX = new cY1(cXW),
            cXY = cY0(cY1['prototype']['request'], cXX);
        return cXZ['extend'](cXY, cY1['prototype'], cXX), cXZ['extend'](cXY, cXX), cXY;
    }
    var cY7 = cY3(cXY(0x67));
    cY7['Axios'] = cY1, cY7['create'] = function(cXW) {
        return cY3(cY2(cY7['defaults'], cXW));
    }, cY7['Cancel'] = cXY(0x6b), cY7['CancelToken'] = cXY(0x96), cY7['isCancel'] = cXY(0x66), cY7['all'] = function(cXW) {
        return Promise['all'](cXW);
    }, cY7['spread'] = cXY(0x97), cXW['exports'] = cY7, cXW['exports']['default'] = cY7;
}, function(cYa, cYb) {
    /*!
     * Determine if an object is a Buffer
     *
     * @author   Feross Aboukhadijeh <https://feross.org>
     * @license  MIT
     */
    cYa['exports'] = function(cYa) {
        return null != cYa && null != cYa['constructor'] && 'function' == typeof cYa['constructor']['isBuffer'] && cYa['constructor']['isBuffer'](cYa);
    };
}, function(cYd, cYe, cYf) {
    var cYg = cYf(0x22),
        cYh = cYf(0x65),
        cYi = cYf(0x8b),
        cYj = cYf(0x8c),
        cYk = cYf(0x6a);

    function cYl(cYd) {
        this['defaults'] = cYd, this['interceptors'] = {
            'request': new cYi(),
            'response': new cYi()
        };
    }
    cYl['prototype']['request'] = function(cYd) {
        'string' == typeof cYd ? (cYd = arguments[0x1] || {})['url'] = arguments[0x0] : cYd = cYd || {}, (cYd = cYk(this['defaults'], cYd))['method'] = cYd['method'] ? cYd['method']['toLowerCase']() : 'get';
        var cYe = [cYj, void 0x0],
            cYf = Promise['resolve'](cYd);
        for (this['interceptors']['request']['forEach'](function(cYd) {
                cYe['unshift'](cYd['fulfilled'], cYd['rejected']);
            }), this['interceptors']['response']['forEach'](function(cYd) {
                cYe['push'](cYd['fulfilled'], cYd['rejected']);
            }); cYe['length'];) cYf = cYf['then'](cYe['shift'](), cYe['shift']());
        return cYf;
    }, cYl['prototype']['getUri'] = function(cYd) {
        return cYd = cYk(this['defaults'], cYd), cYh(cYd['url'], cYd['params'], cYd['paramsSerializer'])['replace'](/^\?/, '');
    }, cYg['forEach'](['delete', 'get', 'head', 'options'], function(cYd) {
        cYl['prototype'][cYd] = function(cYe, cYf) {
            return this['request'](cYg['merge'](cYf || {}, {
                'method': cYd,
                'url': cYe
            }));
        };
    }), cYg['forEach'](['post', 'put', 'patch'], function(cYd) {
        cYl['prototype'][cYd] = function(cYe, cYf, cYh) {
            return this['request'](cYg['merge'](cYh || {}, {
                'method': cYd,
                'url': cYe,
                'data': cYf
            }));
        };
    }), cYd['exports'] = cYl;
}, function(cYA, cYB, cYC) {
    var cYD = cYC(0x22);

    function cYE() {
        this['handlers'] = [];
    }
    cYE['prototype']['use'] = function(cYA, cYB) {
        return this['handlers']['push']({
            'fulfilled': cYA,
            'rejected': cYB
        }), this['handlers']['length'] - 0x1;
    }, cYE['prototype']['eject'] = function(cYA) {
        this['handlers'][cYA] && (this['handlers'][cYA] = null);
    }, cYE['prototype']['forEach'] = function(cYA) {
        cYD['forEach'](this['handlers'], function(cYB) {
            null !== cYB && cYA(cYB);
        });
    }, cYA['exports'] = cYE;
}, function(cYK, cYL, cYM) {
    var cYN = cYM(0x22),
        cYO = cYM(0x8d),
        cYP = cYM(0x66),
        cYQ = cYM(0x67),
        cYR = cYM(0x94),
        cYS = cYM(0x95);

    function cYT(cYK) {
        cYK['cancelToken'] && cYK['cancelToken']['throwIfRequested']();
    }
    cYK['exports'] = function(cYK) {
        return cYT(cYK), cYK['baseURL'] && !cYR(cYK['url']) && (cYK['url'] = cYS(cYK['baseURL'], cYK['url'])), cYK['headers'] = cYK['headers'] || {}, cYK['data'] = cYO(cYK['data'], cYK['headers'], cYK['transformRequest']), cYK['headers'] = cYN['merge'](cYK['headers']['common'] || {}, cYK['headers'][cYK['method']] || {}, cYK['headers'] || {}), cYN['forEach'](['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function(cYL) {
            delete cYK['headers'][cYL];
        }), (cYK['adapter'] || cYQ['adapter'])(cYK)['then'](function(cYL) {
            return cYT(cYK), cYL['data'] = cYO(cYL['data'], cYL['headers'], cYK['transformResponse']), cYL;
        }, function(cYL) {
            return cYP(cYL) || (cYT(cYK), cYL && cYL['response'] && (cYL['response']['data'] = cYO(cYL['response']['data'], cYL['response']['headers'], cYK['transformResponse']))), Promise['reject'](cYL);
        });
    };
}, function(cYZ, cZ0, cZ1) {
    var cZ2 = cZ1(0x22);
    cYZ['exports'] = function(cYZ, cZ0, cZ1) {
        return cZ2['forEach'](cZ1, function(cZ1) {
            cYZ = cZ1(cYZ, cZ0);
        }), cYZ;
    };
}, function(cZ7, cZ8, cZ9) {
    var cZa = cZ9(0x22);
    cZ7['exports'] = function(cZ7, cZ8) {
        cZa['forEach'](cZ7, function(cZ9, cZa) {
            cZa !== cZ8 && cZa['toUpperCase']() === cZ8['toUpperCase']() && (cZ7[cZ8] = cZ9, delete cZ7[cZa]);
        });
    };
}, function(cZf, cZg, cZh) {
    var cZi = cZh(0x69);
    cZf['exports'] = function(cZf, cZg, cZh) {
        var cZm = cZh['config']['validateStatus'];
        !cZm || cZm(cZh['status']) ? cZf(cZh) : cZg(cZi('Request\x20failed\x20with\x20status\x20code\x20' + cZh['status'], cZh['config'], null, cZh['request'], cZh));
    };
}, function(cZn, cZo, cZp) {
    cZn['exports'] = function(cZn, cZo, cZp, cZt, cZu) {
        return cZn['config'] = cZo, cZp && (cZn['code'] = cZp), cZn['request'] = cZt, cZn['response'] = cZu, cZn['isAxiosError'] = !0x0, cZn['toJSON'] = function() {
            return {
                'message': this['message'],
                'name': this['name'],
                'description': this['description'],
                'number': this['number'],
                'fileName': this['fileName'],
                'lineNumber': this['lineNumber'],
                'columnNumber': this['columnNumber'],
                'stack': this['stack'],
                'config': this['config'],
                'code': this['code']
            };
        }, cZn;
    };
}, function(cZv, cZw, cZx) {
    var cZy = cZx(0x22),
        cZz = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
    cZv['exports'] = function(cZv) {
        var cZw, cZx, cZD, cZE = {};
        return cZv ? (cZy['forEach'](cZv['split']('\x0a'), function(cZv) {
            if (cZD = cZv['indexOf'](':'), cZw = cZy['trim'](cZv['substr'](0x0, cZD))['toLowerCase'](), cZx = cZy['trim'](cZv['substr'](cZD + 0x1)), cZw) {
                if (cZE[cZw] && 0x0 <= cZz['indexOf'](cZw)) return;
                cZE[cZw] = 'set-cookie' === cZw ? (cZE[cZw] ? cZE[cZw] : [])['concat']([cZx]) : cZE[cZw] ? cZE[cZw] + ',\x20' + cZx : cZx;
            }
        }), cZE) : cZE;
    };
}, function(cZG, cZH, cZI) {
    var cZJ = cZI(0x22);
    cZG['exports'] = cZJ['isStandardBrowserEnv']() ? function() {
        function cZG(cZG) {
            var cZH = cZG;
            return cZI && (cZP['setAttribute']('href', cZH), cZH = cZP['href']), cZP['setAttribute']('href', cZH), {
                'href': cZP['href'],
                'protocol': cZP['protocol'] ? cZP['protocol']['replace'](/:$/, '') : '',
                'host': cZP['host'],
                'search': cZP['search'] ? cZP['search']['replace'](/^\?/, '') : '',
                'hash': cZP['hash'] ? cZP['hash']['replace'](/^#/, '') : '',
                'hostname': cZP['hostname'],
                'port': cZP['port'],
                'pathname': '/' === cZP['pathname']['charAt'](0x0) ? cZP['pathname'] : '/' + cZP['pathname']
            };
        }
        var cZH, cZI = /(msie|trident)/i ['test'](navigator['userAgent']),
            cZP = document['createElement']('a');
        return cZH = cZG(window['location']['href']),
            function(cZI) {
                var cZP = cZJ['isString'](cZI) ? cZG(cZI) : cZI;
                return cZP['protocol'] === cZH['protocol'] && cZP['host'] === cZH['host'];
            };
    }() : function() {
        return !0x0;
    };
}, function(cZS, cZT, cZU) {
    var cZV = cZU(0x22);
    cZS['exports'] = cZV['isStandardBrowserEnv']() ? {
        'write': function(cZS, cZT, cZU, cZZ, d00, d01) {
            var d02 = [];
            d02['push'](cZS + '=' + encodeURIComponent(cZT)), cZV['isNumber'](cZU) && d02['push']('expires=' + new Date(cZU)['toGMTString']()), cZV['isString'](cZZ) && d02['push']('path=' + cZZ), cZV['isString'](d00) && d02['push']('domain=' + d00), !0x0 === d01 && d02['push']('secure'), document['cookie'] = d02['join'](';\x20');
        },
        'read': function(cZS) {
            var cZT = document['cookie']['match'](new RegExp('(^|;\x5cs*)(' + cZS + ')=([^;]*)'));
            return cZT ? decodeURIComponent(cZT[0x3]) : null;
        },
        'remove': function(cZS) {
            this['write'](cZS, '', Date['now']() - 0x5265c00);
        }
    } : {
        'write': function() {},
        'read': function() {
            return null;
        },
        'remove': function() {}
    };
}, function(d06, d07, d08) {
    d06['exports'] = function(d06) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i ['test'](d06);
    };
}, function(d0a, d0b, d0c) {
    d0a['exports'] = function(d0a, d0b) {
        return d0b ? d0a['replace'](/\/+$/, '') + '/' + d0b['replace'](/^\/+/, '') : d0a;
    };
}, function(d0f, d0g, d0h) {
    var d0i = d0h(0x6b);

    function d0j(d0f) {
        if ('function' != typeof d0f) throw new TypeError('executor\x20must\x20be\x20a\x20function.');
        var d0g;
        this['promise'] = new Promise(function(d0f) {
            d0g = d0f;
        });
        var d0h = this;
        d0f(function(d0f) {
            d0h['reason'] || (d0h['reason'] = new d0i(d0f), d0g(d0h['reason']));
        });
    }
    d0j['prototype']['throwIfRequested'] = function() {
        if (this['reason']) throw this['reason'];
    }, d0j['source'] = function() {
        var d0f;
        return {
            'token': new d0j(function(d0g) {
                d0f = d0g;
            }),
            'cancel': d0f
        };
    }, d0f['exports'] = d0j;
}, function(d0r, d0s, d0t) {
    d0r['exports'] = function(d0r) {
        return function(d0s) {
            return d0r['apply'](null, d0s);
        };
    };
}, function(d0w, d0x, d0y) {
    d0y(0x4);
    var d0z = d0y(0x99);
    d0w['exports'] = function(d0w, d0x, d0y, d0D, d0E, d0F, d0G) {
        function d0H(d0w, d0x) {
            if (window['idleTimer'] = 0x0, d0U['keys'])
                if (d0x && d0U['keys'][d0w] !== d0x && null != d0U['inputChanger']) d0U['moveKeys'][d0U['inputChanger']] ? d0U['moveKeys'][d0U['inputChanger']] = d0w : d0U[d0U['inputChanger']] = d0w, saveVal('cont_' + d0U['inputChanger'], d0w), showWindow(0x7, !0x0), d0U['inputChanger'] = null;
                else {
                    if (d0U['keys'][d0w] !== d0x && d0w == d0U['voiceKey'] && toggleRecord(d0x), !d0U['enabled']) return;
                    d0U['keys'][d0w] !== d0x && (d0U['keys'][d0w] = d0x, 0x0 <= d0U['moveKeys']['indexOf'](d0w) && d0U['updateMoveDir'](), d0x && (d0w == d0U['swapKey'] ? d0U['wSwap'] = 0x1 : d0w == d0U['meleeKey'] ? d0U['wSwap'] = 0x2 : d0w == d0U['primKey'] ? d0U['wSwap'] = 0x3 : window['pressButton'](d0w)));
                }
        }

        function d0K(d0w, d0x) {
            var d0y = d0w['which'],
                d0z = d0w['keyCode'];
            d0x && (d0w['preventDefault'](), d0y = d0z = 0x2710 + d0w['which']), (d0y || d0z) == d0U['chatKey'] ? window['pressButton'](d0y || d0z) : document['activeElement'] != chatInput && (d0U['enabled'] && d0w['preventDefault'](), d0H(d0y || d0z || 0x0, 0x1));
        }

        function d0P(d0w, d0x) {
            var d0y = d0w['which'],
                d0z = d0w['keyCode'];
            d0x && (d0w['preventDefault'](), d0y = d0z = 0x2710 + d0w['which']), d0U['enabled'] && d0w['preventDefault'](), d0H(d0y || d0z || 0x0, 0x0);
        }
        var d0U = this;
        this['gamepad'] = new d0z(), this['gamepad']['connected'] = !0x1;
        var d0V = d0w['renderer']['domElement'];
        if (this['hasPointerlock'] = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document, this['hasPointerlock']) {
            d0V['requestPointerLock'] = d0V['requestPointerLock'] || d0V['mozRequestPointerLock'] || d0V['webkitRequestPointerLock'];
            var d0W = function() {
                d0U['enabled'] = document['pointerLockElement'] === d0V || document['mozPointerLockElement'] === d0V || document['webkitPointerLockElement'] === d0V, (d0G['connected'] || d0E['singlePlayer']) && (d0U['enabled'] && enterGame(), d0y['toggleControlUI'](d0U['enabled']));
            };
            document['addEventListener']('pointerlockchange', d0W, !0x1), document['addEventListener']('mozpointerlockchange', d0W, !0x1), document['addEventListener']('webkitpointerlockchange', d0W, !0x1);
        }
        this['isn'] = 0x0, this['tmpInputs'] = [], this['getISN'] = function() {
            return this['isn']++;
        }, this['masterLock'] = !0x0, this['sensMlt'] = 0x1, this['sensAimMlt'] = 0x1, this['locked'] = !0x1, this['enabled'] = !0x1, d0w['camera']['rotation']['set'](0x0, 0x0, 0x0), this['pitchObject'] = new d0x['Object3D'](), this['pitchObject']['add'](d0w['camera']), this['object'] = new d0x['Object3D'](), this['object']['add'](this['pitchObject']);
        var d0X = Math['PI'] / 0x2,
            d0Y = function(d0x) {
                if (d0U['enabled'] && !window['locked']) {
                    d0x['preventDefault'](), window['idleTimer'] = 0x0;
                    var d0y = d0x['movementX'] || d0x['mozMovementX'] || d0x['webkitMovementX'] || 0x0,
                        d0z = d0x['movementY'] || d0x['mozMovementY'] || d0x['webkitMovementY'] || 0x0,
                        d0D = d0U['mouseDownR'] ? d0U['sensAimMlt'] : d0U['sensMlt'],
                        d0E = d0F['mouseSens'] * d0D * (d0U['target'] ? d0F['camChaseSen'] : 0x1) * (d0w['camera']['fov'] / d0w['fov']);
                    d0U['pitchObject']['rotation']['x'] -= d0z * d0E * (d0U['invertY'] ? -0x1 : 0x1), d0U['unlockView'] || (d0U['pitchObject']['rotation']['x'] = Math['max'](-d0X, Math['min'](d0X, d0U['pitchObject']['rotation']['x']))), d0U['object']['rotation']['y'] -= d0y * d0E, d0U['yDr'] = d0U['pitchObject']['rotation']['x'] % Math['PI2'], d0U['xDr'] = d0U['object']['rotation']['y'] % Math['PI2'];
                }
            };
        d0V['addEventListener']('mousemove', d0Y, !0x1);
        var d14 = function(d0w) {
            if (!d0U['masterLock']) switch (d0U['enabled'] || d0U['toggle'](!0x0), document['activeElement'] == chatInput && chatInput['blur'](), d0w['which']) {
                case 0x3:
                    d0U['mouseDownR'] = 0x1, window['spectating'] && window['spectMode'](0x1);
                    break;
                default:
                    0x3 < d0w['which'] || 0x2 == d0w['which'] ? (d0w['preventDefault'](), d0K(d0w, !0x0)) : (d0U['mouseDownL'] = 0x1, window['spectating'] && window['spectMode'](-0x1));
            }
        };
        d0V['addEventListener']('mousedown', d14, !0x1), window['addEventListener']('mousedown', function(d0w) {
            d0U['enabled'] || (0x3 < d0w['which'] || 0x2 == d0w['which']) && (d0w['preventDefault'](), d0K(d0w, !0x0));
        }, !0x1);
        var d17 = function(d0w) {
            if (!d0U['locked']) switch (d0w['which']) {
                case 0x3:
                    d0U['mouseDownR'] = 0x0;
                    break;
                default:
                    0x3 < d0w['which'] || 0x2 == d0w['which'] ? (d0w['preventDefault'](), d0P(d0w, !0x0)) : d0U['mouseDownL'] = 0x0;
            }
        };
        d0V['addEventListener']('mouseup', d17, !0x1), window['addEventListener']('mouseup', function(d0w) {
            d0U['enabled'] || (0x3 < d0w['which'] || 0x2 == d0w['which']) && (d0w['preventDefault'](), d0P(d0w, !0x0));
        }, !0x1), this['specSpeed'] = 0x1;
        var d1a = function(d0w) {
            d0w = window['event'] || d0w;
            var d0x = -Math['max'](-0x1, Math['min'](0x1, d0w['wheelDelta'] || -d0w['detail'])),
                d0y = 0x0 < d0x ? -0x1 : 0x1;
            return window['spectating'] && (window['spectTarget'] ? (d0U['followCamD'] -= 0x3 * d0y, d0U['followCamD'] < d0F['specMinD'] && (d0U['followCamD'] = d0F['specMinD']), d0U['followCamD'] > d0F['specMaxD'] && (d0U['followCamD'] = d0F['specMaxD'])) : (d0U['specSpeed'] += d0y, 0x1 > d0U['specSpeed'] && (d0U['specSpeed'] = 0x1), 0xa < d0U['specSpeed'] && (d0U['specSpeed'] = 0xa))), d0U['scrollToSwap'] && (d0U['skipScroll'] ? d0U['skipScroll'] = !0x1 : d0U['scrollDelta'] = d0x), !0x1;
        };
        d0V['addEventListener'] ? (d0V['addEventListener']('mousewheel', d1a, !0x1), d0V['addEventListener']('DOMMouseScroll', d1a, !0x1)) : myitem['attachEvent']('onmousewheel', d1a), this['xVel'] = 0x0, this['yVel'] = 0x0, this['zVel'] = 0x0;
        var d1e = new d0x['Vector3'](0x0, 0x0, 0x0);
        for (let d0x in this['freeCam'] = function(d0x) {
                d1e['set'](0x0, 0x0, 0x0), this['keys'][this['moveKeys'][0x0]] && (d1e['z'] -= 0x1), this['keys'][this['moveKeys'][0x1]] && (d1e['z'] += 0x1), this['keys'][this['moveKeys'][0x2]] && (d1e['x'] -= 0x1), this['keys'][this['moveKeys'][0x3]] && (d1e['x'] += 0x1), this['keys'][0x51] && (d1e['y'] -= 0x1), this['keys'][0x45] && (d1e['y'] += 0x1), d1e['applyQuaternion'](d0w['camera']['getWorldQuaternion']());
                var d0y = (this['keys'][this['crouchKey']] ? 0.08 : 0.04) * this['specSpeed'] * d0x;
                d0U['object']['position']['add'](d1e['multiplyScalar'](d0y)), d0w['camera']['position']['set'](0x0, 0x0, 0x0), d0w['updateFrustum']();
            }, this['followCamD'] = d0F['specMinD'], this['followCam'] = function(d0x) {
                d1e['set'](d0x['x'], d0x['y'] + d0x['height'], d0x['z']), d0U['object']['position']['lerp'](d1e, 0.9), d0w['camera']['position']['set'](0x0, 0x0, this['followCamD']), d0w['camera']['updateProjectionMatrix'](), d0w['updateFrustum']();
            }, this['setCamPosOff'] = function() {
                d0w['camera']['updateMatrixWorld'](), d0U['object']['position']['setFromMatrixPosition'](d0w['camera']['matrixWorld']), d0w['camera']['position']['set'](0x0, 0x0, 0x0);
            }, this['update'] = function(d0x) {
                window.utilities.controlTick(this);
            }, this['kPvOwGE'] = function(d0w, d0x, d0y) {
                var d0z = d0D['getXDir'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], d0w, d0x, d0y),
                    d0E = d0D['getDirection'](this['object']['position']['z'], this['object']['position']['x'], d0y, d0w);
                this['target'] = {
                    'xD': d0z,
                    'yD': d0E,
                    'x': d0w + d0F['camChaseDst'] * Math['sin'](d0E) * Math['cos'](d0z),
                    'y': d0x - d0F['camChaseDst'] * Math['sin'](d0z),
                    'z': d0y + d0F['camChaseDst'] * Math['cos'](d0E) * Math['cos'](d0z)
                };
            }, this['cWSdygvGQj'] = function(d0x, d0y, d0z) {
                d0U['object']['position']['set'](d0x, d0y, d0z), d0w['camera']['updateProjectionMatrix'](), d0w['updateFrustum']();
            }, this['gQpYg'] = function(d0x, d0y, d0z) {
                d0w['camera']['rotation']['y'] = d0x, d0w['camera']['rotation']['x'] = d0y, d0w['camera']['rotation']['z'] = d0z;
            }, this['scrollToSwap'] = getSavedVal('cont_scrollToSwap') || !0x0, this['jumpKey'] = parseInt(getSavedVal('cont_jumpKey') || 0x20), this['crouchKey'] = parseInt(getSavedVal('cont_crouchKey') || 0x10), this['meleeKey'] = parseInt(getSavedVal('cont_meleeKey') || 0x51), this['swapKey'] = parseInt(getSavedVal('cont_swapKey') || 0x45), this['primKey'] = parseInt(getSavedVal('cont_primKey') || 0x54), this['reloadKey'] = parseInt(getSavedVal('cont_reloadKey') || 0x52), this['sprayKey'] = parseInt(getSavedVal('cont_sprayKey') || 0x46), this['inspKey'] = parseInt(getSavedVal('cont_inspKey') || 0x58), this['aimKey'] = parseInt(getSavedVal('cont_aimKey') || 0x43), this['chatKey'] = parseInt(getSavedVal('cont_chatKey') || 0xd), this['voiceKey'] = parseInt(getSavedVal('cont_voiceKey') || 0x56), this['listKey'] = parseInt(getSavedVal('cont_listKey') || 0x9), this['interactKey'] = parseInt(getSavedVal('cont_interactKey') || 0x47), this['dropKey'] = parseInt(getSavedVal('cont_dropKey') || 0x5a), this['moveKeys'] = [parseInt(getSavedVal('cont_0') || 0x57), parseInt(getSavedVal('cont_1') || 0x53), parseInt(getSavedVal('cont_2') || 0x41), parseInt(getSavedVal('cont_3') || 0x44)], this['moveDirs'] = [
                [0x0, -0x1],
                [0x0, 0x1],
                [-0x1, 0x0],
                [0x1, 0x0]
            ], this['updateMoveDir'] = function() {
                for (var d0w = 0x0, d0x = 0x0, d0y = 0x0; d0y < d0U['moveKeys']['length']; ++d0y) d0U['keys'][d0U['moveKeys'][d0y]] && (d0w += d0U['moveDirs'][d0y][0x0], d0x += d0U['moveDirs'][d0y][0x1]);
                this['moveDir'] = 0x0 == d0w && 0x0 == d0x ? null : Math['atan2'](d0x, d0w);
            }, window['addEventListener']('keydown', d0K, !0x1), window['addEventListener']('keyup', d0P, !0x1), this['gamepad']['on']('connect', () => {
                this['gamepad']['connected'] = !0x0;
            }), this['gamepad']['on']('disconnect', () => {
                this['gamepad']['connected'] = !0x1;
            }), this['gamepad']['setCustomMapping']('keyboard', {}), this['mapping'] = {
                'JUMP': {
                    'INPUT': 'button_1',
                    'KEY': 'jumpKey'
                },
                'CROUCH': {
                    'INPUT': 'button_2',
                    'KEY': 'crouchKey'
                },
                'RELOAD': {
                    'INPUT': 'button_3',
                    'KEY': 'reloadKey'
                },
                'AIM': {
                    'INPUT': 'shoulder_bottom_left',
                    'KEY': 'aimKey'
                },
                'SWAP': {
                    'INPUT': 'button_4',
                    'KEY': 'swapKey'
                },
                'SWAP_SECONDARY': {
                    'INPUT': 'shoulder_top_left',
                    'KEY': 'swapKey'
                },
                'SWAP_MELEE': {
                    'INPUT': 'shoulder_top_right',
                    'KEY': 'meleeKey'
                },
                'SHOOT': {
                    'INPUT': ['shoulder_bottom_right', 0.5],
                    'KEY': null,
                    'MOUSE': !0x0
                },
                'PLAYER_LIST': {
                    'INPUT': 'select',
                    'KEY': 'listKey'
                },
                'VOICE': {
                    'INPUT': 'd_pad_up',
                    'KEY': 'voiceKey'
                },
                'SPRAY': {
                    'INPUT': 'd_pad_down',
                    'KEY': 'sprayKey'
                },
                'PICKUP': {
                    'INPUT': 'd_pad_left',
                    'KEY': 'interactKey'
                },
                'DROP': {
                    'INPUT': 'd_pad_right',
                    'KEY': 'dropKey'
                }
            }, this['mapping']) {
            var d1B = Array['isArray'](this['mapping'][d0x]['INPUT']) ? this['mapping'][d0x]['INPUT'][0x0] : this['mapping'][d0x]['INPUT'],
                d1C = !!Array['isArray'](this['mapping'][d0x]['INPUT']) && this['mapping'][d0x]['INPUT'][0x1];
            this['gamepad']['on']('press', d1B, d0w => {
                this['mapping'][d0x]['MOUSE'] ? (d0w['value'] >= d1C || !0x1 === d1C) && this['fakeMouse'](0x0) : this['mapping'][d0x]['KEY'] && this['fakeKey'](this[this['mapping'][d0x]['KEY']]);
            }), this['gamepad']['on']('release', d1B, () => {
                this['mapping'][d0x]['MOUSE'] ? this['fakeMouse'](0x1) : this['fakeKey'](this[this['mapping'][d0x]['KEY']], 0x1);
            });
        }
        this['gamepad']['on']('hold', 'stick_axis_left', d0w => {
            -0.3 > d0w['value'][0x1] ? (this['fakeKey'](this['moveKeys'][0x1], 0x1), this['fakeKey'](this['moveKeys'][0x0])) : this['fakeKey'](this['moveKeys'][0x0], 0x1), 0.3 < d0w['value'][0x1] ? (this['fakeKey'](this['moveKeys'][0x0], 0x1), this['fakeKey'](this['moveKeys'][0x1])) : this['fakeKey'](this['moveKeys'][0x1], 0x1), -0.3 > d0w['value'][0x0] ? (this['fakeKey'](this['moveKeys'][0x3], 0x1), this['fakeKey'](this['moveKeys'][0x2])) : this['fakeKey'](this['moveKeys'][0x2], 0x1), 0.3 < d0w['value'][0x0] ? (this['fakeKey'](this['moveKeys'][0x2], 0x1), this['fakeKey'](this['moveKeys'][0x3])) : this['fakeKey'](this['moveKeys'][0x3], 0x1);
        }), this['gamepad']['on']('release', 'stick_axis_left', () => {
            this['fakeKey'](this['moveKeys'][0x0], 0x1), this['fakeKey'](this['moveKeys'][0x1], 0x1), this['fakeKey'](this['moveKeys'][0x2], 0x1), this['fakeKey'](this['moveKeys'][0x3], 0x1);
        }), this['gamepad']['on']('hold', 'stick_axis_right', d0w => {
            this['fakeMouse'](0x2, 0x28 * this['applyDeadzone'](d0w['value'][0x0], 0.25), 22.5 * this['applyDeadzone'](d0w['value'][0x1], 0.25));
        }), this['gamepad']['on']('press', 'start', () => {
            d0U['toggle'](!d0U['enabled']);
        }), this['applyDeadzone'] = function(d0w, d0x) {
            let d0y = (Math['abs'](d0w) - d0x) / (0x1 - d0x);
            return 0x0 > d0y && (d0y = 0x0), d0y * (0x0 < d0w ? 0x1 : -0x1);
        }, this['fakeKey'] = function(d0w, d0x = 0x0) {
            var d0y = {
                'preventDefault': function() {},
                'keyCode': d0w,
                'which': d0w
            };
            0x0 == d0x && d0K(d0y), 0x1 == d0x && d0P(d0y);
        }, this['fakeMouse'] = function(d0w = 0x0, d0x = 0x0, d0y = 0x0, d0z = 0x0) {
            var d0D = {
                'preventDefault': function() {},
                'movementX': d0x,
                'movementY': d0y,
                'which': d0z
            };
            0x0 == d0w && d14(d0D), 0x1 == d0w && d17(d0D), 0x2 == d0w && d0Y(d0D);
        }, this['toggle'] = function(d0w) {
            this['locked'] || this['masterLock'] || ('block' == windowHolder['style']['display'] ? d0w && d0y['toggleWindow'](!0x1, this['gamepad']['connected']) : d0w ? d0V['requestPointerLock']() : document['exitPointerLock']());
        }, this['disable'] = function() {
            d0U['toggle'](!0x1), d0U['locked'] = !0x0;
        }, this['reset'] = function() {
            this['mouseDownL'] = 0x0, this['mouseDownR'] = 0x0, this['keys'] = {}, this['tmpInputs']['length'] = 0x0, this['wSwap'] = 0x0, this['scrollDelta'] = 0x0, this['xDr'] = 0x0, this['yDr'] = 0x0, this['isn'] = 0x0, this['moveDir'] = null, this['skipScroll'] = !0x1, this['inputChanger'] = null, this['target'] = null, this['locked'] = !0x1, d0U['pitchObject']['rotation']['x'] = 0x0, d0U['object']['rotation']['y'] = 0x0, d0w['camera']['rotation']['set'](0x0, 0x0, 0x0);
        };
    };
}, function(d1S, d1T, d1U) {
    var d1V;
    ! function() {
        'use strict';

        function d1W(d1S, d1T) {
            var d1U = [];
            return Object['keys'](d1T)['forEach'](function(d1V) {
                d1T[d1V] === d1S ? d1U['push'](d1V) : Array['isArray'](d1T[d1V]) && -0x1 !== d1T[d1V]['indexOf'](d1S) && d1U['push'](d1V);
            }), d1U;
        }

        function d21() {
            this['_events'] = {
                'gamepad': [],
                'axes': [],
                'keyboard': {}
            }, this['_handlers'] = {
                'gamepad': {
                    'connect': null,
                    'disconnect': null
                }
            }, this['_keyMapping'] = {
                'gamepad': {
                    'button_1': 0x0,
                    'button_2': 0x1,
                    'button_3': 0x2,
                    'button_4': 0x3,
                    'shoulder_top_left': 0x4,
                    'shoulder_top_right': 0x5,
                    'shoulder_bottom_left': 0x6,
                    'shoulder_bottom_right': 0x7,
                    'select': 0x8,
                    'start': 0x9,
                    'stick_button_left': 0xa,
                    'stick_button_right': 0xb,
                    'd_pad_up': 0xc,
                    'd_pad_down': 0xd,
                    'd_pad_left': 0xe,
                    'd_pad_right': 0xf,
                    'vendor': 0x10
                },
                'axes': {
                    'stick_axis_left': [0x0, 0x2],
                    'stick_axis_right': [0x2, 0x4]
                },
                'keyboard': {
                    'button_1': 0x20,
                    'start': 0x1b,
                    'd_pad_up': [0x26, 0x57],
                    'd_pad_down': [0x28, 0x53],
                    'd_pad_left': [0x25, 0x41],
                    'd_pad_right': [0x27, 0x44]
                }
            }, this['_threshold'] = 0.3, this['_listeners'] = [], this['_handleKeyboardEventListener'] = this['_handleKeyboardEventListener']['bind'](this), this['resume']();
        }
        var d22, d23, d24 = void 0x0 !== window['navigator']['getGamepads'] || void 0x0 !== window['navigator']['webkitGetGamepads'];
        'undefined' != typeof window && ['webkit', 'moz']['forEach'](function(d1S) {
            d22 = d22 || window['requestAnimationFrame'] || window[d1S + 'RequestAnimationFrame'] || null, d23 = d23 || window['cancelAnimationFrame'] || window[d1S + 'CancelAnimationFrame'] || null;
        }), d21['prototype']['_handleGamepadConnected'] = function(d1S) {
            this['_handlers']['gamepad']['connect'] && this['_handlers']['gamepad']['connect']({
                'index': d1S
            });
        }, d21['prototype']['_handleGamepadDisconnected'] = function(d1S) {
            this['_handlers']['gamepad']['disconnect'] && this['_handlers']['gamepad']['disconnect']({
                'index': d1S
            });
        }, d21['prototype']['_handleGamepadEventListener'] = function(d1S) {
            var d1T = this;
            d1S && d1S['connected'] && d1S['buttons']['forEach'](function(d1U, d1V) {
                var d21 = d1W(d1V, d1T['_keyMapping']['gamepad']);
                d21 && d21['forEach'](function(d1V) {
                    d1U['pressed'] ? (!d1T['_events']['gamepad'][d1S['index']][d1V] && (d1T['_events']['gamepad'][d1S['index']][d1V] = {
                        'pressed': !0x0,
                        'hold': !0x1,
                        'released': !0x1,
                        'player': d1S['index']
                    }), d1T['_events']['gamepad'][d1S['index']][d1V]['value'] = d1U['value']) : !d1U['pressed'] && d1T['_events']['gamepad'][d1S['index']][d1V] && (d1T['_events']['gamepad'][d1S['index']][d1V]['released'] = !0x0, d1T['_events']['gamepad'][d1S['index']][d1V]['hold'] = !0x1);
                });
            });
        }, d21['prototype']['_handleGamepadAxisEventListener'] = function(d1S) {
            var d1T = this;
            d1S && d1S['connected'] && Object['keys'](d1T['_keyMapping']['axes'])['forEach'](function(d1U) {
                var d1V = Array['prototype']['slice']['apply'](d1S['axes'], d1T['_keyMapping']['axes'][d1U]);
                Math['abs'](d1V[0x0]) > d1T['_threshold'] || Math['abs'](d1V[0x1]) > d1T['_threshold'] ? d1T['_events']['axes'][d1S['index']][d1U] = {
                    'pressed': !d1T['_events']['axes'][d1S['index']][d1U],
                    'hold': !!d1T['_events']['axes'][d1S['index']][d1U],
                    'released': !0x1,
                    'value': d1V
                } : d1T['_events']['axes'][d1S['index']][d1U] && (d1T['_events']['axes'][d1S['index']][d1U] = {
                    'pressed': !0x1,
                    'hold': !0x1,
                    'released': !0x0,
                    'value': d1V
                });
            });
        }, d21['prototype']['_handleKeyboardEventListener'] = function(d1S) {
            var d1T = this,
                d1U = d1W(d1S['keyCode'], d1T['_keyMapping']['keyboard']);
            d1U && d1U['forEach'](function(d1U) {
                'keydown' !== d1S['type'] || d1T['_events']['keyboard'][d1U] ? 'keyup' === d1S['type'] && d1T['_events']['keyboard'][d1U] && (d1T['_events']['keyboard'][d1U]['released'] = !0x0, d1T['_events']['keyboard'][d1U]['hold'] = !0x1) : d1T['_events']['keyboard'][d1U] = {
                    'pressed': !0x0,
                    'hold': !0x1,
                    'released': !0x1
                };
            });
        }, d21['prototype']['_handleEvent'] = function(d1S, d1T, d1U) {
            d1T[d1S]['pressed'] ? (this['trigger']('press', d1S, d1T[d1S]['value'], d1U), d1T[d1S]['pressed'] = !0x1, d1T[d1S]['hold'] = !0x0) : d1T[d1S]['hold'] ? this['trigger']('hold', d1S, d1T[d1S]['value'], d1U) : d1T[d1S]['released'] && (this['trigger']('release', d1S, d1T[d1S]['value'], d1U), delete d1T[d1S]);
        }, d21['prototype']['_loop'] = function() {
            var d1S, d1T = this,
                d1U = !!d24 && (window['navigator']['getGamepads']() || navigator['webkitGetGamepads']());
            if (d1U) {
                for (d1S = 0x0; d1S < 0x4; ++d1S) d1U[d1S] ? (d1T['_events']['gamepad'][d1S] || (d1T['_handleGamepadConnected'](d1S), d1T['_events']['gamepad'][d1S] = {}, d1T['_events']['axes'][d1S] = {}), d1T['_handleGamepadEventListener'](d1U[d1S]), d1T['_handleGamepadAxisEventListener'](d1U[d1S])) : d1T['_events']['gamepad'][d1S] && (d1T['_handleGamepadDisconnected'](d1S), d1T['_events']['gamepad'][d1S] = null, d1T['_events']['axes'][d1S] = null);
                d1T['_events']['gamepad']['forEach'](function(d1S, d1U) {
                    d1S && Object['keys'](d1S)['forEach'](function(d1V) {
                        d1T['_handleEvent'](d1V, d1S, d1U);
                    });
                }), d1T['_events']['axes']['forEach'](function(d1S, d1U) {
                    d1S && Object['keys'](d1S)['forEach'](function(d1V) {
                        d1T['_handleEvent'](d1V, d1S, d1U);
                    });
                });
            }
            Object['keys'](d1T['_events']['keyboard'])['forEach'](function(d1S) {
                d1T['_handleEvent'](d1S, d1T['_events']['keyboard'], 'keyboard');
            }), d1T['_requestAnimation'] && (d1T['_requestAnimation'] = d22(d1T['_loop']['bind'](d1T)));
        }, d21['prototype']['on'] = function(d1S, d1T, d1U, d1V) {
            var d1W = this; - 0x1 !== Object['keys'](this['_handlers']['gamepad'])['indexOf'](d1S) && 'function' == typeof d1T ? (this['_handlers']['gamepad'][d1S] = d1T, this['_events']['gamepad'] = []) : ('string' == typeof d1S && d1S['match'](/\s+/) && (d1S = d1S['split'](/\s+/g)), 'string' == typeof d1T && d1T['match'](/\s+/) && (d1T = d1T['split'](/\s+/g)), Array['isArray'](d1S) ? d1S['forEach'](function(d1S) {
                d1W['on'](d1S, d1T, d1U, d1V);
            }) : Array['isArray'](d1T) ? d1T['forEach'](function(d1T) {
                d1W['on'](d1S, d1T, d1U, d1V);
            }) : this['_listeners']['push']({
                'type': d1S,
                'button': d1T,
                'callback': d1U,
                'options': d1V,
                'rumble': this['rumble']
            }));
        }, d21['prototype']['off'] = function(d1S, d1T) {
            var d1U = this;
            'string' == typeof d1S && d1S['match'](/\s+/) && (d1S = d1S['split'](/\s+/g)), 'string' == typeof d1T && d1T['match'](/\s+/) && (d1T = d1T['split'](/\s+/g)), Array['isArray'](d1S) ? d1S['forEach'](function(d1S) {
                d1U['off'](d1S, d1T);
            }) : Array['isArray'](d1T) ? d1T['forEach'](function(d1T) {
                d1U['off'](d1S, d1T);
            }) : this['_listeners'] = this['_listeners']['filter'](function(d1U) {
                return d1U['type'] !== d1S && d1U['button'] !== d1T;
            });
        }, d21['prototype']['setCustomMapping'] = function(d1S, d1T) {
            if (void 0x0 === this['_keyMapping'][d1S]) throw new Error('The\x20device\x20\x22' + d1S + '\x22\x20is\x20not\x20supported\x20through\x20gamepad.js');
            this['_keyMapping'][d1S] = d1T;
        }, d21['prototype']['setGlobalThreshold'] = function(d1S) {
            this['_threshold'] = parseFloat(d1S);
        }, d21['prototype']['trigger'] = function(d1S, d1T, d1U, d1V) {
            this['_listeners'] && this['_listeners']['forEach'](function(d1W) {
                d1W['type'] === d1S && d1W['button'] === d1T && d1W['callback']({
                    'type': d1W['type'],
                    'button': d1W['button'],
                    'value': d1U,
                    'player': d1V,
                    'event': d1W,
                    'timestamp': Date['now']()
                });
            });
        }, d21['prototype']['pause'] = function() {
            d23(this['_requestAnimation']), this['_requestAnimation'] = null, document['removeEventListener']('keydown', this['_handleKeyboardEventListener']), document['removeEventListener']('keyup', this['_handleKeyboardEventListener']);
        }, d21['prototype']['resume'] = function() {
            this['_requestAnimation'] = d22(this['_loop']['bind'](this)), document['addEventListener']('keydown', this['_handleKeyboardEventListener']), document['addEventListener']('keyup', this['_handleKeyboardEventListener']);
        }, d21['prototype']['destroy'] = function() {
            this['pause'](), delete this['_listeners'];
        }, d21['prototype']['rumble'] = function(d1S, d1T, d1U) {
            var d1V = !!d24 && (window['navigator']['getGamepads']() || navigator['webkitGetGamepads']());
            if (d1S = d1S || 0x0, d1V && d1V[d1S]) {
                var d1W = d1V[d1S];
                d1W['vibrationActuator'] && 'dual-rumble' == d1W['vibrationActuator']['type'] && d1W['vibrationActuator']['playEffect'] && d1W['vibrationActuator']['playEffect']('dual-rumble', {
                    'startDelay': 0x0,
                    'duration': d1T || 0xc8,
                    'weakMagnitude': 0.5 * (d1U || 0.5),
                    'strongMagnitude': d1U || 0.5
                });
            }
        }, void 0x0 !== d1U(0x9a) ? void 0x0 === (d1V = function() {
            return d21;
        }['apply'](d1T, [])) || (d1S['exports'] = d1V) : void 0x0 !== d1S['exports'] ? d1S['exports'] = d21 : window['Gamepad'] = d21;
    }();
}, function(d2Z, d30) {
    (function(d30) {
        d2Z['exports'] = d30;
    }['call'](this, {}));
}, function(d32, d33, d34) {
    const d35 = d34(0x9c)['words'],
        d36 = d34(0x9d)['array'];
    d32['exports'] = class {
        constructor(d32 = {}) {
            Object['assign'](this, {
                'list': d32['emptyList'] && [] || Array['prototype']['concat']['apply'](d35, [d36, d32['list'] || []]),
                'exclude': d32['exclude'] || [],
                'placeHolder': d32['placeHolder'] || '*',
                'regex': d32['regex'] || /[^a-zA-Z0-9|\$|\@]|\^/g,
                'replaceRegex': d32['replaceRegex'] || /\w/g
            });
        }['isProfane'](d32) {
            return 0x0 < this['list']['filter'](d33 => {
                const d34 = new RegExp('\x5cb' + d33['replace'](/(\W)/g, '\x5c$1') + '\x5cb', 'gi');
                return !this['exclude']['includes'](d33['toLowerCase']()) && d34['test'](d32);
            })['length'] || !0x1;
        }['replaceWord'](d32) {
            return d32['replace'](this['regex'], '')['replace'](this['replaceRegex'], this['placeHolder']);
        }['clean'](d32) {
            return d32['split'](/\b/)['map'](d32 => this['isProfane'](d32) ? this['replaceWord'](d32) : d32)['join']('');
        }['addWords']() {
            let d32 = Array['from'](arguments);
            this['list']['push'](...d32), d32['map'](d32 => d32['toLowerCase']())['forEach'](d32 => {
                this['exclude']['includes'](d32) && this['exclude']['splice'](this['exclude']['indexOf'](d32), 0x1);
            });
        }['removeWords']() {
            this['exclude']['push'](...Array['from'](arguments)['map'](d32 => d32['toLowerCase']()));
        }
    };
}, function(d3i) {
    d3i['exports'] = {
        'words': ['ahole', 'anus', 'ash0le', 'ash0les', 'asholes', 'ass', 'Ass\x20Monkey', 'Assface', 'assh0le', 'assh0lez', 'asshole', 'assholes', 'assholz', 'asswipe', 'azzhole', 'bassterds', 'bastard', 'bastards', 'bastardz', 'basterds', 'basterdz', 'Biatch', 'bitch', 'bitches', 'Blow\x20Job', 'boffing', 'butthole', 'buttwipe', 'c0ck', 'c0cks', 'c0k', 'Carpet\x20Muncher', 'cawk', 'cawks', 'Clit', 'cnts', 'cntz', 'cock', 'cockhead', 'cock-head', 'cocks', 'CockSucker', 'cock-sucker', 'crap', 'cum', 'cunt', 'cunts', 'cuntz', 'dick', 'dild0', 'dild0s', 'dildo', 'dildos', 'dilld0', 'dilld0s', 'dominatricks', 'dominatrics', 'dominatrix', 'dyke', 'enema', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'fag', 'fag1t', 'faget', 'fagg1t', 'faggit', 'faggot', 'fagg0t', 'fagit', 'fags', 'fagz', 'faig', 'faigs', 'fart', 'flipping\x20the\x20bird', 'fuck', 'fucker', 'fuckin', 'fucking', 'fucks', 'Fudge\x20Packer', 'fuk', 'Fukah', 'Fuken', 'fuker', 'Fukin', 'Fukk', 'Fukkah', 'Fukken', 'Fukker', 'Fukkin', 'g00k', 'God-damned', 'h00r', 'h0ar', 'h0re', 'hells', 'hoar', 'hoor', 'hoore', 'jackoff', 'jap', 'japs', 'jerk-off', 'jisim', 'jiss', 'jizm', 'jizz', 'knob', 'knobs', 'knobz', 'kunt', 'kunts', 'kuntz', 'Lezzian', 'Lipshits', 'Lipshitz', 'masochist', 'masokist', 'massterbait', 'masstrbait', 'masstrbate', 'masterbaiter', 'masterbate', 'masterbates', 'Motha\x20Fucker', 'Motha\x20Fuker', 'Motha\x20Fukkah', 'Motha\x20Fukker', 'Mother\x20Fucker', 'Mother\x20Fukah', 'Mother\x20Fuker', 'Mother\x20Fukkah', 'Mother\x20Fukker', 'mother-fucker', 'Mutha\x20Fucker', 'Mutha\x20Fukah', 'Mutha\x20Fuker', 'Mutha\x20Fukkah', 'Mutha\x20Fukker', 'n1gr', 'nastt', 'nigger;', 'nigur;', 'niiger;', 'niigr;', 'orafis', 'orgasim;', 'orgasm', 'orgasum', 'oriface', 'orifice', 'orifiss', 'packi', 'packie', 'packy', 'paki', 'pakie', 'paky', 'pecker', 'peeenus', 'peeenusss', 'peenus', 'peinus', 'pen1s', 'penas', 'penis', 'penis-breath', 'penus', 'penuus', 'Phuc', 'Phuck', 'Phuk', 'Phuker', 'Phukker', 'polac', 'polack', 'polak', 'Poonani', 'pr1c', 'pr1ck', 'pr1k', 'pusse', 'pussee', 'pussy', 'puuke', 'puuker', 'queer', 'queers', 'queerz', 'qweers', 'qweerz', 'qweir', 'recktum', 'rectum', 'retard', 'sadist', 'scank', 'schlong', 'screwing', 'semen', 'sex', 'sexy', 'Sh!t', 'sh1t', 'sh1ter', 'sh1ts', 'sh1tter', 'sh1tz', 'shit', 'shits', 'shitter', 'Shitty', 'Shity', 'shitz', 'Shyt', 'Shyte', 'Shytty', 'Shyty', 'skanck', 'skank', 'skankee', 'skankey', 'skanks', 'Skanky', 'slag', 'slut', 'sluts', 'Slutty', 'slutz', 'son-of-a-bitch', 'tit', 'turd', 'va1jina', 'vag1na', 'vagiina', 'vagina', 'vaj1na', 'vajina', 'vullva', 'vulva', 'w0p', 'wh00r', 'wh0re', 'whore', 'xrated', 'xxx', 'b!+ch', 'bitch', 'blowjob', 'clit', 'arschloch', 'fuck', 'shit', 'ass', 'asshole', 'b!tch', 'b17ch', 'b1tch', 'bastard', 'bi+ch', 'boiolas', 'buceta', 'c0ck', 'cawk', 'chink', 'cipa', 'clits', 'cock', 'cum', 'cunt', 'dildo', 'dirsa', 'ejakulate', 'fatass', 'fcuk', 'fuk', 'fux0r', 'hoer', 'hore', 'jism', 'kawk', 'l3itch', 'l3i+ch', 'lesbian', 'masturbate', 'masterbat*', 'masterbat3', 'motherfucker', 's.o.b.', 'mofo', 'nazi', 'nigga', 'nigger', 'nutsack', 'phuck', 'pimpis', 'pusse', 'pussy', 'scrotum', 'sh!t', 'shemale', 'shi+', 'sh!+', 'slut', 'smut', 'teets', 'tits', 'boobs', 'b00bs', 'teez', 'testical', 'testicle', 'titt', 'w00se', 'jackoff', 'wank', 'whoar', 'whore', '*damn', '*dyke', '*fuck*', '*shit*', '@$$', 'amcik', 'andskota', 'arse*', 'assrammer', 'ayir', 'bi7ch', 'bitch*', 'bollock*', 'breasts', 'butt-pirate', 'cabron', 'cazzo', 'chraa', 'chuj', 'Cock*', 'cunt*', 'd4mn', 'daygo', 'dego', 'dick*', 'dike*', 'dupa', 'dziwka', 'ejackulate', 'Ekrem*', 'Ekto', 'enculer', 'faen', 'fag*', 'fanculo', 'fanny', 'feces', 'feg', 'Felcher', 'ficken', 'fitt*', 'Flikker', 'foreskin', 'Fotze', 'Fu(*', 'fuk*', 'futkretzn', 'gook', 'guiena', 'h0r', 'h4x0r', 'hell', 'helvete', 'hoer*', 'honkey', 'Huevon', 'hui', 'injun', 'jizz', 'kanker*', 'kike', 'klootzak', 'kraut', 'knulle', 'kuk', 'kuksuger', 'Kurac', 'kurwa', 'kusi*', 'kyrpa*', 'lesbo', 'mamhoon', 'masturbat*', 'merd*', 'mibun', 'monkleigh', 'mouliewop', 'muie', 'mulkku', 'muschi', 'nazis', 'nepesaurio', 'nigger*', 'orospu', 'paska*', 'perse', 'picka', 'pierdol*', 'pillu*', 'pimmel', 'piss*', 'pizda', 'poontsee', 'poop', 'porn', 'p0rn', 'pr0n', 'preteen', 'pula', 'pule', 'puta', 'puto', 'qahbeh', 'queef*', 'rautenberg', 'schaffer', 'scheiss*', 'schlampe', 'schmuck', 'screw', 'sh!t*', 'sharmuta', 'sharmute', 'shipal', 'shiz', 'skribz', 'skurwysyn', 'sphencter', 'spic', 'spierdalaj', 'splooge', 'suka', 'b00b*', 'testicle*', 'titt*', 'twat', 'vittu', 'wank*', 'wetback*', 'wichser', 'wop*', 'yed', 'zabourah']
    };
}, function(d3j, d3k, d3l) {
    d3j['exports'] = {
        'object': d3l(0x9e),
        'array': d3l(0x9f),
        'regex': d3l(0xa0)
    };
}, function(d3m, d3n) {
    d3m['exports'] = {
        '4r5e': 0x1,
        '5h1t': 0x1,
        '5hit': 0x1,
        'a55': 0x1,
        'anal': 0x1,
        'anus': 0x1,
        'ar5e': 0x1,
        'arrse': 0x1,
        'arse': 0x1,
        'ass': 0x1,
        'ass-fucker': 0x1,
        'asses': 0x1,
        'assfucker': 0x1,
        'assfukka': 0x1,
        'asshole': 0x1,
        'assholes': 0x1,
        'asswhole': 0x1,
        'a_s_s': 0x1,
        'b!tch': 0x1,
        'b00bs': 0x1,
        'b17ch': 0x1,
        'b1tch': 0x1,
        'ballbag': 0x1,
        'balls': 0x1,
        'ballsack': 0x1,
        'bastard': 0x1,
        'beastial': 0x1,
        'beastiality': 0x1,
        'bellend': 0x1,
        'bestial': 0x1,
        'bestiality': 0x1,
        'bi+ch': 0x1,
        'biatch': 0x1,
        'bitch': 0x1,
        'bitcher': 0x1,
        'bitchers': 0x1,
        'bitches': 0x1,
        'bitchin': 0x1,
        'bitching': 0x1,
        'bloody': 0x1,
        'blow job': 0x1,
        'blowjob': 0x1,
        'blowjobs': 0x1,
        'boiolas': 0x1,
        'bollock': 0x1,
        'bollok': 0x1,
        'boner': 0x1,
        'boob': 0x1,
        'boobs': 0x1,
        'booobs': 0x1,
        'boooobs': 0x1,
        'booooobs': 0x1,
        'booooooobs': 0x1,
        'breasts': 0x1,
        'buceta': 0x1,
        'bugger': 0x1,
        'bum': 0x1,
        'bunny fucker': 0x1,
        'butt': 0x1,
        'butthole': 0x1,
        'buttmuch': 0x1,
        'buttplug': 0x1,
        'c0ck': 0x1,
        'c0cksucker': 0x1,
        'carpet muncher': 0x1,
        'cawk': 0x1,
        'chink': 0x1,
        'cipa': 0x1,
        'cl1t': 0x1,
        'clit': 0x1,
        'clitoris': 0x1,
        'clits': 0x1,
        'cnut': 0x1,
        'cock': 0x1,
        'cock-sucker': 0x1,
        'cockface': 0x1,
        'cockhead': 0x1,
        'cockmunch': 0x1,
        'cockmuncher': 0x1,
        'cocks': 0x1,
        'cocksuck': 0x1,
        'cocksucked': 0x1,
        'cocksucker': 0x1,
        'cocksucking': 0x1,
        'cocksucks': 0x1,
        'cocksuka': 0x1,
        'cocksukka': 0x1,
        'cok': 0x1,
        'cokmuncher': 0x1,
        'coksucka': 0x1,
        'coon': 0x1,
        'cox': 0x1,
        'crap': 0x1,
        'cum': 0x1,
        'cummer': 0x1,
        'cumming': 0x1,
        'cums': 0x1,
        'cumshot': 0x1,
        'cunilingus': 0x1,
        'cunillingus': 0x1,
        'cunnilingus': 0x1,
        'cunt': 0x1,
        'cuntlick': 0x1,
        'cuntlicker': 0x1,
        'cuntlicking': 0x1,
        'cunts': 0x1,
        'cyalis': 0x1,
        'cyberfuc': 0x1,
        'cyberfuck': 0x1,
        'cyberfucked': 0x1,
        'cyberfucker': 0x1,
        'cyberfuckers': 0x1,
        'cyberfucking': 0x1,
        'd1ck': 0x1,
        'damn': 0x1,
        'dick': 0x1,
        'dickhead': 0x1,
        'dildo': 0x1,
        'dildos': 0x1,
        'dink': 0x1,
        'dinks': 0x1,
        'dirsa': 0x1,
        'dlck': 0x1,
        'dog-fucker': 0x1,
        'doggin': 0x1,
        'dogging': 0x1,
        'donkeyribber': 0x1,
        'doosh': 0x1,
        'duche': 0x1,
        'dyke': 0x1,
        'ejaculate': 0x1,
        'ejaculated': 0x1,
        'ejaculates': 0x1,
        'ejaculating': 0x1,
        'ejaculatings': 0x1,
        'ejaculation': 0x1,
        'ejakulate': 0x1,
        'f u c k': 0x1,
        'f u c k e r': 0x1,
        'f4nny': 0x1,
        'fag': 0x1,
        'fagging': 0x1,
        'faggitt': 0x1,
        'faggot': 0x1,
        'faggs': 0x1,
        'fagot': 0x1,
        'fagots': 0x1,
        'fags': 0x1,
        'fanny': 0x1,
        'fannyflaps': 0x1,
        'fannyfucker': 0x1,
        'fanyy': 0x1,
        'fatass': 0x1,
        'fcuk': 0x1,
        'fcuker': 0x1,
        'fcuking': 0x1,
        'feck': 0x1,
        'fecker': 0x1,
        'felching': 0x1,
        'fellate': 0x1,
        'fellatio': 0x1,
        'fingerfuck': 0x1,
        'fingerfucked': 0x1,
        'fingerfucker': 0x1,
        'fingerfuckers': 0x1,
        'fingerfucking': 0x1,
        'fingerfucks': 0x1,
        'fistfuck': 0x1,
        'fistfucked': 0x1,
        'fistfucker': 0x1,
        'fistfuckers': 0x1,
        'fistfucking': 0x1,
        'fistfuckings': 0x1,
        'fistfucks': 0x1,
        'flange': 0x1,
        'fook': 0x1,
        'fooker': 0x1,
        'fuck': 0x1,
        'fucka': 0x1,
        'fucked': 0x1,
        'fucker': 0x1,
        'fuckers': 0x1,
        'fuckhead': 0x1,
        'fuckheads': 0x1,
        'fuckin': 0x1,
        'fucking': 0x1,
        'fuckings': 0x1,
        'fuckingshitmotherfucker': 0x1,
        'fuckme': 0x1,
        'fucks': 0x1,
        'fuckwhit': 0x1,
        'fuckwit': 0x1,
        'fudge packer': 0x1,
        'fudgepacker': 0x1,
        'fuk': 0x1,
        'fuker': 0x1,
        'fukker': 0x1,
        'fukkin': 0x1,
        'fuks': 0x1,
        'fukwhit': 0x1,
        'fukwit': 0x1,
        'fux': 0x1,
        'fux0r': 0x1,
        'f_u_c_k': 0x1,
        'gangbang': 0x1,
        'gangbanged': 0x1,
        'gangbangs': 0x1,
        'gaylord': 0x1,
        'gaysex': 0x1,
        'goatse': 0x1,
        'God': 0x1,
        'god-dam': 0x1,
        'god-damned': 0x1,
        'goddamn': 0x1,
        'goddamned': 0x1,
        'hardcoresex': 0x1,
        'hell': 0x1,
        'heshe': 0x1,
        'hoar': 0x1,
        'hoare': 0x1,
        'hoer': 0x1,
        'homo': 0x1,
        'hore': 0x1,
        'horniest': 0x1,
        'horny': 0x1,
        'hotsex': 0x1,
        'jack-off': 0x1,
        'jackoff': 0x1,
        'jap': 0x1,
        'jerk-off': 0x1,
        'jism': 0x1,
        'jiz': 0x1,
        'jizm': 0x1,
        'jizz': 0x1,
        'kawk': 0x1,
        'knob': 0x1,
        'knobead': 0x1,
        'knobed': 0x1,
        'knobend': 0x1,
        'knobhead': 0x1,
        'knobjocky': 0x1,
        'knobjokey': 0x1,
        'kock': 0x1,
        'kondum': 0x1,
        'kondums': 0x1,
        'kum': 0x1,
        'kummer': 0x1,
        'kumming': 0x1,
        'kums': 0x1,
        'kunilingus': 0x1,
        'l3i+ch': 0x1,
        'l3itch': 0x1,
        'labia': 0x1,
        'lust': 0x1,
        'lusting': 0x1,
        'm0f0': 0x1,
        'm0fo': 0x1,
        'm45terbate': 0x1,
        'ma5terb8': 0x1,
        'ma5terbate': 0x1,
        'masochist': 0x1,
        'master-bate': 0x1,
        'masterb8': 0x1,
        'masterbat*': 0x1,
        'masterbat3': 0x1,
        'masterbate': 0x1,
        'masterbation': 0x1,
        'masterbations': 0x1,
        'masturbate': 0x1,
        'mo-fo': 0x1,
        'mof0': 0x1,
        'mofo': 0x1,
        'mothafuck': 0x1,
        'mothafucka': 0x1,
        'mothafuckas': 0x1,
        'mothafuckaz': 0x1,
        'mothafucked': 0x1,
        'mothafucker': 0x1,
        'mothafuckers': 0x1,
        'mothafuckin': 0x1,
        'mothafucking': 0x1,
        'mothafuckings': 0x1,
        'mothafucks': 0x1,
        'mother fucker': 0x1,
        'motherfuck': 0x1,
        'motherfucked': 0x1,
        'motherfucker': 0x1,
        'motherfuckers': 0x1,
        'motherfuckin': 0x1,
        'motherfucking': 0x1,
        'motherfuckings': 0x1,
        'motherfuckka': 0x1,
        'motherfucks': 0x1,
        'muff': 0x1,
        'mutha': 0x1,
        'muthafecker': 0x1,
        'muthafuckker': 0x1,
        'muther': 0x1,
        'mutherfucker': 0x1,
        'n1gga': 0x1,
        'n1gger': 0x1,
        'nazi': 0x1,
        'nigg3r': 0x1,
        'nigg4h': 0x1,
        'nigga': 0x1,
        'niggah': 0x1,
        'niggas': 0x1,
        'niggaz': 0x1,
        'nigger': 0x1,
        'niggers': 0x1,
        'nob': 0x1,
        'nob jokey': 0x1,
        'nobhead': 0x1,
        'nobjocky': 0x1,
        'nobjokey': 0x1,
        'numbnuts': 0x1,
        'nutsack': 0x1,
        'orgasim': 0x1,
        'orgasims': 0x1,
        'orgasm': 0x1,
        'orgasms': 0x1,
        'p0rn': 0x1,
        'pawn': 0x1,
        'pecker': 0x1,
        'penis': 0x1,
        'penisfucker': 0x1,
        'phonesex': 0x1,
        'phuck': 0x1,
        'phuk': 0x1,
        'phuked': 0x1,
        'phuking': 0x1,
        'phukked': 0x1,
        'phukking': 0x1,
        'phuks': 0x1,
        'phuq': 0x1,
        'pigfucker': 0x1,
        'pimpis': 0x1,
        'piss': 0x1,
        'pissed': 0x1,
        'pisser': 0x1,
        'pissers': 0x1,
        'pisses': 0x1,
        'pissflaps': 0x1,
        'pissin': 0x1,
        'pissing': 0x1,
        'pissoff': 0x1,
        'poop': 0x1,
        'porn': 0x1,
        'porno': 0x1,
        'pornography': 0x1,
        'pornos': 0x1,
        'prick': 0x1,
        'pricks': 0x1,
        'pron': 0x1,
        'pube': 0x1,
        'pusse': 0x1,
        'pussi': 0x1,
        'pussies': 0x1,
        'pussy': 0x1,
        'pussys': 0x1,
        'rectum': 0x1,
        'retard': 0x1,
        'rimjaw': 0x1,
        'rimming': 0x1,
        's hit': 0x1,
        's.o.b.': 0x1,
        'sadist': 0x1,
        'schlong': 0x1,
        'screwing': 0x1,
        'scroat': 0x1,
        'scrote': 0x1,
        'scrotum': 0x1,
        'semen': 0x1,
        'sex': 0x1,
        'sh!+': 0x1,
        'sh!t': 0x1,
        'sh1t': 0x1,
        'shag': 0x1,
        'shagger': 0x1,
        'shaggin': 0x1,
        'shagging': 0x1,
        'shemale': 0x1,
        'shi+': 0x1,
        'shit': 0x1,
        'shitdick': 0x1,
        'shite': 0x1,
        'shited': 0x1,
        'shitey': 0x1,
        'shitfuck': 0x1,
        'shitfull': 0x1,
        'shithead': 0x1,
        'shiting': 0x1,
        'shitings': 0x1,
        'shits': 0x1,
        'shitted': 0x1,
        'shitter': 0x1,
        'shitters': 0x1,
        'shitting': 0x1,
        'shittings': 0x1,
        'shitty': 0x1,
        'skank': 0x1,
        'slut': 0x1,
        'sluts': 0x1,
        'smegma': 0x1,
        'smut': 0x1,
        'snatch': 0x1,
        'son-of-a-bitch': 0x1,
        'spac': 0x1,
        'spunk': 0x1,
        's_h_i_t': 0x1,
        't1tt1e5': 0x1,
        't1tties': 0x1,
        'teets': 0x1,
        'teez': 0x1,
        'testical': 0x1,
        'testicle': 0x1,
        'tit': 0x1,
        'titfuck': 0x1,
        'tits': 0x1,
        'titt': 0x1,
        'tittie5': 0x1,
        'tittiefucker': 0x1,
        'titties': 0x1,
        'tittyfuck': 0x1,
        'tittywank': 0x1,
        'titwank': 0x1,
        'tosser': 0x1,
        'turd': 0x1,
        'tw4t': 0x1,
        'twat': 0x1,
        'twathead': 0x1,
        'twatty': 0x1,
        'twunt': 0x1,
        'twunter': 0x1,
        'v14gra': 0x1,
        'v1gra': 0x1,
        'vagina': 0x1,
        'viagra': 0x1,
        'vulva': 0x1,
        'w00se': 0x1,
        'wang': 0x1,
        'wank': 0x1,
        'wanker': 0x1,
        'wanky': 0x1,
        'whoar': 0x1,
        'whore': 0x1,
        'willies': 0x1,
        'willy': 0x1,
        'xrated': 0x1,
        'xxx': 0x1
    };
}, function(d3o, d3p) {
    d3o['exports'] = ['4r5e', '5h1t', '5hit', 'a55', 'anal', 'anus', 'ar5e', 'arrse', 'arse', 'ass', 'ass-fucker', 'asses', 'assfucker', 'assfukka', 'asshole', 'assholes', 'asswhole', 'a_s_s', 'b!tch', 'b00bs', 'b17ch', 'b1tch', 'ballbag', 'balls', 'ballsack', 'bastard', 'beastial', 'beastiality', 'bellend', 'bestial', 'bestiality', 'bi+ch', 'biatch', 'bitch', 'bitcher', 'bitchers', 'bitches', 'bitchin', 'bitching', 'bloody', 'blow\x20job', 'blowjob', 'blowjobs', 'boiolas', 'bollock', 'bollok', 'boner', 'boob', 'boobs', 'booobs', 'boooobs', 'booooobs', 'booooooobs', 'breasts', 'buceta', 'bugger', 'bum', 'bunny\x20fucker', 'butt', 'butthole', 'buttmuch', 'buttplug', 'c0ck', 'c0cksucker', 'carpet\x20muncher', 'cawk', 'chink', 'cipa', 'cl1t', 'clit', 'clitoris', 'clits', 'cnut', 'cock', 'cock-sucker', 'cockface', 'cockhead', 'cockmunch', 'cockmuncher', 'cocks', 'cocksuck', 'cocksucked', 'cocksucker', 'cocksucking', 'cocksucks', 'cocksuka', 'cocksukka', 'cok', 'cokmuncher', 'coksucka', 'coon', 'cox', 'crap', 'cum', 'cummer', 'cumming', 'cums', 'cumshot', 'cunilingus', 'cunillingus', 'cunnilingus', 'cunt', 'cuntlick', 'cuntlicker', 'cuntlicking', 'cunts', 'cyalis', 'cyberfuc', 'cyberfuck', 'cyberfucked', 'cyberfucker', 'cyberfuckers', 'cyberfucking', 'd1ck', 'damn', 'dick', 'dickhead', 'dildo', 'dildos', 'dink', 'dinks', 'dirsa', 'dlck', 'dog-fucker', 'doggin', 'dogging', 'donkeyribber', 'doosh', 'duche', 'dyke', 'ejaculate', 'ejaculated', 'ejaculates', 'ejaculating', 'ejaculatings', 'ejaculation', 'ejakulate', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'f4nny', 'fag', 'fagging', 'faggitt', 'faggot', 'faggs', 'fagot', 'fagots', 'fags', 'fanny', 'fannyflaps', 'fannyfucker', 'fanyy', 'fatass', 'fcuk', 'fcuker', 'fcuking', 'feck', 'fecker', 'felching', 'fellate', 'fellatio', 'fingerfuck', 'fingerfucked', 'fingerfucker', 'fingerfuckers', 'fingerfucking', 'fingerfucks', 'fistfuck', 'fistfucked', 'fistfucker', 'fistfuckers', 'fistfucking', 'fistfuckings', 'fistfucks', 'flange', 'fook', 'fooker', 'fuck', 'fucka', 'fucked', 'fucker', 'fuckers', 'fuckhead', 'fuckheads', 'fuckin', 'fucking', 'fuckings', 'fuckingshitmotherfucker', 'fuckme', 'fucks', 'fuckwhit', 'fuckwit', 'fudge\x20packer', 'fudgepacker', 'fuk', 'fuker', 'fukker', 'fukkin', 'fuks', 'fukwhit', 'fukwit', 'fux', 'fux0r', 'f_u_c_k', 'gangbang', 'gangbanged', 'gangbangs', 'gaylord', 'gaysex', 'goatse', 'God', 'god-dam', 'god-damned', 'goddamn', 'goddamned', 'hardcoresex', 'hell', 'heshe', 'hoar', 'hoare', 'hoer', 'homo', 'hore', 'horniest', 'horny', 'hotsex', 'jack-off', 'jackoff', 'jap', 'jerk-off', 'jism', 'jiz', 'jizm', 'jizz', 'kawk', 'knob', 'knobead', 'knobed', 'knobend', 'knobhead', 'knobjocky', 'knobjokey', 'kock', 'kondum', 'kondums', 'kum', 'kummer', 'kumming', 'kums', 'kunilingus', 'l3i+ch', 'l3itch', 'labia', 'lust', 'lusting', 'm0f0', 'm0fo', 'm45terbate', 'ma5terb8', 'ma5terbate', 'masochist', 'master-bate', 'masterb8', 'masterbat*', 'masterbat3', 'masterbate', 'masterbation', 'masterbations', 'masturbate', 'mo-fo', 'mof0', 'mofo', 'mothafuck', 'mothafucka', 'mothafuckas', 'mothafuckaz', 'mothafucked', 'mothafucker', 'mothafuckers', 'mothafuckin', 'mothafucking', 'mothafuckings', 'mothafucks', 'mother\x20fucker', 'motherfuck', 'motherfucked', 'motherfucker', 'motherfuckers', 'motherfuckin', 'motherfucking', 'motherfuckings', 'motherfuckka', 'motherfucks', 'muff', 'mutha', 'muthafecker', 'muthafuckker', 'muther', 'mutherfucker', 'n1gga', 'n1gger', 'nazi', 'nigg3r', 'nigg4h', 'nigga', 'niggah', 'niggas', 'niggaz', 'nigger', 'niggers', 'nob', 'nob\x20jokey', 'nobhead', 'nobjocky', 'nobjokey', 'numbnuts', 'nutsack', 'orgasim', 'orgasims', 'orgasm', 'orgasms', 'p0rn', 'pawn', 'pecker', 'penis', 'penisfucker', 'phonesex', 'phuck', 'phuk', 'phuked', 'phuking', 'phukked', 'phukking', 'phuks', 'phuq', 'pigfucker', 'pimpis', 'piss', 'pissed', 'pisser', 'pissers', 'pisses', 'pissflaps', 'pissin', 'pissing', 'pissoff', 'poop', 'porn', 'porno', 'pornography', 'pornos', 'prick', 'pricks', 'pron', 'pube', 'pusse', 'pussi', 'pussies', 'pussy', 'pussys', 'rectum', 'retard', 'rimjaw', 'rimming', 's\x20hit', 's.o.b.', 'sadist', 'schlong', 'screwing', 'scroat', 'scrote', 'scrotum', 'semen', 'sex', 'sh!+', 'sh!t', 'sh1t', 'shag', 'shagger', 'shaggin', 'shagging', 'shemale', 'shi+', 'shit', 'shitdick', 'shite', 'shited', 'shitey', 'shitfuck', 'shitfull', 'shithead', 'shiting', 'shitings', 'shits', 'shitted', 'shitter', 'shitters', 'shitting', 'shittings', 'shitty', 'skank', 'slut', 'sluts', 'smegma', 'smut', 'snatch', 'son-of-a-bitch', 'spac', 'spunk', 's_h_i_t', 't1tt1e5', 't1tties', 'teets', 'teez', 'testical', 'testicle', 'tit', 'titfuck', 'tits', 'titt', 'tittie5', 'tittiefucker', 'titties', 'tittyfuck', 'tittywank', 'titwank', 'tosser', 'turd', 'tw4t', 'twat', 'twathead', 'twatty', 'twunt', 'twunter', 'v14gra', 'v1gra', 'vagina', 'viagra', 'vulva', 'w00se', 'wang', 'wank', 'wanker', 'wanky', 'whoar', 'whore', 'willies', 'willy', 'xrated', 'xxx'];
}, function(d3q, d3r) {
    d3q['exports'] = /\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi;
}]);